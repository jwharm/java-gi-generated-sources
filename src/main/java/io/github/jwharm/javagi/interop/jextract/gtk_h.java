// Generated by jextract

package io.github.jwharm.javagi.interop.jextract;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class gtk_h extends gtk_h_28 {

    /* package-private */ gtk_h() {}
    public static OfByte C_CHAR = Constants$root.C_CHAR$LAYOUT;
    public static OfShort C_SHORT = Constants$root.C_SHORT$LAYOUT;
    public static OfInt C_INT = Constants$root.C_INT$LAYOUT;
    public static OfLong C_LONG = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong C_LONG_LONG = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfFloat C_FLOAT = Constants$root.C_FLOAT$LAYOUT;
    public static OfDouble C_DOUBLE = Constants$root.C_DOUBLE$LAYOUT;
    public static OfAddress C_POINTER = Constants$root.C_POINTER$LAYOUT;
    public static int GDK_PIXBUF_ENABLE_BACKEND() {
        return (int)1L;
    }
    public static int G_SETTINGS_ENABLE_BACKEND() {
        return (int)1L;
    }
    public static int G_ANALYZER_ANALYZING() {
        return (int)0L;
    }
    public static int _LIBC_LIMITS_H_() {
        return (int)1L;
    }
    public static int _FEATURES_H() {
        return (int)1L;
    }
    public static int _DEFAULT_SOURCE() {
        return (int)1L;
    }
    public static int __GLIBC_USE_ISOC2X() {
        return (int)0L;
    }
    public static int __USE_ISOC11() {
        return (int)1L;
    }
    public static int __USE_ISOC99() {
        return (int)1L;
    }
    public static int __USE_ISOC95() {
        return (int)1L;
    }
    public static int __USE_POSIX_IMPLICITLY() {
        return (int)1L;
    }
    public static int _POSIX_SOURCE() {
        return (int)1L;
    }
    public static int __USE_POSIX() {
        return (int)1L;
    }
    public static int __USE_POSIX2() {
        return (int)1L;
    }
    public static int __USE_POSIX199309() {
        return (int)1L;
    }
    public static int __USE_POSIX199506() {
        return (int)1L;
    }
    public static int __USE_XOPEN2K() {
        return (int)1L;
    }
    public static int __USE_XOPEN2K8() {
        return (int)1L;
    }
    public static int _ATFILE_SOURCE() {
        return (int)1L;
    }
    public static int __WORDSIZE() {
        return (int)64L;
    }
    public static int __WORDSIZE_TIME64_COMPAT32() {
        return (int)1L;
    }
    public static int __SYSCALL_WORDSIZE() {
        return (int)64L;
    }
    public static int __USE_MISC() {
        return (int)1L;
    }
    public static int __USE_ATFILE() {
        return (int)1L;
    }
    public static int __USE_FORTIFY_LEVEL() {
        return (int)0L;
    }
    public static int __GLIBC_USE_DEPRECATED_GETS() {
        return (int)0L;
    }
    public static int __GLIBC_USE_DEPRECATED_SCANF() {
        return (int)0L;
    }
    public static int _STDC_PREDEF_H() {
        return (int)1L;
    }
    public static int __STDC_IEC_559__() {
        return (int)1L;
    }
    public static int __STDC_IEC_559_COMPLEX__() {
        return (int)1L;
    }
    public static int __GNU_LIBRARY__() {
        return (int)6L;
    }
    public static int __GLIBC__() {
        return (int)2L;
    }
    public static int __GLIBC_MINOR__() {
        return (int)35L;
    }
    public static int _SYS_CDEFS_H() {
        return (int)1L;
    }
    public static int __glibc_c99_flexarr_available() {
        return (int)1L;
    }
    public static int __LDOUBLE_REDIRECTS_TO_FLOAT128_ABI() {
        return (int)0L;
    }
    public static int __HAVE_GENERIC_SELECTION() {
        return (int)1L;
    }
    public static int __GLIBC_USE_LIB_EXT2() {
        return (int)0L;
    }
    public static int __GLIBC_USE_IEC_60559_BFP_EXT() {
        return (int)0L;
    }
    public static int __GLIBC_USE_IEC_60559_BFP_EXT_C2X() {
        return (int)0L;
    }
    public static int __GLIBC_USE_IEC_60559_EXT() {
        return (int)0L;
    }
    public static int __GLIBC_USE_IEC_60559_FUNCS_EXT() {
        return (int)0L;
    }
    public static int __GLIBC_USE_IEC_60559_FUNCS_EXT_C2X() {
        return (int)0L;
    }
    public static int __GLIBC_USE_IEC_60559_TYPES_EXT() {
        return (int)0L;
    }
    public static int MB_LEN_MAX() {
        return (int)16L;
    }
    public static int _BITS_POSIX1_LIM_H() {
        return (int)1L;
    }
    public static int _POSIX_AIO_LISTIO_MAX() {
        return (int)2L;
    }
    public static int _POSIX_AIO_MAX() {
        return (int)1L;
    }
    public static int _POSIX_ARG_MAX() {
        return (int)4096L;
    }
    public static int _POSIX_CHILD_MAX() {
        return (int)25L;
    }
    public static int _POSIX_DELAYTIMER_MAX() {
        return (int)32L;
    }
    public static int _POSIX_HOST_NAME_MAX() {
        return (int)255L;
    }
    public static int _POSIX_LINK_MAX() {
        return (int)8L;
    }
    public static int _POSIX_LOGIN_NAME_MAX() {
        return (int)9L;
    }
    public static int _POSIX_MAX_CANON() {
        return (int)255L;
    }
    public static int _POSIX_MAX_INPUT() {
        return (int)255L;
    }
    public static int _POSIX_MQ_OPEN_MAX() {
        return (int)8L;
    }
    public static int _POSIX_MQ_PRIO_MAX() {
        return (int)32L;
    }
    public static int _POSIX_NAME_MAX() {
        return (int)14L;
    }
    public static int _POSIX_NGROUPS_MAX() {
        return (int)8L;
    }
    public static int _POSIX_OPEN_MAX() {
        return (int)20L;
    }
    public static int _POSIX_PATH_MAX() {
        return (int)256L;
    }
    public static int _POSIX_PIPE_BUF() {
        return (int)512L;
    }
    public static int _POSIX_RE_DUP_MAX() {
        return (int)255L;
    }
    public static int _POSIX_RTSIG_MAX() {
        return (int)8L;
    }
    public static int _POSIX_SEM_NSEMS_MAX() {
        return (int)256L;
    }
    public static int _POSIX_SEM_VALUE_MAX() {
        return (int)32767L;
    }
    public static int _POSIX_SIGQUEUE_MAX() {
        return (int)32L;
    }
    public static int _POSIX_SSIZE_MAX() {
        return (int)32767L;
    }
    public static int _POSIX_STREAM_MAX() {
        return (int)8L;
    }
    public static int _POSIX_SYMLINK_MAX() {
        return (int)255L;
    }
    public static int _POSIX_SYMLOOP_MAX() {
        return (int)8L;
    }
    public static int _POSIX_TIMER_MAX() {
        return (int)32L;
    }
    public static int _POSIX_TTY_NAME_MAX() {
        return (int)9L;
    }
    public static int _POSIX_TZNAME_MAX() {
        return (int)6L;
    }
    public static int _POSIX_CLOCKRES_MIN() {
        return (int)20000000L;
    }
    public static int NR_OPEN() {
        return (int)1024L;
    }
    public static int NGROUPS_MAX() {
        return (int)65536L;
    }
    public static int ARG_MAX() {
        return (int)131072L;
    }
    public static int LINK_MAX() {
        return (int)127L;
    }
    public static int MAX_CANON() {
        return (int)255L;
    }
    public static int MAX_INPUT() {
        return (int)255L;
    }
    public static int NAME_MAX() {
        return (int)255L;
    }
    public static int PATH_MAX() {
        return (int)4096L;
    }
    public static int PIPE_BUF() {
        return (int)4096L;
    }
    public static int XATTR_NAME_MAX() {
        return (int)255L;
    }
    public static int XATTR_SIZE_MAX() {
        return (int)65536L;
    }
    public static int XATTR_LIST_MAX() {
        return (int)65536L;
    }
    public static int RTSIG_MAX() {
        return (int)32L;
    }
    public static int _POSIX_THREAD_KEYS_MAX() {
        return (int)128L;
    }
    public static int PTHREAD_KEYS_MAX() {
        return (int)1024L;
    }
    public static int _POSIX_THREAD_DESTRUCTOR_ITERATIONS() {
        return (int)4L;
    }
    public static int _POSIX_THREAD_THREADS_MAX() {
        return (int)64L;
    }
    public static int AIO_PRIO_DELTA_MAX() {
        return (int)20L;
    }
    public static int PTHREAD_STACK_MIN() {
        return (int)16384L;
    }
    public static int DELAYTIMER_MAX() {
        return (int)2147483647L;
    }
    public static int TTY_NAME_MAX() {
        return (int)32L;
    }
    public static int LOGIN_NAME_MAX() {
        return (int)256L;
    }
    public static int HOST_NAME_MAX() {
        return (int)64L;
    }
    public static int MQ_PRIO_MAX() {
        return (int)32768L;
    }
    public static int _BITS_POSIX2_LIM_H() {
        return (int)1L;
    }
    public static int _POSIX2_BC_BASE_MAX() {
        return (int)99L;
    }
    public static int _POSIX2_BC_DIM_MAX() {
        return (int)2048L;
    }
    public static int _POSIX2_BC_SCALE_MAX() {
        return (int)99L;
    }
    public static int _POSIX2_BC_STRING_MAX() {
        return (int)1000L;
    }
    public static int _POSIX2_COLL_WEIGHTS_MAX() {
        return (int)2L;
    }
    public static int _POSIX2_EXPR_NEST_MAX() {
        return (int)32L;
    }
    public static int _POSIX2_LINE_MAX() {
        return (int)2048L;
    }
    public static int _POSIX2_RE_DUP_MAX() {
        return (int)255L;
    }
    public static int _POSIX2_CHARCLASS_NAME_MAX() {
        return (int)14L;
    }
    public static int COLL_WEIGHTS_MAX() {
        return (int)255L;
    }
    public static int CHARCLASS_NAME_MAX() {
        return (int)2048L;
    }
    public static int G_HAVE_GINT64() {
        return (int)1L;
    }
    public static int GLIB_SIZEOF_VOID_P() {
        return (int)8L;
    }
    public static int GLIB_SIZEOF_LONG() {
        return (int)8L;
    }
    public static int GLIB_SIZEOF_SIZE_T() {
        return (int)8L;
    }
    public static int GLIB_SIZEOF_SSIZE_T() {
        return (int)8L;
    }
    public static int GLIB_MAJOR_VERSION() {
        return (int)2L;
    }
    public static int GLIB_MINOR_VERSION() {
        return (int)72L;
    }
    public static int GLIB_MICRO_VERSION() {
        return (int)3L;
    }
    public static int G_VA_COPY_AS_ARRAY() {
        return (int)1L;
    }
    public static int G_HAVE_ISO_VARARGS() {
        return (int)1L;
    }
    public static int G_HAVE_GROWING_STACK() {
        return (int)0L;
    }
    public static int G_HAVE_GNUC_VISIBILITY() {
        return (int)1L;
    }
    public static int G_HAVE_GNUC_VARARGS() {
        return (int)1L;
    }
    public static int GLIB_SYSDEF_AF_UNIX() {
        return (int)1L;
    }
    public static int GLIB_SYSDEF_AF_INET() {
        return (int)2L;
    }
    public static int GLIB_SYSDEF_AF_INET6() {
        return (int)10L;
    }
    public static int GLIB_SYSDEF_MSG_OOB() {
        return (int)1L;
    }
    public static int GLIB_SYSDEF_MSG_PEEK() {
        return (int)2L;
    }
    public static int GLIB_SYSDEF_MSG_DONTROUTE() {
        return (int)4L;
    }
    public static int _TIME_H() {
        return (int)1L;
    }
    public static int _BITS_TIME_H() {
        return (int)1L;
    }
    public static int _BITS_TYPES_H() {
        return (int)1L;
    }
    public static int _BITS_TYPESIZES_H() {
        return (int)1L;
    }
    public static int __OFF_T_MATCHES_OFF64_T() {
        return (int)1L;
    }
    public static int __INO_T_MATCHES_INO64_T() {
        return (int)1L;
    }
    public static int __RLIM_T_MATCHES_RLIM64_T() {
        return (int)1L;
    }
    public static int __STATFS_MATCHES_STATFS64() {
        return (int)1L;
    }
    public static int __KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64() {
        return (int)1L;
    }
    public static int __FD_SETSIZE() {
        return (int)1024L;
    }
    public static int _BITS_TIME64_H() {
        return (int)1L;
    }
    public static int CLOCK_REALTIME() {
        return (int)0L;
    }
    public static int CLOCK_MONOTONIC() {
        return (int)1L;
    }
    public static int CLOCK_PROCESS_CPUTIME_ID() {
        return (int)2L;
    }
    public static int CLOCK_THREAD_CPUTIME_ID() {
        return (int)3L;
    }
    public static int CLOCK_MONOTONIC_RAW() {
        return (int)4L;
    }
    public static int CLOCK_REALTIME_COARSE() {
        return (int)5L;
    }
    public static int CLOCK_MONOTONIC_COARSE() {
        return (int)6L;
    }
    public static int CLOCK_BOOTTIME() {
        return (int)7L;
    }
    public static int CLOCK_REALTIME_ALARM() {
        return (int)8L;
    }
    public static int CLOCK_BOOTTIME_ALARM() {
        return (int)9L;
    }
    public static int CLOCK_TAI() {
        return (int)11L;
    }
    public static int TIMER_ABSTIME() {
        return (int)1L;
    }
    public static int __clock_t_defined() {
        return (int)1L;
    }
    public static int __time_t_defined() {
        return (int)1L;
    }
    public static int __struct_tm_defined() {
        return (int)1L;
    }
    public static int _STRUCT_TIMESPEC() {
        return (int)1L;
    }
    public static int _BITS_ENDIAN_H() {
        return (int)1L;
    }
    public static int __LITTLE_ENDIAN() {
        return (int)1234L;
    }
    public static int __BIG_ENDIAN() {
        return (int)4321L;
    }
    public static int __PDP_ENDIAN() {
        return (int)3412L;
    }
    public static int _BITS_ENDIANNESS_H() {
        return (int)1L;
    }
    public static int __clockid_t_defined() {
        return (int)1L;
    }
    public static int __timer_t_defined() {
        return (int)1L;
    }
    public static int __itimerspec_defined() {
        return (int)1L;
    }
    public static int _BITS_TYPES_LOCALE_T_H() {
        return (int)1L;
    }
    public static int _BITS_TYPES___LOCALE_T_H() {
        return (int)1L;
    }
    public static int TIME_UTC() {
        return (int)1L;
    }
    public static int G_LITTLE_ENDIAN() {
        return (int)1234L;
    }
    public static int G_BIG_ENDIAN() {
        return (int)4321L;
    }
    public static int G_PDP_ENDIAN() {
        return (int)3412L;
    }
    public static int _STRING_H() {
        return (int)1L;
    }
    public static int _STRINGS_H() {
        return (int)1L;
    }
    public static int __GNUC_VA_LIST() {
        return (int)1L;
    }
    public static int _STDLIB_H() {
        return (int)1L;
    }
    public static int WNOHANG() {
        return (int)1L;
    }
    public static int WUNTRACED() {
        return (int)2L;
    }
    public static int WSTOPPED() {
        return (int)2L;
    }
    public static int WEXITED() {
        return (int)4L;
    }
    public static int WCONTINUED() {
        return (int)8L;
    }
    public static int WNOWAIT() {
        return (int)16777216L;
    }
    public static int __WNOTHREAD() {
        return (int)536870912L;
    }
    public static int __WALL() {
        return (int)1073741824L;
    }
    public static int __W_CONTINUED() {
        return (int)65535L;
    }
    public static int __WCOREFLAG() {
        return (int)128L;
    }
    public static int __HAVE_FLOAT128() {
        return (int)0L;
    }
    public static int __HAVE_DISTINCT_FLOAT128() {
        return (int)0L;
    }
    public static int __HAVE_FLOAT64X() {
        return (int)1L;
    }
    public static int __HAVE_FLOAT64X_LONG_DOUBLE() {
        return (int)1L;
    }
    public static int __HAVE_FLOAT16() {
        return (int)0L;
    }
    public static int __HAVE_FLOAT32() {
        return (int)1L;
    }
    public static int __HAVE_FLOAT64() {
        return (int)1L;
    }
    public static int __HAVE_FLOAT32X() {
        return (int)1L;
    }
    public static int __HAVE_FLOAT128X() {
        return (int)0L;
    }
    public static int __HAVE_DISTINCT_FLOAT32() {
        return (int)0L;
    }
    public static int __HAVE_DISTINCT_FLOAT64() {
        return (int)0L;
    }
    public static int __HAVE_DISTINCT_FLOAT32X() {
        return (int)0L;
    }
    public static int __HAVE_DISTINCT_FLOAT64X() {
        return (int)0L;
    }
    public static int __HAVE_FLOATN_NOT_TYPEDEF() {
        return (int)0L;
    }
    public static int __ldiv_t_defined() {
        return (int)1L;
    }
    public static int __lldiv_t_defined() {
        return (int)1L;
    }
    public static int RAND_MAX() {
        return (int)2147483647L;
    }
    public static int EXIT_FAILURE() {
        return (int)1L;
    }
    public static int EXIT_SUCCESS() {
        return (int)0L;
    }
    public static int _SYS_TYPES_H() {
        return (int)1L;
    }
    public static int _BITS_STDINT_INTN_H() {
        return (int)1L;
    }
    public static int __BIT_TYPES_DEFINED__() {
        return (int)1L;
    }
    public static int _ENDIAN_H() {
        return (int)1L;
    }
    public static int _BITS_BYTESWAP_H() {
        return (int)1L;
    }
    public static int _BITS_UINTN_IDENTITY_H() {
        return (int)1L;
    }
    public static int _SYS_SELECT_H() {
        return (int)1L;
    }
    public static int __sigset_t_defined() {
        return (int)1L;
    }
    public static int __timeval_defined() {
        return (int)1L;
    }
    public static int _BITS_PTHREADTYPES_COMMON_H() {
        return (int)1L;
    }
    public static int _THREAD_SHARED_TYPES_H() {
        return (int)1L;
    }
    public static int _BITS_PTHREADTYPES_ARCH_H() {
        return (int)1L;
    }
    public static int __SIZEOF_PTHREAD_MUTEX_T() {
        return (int)40L;
    }
    public static int __SIZEOF_PTHREAD_ATTR_T() {
        return (int)56L;
    }
    public static int __SIZEOF_PTHREAD_RWLOCK_T() {
        return (int)56L;
    }
    public static int __SIZEOF_PTHREAD_BARRIER_T() {
        return (int)32L;
    }
    public static int __SIZEOF_PTHREAD_MUTEXATTR_T() {
        return (int)4L;
    }
    public static int __SIZEOF_PTHREAD_COND_T() {
        return (int)48L;
    }
    public static int __SIZEOF_PTHREAD_CONDATTR_T() {
        return (int)4L;
    }
    public static int __SIZEOF_PTHREAD_RWLOCKATTR_T() {
        return (int)8L;
    }
    public static int __SIZEOF_PTHREAD_BARRIERATTR_T() {
        return (int)4L;
    }
    public static int _THREAD_MUTEX_INTERNAL_H() {
        return (int)1L;
    }
    public static int __PTHREAD_MUTEX_HAVE_PREV() {
        return (int)1L;
    }
    public static int __have_pthread_attr_t() {
        return (int)1L;
    }
    public static int _ALLOCA_H() {
        return (int)1L;
    }
    public static int _BITS_SIGNUM_GENERIC_H() {
        return (int)1L;
    }
    public static int SIGINT() {
        return (int)2L;
    }
    public static int SIGILL() {
        return (int)4L;
    }
    public static int SIGABRT() {
        return (int)6L;
    }
    public static int SIGFPE() {
        return (int)8L;
    }
    public static int SIGSEGV() {
        return (int)11L;
    }
    public static int SIGTERM() {
        return (int)15L;
    }
    public static int SIGHUP() {
        return (int)1L;
    }
    public static int SIGQUIT() {
        return (int)3L;
    }
    public static int SIGTRAP() {
        return (int)5L;
    }
    public static int SIGKILL() {
        return (int)9L;
    }
    public static int SIGPIPE() {
        return (int)13L;
    }
    public static int SIGALRM() {
        return (int)14L;
    }
    public static int _BITS_SIGNUM_ARCH_H() {
        return (int)1L;
    }
    public static int SIGSTKFLT() {
        return (int)16L;
    }
    public static int SIGPWR() {
        return (int)30L;
    }
    public static int SIGBUS() {
        return (int)7L;
    }
    public static int SIGSYS() {
        return (int)31L;
    }
    public static int SIGURG() {
        return (int)23L;
    }
    public static int SIGSTOP() {
        return (int)19L;
    }
    public static int SIGTSTP() {
        return (int)20L;
    }
    public static int SIGCONT() {
        return (int)18L;
    }
    public static int SIGCHLD() {
        return (int)17L;
    }
    public static int SIGTTIN() {
        return (int)21L;
    }
    public static int SIGTTOU() {
        return (int)22L;
    }
    public static int SIGPOLL() {
        return (int)29L;
    }
    public static int SIGXFSZ() {
        return (int)25L;
    }
    public static int SIGXCPU() {
        return (int)24L;
    }
    public static int SIGVTALRM() {
        return (int)26L;
    }
    public static int SIGPROF() {
        return (int)27L;
    }
    public static int SIGUSR1() {
        return (int)10L;
    }
    public static int SIGUSR2() {
        return (int)12L;
    }
    public static int SIGWINCH() {
        return (int)28L;
    }
    public static int __SIGRTMIN() {
        return (int)32L;
    }
    public static int __SIGRTMAX() {
        return (int)64L;
    }
    public static int __sig_atomic_t_defined() {
        return (int)1L;
    }
    public static int __siginfo_t_defined() {
        return (int)1L;
    }
    public static int __SI_MAX_SIZE() {
        return (int)128L;
    }
    public static int _BITS_SIGINFO_ARCH_H() {
        return (int)1L;
    }
    public static int __SI_ERRNO_THEN_CODE() {
        return (int)1L;
    }
    public static int __SI_HAVE_SIGSYS() {
        return (int)1L;
    }
    public static int _BITS_SIGINFO_CONSTS_H() {
        return (int)1L;
    }
    public static int __SI_ASYNCIO_AFTER_SIGIO() {
        return (int)1L;
    }
    public static int __sigevent_t_defined() {
        return (int)1L;
    }
    public static int __SIGEV_MAX_SIZE() {
        return (int)64L;
    }
    public static int _BITS_SIGEVENT_CONSTS_H() {
        return (int)1L;
    }
    public static int _BITS_SIGACTION_H() {
        return (int)1L;
    }
    public static int SA_NOCLDSTOP() {
        return (int)1L;
    }
    public static int SA_NOCLDWAIT() {
        return (int)2L;
    }
    public static int SA_SIGINFO() {
        return (int)4L;
    }
    public static int SA_ONSTACK() {
        return (int)134217728L;
    }
    public static int SA_RESTART() {
        return (int)268435456L;
    }
    public static int SA_NODEFER() {
        return (int)1073741824L;
    }
    public static int SA_INTERRUPT() {
        return (int)536870912L;
    }
    public static int SIG_BLOCK() {
        return (int)0L;
    }
    public static int SIG_UNBLOCK() {
        return (int)1L;
    }
    public static int SIG_SETMASK() {
        return (int)2L;
    }
    public static int _BITS_SIGCONTEXT_H() {
        return (int)1L;
    }
    public static int __stack_t_defined() {
        return (int)1L;
    }
    public static int _SYS_UCONTEXT_H() {
        return (int)1L;
    }
    public static int __NGREG() {
        return (int)23L;
    }
    public static int _BITS_SIGSTACK_H() {
        return (int)1L;
    }
    public static int MINSIGSTKSZ() {
        return (int)2048L;
    }
    public static int SIGSTKSZ() {
        return (int)8192L;
    }
    public static int _BITS_SS_FLAGS_H() {
        return (int)1L;
    }
    public static int __sigstack_defined() {
        return (int)1L;
    }
    public static int _BITS_SIGTHREAD_H() {
        return (int)1L;
    }
    public static int G_DATALIST_FLAGS_MASK() {
        return (int)3L;
    }
    public static int _DIRENT_H() {
        return (int)1L;
    }
    public static int _DIRENT_MATCHES_DIRENT64() {
        return (int)1L;
    }
    public static int G_PRIORITY_DEFAULT() {
        return (int)0L;
    }
    public static int G_PRIORITY_HIGH_IDLE() {
        return (int)100L;
    }
    public static int G_PRIORITY_DEFAULT_IDLE() {
        return (int)200L;
    }
    public static int G_PRIORITY_LOW() {
        return (int)300L;
    }
    public static int G_UNICHAR_MAX_DECOMPOSITION_LENGTH() {
        return (int)18L;
    }
    public static int _ERRNO_H() {
        return (int)1L;
    }
    public static int _BITS_ERRNO_H() {
        return (int)1L;
    }
    public static int EPERM() {
        return (int)1L;
    }
    public static int ENOENT() {
        return (int)2L;
    }
    public static int ESRCH() {
        return (int)3L;
    }
    public static int EINTR() {
        return (int)4L;
    }
    public static int EIO() {
        return (int)5L;
    }
    public static int ENXIO() {
        return (int)6L;
    }
    public static int E2BIG() {
        return (int)7L;
    }
    public static int ENOEXEC() {
        return (int)8L;
    }
    public static int EBADF() {
        return (int)9L;
    }
    public static int ECHILD() {
        return (int)10L;
    }
    public static int EAGAIN() {
        return (int)11L;
    }
    public static int ENOMEM() {
        return (int)12L;
    }
    public static int EACCES() {
        return (int)13L;
    }
    public static int EFAULT() {
        return (int)14L;
    }
    public static int ENOTBLK() {
        return (int)15L;
    }
    public static int EBUSY() {
        return (int)16L;
    }
    public static int EEXIST() {
        return (int)17L;
    }
    public static int EXDEV() {
        return (int)18L;
    }
    public static int ENODEV() {
        return (int)19L;
    }
    public static int ENOTDIR() {
        return (int)20L;
    }
    public static int EISDIR() {
        return (int)21L;
    }
    public static int EINVAL() {
        return (int)22L;
    }
    public static int ENFILE() {
        return (int)23L;
    }
    public static int EMFILE() {
        return (int)24L;
    }
    public static int ENOTTY() {
        return (int)25L;
    }
    public static int ETXTBSY() {
        return (int)26L;
    }
    public static int EFBIG() {
        return (int)27L;
    }
    public static int ENOSPC() {
        return (int)28L;
    }
    public static int ESPIPE() {
        return (int)29L;
    }
    public static int EROFS() {
        return (int)30L;
    }
    public static int EMLINK() {
        return (int)31L;
    }
    public static int EPIPE() {
        return (int)32L;
    }
    public static int EDOM() {
        return (int)33L;
    }
    public static int ERANGE() {
        return (int)34L;
    }
    public static int EDEADLK() {
        return (int)35L;
    }
    public static int ENAMETOOLONG() {
        return (int)36L;
    }
    public static int ENOLCK() {
        return (int)37L;
    }
    public static int ENOSYS() {
        return (int)38L;
    }
    public static int ENOTEMPTY() {
        return (int)39L;
    }
    public static int ELOOP() {
        return (int)40L;
    }
    public static int ENOMSG() {
        return (int)42L;
    }
    public static int EIDRM() {
        return (int)43L;
    }
    public static int ECHRNG() {
        return (int)44L;
    }
    public static int EL2NSYNC() {
        return (int)45L;
    }
    public static int EL3HLT() {
        return (int)46L;
    }
    public static int EL3RST() {
        return (int)47L;
    }
    public static int ELNRNG() {
        return (int)48L;
    }
    public static int EUNATCH() {
        return (int)49L;
    }
    public static int ENOCSI() {
        return (int)50L;
    }
    public static int EL2HLT() {
        return (int)51L;
    }
    public static int EBADE() {
        return (int)52L;
    }
    public static int EBADR() {
        return (int)53L;
    }
    public static int EXFULL() {
        return (int)54L;
    }
    public static int ENOANO() {
        return (int)55L;
    }
    public static int EBADRQC() {
        return (int)56L;
    }
    public static int EBADSLT() {
        return (int)57L;
    }
    public static int EBFONT() {
        return (int)59L;
    }
    public static int ENOSTR() {
        return (int)60L;
    }
    public static int ENODATA() {
        return (int)61L;
    }
    public static int ETIME() {
        return (int)62L;
    }
    public static int ENOSR() {
        return (int)63L;
    }
    public static int ENONET() {
        return (int)64L;
    }
    public static int ENOPKG() {
        return (int)65L;
    }
    public static int EREMOTE() {
        return (int)66L;
    }
    public static int ENOLINK() {
        return (int)67L;
    }
    public static int EADV() {
        return (int)68L;
    }
    public static int ESRMNT() {
        return (int)69L;
    }
    public static int ECOMM() {
        return (int)70L;
    }
    public static int EPROTO() {
        return (int)71L;
    }
    public static int EMULTIHOP() {
        return (int)72L;
    }
    public static int EDOTDOT() {
        return (int)73L;
    }
    public static int EBADMSG() {
        return (int)74L;
    }
    public static int EOVERFLOW() {
        return (int)75L;
    }
    public static int ENOTUNIQ() {
        return (int)76L;
    }
    public static int EBADFD() {
        return (int)77L;
    }
    public static int EREMCHG() {
        return (int)78L;
    }
    public static int ELIBACC() {
        return (int)79L;
    }
    public static int ELIBBAD() {
        return (int)80L;
    }
    public static int ELIBSCN() {
        return (int)81L;
    }
    public static int ELIBMAX() {
        return (int)82L;
    }
    public static int ELIBEXEC() {
        return (int)83L;
    }
    public static int EILSEQ() {
        return (int)84L;
    }
    public static int ERESTART() {
        return (int)85L;
    }
    public static int ESTRPIPE() {
        return (int)86L;
    }
    public static int EUSERS() {
        return (int)87L;
    }
    public static int ENOTSOCK() {
        return (int)88L;
    }
    public static int EDESTADDRREQ() {
        return (int)89L;
    }
    public static int EMSGSIZE() {
        return (int)90L;
    }
    public static int EPROTOTYPE() {
        return (int)91L;
    }
    public static int ENOPROTOOPT() {
        return (int)92L;
    }
    public static int EPROTONOSUPPORT() {
        return (int)93L;
    }
    public static int ESOCKTNOSUPPORT() {
        return (int)94L;
    }
    public static int EOPNOTSUPP() {
        return (int)95L;
    }
    public static int EPFNOSUPPORT() {
        return (int)96L;
    }
    public static int EAFNOSUPPORT() {
        return (int)97L;
    }
    public static int EADDRINUSE() {
        return (int)98L;
    }
    public static int EADDRNOTAVAIL() {
        return (int)99L;
    }
    public static int ENETDOWN() {
        return (int)100L;
    }
    public static int ENETUNREACH() {
        return (int)101L;
    }
    public static int ENETRESET() {
        return (int)102L;
    }
    public static int ECONNABORTED() {
        return (int)103L;
    }
    public static int ECONNRESET() {
        return (int)104L;
    }
    public static int ENOBUFS() {
        return (int)105L;
    }
    public static int EISCONN() {
        return (int)106L;
    }
    public static int ENOTCONN() {
        return (int)107L;
    }
    public static int ESHUTDOWN() {
        return (int)108L;
    }
    public static int ETOOMANYREFS() {
        return (int)109L;
    }
    public static int ETIMEDOUT() {
        return (int)110L;
    }
    public static int ECONNREFUSED() {
        return (int)111L;
    }
    public static int EHOSTDOWN() {
        return (int)112L;
    }
    public static int EHOSTUNREACH() {
        return (int)113L;
    }
    public static int EALREADY() {
        return (int)114L;
    }
    public static int EINPROGRESS() {
        return (int)115L;
    }
    public static int ESTALE() {
        return (int)116L;
    }
    public static int EUCLEAN() {
        return (int)117L;
    }
    public static int ENOTNAM() {
        return (int)118L;
    }
    public static int ENAVAIL() {
        return (int)119L;
    }
    public static int EISNAM() {
        return (int)120L;
    }
    public static int EREMOTEIO() {
        return (int)121L;
    }
    public static int EDQUOT() {
        return (int)122L;
    }
    public static int ENOMEDIUM() {
        return (int)123L;
    }
    public static int EMEDIUMTYPE() {
        return (int)124L;
    }
    public static int ECANCELED() {
        return (int)125L;
    }
    public static int ENOKEY() {
        return (int)126L;
    }
    public static int EKEYEXPIRED() {
        return (int)127L;
    }
    public static int EKEYREVOKED() {
        return (int)128L;
    }
    public static int EKEYREJECTED() {
        return (int)129L;
    }
    public static int EOWNERDEAD() {
        return (int)130L;
    }
    public static int ENOTRECOVERABLE() {
        return (int)131L;
    }
    public static int ERFKILL() {
        return (int)132L;
    }
    public static int EHWPOISON() {
        return (int)133L;
    }
    public static int G_USEC_PER_SEC() {
        return (int)1000000L;
    }
    public static int G_ALLOC_ONLY() {
        return (int)1L;
    }
    public static int G_ALLOC_AND_FREE() {
        return (int)2L;
    }
    public static int G_ALLOCATOR_LIST() {
        return (int)1L;
    }
    public static int G_ALLOCATOR_SLIST() {
        return (int)2L;
    }
    public static int G_ALLOCATOR_NODE() {
        return (int)3L;
    }
    public static int _PTHREAD_H() {
        return (int)1L;
    }
    public static int _SCHED_H() {
        return (int)1L;
    }
    public static int _BITS_SCHED_H() {
        return (int)1L;
    }
    public static int SCHED_OTHER() {
        return (int)0L;
    }
    public static int SCHED_FIFO() {
        return (int)1L;
    }
    public static int SCHED_RR() {
        return (int)2L;
    }
    public static int _BITS_TYPES_STRUCT_SCHED_PARAM() {
        return (int)1L;
    }
    public static int _BITS_CPU_SET_H() {
        return (int)1L;
    }
    public static int __CPU_SETSIZE() {
        return (int)1024L;
    }
    public static int _BITS_SETJMP_H() {
        return (int)1L;
    }
    public static int __jmp_buf_tag_defined() {
        return (int)1L;
    }
    public static int PTHREAD_ONCE_INIT() {
        return (int)0L;
    }
    public static int G_SIGNAL_FLAGS_MASK() {
        return (int)511L;
    }
    public static int G_SIGNAL_MATCH_MASK() {
        return (int)63L;
    }
    public static int _UNISTD_H() {
        return (int)1L;
    }
    public static int _XOPEN_VERSION() {
        return (int)700L;
    }
    public static int _XOPEN_XCU_VERSION() {
        return (int)4L;
    }
    public static int _XOPEN_XPG2() {
        return (int)1L;
    }
    public static int _XOPEN_XPG3() {
        return (int)1L;
    }
    public static int _XOPEN_XPG4() {
        return (int)1L;
    }
    public static int _XOPEN_UNIX() {
        return (int)1L;
    }
    public static int _XOPEN_ENH_I18N() {
        return (int)1L;
    }
    public static int _XOPEN_LEGACY() {
        return (int)1L;
    }
    public static int _BITS_POSIX_OPT_H() {
        return (int)1L;
    }
    public static int _POSIX_JOB_CONTROL() {
        return (int)1L;
    }
    public static int _POSIX_SAVED_IDS() {
        return (int)1L;
    }
    public static int _POSIX_CHOWN_RESTRICTED() {
        return (int)0L;
    }
    public static int _POSIX_NO_TRUNC() {
        return (int)1L;
    }
    public static int _XOPEN_REALTIME() {
        return (int)1L;
    }
    public static int _XOPEN_REALTIME_THREADS() {
        return (int)1L;
    }
    public static int _XOPEN_SHM() {
        return (int)1L;
    }
    public static int _POSIX_REENTRANT_FUNCTIONS() {
        return (int)1L;
    }
    public static int _POSIX_ASYNC_IO() {
        return (int)1L;
    }
    public static int _LFS_ASYNCHRONOUS_IO() {
        return (int)1L;
    }
    public static int _LFS64_ASYNCHRONOUS_IO() {
        return (int)1L;
    }
    public static int _LFS_LARGEFILE() {
        return (int)1L;
    }
    public static int _LFS64_LARGEFILE() {
        return (int)1L;
    }
    public static int _LFS64_STDIO() {
        return (int)1L;
    }
    public static int _POSIX_CPUTIME() {
        return (int)0L;
    }
    public static int _POSIX_THREAD_CPUTIME() {
        return (int)0L;
    }
    public static int _POSIX_REGEXP() {
        return (int)1L;
    }
    public static int _POSIX_SHELL() {
        return (int)1L;
    }
    public static int _POSIX_MONOTONIC_CLOCK() {
        return (int)0L;
    }
    public static int _POSIX_V7_LP64_OFF64() {
        return (int)1L;
    }
    public static int _POSIX_V6_LP64_OFF64() {
        return (int)1L;
    }
    public static int _XBS5_LP64_OFF64() {
        return (int)1L;
    }
    public static int STDIN_FILENO() {
        return (int)0L;
    }
    public static int STDOUT_FILENO() {
        return (int)1L;
    }
    public static int STDERR_FILENO() {
        return (int)2L;
    }
    public static int R_OK() {
        return (int)4L;
    }
    public static int W_OK() {
        return (int)2L;
    }
    public static int X_OK() {
        return (int)1L;
    }
    public static int F_OK() {
        return (int)0L;
    }
    public static int SEEK_SET() {
        return (int)0L;
    }
    public static int SEEK_CUR() {
        return (int)1L;
    }
    public static int SEEK_END() {
        return (int)2L;
    }
    public static int _GETOPT_POSIX_H() {
        return (int)1L;
    }
    public static int _GETOPT_CORE_H() {
        return (int)1L;
    }
    public static int F_ULOCK() {
        return (int)0L;
    }
    public static int F_LOCK() {
        return (int)1L;
    }
    public static int F_TLOCK() {
        return (int)2L;
    }
    public static int F_TEST() {
        return (int)3L;
    }
    public static int _NETDB_H() {
        return (int)1L;
    }
    public static int _NETINET_IN_H() {
        return (int)1L;
    }
    public static int _BITS_STDINT_UINTN_H() {
        return (int)1L;
    }
    public static int _SYS_SOCKET_H() {
        return (int)1L;
    }
    public static int __iovec_defined() {
        return (int)1L;
    }
    public static int PF_UNSPEC() {
        return (int)0L;
    }
    public static int PF_LOCAL() {
        return (int)1L;
    }
    public static int PF_INET() {
        return (int)2L;
    }
    public static int PF_AX25() {
        return (int)3L;
    }
    public static int PF_IPX() {
        return (int)4L;
    }
    public static int PF_APPLETALK() {
        return (int)5L;
    }
    public static int PF_NETROM() {
        return (int)6L;
    }
    public static int PF_BRIDGE() {
        return (int)7L;
    }
    public static int PF_ATMPVC() {
        return (int)8L;
    }
    public static int PF_X25() {
        return (int)9L;
    }
    public static int PF_INET6() {
        return (int)10L;
    }
    public static int PF_ROSE() {
        return (int)11L;
    }
    public static int PF_DECnet() {
        return (int)12L;
    }
    public static int PF_NETBEUI() {
        return (int)13L;
    }
    public static int PF_SECURITY() {
        return (int)14L;
    }
    public static int PF_KEY() {
        return (int)15L;
    }
    public static int PF_NETLINK() {
        return (int)16L;
    }
    public static int PF_PACKET() {
        return (int)17L;
    }
    public static int PF_ASH() {
        return (int)18L;
    }
    public static int PF_ECONET() {
        return (int)19L;
    }
    public static int PF_ATMSVC() {
        return (int)20L;
    }
    public static int PF_RDS() {
        return (int)21L;
    }
    public static int PF_SNA() {
        return (int)22L;
    }
    public static int PF_IRDA() {
        return (int)23L;
    }
    public static int PF_PPPOX() {
        return (int)24L;
    }
    public static int PF_WANPIPE() {
        return (int)25L;
    }
    public static int PF_LLC() {
        return (int)26L;
    }
    public static int PF_IB() {
        return (int)27L;
    }
    public static int PF_MPLS() {
        return (int)28L;
    }
    public static int PF_CAN() {
        return (int)29L;
    }
    public static int PF_TIPC() {
        return (int)30L;
    }
    public static int PF_BLUETOOTH() {
        return (int)31L;
    }
    public static int PF_IUCV() {
        return (int)32L;
    }
    public static int PF_RXRPC() {
        return (int)33L;
    }
    public static int PF_ISDN() {
        return (int)34L;
    }
    public static int PF_PHONET() {
        return (int)35L;
    }
    public static int PF_IEEE802154() {
        return (int)36L;
    }
    public static int PF_CAIF() {
        return (int)37L;
    }
    public static int PF_ALG() {
        return (int)38L;
    }
    public static int PF_NFC() {
        return (int)39L;
    }
    public static int PF_VSOCK() {
        return (int)40L;
    }
    public static int PF_KCM() {
        return (int)41L;
    }
    public static int PF_QIPCRTR() {
        return (int)42L;
    }
    public static int PF_SMC() {
        return (int)43L;
    }
    public static int PF_XDP() {
        return (int)44L;
    }
    public static int PF_MCTP() {
        return (int)45L;
    }
    public static int PF_MAX() {
        return (int)46L;
    }
    public static int SOL_RAW() {
        return (int)255L;
    }
    public static int SOL_DECNET() {
        return (int)261L;
    }
    public static int SOL_X25() {
        return (int)262L;
    }
    public static int SOL_PACKET() {
        return (int)263L;
    }
    public static int SOL_ATM() {
        return (int)264L;
    }
    public static int SOL_AAL() {
        return (int)265L;
    }
    public static int SOL_IRDA() {
        return (int)266L;
    }
    public static int SOL_NETBEUI() {
        return (int)267L;
    }
    public static int SOL_LLC() {
        return (int)268L;
    }
    public static int SOL_DCCP() {
        return (int)269L;
    }
    public static int SOL_NETLINK() {
        return (int)270L;
    }
    public static int SOL_TIPC() {
        return (int)271L;
    }
    public static int SOL_RXRPC() {
        return (int)272L;
    }
    public static int SOL_PPPOL2TP() {
        return (int)273L;
    }
    public static int SOL_BLUETOOTH() {
        return (int)274L;
    }
    public static int SOL_PNPIPE() {
        return (int)275L;
    }
    public static int SOL_RDS() {
        return (int)276L;
    }
    public static int SOL_IUCV() {
        return (int)277L;
    }
    public static int SOL_CAIF() {
        return (int)278L;
    }
    public static int SOL_ALG() {
        return (int)279L;
    }
    public static int SOL_NFC() {
        return (int)280L;
    }
    public static int SOL_KCM() {
        return (int)281L;
    }
    public static int SOL_TLS() {
        return (int)282L;
    }
    public static int SOL_XDP() {
        return (int)283L;
    }
    public static int SOL_MPTCP() {
        return (int)284L;
    }
    public static int SOL_MCTP() {
        return (int)285L;
    }
    public static int SOMAXCONN() {
        return (int)4096L;
    }
    public static int _BITS_SOCKADDR_H() {
        return (int)1L;
    }
    public static int _SS_SIZE() {
        return (int)128L;
    }
    public static int __BITS_PER_LONG() {
        return (int)64L;
    }
    public static int FIOSETOWN() {
        return (int)35073L;
    }
    public static int SIOCSPGRP() {
        return (int)35074L;
    }
    public static int FIOGETOWN() {
        return (int)35075L;
    }
    public static int SIOCGPGRP() {
        return (int)35076L;
    }
    public static int SIOCATMARK() {
        return (int)35077L;
    }
    public static int SIOCGSTAMP_OLD() {
        return (int)35078L;
    }
    public static int SIOCGSTAMPNS_OLD() {
        return (int)35079L;
    }
    public static int SOL_SOCKET() {
        return (int)1L;
    }
    public static int SO_DEBUG() {
        return (int)1L;
    }
    public static int SO_REUSEADDR() {
        return (int)2L;
    }
    public static int SO_TYPE() {
        return (int)3L;
    }
    public static int SO_ERROR() {
        return (int)4L;
    }
    public static int SO_DONTROUTE() {
        return (int)5L;
    }
    public static int SO_BROADCAST() {
        return (int)6L;
    }
    public static int SO_SNDBUF() {
        return (int)7L;
    }
    public static int SO_RCVBUF() {
        return (int)8L;
    }
    public static int SO_SNDBUFFORCE() {
        return (int)32L;
    }
    public static int SO_RCVBUFFORCE() {
        return (int)33L;
    }
    public static int SO_KEEPALIVE() {
        return (int)9L;
    }
    public static int SO_OOBINLINE() {
        return (int)10L;
    }
    public static int SO_NO_CHECK() {
        return (int)11L;
    }
    public static int SO_PRIORITY() {
        return (int)12L;
    }
    public static int SO_LINGER() {
        return (int)13L;
    }
    public static int SO_BSDCOMPAT() {
        return (int)14L;
    }
    public static int SO_REUSEPORT() {
        return (int)15L;
    }
    public static int SO_PASSCRED() {
        return (int)16L;
    }
    public static int SO_PEERCRED() {
        return (int)17L;
    }
    public static int SO_RCVLOWAT() {
        return (int)18L;
    }
    public static int SO_SNDLOWAT() {
        return (int)19L;
    }
    public static int SO_RCVTIMEO_OLD() {
        return (int)20L;
    }
    public static int SO_SNDTIMEO_OLD() {
        return (int)21L;
    }
    public static int SO_SECURITY_AUTHENTICATION() {
        return (int)22L;
    }
    public static int SO_SECURITY_ENCRYPTION_TRANSPORT() {
        return (int)23L;
    }
    public static int SO_SECURITY_ENCRYPTION_NETWORK() {
        return (int)24L;
    }
    public static int SO_BINDTODEVICE() {
        return (int)25L;
    }
    public static int SO_ATTACH_FILTER() {
        return (int)26L;
    }
    public static int SO_DETACH_FILTER() {
        return (int)27L;
    }
    public static int SO_PEERNAME() {
        return (int)28L;
    }
    public static int SO_ACCEPTCONN() {
        return (int)30L;
    }
    public static int SO_PEERSEC() {
        return (int)31L;
    }
    public static int SO_PASSSEC() {
        return (int)34L;
    }
    public static int SO_MARK() {
        return (int)36L;
    }
    public static int SO_PROTOCOL() {
        return (int)38L;
    }
    public static int SO_DOMAIN() {
        return (int)39L;
    }
    public static int SO_RXQ_OVFL() {
        return (int)40L;
    }
    public static int SO_WIFI_STATUS() {
        return (int)41L;
    }
    public static int SO_PEEK_OFF() {
        return (int)42L;
    }
    public static int SO_NOFCS() {
        return (int)43L;
    }
    public static int SO_LOCK_FILTER() {
        return (int)44L;
    }
    public static int SO_SELECT_ERR_QUEUE() {
        return (int)45L;
    }
    public static int SO_BUSY_POLL() {
        return (int)46L;
    }
    public static int SO_MAX_PACING_RATE() {
        return (int)47L;
    }
    public static int SO_BPF_EXTENSIONS() {
        return (int)48L;
    }
    public static int SO_INCOMING_CPU() {
        return (int)49L;
    }
    public static int SO_ATTACH_BPF() {
        return (int)50L;
    }
    public static int SO_ATTACH_REUSEPORT_CBPF() {
        return (int)51L;
    }
    public static int SO_ATTACH_REUSEPORT_EBPF() {
        return (int)52L;
    }
    public static int SO_CNX_ADVICE() {
        return (int)53L;
    }
    public static int SCM_TIMESTAMPING_OPT_STATS() {
        return (int)54L;
    }
    public static int SO_MEMINFO() {
        return (int)55L;
    }
    public static int SO_INCOMING_NAPI_ID() {
        return (int)56L;
    }
    public static int SO_COOKIE() {
        return (int)57L;
    }
    public static int SCM_TIMESTAMPING_PKTINFO() {
        return (int)58L;
    }
    public static int SO_PEERGROUPS() {
        return (int)59L;
    }
    public static int SO_ZEROCOPY() {
        return (int)60L;
    }
    public static int SO_TXTIME() {
        return (int)61L;
    }
    public static int SO_BINDTOIFINDEX() {
        return (int)62L;
    }
    public static int SO_TIMESTAMP_OLD() {
        return (int)29L;
    }
    public static int SO_TIMESTAMPNS_OLD() {
        return (int)35L;
    }
    public static int SO_TIMESTAMPING_OLD() {
        return (int)37L;
    }
    public static int SO_TIMESTAMP_NEW() {
        return (int)63L;
    }
    public static int SO_TIMESTAMPNS_NEW() {
        return (int)64L;
    }
    public static int SO_TIMESTAMPING_NEW() {
        return (int)65L;
    }
    public static int SO_RCVTIMEO_NEW() {
        return (int)66L;
    }
    public static int SO_SNDTIMEO_NEW() {
        return (int)67L;
    }
    public static int SO_DETACH_REUSEPORT_BPF() {
        return (int)68L;
    }
    public static int SO_PREFER_BUSY_POLL() {
        return (int)69L;
    }
    public static int SO_BUSY_POLL_BUDGET() {
        return (int)70L;
    }
    public static int SO_NETNS_COOKIE() {
        return (int)71L;
    }
    public static int SO_BUF_LOCK() {
        return (int)72L;
    }
    public static int SO_RESERVE_MEM() {
        return (int)73L;
    }
    public static int SO_TXREHASH() {
        return (int)74L;
    }
    public static int SO_RCVMARK() {
        return (int)75L;
    }
    public static int __osockaddr_defined() {
        return (int)1L;
    }
    public static int __USE_KERNEL_IPV6_DEFS() {
        return (int)0L;
    }
    public static int IP_OPTIONS() {
        return (int)4L;
    }
    public static int IP_HDRINCL() {
        return (int)3L;
    }
    public static int IP_TOS() {
        return (int)1L;
    }
    public static int IP_TTL() {
        return (int)2L;
    }
    public static int IP_RECVOPTS() {
        return (int)6L;
    }
    public static int IP_RETOPTS() {
        return (int)7L;
    }
    public static int IP_MULTICAST_IF() {
        return (int)32L;
    }
    public static int IP_MULTICAST_TTL() {
        return (int)33L;
    }
    public static int IP_MULTICAST_LOOP() {
        return (int)34L;
    }
    public static int IP_ADD_MEMBERSHIP() {
        return (int)35L;
    }
    public static int IP_DROP_MEMBERSHIP() {
        return (int)36L;
    }
    public static int IP_UNBLOCK_SOURCE() {
        return (int)37L;
    }
    public static int IP_BLOCK_SOURCE() {
        return (int)38L;
    }
    public static int IP_ADD_SOURCE_MEMBERSHIP() {
        return (int)39L;
    }
    public static int IP_DROP_SOURCE_MEMBERSHIP() {
        return (int)40L;
    }
    public static int IP_MSFILTER() {
        return (int)41L;
    }
    public static int MCAST_JOIN_GROUP() {
        return (int)42L;
    }
    public static int MCAST_BLOCK_SOURCE() {
        return (int)43L;
    }
    public static int MCAST_UNBLOCK_SOURCE() {
        return (int)44L;
    }
    public static int MCAST_LEAVE_GROUP() {
        return (int)45L;
    }
    public static int MCAST_JOIN_SOURCE_GROUP() {
        return (int)46L;
    }
    public static int MCAST_LEAVE_SOURCE_GROUP() {
        return (int)47L;
    }
    public static int MCAST_MSFILTER() {
        return (int)48L;
    }
    public static int IP_MULTICAST_ALL() {
        return (int)49L;
    }
    public static int IP_UNICAST_IF() {
        return (int)50L;
    }
    public static int MCAST_EXCLUDE() {
        return (int)0L;
    }
    public static int MCAST_INCLUDE() {
        return (int)1L;
    }
    public static int IP_ROUTER_ALERT() {
        return (int)5L;
    }
    public static int IP_PKTINFO() {
        return (int)8L;
    }
    public static int IP_PKTOPTIONS() {
        return (int)9L;
    }
    public static int IP_PMTUDISC() {
        return (int)10L;
    }
    public static int IP_MTU_DISCOVER() {
        return (int)10L;
    }
    public static int IP_RECVERR() {
        return (int)11L;
    }
    public static int IP_RECVTTL() {
        return (int)12L;
    }
    public static int IP_RECVTOS() {
        return (int)13L;
    }
    public static int IP_MTU() {
        return (int)14L;
    }
    public static int IP_FREEBIND() {
        return (int)15L;
    }
    public static int IP_IPSEC_POLICY() {
        return (int)16L;
    }
    public static int IP_XFRM_POLICY() {
        return (int)17L;
    }
    public static int IP_PASSSEC() {
        return (int)18L;
    }
    public static int IP_TRANSPARENT() {
        return (int)19L;
    }
    public static int IP_ORIGDSTADDR() {
        return (int)20L;
    }
    public static int IP_MINTTL() {
        return (int)21L;
    }
    public static int IP_NODEFRAG() {
        return (int)22L;
    }
    public static int IP_CHECKSUM() {
        return (int)23L;
    }
    public static int IP_BIND_ADDRESS_NO_PORT() {
        return (int)24L;
    }
    public static int IP_RECVFRAGSIZE() {
        return (int)25L;
    }
    public static int IP_RECVERR_RFC4884() {
        return (int)26L;
    }
    public static int IP_PMTUDISC_DONT() {
        return (int)0L;
    }
    public static int IP_PMTUDISC_WANT() {
        return (int)1L;
    }
    public static int IP_PMTUDISC_DO() {
        return (int)2L;
    }
    public static int IP_PMTUDISC_PROBE() {
        return (int)3L;
    }
    public static int IP_PMTUDISC_INTERFACE() {
        return (int)4L;
    }
    public static int IP_PMTUDISC_OMIT() {
        return (int)5L;
    }
    public static int SOL_IP() {
        return (int)0L;
    }
    public static int IP_DEFAULT_MULTICAST_TTL() {
        return (int)1L;
    }
    public static int IP_DEFAULT_MULTICAST_LOOP() {
        return (int)1L;
    }
    public static int IP_MAX_MEMBERSHIPS() {
        return (int)20L;
    }
    public static int IPV6_ADDRFORM() {
        return (int)1L;
    }
    public static int IPV6_2292PKTINFO() {
        return (int)2L;
    }
    public static int IPV6_2292HOPOPTS() {
        return (int)3L;
    }
    public static int IPV6_2292DSTOPTS() {
        return (int)4L;
    }
    public static int IPV6_2292RTHDR() {
        return (int)5L;
    }
    public static int IPV6_2292PKTOPTIONS() {
        return (int)6L;
    }
    public static int IPV6_CHECKSUM() {
        return (int)7L;
    }
    public static int IPV6_2292HOPLIMIT() {
        return (int)8L;
    }
    public static int IPV6_NEXTHOP() {
        return (int)9L;
    }
    public static int IPV6_AUTHHDR() {
        return (int)10L;
    }
    public static int IPV6_UNICAST_HOPS() {
        return (int)16L;
    }
    public static int IPV6_MULTICAST_IF() {
        return (int)17L;
    }
    public static int IPV6_MULTICAST_HOPS() {
        return (int)18L;
    }
    public static int IPV6_MULTICAST_LOOP() {
        return (int)19L;
    }
    public static int IPV6_JOIN_GROUP() {
        return (int)20L;
    }
    public static int IPV6_LEAVE_GROUP() {
        return (int)21L;
    }
    public static int IPV6_ROUTER_ALERT() {
        return (int)22L;
    }
    public static int IPV6_MTU_DISCOVER() {
        return (int)23L;
    }
    public static int IPV6_MTU() {
        return (int)24L;
    }
    public static int IPV6_RECVERR() {
        return (int)25L;
    }
    public static int IPV6_V6ONLY() {
        return (int)26L;
    }
    public static int IPV6_JOIN_ANYCAST() {
        return (int)27L;
    }
    public static int IPV6_LEAVE_ANYCAST() {
        return (int)28L;
    }
    public static int IPV6_MULTICAST_ALL() {
        return (int)29L;
    }
    public static int IPV6_ROUTER_ALERT_ISOLATE() {
        return (int)30L;
    }
    public static int IPV6_RECVERR_RFC4884() {
        return (int)31L;
    }
    public static int IPV6_IPSEC_POLICY() {
        return (int)34L;
    }
    public static int IPV6_XFRM_POLICY() {
        return (int)35L;
    }
    public static int IPV6_HDRINCL() {
        return (int)36L;
    }
    public static int IPV6_RECVPKTINFO() {
        return (int)49L;
    }
    public static int IPV6_PKTINFO() {
        return (int)50L;
    }
    public static int IPV6_RECVHOPLIMIT() {
        return (int)51L;
    }
    public static int IPV6_HOPLIMIT() {
        return (int)52L;
    }
    public static int IPV6_RECVHOPOPTS() {
        return (int)53L;
    }
    public static int IPV6_HOPOPTS() {
        return (int)54L;
    }
    public static int IPV6_RTHDRDSTOPTS() {
        return (int)55L;
    }
    public static int IPV6_RECVRTHDR() {
        return (int)56L;
    }
    public static int IPV6_RTHDR() {
        return (int)57L;
    }
    public static int IPV6_RECVDSTOPTS() {
        return (int)58L;
    }
    public static int IPV6_DSTOPTS() {
        return (int)59L;
    }
    public static int IPV6_RECVPATHMTU() {
        return (int)60L;
    }
    public static int IPV6_PATHMTU() {
        return (int)61L;
    }
    public static int IPV6_DONTFRAG() {
        return (int)62L;
    }
    public static int IPV6_RECVTCLASS() {
        return (int)66L;
    }
    public static int IPV6_TCLASS() {
        return (int)67L;
    }
    public static int IPV6_AUTOFLOWLABEL() {
        return (int)70L;
    }
    public static int IPV6_ADDR_PREFERENCES() {
        return (int)72L;
    }
    public static int IPV6_MINHOPCOUNT() {
        return (int)73L;
    }
    public static int IPV6_ORIGDSTADDR() {
        return (int)74L;
    }
    public static int IPV6_TRANSPARENT() {
        return (int)75L;
    }
    public static int IPV6_UNICAST_IF() {
        return (int)76L;
    }
    public static int IPV6_RECVFRAGSIZE() {
        return (int)77L;
    }
    public static int IPV6_FREEBIND() {
        return (int)78L;
    }
    public static int IPV6_PMTUDISC_DONT() {
        return (int)0L;
    }
    public static int IPV6_PMTUDISC_WANT() {
        return (int)1L;
    }
    public static int IPV6_PMTUDISC_DO() {
        return (int)2L;
    }
    public static int IPV6_PMTUDISC_PROBE() {
        return (int)3L;
    }
    public static int IPV6_PMTUDISC_INTERFACE() {
        return (int)4L;
    }
    public static int IPV6_PMTUDISC_OMIT() {
        return (int)5L;
    }
    public static int SOL_IPV6() {
        return (int)41L;
    }
    public static int SOL_ICMPV6() {
        return (int)58L;
    }
    public static int IPV6_RTHDR_LOOSE() {
        return (int)0L;
    }
    public static int IPV6_RTHDR_STRICT() {
        return (int)1L;
    }
    public static int IPV6_RTHDR_TYPE_0() {
        return (int)0L;
    }
    public static int IN_CLASSA_NSHIFT() {
        return (int)24L;
    }
    public static int IN_CLASSA_MAX() {
        return (int)128L;
    }
    public static int IN_CLASSB_NSHIFT() {
        return (int)16L;
    }
    public static int IN_CLASSB_MAX() {
        return (int)65536L;
    }
    public static int IN_CLASSC_NSHIFT() {
        return (int)8L;
    }
    public static int IN_LOOPBACKNET() {
        return (int)127L;
    }
    public static int INET_ADDRSTRLEN() {
        return (int)16L;
    }
    public static int INET6_ADDRSTRLEN() {
        return (int)46L;
    }
    public static int _RPC_NETDB_H() {
        return (int)1L;
    }
    public static int HOST_NOT_FOUND() {
        return (int)1L;
    }
    public static int TRY_AGAIN() {
        return (int)2L;
    }
    public static int NO_RECOVERY() {
        return (int)3L;
    }
    public static int NO_DATA() {
        return (int)4L;
    }
    public static int NETDB_SUCCESS() {
        return (int)0L;
    }
    public static int IPPORT_RESERVED() {
        return (int)1024L;
    }
    public static int AI_PASSIVE() {
        return (int)1L;
    }
    public static int AI_CANONNAME() {
        return (int)2L;
    }
    public static int AI_NUMERICHOST() {
        return (int)4L;
    }
    public static int AI_V4MAPPED() {
        return (int)8L;
    }
    public static int AI_ALL() {
        return (int)16L;
    }
    public static int AI_ADDRCONFIG() {
        return (int)32L;
    }
    public static int AI_NUMERICSERV() {
        return (int)1024L;
    }
    public static int NI_MAXHOST() {
        return (int)1025L;
    }
    public static int NI_MAXSERV() {
        return (int)32L;
    }
    public static int NI_NUMERICHOST() {
        return (int)1L;
    }
    public static int NI_NUMERICSERV() {
        return (int)2L;
    }
    public static int NI_NOFQDN() {
        return (int)4L;
    }
    public static int NI_NAMEREQD() {
        return (int)8L;
    }
    public static int NI_DGRAM() {
        return (int)16L;
    }
    public static int _NETINET_TCP_H() {
        return (int)1L;
    }
    public static int TCP_NODELAY() {
        return (int)1L;
    }
    public static int TCP_MAXSEG() {
        return (int)2L;
    }
    public static int TCP_CORK() {
        return (int)3L;
    }
    public static int TCP_KEEPIDLE() {
        return (int)4L;
    }
    public static int TCP_KEEPINTVL() {
        return (int)5L;
    }
    public static int TCP_KEEPCNT() {
        return (int)6L;
    }
    public static int TCP_SYNCNT() {
        return (int)7L;
    }
    public static int TCP_LINGER2() {
        return (int)8L;
    }
    public static int TCP_DEFER_ACCEPT() {
        return (int)9L;
    }
    public static int TCP_WINDOW_CLAMP() {
        return (int)10L;
    }
    public static int TCP_INFO() {
        return (int)11L;
    }
    public static int TCP_QUICKACK() {
        return (int)12L;
    }
    public static int TCP_CONGESTION() {
        return (int)13L;
    }
    public static int TCP_MD5SIG() {
        return (int)14L;
    }
    public static int TCP_COOKIE_TRANSACTIONS() {
        return (int)15L;
    }
    public static int TCP_THIN_LINEAR_TIMEOUTS() {
        return (int)16L;
    }
    public static int TCP_THIN_DUPACK() {
        return (int)17L;
    }
    public static int TCP_USER_TIMEOUT() {
        return (int)18L;
    }
    public static int TCP_REPAIR() {
        return (int)19L;
    }
    public static int TCP_REPAIR_QUEUE() {
        return (int)20L;
    }
    public static int TCP_QUEUE_SEQ() {
        return (int)21L;
    }
    public static int TCP_REPAIR_OPTIONS() {
        return (int)22L;
    }
    public static int TCP_FASTOPEN() {
        return (int)23L;
    }
    public static int TCP_TIMESTAMP() {
        return (int)24L;
    }
    public static int TCP_NOTSENT_LOWAT() {
        return (int)25L;
    }
    public static int TCP_CC_INFO() {
        return (int)26L;
    }
    public static int TCP_SAVE_SYN() {
        return (int)27L;
    }
    public static int TCP_SAVED_SYN() {
        return (int)28L;
    }
    public static int TCP_REPAIR_WINDOW() {
        return (int)29L;
    }
    public static int TCP_FASTOPEN_CONNECT() {
        return (int)30L;
    }
    public static int TCP_ULP() {
        return (int)31L;
    }
    public static int TCP_MD5SIG_EXT() {
        return (int)32L;
    }
    public static int TCP_FASTOPEN_KEY() {
        return (int)33L;
    }
    public static int TCP_FASTOPEN_NO_COOKIE() {
        return (int)34L;
    }
    public static int TCP_ZEROCOPY_RECEIVE() {
        return (int)35L;
    }
    public static int TCP_INQ() {
        return (int)36L;
    }
    public static int TCP_TX_DELAY() {
        return (int)37L;
    }
    public static int TCP_REPAIR_ON() {
        return (int)1L;
    }
    public static int TCP_REPAIR_OFF() {
        return (int)0L;
    }
    public static int _STDINT_H() {
        return (int)1L;
    }
    public static int _BITS_WCHAR_H() {
        return (int)1L;
    }
    public static int TH_FIN() {
        return (int)1L;
    }
    public static int TH_SYN() {
        return (int)2L;
    }
    public static int TH_RST() {
        return (int)4L;
    }
    public static int TH_PUSH() {
        return (int)8L;
    }
    public static int TH_ACK() {
        return (int)16L;
    }
    public static int TH_URG() {
        return (int)32L;
    }
    public static int TCPOPT_EOL() {
        return (int)0L;
    }
    public static int TCPOPT_NOP() {
        return (int)1L;
    }
    public static int TCPOPT_MAXSEG() {
        return (int)2L;
    }
    public static int TCPOLEN_MAXSEG() {
        return (int)4L;
    }
    public static int TCPOPT_WINDOW() {
        return (int)3L;
    }
    public static int TCPOLEN_WINDOW() {
        return (int)3L;
    }
    public static int TCPOPT_SACK_PERMITTED() {
        return (int)4L;
    }
    public static int TCPOLEN_SACK_PERMITTED() {
        return (int)2L;
    }
    public static int TCPOPT_SACK() {
        return (int)5L;
    }
    public static int TCPOPT_TIMESTAMP() {
        return (int)8L;
    }
    public static int TCPOLEN_TIMESTAMP() {
        return (int)10L;
    }
    public static int TCP_MSS() {
        return (int)512L;
    }
    public static int TCP_MAXWIN() {
        return (int)65535L;
    }
    public static int TCP_MAX_WINSHIFT() {
        return (int)14L;
    }
    public static int SOL_TCP() {
        return (int)6L;
    }
    public static int TCPI_OPT_TIMESTAMPS() {
        return (int)1L;
    }
    public static int TCPI_OPT_SACK() {
        return (int)2L;
    }
    public static int TCPI_OPT_WSCALE() {
        return (int)4L;
    }
    public static int TCPI_OPT_ECN() {
        return (int)8L;
    }
    public static int TCPI_OPT_ECN_SEEN() {
        return (int)16L;
    }
    public static int TCPI_OPT_SYN_DATA() {
        return (int)32L;
    }
    public static int TCP_MD5SIG_MAXKEYLEN() {
        return (int)80L;
    }
    public static int TCP_MD5SIG_FLAG_PREFIX() {
        return (int)1L;
    }
    public static int TCP_COOKIE_MIN() {
        return (int)8L;
    }
    public static int TCP_COOKIE_MAX() {
        return (int)16L;
    }
    public static int _SYS_PARAM_H() {
        return (int)1L;
    }
    public static int HZ() {
        return (int)100L;
    }
    public static int EXEC_PAGESIZE() {
        return (int)4096L;
    }
    public static int MAXHOSTNAMELEN() {
        return (int)64L;
    }
    public static int MAXSYMLINKS() {
        return (int)20L;
    }
    public static int NOFILE() {
        return (int)256L;
    }
    public static int NCARGS() {
        return (int)131072L;
    }
    public static int DEV_BSIZE() {
        return (int)512L;
    }
    public static int _STDIO_H() {
        return (int)1L;
    }
    public static int _____fpos_t_defined() {
        return (int)1L;
    }
    public static int ____mbstate_t_defined() {
        return (int)1L;
    }
    public static int _____fpos64_t_defined() {
        return (int)1L;
    }
    public static int ____FILE_defined() {
        return (int)1L;
    }
    public static int __FILE_defined() {
        return (int)1L;
    }
    public static int __struct_FILE_defined() {
        return (int)1L;
    }
    public static int _IO_EOF_SEEN() {
        return (int)16L;
    }
    public static int _IO_ERR_SEEN() {
        return (int)32L;
    }
    public static int _IO_USER_LOCK() {
        return (int)32768L;
    }
    public static int _IOFBF() {
        return (int)0L;
    }
    public static int _IOLBF() {
        return (int)1L;
    }
    public static int _IONBF() {
        return (int)2L;
    }
    public static int BUFSIZ() {
        return (int)8192L;
    }
    public static int _BITS_STDIO_LIM_H() {
        return (int)1L;
    }
    public static int L_tmpnam() {
        return (int)20L;
    }
    public static int TMP_MAX() {
        return (int)238328L;
    }
    public static int FILENAME_MAX() {
        return (int)4096L;
    }
    public static int L_ctermid() {
        return (int)9L;
    }
    public static int FOPEN_MAX() {
        return (int)16L;
    }
    public static int NS_PACKETSZ() {
        return (int)512L;
    }
    public static int NS_MAXDNAME() {
        return (int)1025L;
    }
    public static int NS_MAXMSG() {
        return (int)65535L;
    }
    public static int NS_MAXCDNAME() {
        return (int)255L;
    }
    public static int NS_MAXLABEL() {
        return (int)63L;
    }
    public static int NS_HFIXEDSZ() {
        return (int)12L;
    }
    public static int NS_QFIXEDSZ() {
        return (int)4L;
    }
    public static int NS_RRFIXEDSZ() {
        return (int)10L;
    }
    public static int NS_INT32SZ() {
        return (int)4L;
    }
    public static int NS_INT16SZ() {
        return (int)2L;
    }
    public static int NS_INT8SZ() {
        return (int)1L;
    }
    public static int NS_INADDRSZ() {
        return (int)4L;
    }
    public static int NS_IN6ADDRSZ() {
        return (int)16L;
    }
    public static int NS_CMPRSFLGS() {
        return (int)192L;
    }
    public static int NS_DEFAULTPORT() {
        return (int)53L;
    }
    public static int NS_TSIG_FUDGE() {
        return (int)300L;
    }
    public static int NS_TSIG_TCP_COUNT() {
        return (int)100L;
    }
    public static int NS_OPT_NSID() {
        return (int)3L;
    }
    public static int __res_state_defined() {
        return (int)1L;
    }
    public static int MAXNS() {
        return (int)3L;
    }
    public static int MAXDFLSRCH() {
        return (int)3L;
    }
    public static int MAXDNSRCH() {
        return (int)6L;
    }
    public static int MAXRESOLVSORT() {
        return (int)10L;
    }
    public static int LOCALDOMAINPARTS() {
        return (int)2L;
    }
    public static int RES_TIMEOUT() {
        return (int)5L;
    }
    public static int RES_MAXNDOTS() {
        return (int)15L;
    }
    public static int RES_MAXRETRANS() {
        return (int)30L;
    }
    public static int RES_MAXRETRY() {
        return (int)5L;
    }
    public static int RES_DFLRETRY() {
        return (int)2L;
    }
    public static int RES_MAXTIME() {
        return (int)65535L;
    }
    public static int __RES() {
        return (int)19991006L;
    }
    public static int RES_INIT() {
        return (int)1L;
    }
    public static int RES_DEBUG() {
        return (int)2L;
    }
    public static int RES_USEVC() {
        return (int)8L;
    }
    public static int RES_IGNTC() {
        return (int)32L;
    }
    public static int RES_RECURSE() {
        return (int)64L;
    }
    public static int RES_DEFNAMES() {
        return (int)128L;
    }
    public static int RES_STAYOPEN() {
        return (int)256L;
    }
    public static int RES_DNSRCH() {
        return (int)512L;
    }
    public static int RES_NOALIASES() {
        return (int)4096L;
    }
    public static int RES_ROTATE() {
        return (int)16384L;
    }
    public static int RES_USE_EDNS0() {
        return (int)1048576L;
    }
    public static int RES_SNGLKUP() {
        return (int)2097152L;
    }
    public static int RES_SNGLKUPREOP() {
        return (int)4194304L;
    }
    public static int RES_USE_DNSSEC() {
        return (int)8388608L;
    }
    public static int RES_NOTLDQUERY() {
        return (int)16777216L;
    }
    public static int RES_NORELOAD() {
        return (int)33554432L;
    }
    public static int RES_TRUSTAD() {
        return (int)67108864L;
    }
    public static int RES_NOAAAA() {
        return (int)134217728L;
    }
    public static int RES_PRF_STATS() {
        return (int)1L;
    }
    public static int RES_PRF_UPDATE() {
        return (int)2L;
    }
    public static int RES_PRF_CLASS() {
        return (int)4L;
    }
    public static int RES_PRF_CMD() {
        return (int)8L;
    }
    public static int RES_PRF_QUES() {
        return (int)16L;
    }
    public static int RES_PRF_ANS() {
        return (int)32L;
    }
    public static int RES_PRF_AUTH() {
        return (int)64L;
    }
    public static int RES_PRF_ADD() {
        return (int)128L;
    }
    public static int RES_PRF_HEAD1() {
        return (int)256L;
    }
    public static int RES_PRF_HEAD2() {
        return (int)512L;
    }
    public static int RES_PRF_TTLID() {
        return (int)1024L;
    }
    public static int RES_PRF_HEADX() {
        return (int)2048L;
    }
    public static int RES_PRF_QUERY() {
        return (int)4096L;
    }
    public static int RES_PRF_REPLY() {
        return (int)8192L;
    }
    public static int RES_PRF_INIT() {
        return (int)16384L;
    }
    public static int _SYS_UN_H() {
        return (int)1L;
    }
    public static int _NET_IF_H() {
        return (int)1L;
    }
    public static int IF_NAMESIZE() {
        return (int)16L;
    }
    public static int IFHWADDRLEN() {
        return (int)6L;
    }
    public static int _ARPA_INET_H() {
        return (int)1L;
    }
    public static int _SYS_STAT_H() {
        return (int)1L;
    }
    public static int _BITS_STAT_H() {
        return (int)1L;
    }
    public static int _BITS_STRUCT_STAT_H() {
        return (int)1L;
    }
    public static int __S_IFMT() {
        return (int)61440L;
    }
    public static int __S_IFDIR() {
        return (int)16384L;
    }
    public static int __S_IFCHR() {
        return (int)8192L;
    }
}


