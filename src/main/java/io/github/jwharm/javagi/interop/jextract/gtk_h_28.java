// Generated by jextract

package io.github.jwharm.javagi.interop.jextract;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
 class gtk_h_28 extends gtk_h_27 {

    public static int INADDR_ALLRTRS_GROUP() {
        return (int)3758096386L;
    }
    public static int INADDR_ALLSNOOPERS_GROUP() {
        return (int)3758096490L;
    }
    public static int INADDR_MAX_LOCAL_GROUP() {
        return (int)3758096639L;
    }
    public static MemorySegment _PATH_HEQUIV() {
        return constants$2910._PATH_HEQUIV$SEGMENT;
    }
    public static MemorySegment _PATH_HOSTS() {
        return constants$2911._PATH_HOSTS$SEGMENT;
    }
    public static MemorySegment _PATH_NETWORKS() {
        return constants$2911._PATH_NETWORKS$SEGMENT;
    }
    public static MemorySegment _PATH_NSSWITCH_CONF() {
        return constants$2911._PATH_NSSWITCH_CONF$SEGMENT;
    }
    public static MemorySegment _PATH_PROTOCOLS() {
        return constants$2911._PATH_PROTOCOLS$SEGMENT;
    }
    public static MemorySegment _PATH_SERVICES() {
        return constants$2911._PATH_SERVICES$SEGMENT;
    }
    public static int NETDB_INTERNAL() {
        return (int)-1L;
    }
    public static int NO_ADDRESS() {
        return (int)4L;
    }
    public static int EAI_BADFLAGS() {
        return (int)-1L;
    }
    public static int EAI_NONAME() {
        return (int)-2L;
    }
    public static int EAI_AGAIN() {
        return (int)-3L;
    }
    public static int EAI_FAIL() {
        return (int)-4L;
    }
    public static int EAI_FAMILY() {
        return (int)-6L;
    }
    public static int EAI_SOCKTYPE() {
        return (int)-7L;
    }
    public static int EAI_SERVICE() {
        return (int)-8L;
    }
    public static int EAI_MEMORY() {
        return (int)-10L;
    }
    public static int EAI_SYSTEM() {
        return (int)-11L;
    }
    public static int EAI_OVERFLOW() {
        return (int)-12L;
    }
    public static int TCP_CM_INQ() {
        return (int)36L;
    }
    public static int TCP_REPAIR_OFF_NO_WP() {
        return (int)-1L;
    }
    public static int __WCHAR_MAX() {
        return (int)2147483647L;
    }
    public static int __WCHAR_MIN() {
        return (int)-2147483648L;
    }
    public static int INT8_MIN() {
        return (int)-128L;
    }
    public static int INT16_MIN() {
        return (int)-32768L;
    }
    public static int INT32_MIN() {
        return (int)-2147483648L;
    }
    public static long INT64_MIN() {
        return -9223372036854775808L;
    }
    public static int INT8_MAX() {
        return (int)127L;
    }
    public static int INT16_MAX() {
        return (int)32767L;
    }
    public static int INT32_MAX() {
        return (int)2147483647L;
    }
    public static long INT64_MAX() {
        return 9223372036854775807L;
    }
    public static int UINT8_MAX() {
        return (int)255L;
    }
    public static int UINT16_MAX() {
        return (int)65535L;
    }
    public static int UINT32_MAX() {
        return (int)4294967295L;
    }
    public static long UINT64_MAX() {
        return -1L;
    }
    public static int INT_LEAST8_MIN() {
        return (int)-128L;
    }
    public static int INT_LEAST16_MIN() {
        return (int)-32768L;
    }
    public static int INT_LEAST32_MIN() {
        return (int)-2147483648L;
    }
    public static long INT_LEAST64_MIN() {
        return -9223372036854775808L;
    }
    public static int INT_LEAST8_MAX() {
        return (int)127L;
    }
    public static int INT_LEAST16_MAX() {
        return (int)32767L;
    }
    public static int INT_LEAST32_MAX() {
        return (int)2147483647L;
    }
    public static long INT_LEAST64_MAX() {
        return 9223372036854775807L;
    }
    public static int UINT_LEAST8_MAX() {
        return (int)255L;
    }
    public static int UINT_LEAST16_MAX() {
        return (int)65535L;
    }
    public static int UINT_LEAST32_MAX() {
        return (int)4294967295L;
    }
    public static long UINT_LEAST64_MAX() {
        return -1L;
    }
    public static int INT_FAST8_MIN() {
        return (int)-128L;
    }
    public static long INT_FAST16_MIN() {
        return -9223372036854775808L;
    }
    public static long INT_FAST32_MIN() {
        return -9223372036854775808L;
    }
    public static long INT_FAST64_MIN() {
        return -9223372036854775808L;
    }
    public static int INT_FAST8_MAX() {
        return (int)127L;
    }
    public static long INT_FAST16_MAX() {
        return 9223372036854775807L;
    }
    public static long INT_FAST32_MAX() {
        return 9223372036854775807L;
    }
    public static long INT_FAST64_MAX() {
        return 9223372036854775807L;
    }
    public static int UINT_FAST8_MAX() {
        return (int)255L;
    }
    public static long UINT_FAST16_MAX() {
        return -1L;
    }
    public static long UINT_FAST32_MAX() {
        return -1L;
    }
    public static long UINT_FAST64_MAX() {
        return -1L;
    }
    public static long INTPTR_MIN() {
        return -9223372036854775808L;
    }
    public static long INTPTR_MAX() {
        return 9223372036854775807L;
    }
    public static long UINTPTR_MAX() {
        return -1L;
    }
    public static long INTMAX_MIN() {
        return -9223372036854775808L;
    }
    public static long INTMAX_MAX() {
        return 9223372036854775807L;
    }
    public static long UINTMAX_MAX() {
        return -1L;
    }
    public static long PTRDIFF_MIN() {
        return -9223372036854775808L;
    }
    public static long PTRDIFF_MAX() {
        return 9223372036854775807L;
    }
    public static int SIG_ATOMIC_MIN() {
        return (int)-2147483648L;
    }
    public static int SIG_ATOMIC_MAX() {
        return (int)2147483647L;
    }
    public static long SIZE_MAX() {
        return -1L;
    }
    public static int WCHAR_MIN() {
        return (int)-2147483648L;
    }
    public static int WCHAR_MAX() {
        return (int)2147483647L;
    }
    public static int WINT_MIN() {
        return (int)0L;
    }
    public static int WINT_MAX() {
        return (int)4294967295L;
    }
    public static int TCPOLEN_TSTAMP_APPA() {
        return (int)12L;
    }
    public static int TCPOPT_TSTAMP_HDR() {
        return (int)16844810L;
    }
    public static int TCP_COOKIE_PAIR_SIZE() {
        return (int)32L;
    }
    public static int TCP_COOKIE_IN_ALWAYS() {
        return (int)1L;
    }
    public static int TCP_COOKIE_OUT_NEVER() {
        return (int)2L;
    }
    public static int TCP_S_DATA_IN() {
        return (int)4L;
    }
    public static int TCP_S_DATA_OUT() {
        return (int)8L;
    }
    public static int TCP_MSS_DEFAULT() {
        return (int)536L;
    }
    public static int TCP_MSS_DESIRED() {
        return (int)1220L;
    }
    public static int NOGROUP() {
        return (int)-1L;
    }
    public static int NBBY() {
        return (int)8L;
    }
    public static int NGROUPS() {
        return (int)65536L;
    }
    public static int CANBSIZ() {
        return (int)255L;
    }
    public static int MAXPATHLEN() {
        return (int)4096L;
    }
    public static long NODEV() {
        return -1L;
    }
    public static int EOF() {
        return (int)-1L;
    }
    public static MemorySegment P_tmpdir() {
        return constants$2911.P_tmpdir$SEGMENT;
    }
    public static MemorySegment NS_TSIG_ALG_HMAC_MD5() {
        return constants$2912.NS_TSIG_ALG_HMAC_MD5$SEGMENT;
    }
    public static int NS_TSIG_ERROR_NO_TSIG() {
        return (int)-10L;
    }
    public static int NS_TSIG_ERROR_NO_SPACE() {
        return (int)-11L;
    }
    public static int NS_TSIG_ERROR_FORMERR() {
        return (int)-12L;
    }
    public static int NS_OPT_DNSSEC_OK() {
        return (int)32768L;
    }
    public static int PACKETSZ() {
        return (int)512L;
    }
    public static int MAXDNAME() {
        return (int)1025L;
    }
    public static int MAXCDNAME() {
        return (int)255L;
    }
    public static int MAXLABEL() {
        return (int)63L;
    }
    public static int HFIXEDSZ() {
        return (int)12L;
    }
    public static int QFIXEDSZ() {
        return (int)4L;
    }
    public static int RRFIXEDSZ() {
        return (int)10L;
    }
    public static int INT32SZ() {
        return (int)4L;
    }
    public static int INT16SZ() {
        return (int)2L;
    }
    public static int INT8SZ() {
        return (int)1L;
    }
    public static int INADDRSZ() {
        return (int)4L;
    }
    public static int IN6ADDRSZ() {
        return (int)16L;
    }
    public static int INDIR_MASK() {
        return (int)192L;
    }
    public static int NAMESERVER_PORT() {
        return (int)53L;
    }
    public static int S_ZONE() {
        return (int)0L;
    }
    public static int S_PREREQ() {
        return (int)1L;
    }
    public static int S_UPDATE() {
        return (int)2L;
    }
    public static int S_ADDT() {
        return (int)3L;
    }
    public static int QUERY() {
        return (int)0L;
    }
    public static int IQUERY() {
        return (int)1L;
    }
    public static int STATUS() {
        return (int)2L;
    }
    public static int NS_NOTIFY_OP() {
        return (int)4L;
    }
    public static int NS_UPDATE_OP() {
        return (int)5L;
    }
    public static int NOERROR() {
        return (int)0L;
    }
    public static int FORMERR() {
        return (int)1L;
    }
    public static int SERVFAIL() {
        return (int)2L;
    }
    public static int NXDOMAIN() {
        return (int)3L;
    }
    public static int NOTIMP() {
        return (int)4L;
    }
    public static int REFUSED() {
        return (int)5L;
    }
    public static int YXDOMAIN() {
        return (int)6L;
    }
    public static int YXRRSET() {
        return (int)7L;
    }
    public static int NXRRSET() {
        return (int)8L;
    }
    public static int NOTAUTH() {
        return (int)9L;
    }
    public static int NOTZONE() {
        return (int)10L;
    }
    public static int DELETE() {
        return (int)0L;
    }
    public static int ADD() {
        return (int)1L;
    }
    public static int T_A() {
        return (int)1L;
    }
    public static int T_NS() {
        return (int)2L;
    }
    public static int T_MD() {
        return (int)3L;
    }
    public static int T_MF() {
        return (int)4L;
    }
    public static int T_CNAME() {
        return (int)5L;
    }
    public static int T_SOA() {
        return (int)6L;
    }
    public static int T_MB() {
        return (int)7L;
    }
    public static int T_MG() {
        return (int)8L;
    }
    public static int T_MR() {
        return (int)9L;
    }
    public static int T_NULL() {
        return (int)10L;
    }
    public static int T_WKS() {
        return (int)11L;
    }
    public static int T_PTR() {
        return (int)12L;
    }
    public static int T_HINFO() {
        return (int)13L;
    }
    public static int T_MINFO() {
        return (int)14L;
    }
    public static int T_MX() {
        return (int)15L;
    }
    public static int T_TXT() {
        return (int)16L;
    }
    public static int T_RP() {
        return (int)17L;
    }
    public static int T_AFSDB() {
        return (int)18L;
    }
    public static int T_X25() {
        return (int)19L;
    }
    public static int T_ISDN() {
        return (int)20L;
    }
    public static int T_RT() {
        return (int)21L;
    }
    public static int T_NSAP() {
        return (int)22L;
    }
    public static int T_NSAP_PTR() {
        return (int)23L;
    }
    public static int T_SIG() {
        return (int)24L;
    }
    public static int T_KEY() {
        return (int)25L;
    }
    public static int T_PX() {
        return (int)26L;
    }
    public static int T_GPOS() {
        return (int)27L;
    }
    public static int T_AAAA() {
        return (int)28L;
    }
    public static int T_LOC() {
        return (int)29L;
    }
    public static int T_NXT() {
        return (int)30L;
    }
    public static int T_EID() {
        return (int)31L;
    }
    public static int T_NIMLOC() {
        return (int)32L;
    }
    public static int T_SRV() {
        return (int)33L;
    }
    public static int T_ATMA() {
        return (int)34L;
    }
    public static int T_NAPTR() {
        return (int)35L;
    }
    public static int T_KX() {
        return (int)36L;
    }
    public static int T_CERT() {
        return (int)37L;
    }
    public static int T_A6() {
        return (int)38L;
    }
    public static int T_DNAME() {
        return (int)39L;
    }
    public static int T_SINK() {
        return (int)40L;
    }
    public static int T_OPT() {
        return (int)41L;
    }
    public static int T_APL() {
        return (int)42L;
    }
    public static int T_DS() {
        return (int)43L;
    }
    public static int T_SSHFP() {
        return (int)44L;
    }
    public static int T_IPSECKEY() {
        return (int)45L;
    }
    public static int T_RRSIG() {
        return (int)46L;
    }
    public static int T_NSEC() {
        return (int)47L;
    }
    public static int T_DNSKEY() {
        return (int)48L;
    }
    public static int T_DHCID() {
        return (int)49L;
    }
    public static int T_NSEC3() {
        return (int)50L;
    }
    public static int T_NSEC3PARAM() {
        return (int)51L;
    }
    public static int T_TLSA() {
        return (int)52L;
    }
    public static int T_SMIMEA() {
        return (int)53L;
    }
    public static int T_HIP() {
        return (int)55L;
    }
    public static int T_NINFO() {
        return (int)56L;
    }
    public static int T_RKEY() {
        return (int)57L;
    }
    public static int T_TALINK() {
        return (int)58L;
    }
    public static int T_CDS() {
        return (int)59L;
    }
    public static int T_CDNSKEY() {
        return (int)60L;
    }
    public static int T_OPENPGPKEY() {
        return (int)61L;
    }
    public static int T_CSYNC() {
        return (int)62L;
    }
    public static int T_SPF() {
        return (int)99L;
    }
    public static int T_UINFO() {
        return (int)100L;
    }
    public static int T_UID() {
        return (int)101L;
    }
    public static int T_GID() {
        return (int)102L;
    }
    public static int T_UNSPEC() {
        return (int)103L;
    }
    public static int T_NID() {
        return (int)104L;
    }
    public static int T_L32() {
        return (int)105L;
    }
    public static int T_L64() {
        return (int)106L;
    }
    public static int T_LP() {
        return (int)107L;
    }
    public static int T_EUI48() {
        return (int)108L;
    }
    public static int T_EUI64() {
        return (int)109L;
    }
    public static int T_TKEY() {
        return (int)249L;
    }
    public static int T_TSIG() {
        return (int)250L;
    }
    public static int T_IXFR() {
        return (int)251L;
    }
    public static int T_AXFR() {
        return (int)252L;
    }
    public static int T_MAILB() {
        return (int)253L;
    }
    public static int T_MAILA() {
        return (int)254L;
    }
    public static int T_ANY() {
        return (int)255L;
    }
    public static int T_URI() {
        return (int)256L;
    }
    public static int T_CAA() {
        return (int)257L;
    }
    public static int T_AVC() {
        return (int)258L;
    }
    public static int T_TA() {
        return (int)32768L;
    }
    public static int T_DLV() {
        return (int)32769L;
    }
    public static int C_IN() {
        return (int)1L;
    }
    public static int C_CHAOS() {
        return (int)3L;
    }
    public static int C_HS() {
        return (int)4L;
    }
    public static int C_NONE() {
        return (int)254L;
    }
    public static int C_ANY() {
        return (int)255L;
    }
    public static MemorySegment _PATH_RESCONF() {
        return constants$2912._PATH_RESCONF$SEGMENT;
    }
    public static int RES_AAONLY() {
        return (int)4L;
    }
    public static int RES_PRIMARY() {
        return (int)16L;
    }
    public static int RES_NOCHECKNAME() {
        return (int)32768L;
    }
    public static int RES_KEEPTSIG() {
        return (int)65536L;
    }
    public static int RES_BLAST() {
        return (int)131072L;
    }
    public static int RES_DEFAULT() {
        return (int)704L;
    }
    public static int IFNAMSIZ() {
        return (int)16L;
    }
    public static long UTIME_NOW() {
        return 1073741823L;
    }
    public static long UTIME_OMIT() {
        return 1073741822L;
    }
    public static int S_IFMT() {
        return (int)61440L;
    }
    public static int S_IFDIR() {
        return (int)16384L;
    }
    public static int S_IFCHR() {
        return (int)8192L;
    }
    public static int S_IFBLK() {
        return (int)24576L;
    }
    public static int S_IFREG() {
        return (int)32768L;
    }
    public static int S_IFIFO() {
        return (int)4096L;
    }
    public static int S_IFLNK() {
        return (int)40960L;
    }
    public static int S_IFSOCK() {
        return (int)49152L;
    }
    public static int S_ISUID() {
        return (int)2048L;
    }
    public static int S_ISGID() {
        return (int)1024L;
    }
    public static int S_ISVTX() {
        return (int)512L;
    }
    public static int S_IRUSR() {
        return (int)256L;
    }
    public static int S_IWUSR() {
        return (int)128L;
    }
    public static int S_IXUSR() {
        return (int)64L;
    }
    public static int S_IRWXU() {
        return (int)448L;
    }
    public static int S_IREAD() {
        return (int)256L;
    }
    public static int S_IWRITE() {
        return (int)128L;
    }
    public static int S_IEXEC() {
        return (int)64L;
    }
    public static int S_IRGRP() {
        return (int)32L;
    }
    public static int S_IWGRP() {
        return (int)16L;
    }
    public static int S_IXGRP() {
        return (int)8L;
    }
    public static int S_IRWXG() {
        return (int)56L;
    }
    public static int S_IROTH() {
        return (int)4L;
    }
    public static int S_IWOTH() {
        return (int)2L;
    }
    public static int S_IXOTH() {
        return (int)1L;
    }
    public static int S_IRWXO() {
        return (int)7L;
    }
    public static int ACCESSPERMS() {
        return (int)511L;
    }
    public static int ALLPERMS() {
        return (int)4095L;
    }
    public static int DEFFILEMODE() {
        return (int)438L;
    }
    public static int WCOREFLAG() {
        return (int)128L;
    }
    public static int WAIT_ANY() {
        return (int)-1L;
    }
    public static int O_NDELAY() {
        return (int)2048L;
    }
    public static int O_FSYNC() {
        return (int)1052672L;
    }
    public static int __O_TMPFILE() {
        return (int)4259840L;
    }
    public static int O_DIRECTORY() {
        return (int)65536L;
    }
    public static int O_NOFOLLOW() {
        return (int)131072L;
    }
    public static int O_CLOEXEC() {
        return (int)524288L;
    }
    public static int O_DSYNC() {
        return (int)4096L;
    }
    public static int O_RSYNC() {
        return (int)1052672L;
    }
    public static int F_SETOWN() {
        return (int)8L;
    }
    public static int F_GETOWN() {
        return (int)9L;
    }
    public static int FAPPEND() {
        return (int)1024L;
    }
    public static int FFSYNC() {
        return (int)1052672L;
    }
    public static int FASYNC() {
        return (int)8192L;
    }
    public static int FNONBLOCK() {
        return (int)2048L;
    }
    public static int FNDELAY() {
        return (int)2048L;
    }
    public static int POSIX_FADV_DONTNEED() {
        return (int)4L;
    }
    public static int POSIX_FADV_NOREUSE() {
        return (int)5L;
    }
    public static int AT_FDCWD() {
        return (int)-100L;
    }
    public static int GDK_MAJOR_VERSION() {
        return (int)4L;
    }
    public static int GDK_MINOR_VERSION() {
        return (int)6L;
    }
    public static int GDK_MICRO_VERSION() {
        return (int)7L;
    }
    public static int GDK_VERSION_4_0() {
        return (int)262144L;
    }
    public static int GDK_VERSION_4_2() {
        return (int)262656L;
    }
    public static int GDK_VERSION_4_4() {
        return (int)263168L;
    }
    public static int GDK_VERSION_4_6() {
        return (int)263680L;
    }
    public static int GDK_VERSION_CUR_STABLE() {
        return (int)263680L;
    }
    public static int GDK_VERSION_PREV_STABLE() {
        return (int)263168L;
    }
    public static int GDK_VERSION_MIN_REQUIRED() {
        return (int)263680L;
    }
    public static int GDK_VERSION_MAX_ALLOWED() {
        return (int)263680L;
    }
    public static int CAIRO_FONT_TYPE_ATSUI() {
        return (int)3L;
    }
    public static int CAIRO_VERSION() {
        return (int)11706L;
    }
    public static MemorySegment CAIRO_VERSION_STRING() {
        return constants$2912.CAIRO_VERSION_STRING$SEGMENT;
    }
    public static MemorySegment CAIRO_TAG_DEST() {
        return constants$2912.CAIRO_TAG_DEST$SEGMENT;
    }
    public static MemorySegment CAIRO_TAG_LINK() {
        return constants$2912.CAIRO_TAG_LINK$SEGMENT;
    }
    public static MemorySegment CAIRO_MIME_TYPE_JPEG() {
        return constants$2912.CAIRO_MIME_TYPE_JPEG$SEGMENT;
    }
    public static MemorySegment CAIRO_MIME_TYPE_PNG() {
        return constants$2913.CAIRO_MIME_TYPE_PNG$SEGMENT;
    }
    public static MemorySegment CAIRO_MIME_TYPE_JP2() {
        return constants$2913.CAIRO_MIME_TYPE_JP2$SEGMENT;
    }
    public static MemorySegment CAIRO_MIME_TYPE_URI() {
        return constants$2913.CAIRO_MIME_TYPE_URI$SEGMENT;
    }
    public static MemorySegment CAIRO_MIME_TYPE_UNIQUE_ID() {
        return constants$2913.CAIRO_MIME_TYPE_UNIQUE_ID$SEGMENT;
    }
    public static MemorySegment CAIRO_MIME_TYPE_JBIG2() {
        return constants$2913.CAIRO_MIME_TYPE_JBIG2$SEGMENT;
    }
    public static MemorySegment CAIRO_MIME_TYPE_JBIG2_GLOBAL() {
        return constants$2913.CAIRO_MIME_TYPE_JBIG2_GLOBAL$SEGMENT;
    }
    public static MemorySegment CAIRO_MIME_TYPE_JBIG2_GLOBAL_ID() {
        return constants$2914.CAIRO_MIME_TYPE_JBIG2_GLOBAL_ID$SEGMENT;
    }
    public static MemorySegment CAIRO_MIME_TYPE_CCITT_FAX() {
        return constants$2914.CAIRO_MIME_TYPE_CCITT_FAX$SEGMENT;
    }
    public static MemorySegment CAIRO_MIME_TYPE_CCITT_FAX_PARAMS() {
        return constants$2914.CAIRO_MIME_TYPE_CCITT_FAX_PARAMS$SEGMENT;
    }
    public static MemorySegment CAIRO_MIME_TYPE_EPS() {
        return constants$2914.CAIRO_MIME_TYPE_EPS$SEGMENT;
    }
    public static MemorySegment CAIRO_MIME_TYPE_EPS_PARAMS() {
        return constants$2914.CAIRO_MIME_TYPE_EPS_PARAMS$SEGMENT;
    }
    public static MemorySegment PANGO_VERSION_STRING() {
        return constants$2914.PANGO_VERSION_STRING$SEGMENT;
    }
    public static int PANGO_VERSION_1_2() {
        return (int)66048L;
    }
    public static int PANGO_VERSION_1_4() {
        return (int)66560L;
    }
    public static int PANGO_VERSION_1_6() {
        return (int)67072L;
    }
    public static int PANGO_VERSION_1_8() {
        return (int)67584L;
    }
    public static int PANGO_VERSION_1_10() {
        return (int)68096L;
    }
    public static int PANGO_VERSION_1_12() {
        return (int)68608L;
    }
    public static int PANGO_VERSION_1_14() {
        return (int)69120L;
    }
    public static int PANGO_VERSION_1_16() {
        return (int)69632L;
    }
    public static int PANGO_VERSION_1_18() {
        return (int)70144L;
    }
    public static int PANGO_VERSION_1_20() {
        return (int)70656L;
    }
    public static int PANGO_VERSION_1_22() {
        return (int)71168L;
    }
    public static int PANGO_VERSION_1_24() {
        return (int)71680L;
    }
    public static int PANGO_VERSION_1_26() {
        return (int)72192L;
    }
    public static int PANGO_VERSION_1_28() {
        return (int)72704L;
    }
    public static int PANGO_VERSION_1_30() {
        return (int)73216L;
    }
    public static int PANGO_VERSION_1_32() {
        return (int)73728L;
    }
    public static int PANGO_VERSION_1_34() {
        return (int)74240L;
    }
    public static int PANGO_VERSION_1_36() {
        return (int)74752L;
    }
    public static int PANGO_VERSION_1_38() {
        return (int)75264L;
    }
    public static int PANGO_VERSION_1_40() {
        return (int)75776L;
    }
    public static int PANGO_VERSION_1_42() {
        return (int)76288L;
    }
    public static int PANGO_VERSION_1_44() {
        return (int)76800L;
    }
    public static int PANGO_VERSION_1_46() {
        return (int)77312L;
    }
    public static int PANGO_VERSION_1_48() {
        return (int)77824L;
    }
    public static int PANGO_VERSION_1_50() {
        return (int)78336L;
    }
    public static int PANGO_VERSION_1_52() {
        return (int)78848L;
    }
    public static int PANGO_VERSION_CUR_STABLE() {
        return (int)78336L;
    }
    public static int PANGO_VERSION_PREV_STABLE() {
        return (int)77824L;
    }
    public static int PANGO_VERSION_MIN_REQUIRED() {
        return (int)78336L;
    }
    public static int PANGO_VERSION_MAX_ALLOWED() {
        return (int)78336L;
    }
    public static int HB_TAG_NONE() {
        return (int)0L;
    }
    public static int HB_TAG_MAX() {
        return (int)4294967295L;
    }
    public static int HB_TAG_MAX_SIGNED() {
        return (int)2147483647L;
    }
    public static MemoryAddress HB_LANGUAGE_INVALID() {
        return constants$2915.HB_LANGUAGE_INVALID$ADDR;
    }
    public static int HB_FEATURE_GLOBAL_END() {
        return (int)4294967295L;
    }
    public static int HB_UNICODE_MAX() {
        return (int)1114111L;
    }
    public static int HB_SET_VALUE_INVALID() {
        return (int)4294967295L;
    }
    public static int HB_BUFFER_REPLACEMENT_CODEPOINT_DEFAULT() {
        return (int)65533L;
    }
    public static int HB_SCRIPT_CANADIAN_ABORIGINAL() {
        return (int)1130458739L;
    }
    public static int HB_BUFFER_FLAGS_DEFAULT() {
        return (int)0L;
    }
    public static int HB_BUFFER_SERIALIZE_FLAGS_DEFAULT() {
        return (int)0L;
    }
    public static int HB_UNICODE_MAX_DECOMPOSITION_LEN() {
        return (int)19L;
    }
    public static int HB_MAP_VALUE_INVALID() {
        return (int)4294967295L;
    }
    public static MemorySegment HB_VERSION_STRING() {
        return constants$2915.HB_VERSION_STRING$SEGMENT;
    }
    public static double PANGO_SCALE_XX_SMALL() {
        return 0.5787037037037d;
    }
    public static double PANGO_SCALE_X_SMALL() {
        return 0.6944444444444d;
    }
    public static double PANGO_SCALE_SMALL() {
        return 0.8333333333333d;
    }
    public static double PANGO_SCALE_MEDIUM() {
        return 1.0d;
    }
    public static double PANGO_SCALE_LARGE() {
        return 1.2d;
    }
    public static double PANGO_SCALE_X_LARGE() {
        return 1.44d;
    }
    public static double PANGO_SCALE_XX_LARGE() {
        return 1.728d;
    }
    public static int PANGO_GLYPH_EMPTY() {
        return (int)268435455L;
    }
    public static int PANGO_GLYPH_INVALID_INPUT() {
        return (int)4294967295L;
    }
    public static int PANGO_GLYPH_UNKNOWN_FLAG() {
        return (int)268435456L;
    }
    public static int PANGO_ATTR_INDEX_FROM_TEXT_BEGINNING() {
        return (int)0L;
    }
    public static int PANGO_ATTR_INDEX_TO_TEXT_END() {
        return (int)4294967295L;
    }
    public static int PANGO_ANALYSIS_FLAG_CENTERED_BASELINE() {
        return (int)1L;
    }
    public static int PANGO_ANALYSIS_FLAG_IS_ELLIPSIS() {
        return (int)2L;
    }
    public static int PANGO_ANALYSIS_FLAG_NEED_HYPHEN() {
        return (int)4L;
    }
    public static MemorySegment PANGO_RENDER_TYPE_NONE() {
        return constants$2915.PANGO_RENDER_TYPE_NONE$SEGMENT;
    }
    public static MemorySegment PANGO_ENGINE_TYPE_LANG() {
        return constants$2915.PANGO_ENGINE_TYPE_LANG$SEGMENT;
    }
    public static MemorySegment PANGO_ENGINE_TYPE_SHAPE() {
        return constants$2915.PANGO_ENGINE_TYPE_SHAPE$SEGMENT;
    }
    public static int PANGO_VERSION() {
        return (int)15009L;
    }
    public static long GDK_CURRENT_TIME() {
        return 0L;
    }
    public static int GDK_PIXBUF_MAJOR() {
        return (int)2L;
    }
    public static int GDK_PIXBUF_MINOR() {
        return (int)42L;
    }
    public static int GDK_PIXBUF_MICRO() {
        return (int)9L;
    }
    public static MemorySegment GDK_PIXBUF_VERSION() {
        return constants$2915.GDK_PIXBUF_VERSION$SEGMENT;
    }
    public static int GDK_PIXBUF_VERSION_2_0() {
        return (int)131072L;
    }
    public static int GDK_PIXBUF_VERSION_2_2() {
        return (int)131584L;
    }
    public static int GDK_PIXBUF_VERSION_2_4() {
        return (int)132096L;
    }
    public static int GDK_PIXBUF_VERSION_2_6() {
        return (int)132608L;
    }
    public static int GDK_PIXBUF_VERSION_2_8() {
        return (int)133120L;
    }
    public static int GDK_PIXBUF_VERSION_2_10() {
        return (int)133632L;
    }
    public static int GDK_PIXBUF_VERSION_2_12() {
        return (int)134144L;
    }
    public static int GDK_PIXBUF_VERSION_2_14() {
        return (int)134656L;
    }
    public static int GDK_PIXBUF_VERSION_2_16() {
        return (int)135168L;
    }
    public static int GDK_PIXBUF_VERSION_2_18() {
        return (int)135680L;
    }
    public static int GDK_PIXBUF_VERSION_2_20() {
        return (int)136192L;
    }
    public static int GDK_PIXBUF_VERSION_2_22() {
        return (int)136704L;
    }
    public static int GDK_PIXBUF_VERSION_2_24() {
        return (int)137216L;
    }
    public static int GDK_PIXBUF_VERSION_2_26() {
        return (int)137728L;
    }
    public static int GDK_PIXBUF_VERSION_2_28() {
        return (int)138240L;
    }
    public static int GDK_PIXBUF_VERSION_2_30() {
        return (int)138752L;
    }
    public static int GDK_PIXBUF_VERSION_2_32() {
        return (int)139264L;
    }
    public static int GDK_PIXBUF_VERSION_2_34() {
        return (int)139776L;
    }
    public static int GDK_PIXBUF_VERSION_2_36() {
        return (int)140288L;
    }
    public static int GDK_PIXBUF_VERSION_2_38() {
        return (int)140800L;
    }
    public static int GDK_PIXBUF_VERSION_2_40() {
        return (int)141312L;
    }
    public static int GDK_PIXBUF_VERSION_CUR_STABLE() {
        return (int)141824L;
    }
    public static int GDK_PIXBUF_VERSION_PREV_STABLE() {
        return (int)141312L;
    }
    public static int GDK_PIXBUF_VERSION_MIN_REQUIRED() {
        return (int)141824L;
    }
    public static int GDK_PIXBUF_VERSION_MAX_ALLOWED() {
        return (int)141824L;
    }
    public static int GDK_MODIFIER_MASK() {
        return (int)469769999L;
    }
    public static int GDK_ACTION_ALL() {
        return (int)7L;
    }
    public static int GDK_PRIORITY_EVENTS() {
        return (int)0L;
    }
    public static int GDK_PRIORITY_REDRAW() {
        return (int)120L;
    }
    public static int GDK_EVENT_PROPAGATE() {
        return (int)0L;
    }
    public static int GDK_EVENT_STOP() {
        return (int)1L;
    }
    public static int GDK_BUTTON_PRIMARY() {
        return (int)1L;
    }
    public static int GDK_BUTTON_MIDDLE() {
        return (int)2L;
    }
    public static int GDK_BUTTON_SECONDARY() {
        return (int)3L;
    }
    public static int GDK_MEMORY_DEFAULT() {
        return (int)0L;
    }
    public static MemorySegment GRAPHENE_SIMD_S() {
        return constants$2916.GRAPHENE_SIMD_S$SEGMENT;
    }
    public static int _MM_EXCEPT_INVALID() {
        return (int)1L;
    }
    public static int _MM_EXCEPT_DENORM() {
        return (int)2L;
    }
    public static int _MM_EXCEPT_DIV_ZERO() {
        return (int)4L;
    }
    public static int _MM_EXCEPT_OVERFLOW() {
        return (int)8L;
    }
    public static int _MM_EXCEPT_UNDERFLOW() {
        return (int)16L;
    }
    public static int _MM_EXCEPT_INEXACT() {
        return (int)32L;
    }
    public static int _MM_EXCEPT_MASK() {
        return (int)63L;
    }
    public static int _MM_MASK_INVALID() {
        return (int)128L;
    }
    public static int _MM_MASK_DENORM() {
        return (int)256L;
    }
    public static int _MM_MASK_DIV_ZERO() {
        return (int)512L;
    }
    public static int _MM_MASK_OVERFLOW() {
        return (int)1024L;
    }
    public static int _MM_MASK_UNDERFLOW() {
        return (int)2048L;
    }
    public static int _MM_MASK_INEXACT() {
        return (int)4096L;
    }
    public static int _MM_MASK_MASK() {
        return (int)8064L;
    }
    public static int _MM_ROUND_NEAREST() {
        return (int)0L;
    }
    public static int _MM_ROUND_DOWN() {
        return (int)8192L;
    }
    public static int _MM_ROUND_UP() {
        return (int)16384L;
    }
    public static int _MM_ROUND_TOWARD_ZERO() {
        return (int)24576L;
    }
    public static int _MM_ROUND_MASK() {
        return (int)24576L;
    }
    public static int _MM_FLUSH_ZERO_MASK() {
        return (int)32768L;
    }
    public static int _MM_FLUSH_ZERO_ON() {
        return (int)32768L;
    }
    public static int _MM_FLUSH_ZERO_OFF() {
        return (int)0L;
    }
    public static int _MM_DENORMALS_ZERO_ON() {
        return (int)64L;
    }
    public static int _MM_DENORMALS_ZERO_OFF() {
        return (int)0L;
    }
    public static int _MM_DENORMALS_ZERO_MASK() {
        return (int)64L;
    }
    public static float GRAPHENE_PI() {
        return 3.1415927410125732f;
    }
    public static float GRAPHENE_PI_2() {
        return 1.5707963705062866f;
    }
    public static int GRAPHENE_MAJOR_VERSION() {
        return (int)1L;
    }
    public static int GRAPHENE_MINOR_VERSION() {
        return (int)10L;
    }
    public static int GRAPHENE_MICRO_VERSION() {
        return (int)6L;
    }
    public static int GRAPHENE_VERSION() {
        return (int)17434112L;
    }
    public static int GRAPHENE_VERSION_CUR_STABLE() {
        return (int)68096L;
    }
    public static int GRAPHENE_VERSION_PREV_STABLE() {
        return (int)67584L;
    }
    public static int GRAPHENE_VERSION_1_0() {
        return (int)65536L;
    }
    public static int GRAPHENE_VERSION_1_2() {
        return (int)66048L;
    }
    public static int GRAPHENE_VERSION_1_4() {
        return (int)66560L;
    }
    public static int GRAPHENE_VERSION_1_6() {
        return (int)67072L;
    }
    public static int GRAPHENE_VERSION_1_8() {
        return (int)67584L;
    }
    public static int GRAPHENE_VERSION_1_10() {
        return (int)68096L;
    }
    public static int GRAPHENE_VERSION_MIN_REQUIRED() {
        return (int)65536L;
    }
    public static int GRAPHENE_VERSION_MAX_ALLOWED() {
        return (int)68096L;
    }
    public static double HUGE_VAL() {
        return Double.valueOf("Infinity");
    }
    public static float HUGE_VALF() {
        return Float.valueOf("Infinity");
    }
    public static float INFINITY() {
        return Float.valueOf("Infinity");
    }
    public static float NAN() {
        return Float.valueOf("NaN");
    }
    public static int __GLIBC_FLT_EVAL_METHOD() {
        return (int)0L;
    }
    public static int FP_ILOGB0() {
        return (int)-2147483648L;
    }
    public static int FP_ILOGBNAN() {
        return (int)-2147483648L;
    }
    public static int math_errhandling() {
        return (int)3L;
    }
    public static double M_E() {
        return 2.718281828459045d;
    }
    public static double M_LOG2E() {
        return 1.4426950408889634d;
    }
    public static double M_LOG10E() {
        return 0.4342944819032518d;
    }
    public static double M_LN2() {
        return 0.6931471805599453d;
    }
    public static double M_LN10() {
        return 2.302585092994046d;
    }
    public static double M_PI() {
        return 3.141592653589793d;
    }
    public static double M_PI_2() {
        return 1.5707963267948966d;
    }
    public static double M_PI_4() {
        return 0.7853981633974483d;
    }
    public static double M_1_PI() {
        return 0.3183098861837907d;
    }
    public static double M_2_PI() {
        return 0.6366197723675814d;
    }
    public static double M_2_SQRTPI() {
        return 1.1283791670955126d;
    }
    public static double M_SQRT2() {
        return 1.4142135623730951d;
    }
    public static double M_SQRT1_2() {
        return 0.7071067811865476d;
    }
    public static int GTK_UNIT_PIXEL() {
        return (int)0L;
    }
    public static int GTK_ACCESSIBLE_VALUE_UNDEFINED() {
        return (int)-1L;
    }
    public static int GTK_INVALID_LIST_POSITION() {
        return (int)4294967295L;
    }
    public static int GTK_TREE_SORTABLE_DEFAULT_SORT_COLUMN_ID() {
        return (int)-1L;
    }
    public static int GTK_TREE_SORTABLE_UNSORTED_SORT_COLUMN_ID() {
        return (int)-2L;
    }
    public static int GTK_ENTRY_BUFFER_MAX_SIZE() {
        return (int)65535L;
    }
    public static MemorySegment GTK_LEVEL_BAR_OFFSET_LOW() {
        return constants$2916.GTK_LEVEL_BAR_OFFSET_LOW$SEGMENT;
    }
    public static MemorySegment GTK_LEVEL_BAR_OFFSET_HIGH() {
        return constants$2916.GTK_LEVEL_BAR_OFFSET_HIGH$SEGMENT;
    }
    public static MemorySegment GTK_LEVEL_BAR_OFFSET_FULL() {
        return constants$2916.GTK_LEVEL_BAR_OFFSET_FULL$SEGMENT;
    }
    public static int GTK_PRIORITY_RESIZE() {
        return (int)110L;
    }
    public static MemorySegment GTK_MEDIA_FILE_EXTENSION_POINT_NAME() {
        return constants$2916.GTK_MEDIA_FILE_EXTENSION_POINT_NAME$SEGMENT;
    }
    public static MemorySegment GTK_PAPER_NAME_A3() {
        return constants$2916.GTK_PAPER_NAME_A3$SEGMENT;
    }
    public static MemorySegment GTK_PAPER_NAME_A4() {
        return constants$2917.GTK_PAPER_NAME_A4$SEGMENT;
    }
    public static MemorySegment GTK_PAPER_NAME_A5() {
        return constants$2917.GTK_PAPER_NAME_A5$SEGMENT;
    }
    public static MemorySegment GTK_PAPER_NAME_B5() {
        return constants$2917.GTK_PAPER_NAME_B5$SEGMENT;
    }
    public static MemorySegment GTK_PAPER_NAME_LETTER() {
        return constants$2917.GTK_PAPER_NAME_LETTER$SEGMENT;
    }
    public static MemorySegment GTK_PAPER_NAME_EXECUTIVE() {
        return constants$2917.GTK_PAPER_NAME_EXECUTIVE$SEGMENT;
    }
    public static MemorySegment GTK_PAPER_NAME_LEGAL() {
        return constants$2917.GTK_PAPER_NAME_LEGAL$SEGMENT;
    }
    public static MemorySegment GTK_PRINT_SETTINGS_PRINTER() {
        return constants$2918.GTK_PRINT_SETTINGS_PRINTER$SEGMENT;
    }
    public static MemorySegment GTK_PRINT_SETTINGS_ORIENTATION() {
        return constants$2918.GTK_PRINT_SETTINGS_ORIENTATION$SEGMENT;
    }
    public static MemorySegment GTK_PRINT_SETTINGS_PAPER_FORMAT() {
        return constants$2918.GTK_PRINT_SETTINGS_PAPER_FORMAT$SEGMENT;
    }
    public static MemorySegment GTK_PRINT_SETTINGS_PAPER_WIDTH() {
        return constants$2918.GTK_PRINT_SETTINGS_PAPER_WIDTH$SEGMENT;
    }
    public static MemorySegment GTK_PRINT_SETTINGS_PAPER_HEIGHT() {
        return constants$2918.GTK_PRINT_SETTINGS_PAPER_HEIGHT$SEGMENT;
    }
    public static MemorySegment GTK_PRINT_SETTINGS_N_COPIES() {
        return constants$2918.GTK_PRINT_SETTINGS_N_COPIES$SEGMENT;
    }
    public static MemorySegment GTK_PRINT_SETTINGS_DEFAULT_SOURCE() {
        return constants$2919.GTK_PRINT_SETTINGS_DEFAULT_SOURCE$SEGMENT;
    }
    public static MemorySegment GTK_PRINT_SETTINGS_QUALITY() {
        return constants$2919.GTK_PRINT_SETTINGS_QUALITY$SEGMENT;
    }
    public static MemorySegment GTK_PRINT_SETTINGS_RESOLUTION() {
        return constants$2919.GTK_PRINT_SETTINGS_RESOLUTION$SEGMENT;
    }
    public static MemorySegment GTK_PRINT_SETTINGS_USE_COLOR() {
        return constants$2919.GTK_PRINT_SETTINGS_USE_COLOR$SEGMENT;
    }
    public static MemorySegment GTK_PRINT_SETTINGS_DUPLEX() {
        return constants$2919.GTK_PRINT_SETTINGS_DUPLEX$SEGMENT;
    }
    public static MemorySegment GTK_PRINT_SETTINGS_COLLATE() {
        return constants$2919.GTK_PRINT_SETTINGS_COLLATE$SEGMENT;
    }
    public static MemorySegment GTK_PRINT_SETTINGS_REVERSE() {
        return constants$2920.GTK_PRINT_SETTINGS_REVERSE$SEGMENT;
    }
    public static MemorySegment GTK_PRINT_SETTINGS_MEDIA_TYPE() {
        return constants$2920.GTK_PRINT_SETTINGS_MEDIA_TYPE$SEGMENT;
    }
    public static MemorySegment GTK_PRINT_SETTINGS_DITHER() {
        return constants$2920.GTK_PRINT_SETTINGS_DITHER$SEGMENT;
    }
    public static MemorySegment GTK_PRINT_SETTINGS_SCALE() {
        return constants$2920.GTK_PRINT_SETTINGS_SCALE$SEGMENT;
    }
    public static MemorySegment GTK_PRINT_SETTINGS_PRINT_PAGES() {
        return constants$2920.GTK_PRINT_SETTINGS_PRINT_PAGES$SEGMENT;
    }
    public static MemorySegment GTK_PRINT_SETTINGS_PAGE_RANGES() {
        return constants$2920.GTK_PRINT_SETTINGS_PAGE_RANGES$SEGMENT;
    }
    public static MemorySegment GTK_PRINT_SETTINGS_PAGE_SET() {
        return constants$2921.GTK_PRINT_SETTINGS_PAGE_SET$SEGMENT;
    }
    public static MemorySegment GTK_PRINT_SETTINGS_FINISHINGS() {
        return constants$2921.GTK_PRINT_SETTINGS_FINISHINGS$SEGMENT;
    }
    public static MemorySegment GTK_PRINT_SETTINGS_NUMBER_UP() {
        return constants$2921.GTK_PRINT_SETTINGS_NUMBER_UP$SEGMENT;
    }
    public static MemorySegment GTK_PRINT_SETTINGS_NUMBER_UP_LAYOUT() {
        return constants$2921.GTK_PRINT_SETTINGS_NUMBER_UP_LAYOUT$SEGMENT;
    }
    public static MemorySegment GTK_PRINT_SETTINGS_OUTPUT_BIN() {
        return constants$2921.GTK_PRINT_SETTINGS_OUTPUT_BIN$SEGMENT;
    }
    public static MemorySegment GTK_PRINT_SETTINGS_RESOLUTION_X() {
        return constants$2921.GTK_PRINT_SETTINGS_RESOLUTION_X$SEGMENT;
    }
    public static MemorySegment GTK_PRINT_SETTINGS_RESOLUTION_Y() {
        return constants$2922.GTK_PRINT_SETTINGS_RESOLUTION_Y$SEGMENT;
    }
    public static MemorySegment GTK_PRINT_SETTINGS_PRINTER_LPI() {
        return constants$2922.GTK_PRINT_SETTINGS_PRINTER_LPI$SEGMENT;
    }
    public static MemorySegment GTK_PRINT_SETTINGS_OUTPUT_DIR() {
        return constants$2922.GTK_PRINT_SETTINGS_OUTPUT_DIR$SEGMENT;
    }
    public static MemorySegment GTK_PRINT_SETTINGS_OUTPUT_BASENAME() {
        return constants$2922.GTK_PRINT_SETTINGS_OUTPUT_BASENAME$SEGMENT;
    }
    public static MemorySegment GTK_PRINT_SETTINGS_OUTPUT_FILE_FORMAT() {
        return constants$2922.GTK_PRINT_SETTINGS_OUTPUT_FILE_FORMAT$SEGMENT;
    }
    public static MemorySegment GTK_PRINT_SETTINGS_OUTPUT_URI() {
        return constants$2922.GTK_PRINT_SETTINGS_OUTPUT_URI$SEGMENT;
    }
    public static MemorySegment GTK_PRINT_SETTINGS_WIN32_DRIVER_VERSION() {
        return constants$2923.GTK_PRINT_SETTINGS_WIN32_DRIVER_VERSION$SEGMENT;
    }
    public static MemorySegment GTK_PRINT_SETTINGS_WIN32_DRIVER_EXTRA() {
        return constants$2923.GTK_PRINT_SETTINGS_WIN32_DRIVER_EXTRA$SEGMENT;
    }
    public static int GTK_INPUT_ERROR() {
        return (int)-1L;
    }
    public static int GTK_TEXT_VIEW_PRIORITY_VALIDATE() {
        return (int)125L;
    }
    public static int GTK_MAJOR_VERSION() {
        return (int)4L;
    }
    public static int GTK_MINOR_VERSION() {
        return (int)6L;
    }
    public static int GTK_MICRO_VERSION() {
        return (int)7L;
    }
    public static int GTK_BINARY_AGE() {
        return (int)607L;
    }
    public static int GTK_INTERFACE_AGE() {
        return (int)7L;
    }
    public static int HB_MATH_GLYPH_PART_FLAG_EXTENDER() {
        return (int)1L;
    }
    public static int HB_OT_MATH_SCRIPT() {
        return (int)1835103336L;
    }
    public static int HB_OT_VAR_NO_AXIS_INDEX() {
        return (int)4294967295L;
    }
    public static int HB_OT_TAG_BASE() {
        return (int)1111577413L;
    }
    public static int HB_OT_TAG_GDEF() {
        return (int)1195656518L;
    }
    public static int HB_OT_TAG_GSUB() {
        return (int)1196643650L;
    }
    public static int HB_OT_TAG_GPOS() {
        return (int)1196445523L;
    }
    public static int HB_OT_TAG_JSTF() {
        return (int)1246975046L;
    }
    public static int HB_OT_TAG_DEFAULT_SCRIPT() {
        return (int)1145457748L;
    }
    public static int HB_OT_TAG_DEFAULT_LANGUAGE() {
        return (int)1684434036L;
    }
    public static int HB_OT_MAX_TAGS_PER_SCRIPT() {
        return (int)3L;
    }
    public static int HB_OT_MAX_TAGS_PER_LANGUAGE() {
        return (int)3L;
    }
    public static int HB_OT_LAYOUT_NO_SCRIPT_INDEX() {
        return (int)65535L;
    }
    public static int HB_OT_LAYOUT_NO_FEATURE_INDEX() {
        return (int)65535L;
    }
    public static int HB_OT_LAYOUT_DEFAULT_LANGUAGE_INDEX() {
        return (int)65535L;
    }
    public static int HB_OT_LAYOUT_NO_VARIATIONS_INDEX() {
        return (int)4294967295L;
    }
    public static int HB_OT_TAG_MATH() {
        return (int)1296127048L;
    }
    public static int HB_OT_TAG_MATH_SCRIPT() {
        return (int)1835103336L;
    }
    public static int HB_OT_TAG_VAR_AXIS_ITALIC() {
        return (int)1769234796L;
    }
    public static int HB_OT_TAG_VAR_AXIS_OPTICAL_SIZE() {
        return (int)1869640570L;
    }
    public static int HB_OT_TAG_VAR_AXIS_SLANT() {
        return (int)1936486004L;
    }
    public static int HB_OT_TAG_VAR_AXIS_WIDTH() {
        return (int)2003072104L;
    }
    public static int HB_OT_TAG_VAR_AXIS_WEIGHT() {
        return (int)2003265652L;
    }
    public static int HB_AAT_LAYOUT_NO_SELECTOR_INDEX() {
        return (int)65535L;
    }
    public static long FT_RENDER_POOL_SIZE() {
        return 16384L;
    }
    public static long TT_CONFIG_OPTION_MAX_RUNNABLE_OPCODES() {
        return 1000000L;
    }
    public static int FT_CHAR_BIT() {
        return (int)8L;
    }
    public static int FT_USHORT_MAX() {
        return (int)65535L;
    }
    public static int FT_INT_MAX() {
        return (int)2147483647L;
    }
    public static int FT_INT_MIN() {
        return (int)-2147483648L;
    }
    public static int FT_UINT_MAX() {
        return (int)4294967295L;
    }
    public static long FT_LONG_MIN() {
        return -9223372036854775808L;
    }
    public static long FT_LONG_MAX() {
        return 9223372036854775807L;
    }
    public static long FT_ULONG_MAX() {
        return -1L;
    }
    public static long FT_LLONG_MAX() {
        return 9223372036854775807L;
    }
    public static long FT_LLONG_MIN() {
        return -9223372036854775808L;
    }
    public static long FT_ULLONG_MAX() {
        return -1L;
    }
    public static int FT_SIZEOF_INT() {
        return (int)4L;
    }
    public static int FT_SIZEOF_LONG() {
        return (int)8L;
    }
    public static int FT_SIZEOF_LONG_LONG() {
        return (int)8L;
    }
    public static int ft_pixel_mode_none() {
        return (int)0L;
    }
    public static int ft_pixel_mode_mono() {
        return (int)1L;
    }
    public static int ft_pixel_mode_grays() {
        return (int)2L;
    }
    public static int ft_pixel_mode_pal2() {
        return (int)3L;
    }
    public static int ft_pixel_mode_pal4() {
        return (int)4L;
    }
    public static int FT_OUTLINE_CONTOURS_MAX() {
        return (int)32767L;
    }
    public static int FT_OUTLINE_POINTS_MAX() {
        return (int)32767L;
    }
    public static int ft_outline_none() {
        return (int)0L;
    }
    public static int ft_outline_owner() {
        return (int)1L;
    }
    public static int ft_outline_even_odd_fill() {
        return (int)2L;
    }
    public static int ft_outline_reverse_fill() {
        return (int)4L;
    }
    public static int ft_outline_ignore_dropouts() {
        return (int)8L;
    }
    public static int ft_outline_high_precision() {
        return (int)256L;
    }
    public static int ft_outline_single_pass() {
        return (int)512L;
    }
    public static int FT_CURVE_TAG_TOUCH_BOTH() {
        return (int)24L;
    }
    public static int FT_Curve_Tag_On() {
        return (int)1L;
    }
    public static int FT_Curve_Tag_Conic() {
        return (int)0L;
    }
    public static int FT_Curve_Tag_Cubic() {
        return (int)2L;
    }
    public static int FT_Curve_Tag_Touch_X() {
        return (int)8L;
    }
    public static int FT_Curve_Tag_Touch_Y() {
        return (int)16L;
    }
    public static int ft_glyph_format_none() {
        return (int)0L;
    }
    public static int ft_glyph_format_composite() {
        return (int)1668246896L;
    }
    public static int ft_glyph_format_bitmap() {
        return (int)1651078259L;
    }
    public static int ft_glyph_format_outline() {
        return (int)1869968492L;
    }
    public static int ft_glyph_format_plotter() {
        return (int)1886154612L;
    }
    public static int ft_raster_flag_default() {
        return (int)0L;
    }
    public static int ft_raster_flag_aa() {
        return (int)1L;
    }
    public static int ft_raster_flag_direct() {
        return (int)2L;
    }
    public static int ft_raster_flag_clip() {
        return (int)4L;
    }
    public static int ft_encoding_none() {
        return (int)0L;
    }
    public static int ft_encoding_unicode() {
        return (int)1970170211L;
    }
    public static int ft_encoding_symbol() {
        return (int)1937337698L;
    }
    public static int ft_encoding_latin_1() {
        return (int)1818326065L;
    }
    public static int ft_encoding_latin_2() {
        return (int)1818326066L;
    }
    public static int ft_encoding_sjis() {
        return (int)1936353651L;
    }
    public static int ft_encoding_gb2312() {
        return (int)1734484000L;
    }
    public static int ft_encoding_big5() {
        return (int)1651074869L;
    }
    public static int ft_encoding_wansung() {
        return (int)2002873971L;
    }
    public static int ft_encoding_johab() {
        return (int)1785686113L;
    }
    public static int ft_encoding_adobe_standard() {
        return (int)1094995778L;
    }
    public static int ft_encoding_adobe_expert() {
        return (int)1094992453L;
    }
    public static int ft_encoding_adobe_custom() {
        return (int)1094992451L;
    }
    public static int ft_encoding_apple_roman() {
        return (int)1634889070L;
    }
    public static long FT_FACE_FLAG_SCALABLE() {
        return 1L;
    }
    public static long FT_FACE_FLAG_FIXED_SIZES() {
        return 2L;
    }
    public static long FT_FACE_FLAG_FIXED_WIDTH() {
        return 4L;
    }
    public static long FT_FACE_FLAG_SFNT() {
        return 8L;
    }
    public static long FT_FACE_FLAG_HORIZONTAL() {
        return 16L;
    }
    public static long FT_FACE_FLAG_VERTICAL() {
        return 32L;
    }
    public static long FT_FACE_FLAG_KERNING() {
        return 64L;
    }
    public static long FT_FACE_FLAG_FAST_GLYPHS() {
        return 128L;
    }
    public static long FT_FACE_FLAG_MULTIPLE_MASTERS() {
        return 256L;
    }
    public static long FT_FACE_FLAG_GLYPH_NAMES() {
        return 512L;
    }
    public static long FT_FACE_FLAG_EXTERNAL_STREAM() {
        return 1024L;
    }
    public static long FT_FACE_FLAG_HINTER() {
        return 2048L;
    }
    public static long FT_FACE_FLAG_CID_KEYED() {
        return 4096L;
    }
    public static long FT_FACE_FLAG_TRICKY() {
        return 8192L;
    }
    public static long FT_FACE_FLAG_COLOR() {
        return 16384L;
    }
    public static long FT_FACE_FLAG_VARIATION() {
        return 32768L;
    }
    public static long FT_FACE_FLAG_SVG() {
        return 65536L;
    }
    public static long FT_FACE_FLAG_SBIX() {
        return 131072L;
    }
    public static long FT_FACE_FLAG_SBIX_OVERLAY() {
        return 262144L;
    }
    public static int FT_STYLE_FLAG_ITALIC() {
        return (int)1L;
    }
    public static int FT_STYLE_FLAG_BOLD() {
        return (int)2L;
    }
    public static int ft_open_memory() {
        return (int)1L;
    }
    public static int ft_open_stream() {
        return (int)2L;
    }
    public static int ft_open_pathname() {
        return (int)4L;
    }
    public static int ft_open_driver() {
        return (int)8L;
    }
    public static int ft_open_params() {
        return (int)16L;
    }
    public static long FT_LOAD_NO_SCALE() {
        return 1L;
    }
    public static long FT_LOAD_NO_HINTING() {
        return 2L;
    }
    public static long FT_LOAD_RENDER() {
        return 4L;
    }
    public static long FT_LOAD_NO_BITMAP() {
        return 8L;
    }
    public static long FT_LOAD_VERTICAL_LAYOUT() {
        return 16L;
    }
    public static long FT_LOAD_FORCE_AUTOHINT() {
        return 32L;
    }
    public static long FT_LOAD_CROP_BITMAP() {
        return 64L;
    }
    public static long FT_LOAD_PEDANTIC() {
        return 128L;
    }
    public static long FT_LOAD_IGNORE_GLOBAL_ADVANCE_WIDTH() {
        return 512L;
    }
    public static long FT_LOAD_NO_RECURSE() {
        return 1024L;
    }
    public static long FT_LOAD_IGNORE_TRANSFORM() {
        return 2048L;
    }
    public static long FT_LOAD_MONOCHROME() {
        return 4096L;
    }
    public static long FT_LOAD_LINEAR_DESIGN() {
        return 8192L;
    }
    public static long FT_LOAD_SBITS_ONLY() {
        return 16384L;
    }
    public static long FT_LOAD_NO_AUTOHINT() {
        return 32768L;
    }
    public static long FT_LOAD_COLOR() {
        return 1048576L;
    }
    public static long FT_LOAD_COMPUTE_METRICS() {
        return 2097152L;
    }
    public static long FT_LOAD_BITMAP_METRICS_ONLY() {
        return 4194304L;
    }
    public static long FT_LOAD_ADVANCE_ONLY() {
        return 256L;
    }
    public static long FT_LOAD_SVG_ONLY() {
        return 8388608L;
    }
    public static int FT_LOAD_TARGET_NORMAL() {
        return (int)0L;
    }
    public static int FT_LOAD_TARGET_LIGHT() {
        return (int)65536L;
    }
    public static int FT_LOAD_TARGET_MONO() {
        return (int)131072L;
    }
    public static int FT_LOAD_TARGET_LCD() {
        return (int)196608L;
    }
    public static int FT_LOAD_TARGET_LCD_V() {
        return (int)262144L;
    }
    public static int ft_render_mode_normal() {
        return (int)0L;
    }
    public static int ft_render_mode_mono() {
        return (int)2L;
    }
    public static int ft_kerning_default() {
        return (int)0L;
    }
    public static int ft_kerning_unfitted() {
        return (int)1L;
    }
    public static int ft_kerning_unscaled() {
        return (int)2L;
    }
    public static int ADW_MAJOR_VERSION() {
        return (int)1L;
    }
    public static int ADW_MINOR_VERSION() {
        return (int)1L;
    }
    public static int ADW_MICRO_VERSION() {
        return (int)4L;
    }
    public static MemorySegment ADW_VERSION_S() {
        return constants$2923.ADW_VERSION_S$SEGMENT;
    }
    public static int ADW_VERSION_HEX() {
        return (int)16843776L;
    }
    public static int ADW_DURATION_INFINITE() {
        return (int)4294967295L;
    }
}


