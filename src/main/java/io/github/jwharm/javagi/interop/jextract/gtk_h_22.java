// Generated by jextract

package io.github.jwharm.javagi.interop.jextract;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
 class gtk_h_22 extends gtk_h_21 {

    public static int GTK_PRINT_STATUS_PENDING_ISSUE() {
        return (int)5L;
    }
    public static int GTK_PRINT_STATUS_PRINTING() {
        return (int)6L;
    }
    public static int GTK_PRINT_STATUS_FINISHED() {
        return (int)7L;
    }
    public static int GTK_PRINT_STATUS_FINISHED_ABORTED() {
        return (int)8L;
    }
    public static int GTK_PRINT_OPERATION_RESULT_ERROR() {
        return (int)0L;
    }
    public static int GTK_PRINT_OPERATION_RESULT_APPLY() {
        return (int)1L;
    }
    public static int GTK_PRINT_OPERATION_RESULT_CANCEL() {
        return (int)2L;
    }
    public static int GTK_PRINT_OPERATION_RESULT_IN_PROGRESS() {
        return (int)3L;
    }
    public static int GTK_PRINT_OPERATION_ACTION_PRINT_DIALOG() {
        return (int)0L;
    }
    public static int GTK_PRINT_OPERATION_ACTION_PRINT() {
        return (int)1L;
    }
    public static int GTK_PRINT_OPERATION_ACTION_PREVIEW() {
        return (int)2L;
    }
    public static int GTK_PRINT_OPERATION_ACTION_EXPORT() {
        return (int)3L;
    }
    public static int GTK_PRINT_ERROR_GENERAL() {
        return (int)0L;
    }
    public static int GTK_PRINT_ERROR_INTERNAL_ERROR() {
        return (int)1L;
    }
    public static int GTK_PRINT_ERROR_NOMEM() {
        return (int)2L;
    }
    public static int GTK_PRINT_ERROR_INVALID_FILE() {
        return (int)3L;
    }
    public static MethodHandle gtk_print_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$2293.gtk_print_error_quark$MH,"gtk_print_error_quark");
    }
    public static int gtk_print_error_quark () {
        var mh$ = gtk_print_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2293.gtk_print_operation_get_type$MH,"gtk_print_operation_get_type");
    }
    public static long gtk_print_operation_get_type () {
        var mh$ = gtk_print_operation_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2293.gtk_print_operation_new$MH,"gtk_print_operation_new");
    }
    public static MemoryAddress gtk_print_operation_new () {
        var mh$ = gtk_print_operation_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_default_page_setup$MH() {
        return RuntimeHelper.requireNonNull(constants$2293.gtk_print_operation_set_default_page_setup$MH,"gtk_print_operation_set_default_page_setup");
    }
    public static void gtk_print_operation_set_default_page_setup ( Addressable op,  Addressable default_page_setup) {
        var mh$ = gtk_print_operation_set_default_page_setup$MH();
        try {
            mh$.invokeExact(op, default_page_setup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_get_default_page_setup$MH() {
        return RuntimeHelper.requireNonNull(constants$2293.gtk_print_operation_get_default_page_setup$MH,"gtk_print_operation_get_default_page_setup");
    }
    public static MemoryAddress gtk_print_operation_get_default_page_setup ( Addressable op) {
        var mh$ = gtk_print_operation_get_default_page_setup$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_print_settings$MH() {
        return RuntimeHelper.requireNonNull(constants$2293.gtk_print_operation_set_print_settings$MH,"gtk_print_operation_set_print_settings");
    }
    public static void gtk_print_operation_set_print_settings ( Addressable op,  Addressable print_settings) {
        var mh$ = gtk_print_operation_set_print_settings$MH();
        try {
            mh$.invokeExact(op, print_settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_get_print_settings$MH() {
        return RuntimeHelper.requireNonNull(constants$2294.gtk_print_operation_get_print_settings$MH,"gtk_print_operation_get_print_settings");
    }
    public static MemoryAddress gtk_print_operation_get_print_settings ( Addressable op) {
        var mh$ = gtk_print_operation_get_print_settings$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_job_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2294.gtk_print_operation_set_job_name$MH,"gtk_print_operation_set_job_name");
    }
    public static void gtk_print_operation_set_job_name ( Addressable op,  Addressable job_name) {
        var mh$ = gtk_print_operation_set_job_name$MH();
        try {
            mh$.invokeExact(op, job_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_n_pages$MH() {
        return RuntimeHelper.requireNonNull(constants$2294.gtk_print_operation_set_n_pages$MH,"gtk_print_operation_set_n_pages");
    }
    public static void gtk_print_operation_set_n_pages ( Addressable op,  int n_pages) {
        var mh$ = gtk_print_operation_set_n_pages$MH();
        try {
            mh$.invokeExact(op, n_pages);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_current_page$MH() {
        return RuntimeHelper.requireNonNull(constants$2294.gtk_print_operation_set_current_page$MH,"gtk_print_operation_set_current_page");
    }
    public static void gtk_print_operation_set_current_page ( Addressable op,  int current_page) {
        var mh$ = gtk_print_operation_set_current_page$MH();
        try {
            mh$.invokeExact(op, current_page);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_use_full_page$MH() {
        return RuntimeHelper.requireNonNull(constants$2294.gtk_print_operation_set_use_full_page$MH,"gtk_print_operation_set_use_full_page");
    }
    public static void gtk_print_operation_set_use_full_page ( Addressable op,  int full_page) {
        var mh$ = gtk_print_operation_set_use_full_page$MH();
        try {
            mh$.invokeExact(op, full_page);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_unit$MH() {
        return RuntimeHelper.requireNonNull(constants$2294.gtk_print_operation_set_unit$MH,"gtk_print_operation_set_unit");
    }
    public static void gtk_print_operation_set_unit ( Addressable op,  int unit) {
        var mh$ = gtk_print_operation_set_unit$MH();
        try {
            mh$.invokeExact(op, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_export_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$2295.gtk_print_operation_set_export_filename$MH,"gtk_print_operation_set_export_filename");
    }
    public static void gtk_print_operation_set_export_filename ( Addressable op,  Addressable filename) {
        var mh$ = gtk_print_operation_set_export_filename$MH();
        try {
            mh$.invokeExact(op, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_track_print_status$MH() {
        return RuntimeHelper.requireNonNull(constants$2295.gtk_print_operation_set_track_print_status$MH,"gtk_print_operation_set_track_print_status");
    }
    public static void gtk_print_operation_set_track_print_status ( Addressable op,  int track_status) {
        var mh$ = gtk_print_operation_set_track_print_status$MH();
        try {
            mh$.invokeExact(op, track_status);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_show_progress$MH() {
        return RuntimeHelper.requireNonNull(constants$2295.gtk_print_operation_set_show_progress$MH,"gtk_print_operation_set_show_progress");
    }
    public static void gtk_print_operation_set_show_progress ( Addressable op,  int show_progress) {
        var mh$ = gtk_print_operation_set_show_progress$MH();
        try {
            mh$.invokeExact(op, show_progress);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_allow_async$MH() {
        return RuntimeHelper.requireNonNull(constants$2295.gtk_print_operation_set_allow_async$MH,"gtk_print_operation_set_allow_async");
    }
    public static void gtk_print_operation_set_allow_async ( Addressable op,  int allow_async) {
        var mh$ = gtk_print_operation_set_allow_async$MH();
        try {
            mh$.invokeExact(op, allow_async);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_custom_tab_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2295.gtk_print_operation_set_custom_tab_label$MH,"gtk_print_operation_set_custom_tab_label");
    }
    public static void gtk_print_operation_set_custom_tab_label ( Addressable op,  Addressable label) {
        var mh$ = gtk_print_operation_set_custom_tab_label$MH();
        try {
            mh$.invokeExact(op, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_run$MH() {
        return RuntimeHelper.requireNonNull(constants$2295.gtk_print_operation_run$MH,"gtk_print_operation_run");
    }
    public static int gtk_print_operation_run ( Addressable op,  int action,  Addressable parent,  Addressable error) {
        var mh$ = gtk_print_operation_run$MH();
        try {
            return (int)mh$.invokeExact(op, action, parent, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_get_error$MH() {
        return RuntimeHelper.requireNonNull(constants$2296.gtk_print_operation_get_error$MH,"gtk_print_operation_get_error");
    }
    public static void gtk_print_operation_get_error ( Addressable op,  Addressable error) {
        var mh$ = gtk_print_operation_get_error$MH();
        try {
            mh$.invokeExact(op, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_get_status$MH() {
        return RuntimeHelper.requireNonNull(constants$2296.gtk_print_operation_get_status$MH,"gtk_print_operation_get_status");
    }
    public static int gtk_print_operation_get_status ( Addressable op) {
        var mh$ = gtk_print_operation_get_status$MH();
        try {
            return (int)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_get_status_string$MH() {
        return RuntimeHelper.requireNonNull(constants$2296.gtk_print_operation_get_status_string$MH,"gtk_print_operation_get_status_string");
    }
    public static MemoryAddress gtk_print_operation_get_status_string ( Addressable op) {
        var mh$ = gtk_print_operation_get_status_string$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_is_finished$MH() {
        return RuntimeHelper.requireNonNull(constants$2296.gtk_print_operation_is_finished$MH,"gtk_print_operation_is_finished");
    }
    public static int gtk_print_operation_is_finished ( Addressable op) {
        var mh$ = gtk_print_operation_is_finished$MH();
        try {
            return (int)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_cancel$MH() {
        return RuntimeHelper.requireNonNull(constants$2296.gtk_print_operation_cancel$MH,"gtk_print_operation_cancel");
    }
    public static void gtk_print_operation_cancel ( Addressable op) {
        var mh$ = gtk_print_operation_cancel$MH();
        try {
            mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_draw_page_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$2296.gtk_print_operation_draw_page_finish$MH,"gtk_print_operation_draw_page_finish");
    }
    public static void gtk_print_operation_draw_page_finish ( Addressable op) {
        var mh$ = gtk_print_operation_draw_page_finish$MH();
        try {
            mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_defer_drawing$MH() {
        return RuntimeHelper.requireNonNull(constants$2297.gtk_print_operation_set_defer_drawing$MH,"gtk_print_operation_set_defer_drawing");
    }
    public static void gtk_print_operation_set_defer_drawing ( Addressable op) {
        var mh$ = gtk_print_operation_set_defer_drawing$MH();
        try {
            mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_support_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$2297.gtk_print_operation_set_support_selection$MH,"gtk_print_operation_set_support_selection");
    }
    public static void gtk_print_operation_set_support_selection ( Addressable op,  int support_selection) {
        var mh$ = gtk_print_operation_set_support_selection$MH();
        try {
            mh$.invokeExact(op, support_selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_get_support_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$2297.gtk_print_operation_get_support_selection$MH,"gtk_print_operation_get_support_selection");
    }
    public static int gtk_print_operation_get_support_selection ( Addressable op) {
        var mh$ = gtk_print_operation_get_support_selection$MH();
        try {
            return (int)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_has_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$2297.gtk_print_operation_set_has_selection$MH,"gtk_print_operation_set_has_selection");
    }
    public static void gtk_print_operation_set_has_selection ( Addressable op,  int has_selection) {
        var mh$ = gtk_print_operation_set_has_selection$MH();
        try {
            mh$.invokeExact(op, has_selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_get_has_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$2297.gtk_print_operation_get_has_selection$MH,"gtk_print_operation_get_has_selection");
    }
    public static int gtk_print_operation_get_has_selection ( Addressable op) {
        var mh$ = gtk_print_operation_get_has_selection$MH();
        try {
            return (int)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_set_embed_page_setup$MH() {
        return RuntimeHelper.requireNonNull(constants$2297.gtk_print_operation_set_embed_page_setup$MH,"gtk_print_operation_set_embed_page_setup");
    }
    public static void gtk_print_operation_set_embed_page_setup ( Addressable op,  int embed) {
        var mh$ = gtk_print_operation_set_embed_page_setup$MH();
        try {
            mh$.invokeExact(op, embed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_get_embed_page_setup$MH() {
        return RuntimeHelper.requireNonNull(constants$2298.gtk_print_operation_get_embed_page_setup$MH,"gtk_print_operation_get_embed_page_setup");
    }
    public static int gtk_print_operation_get_embed_page_setup ( Addressable op) {
        var mh$ = gtk_print_operation_get_embed_page_setup$MH();
        try {
            return (int)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_operation_get_n_pages_to_print$MH() {
        return RuntimeHelper.requireNonNull(constants$2298.gtk_print_operation_get_n_pages_to_print$MH,"gtk_print_operation_get_n_pages_to_print");
    }
    public static int gtk_print_operation_get_n_pages_to_print ( Addressable op) {
        var mh$ = gtk_print_operation_get_n_pages_to_print$MH();
        try {
            return (int)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_run_page_setup_dialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2298.gtk_print_run_page_setup_dialog$MH,"gtk_print_run_page_setup_dialog");
    }
    public static MemoryAddress gtk_print_run_page_setup_dialog ( Addressable parent,  Addressable page_setup,  Addressable settings) {
        var mh$ = gtk_print_run_page_setup_dialog$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(parent, page_setup, settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_run_page_setup_dialog_async$MH() {
        return RuntimeHelper.requireNonNull(constants$2298.gtk_print_run_page_setup_dialog_async$MH,"gtk_print_run_page_setup_dialog_async");
    }
    public static void gtk_print_run_page_setup_dialog_async ( Addressable parent,  Addressable page_setup,  Addressable settings,  Addressable done_cb,  Addressable data) {
        var mh$ = gtk_print_run_page_setup_dialog_async$MH();
        try {
            mh$.invokeExact(parent, page_setup, settings, done_cb, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2299.gtk_progress_bar_get_type$MH,"gtk_progress_bar_get_type");
    }
    public static long gtk_progress_bar_get_type () {
        var mh$ = gtk_progress_bar_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2299.gtk_progress_bar_new$MH,"gtk_progress_bar_new");
    }
    public static MemoryAddress gtk_progress_bar_new () {
        var mh$ = gtk_progress_bar_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_pulse$MH() {
        return RuntimeHelper.requireNonNull(constants$2299.gtk_progress_bar_pulse$MH,"gtk_progress_bar_pulse");
    }
    public static void gtk_progress_bar_pulse ( Addressable pbar) {
        var mh$ = gtk_progress_bar_pulse$MH();
        try {
            mh$.invokeExact(pbar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_set_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2299.gtk_progress_bar_set_text$MH,"gtk_progress_bar_set_text");
    }
    public static void gtk_progress_bar_set_text ( Addressable pbar,  Addressable text) {
        var mh$ = gtk_progress_bar_set_text$MH();
        try {
            mh$.invokeExact(pbar, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_set_fraction$MH() {
        return RuntimeHelper.requireNonNull(constants$2299.gtk_progress_bar_set_fraction$MH,"gtk_progress_bar_set_fraction");
    }
    public static void gtk_progress_bar_set_fraction ( Addressable pbar,  double fraction) {
        var mh$ = gtk_progress_bar_set_fraction$MH();
        try {
            mh$.invokeExact(pbar, fraction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_set_pulse_step$MH() {
        return RuntimeHelper.requireNonNull(constants$2299.gtk_progress_bar_set_pulse_step$MH,"gtk_progress_bar_set_pulse_step");
    }
    public static void gtk_progress_bar_set_pulse_step ( Addressable pbar,  double fraction) {
        var mh$ = gtk_progress_bar_set_pulse_step$MH();
        try {
            mh$.invokeExact(pbar, fraction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_set_inverted$MH() {
        return RuntimeHelper.requireNonNull(constants$2300.gtk_progress_bar_set_inverted$MH,"gtk_progress_bar_set_inverted");
    }
    public static void gtk_progress_bar_set_inverted ( Addressable pbar,  int inverted) {
        var mh$ = gtk_progress_bar_set_inverted$MH();
        try {
            mh$.invokeExact(pbar, inverted);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_get_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2300.gtk_progress_bar_get_text$MH,"gtk_progress_bar_get_text");
    }
    public static MemoryAddress gtk_progress_bar_get_text ( Addressable pbar) {
        var mh$ = gtk_progress_bar_get_text$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pbar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_get_fraction$MH() {
        return RuntimeHelper.requireNonNull(constants$2300.gtk_progress_bar_get_fraction$MH,"gtk_progress_bar_get_fraction");
    }
    public static double gtk_progress_bar_get_fraction ( Addressable pbar) {
        var mh$ = gtk_progress_bar_get_fraction$MH();
        try {
            return (double)mh$.invokeExact(pbar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_get_pulse_step$MH() {
        return RuntimeHelper.requireNonNull(constants$2300.gtk_progress_bar_get_pulse_step$MH,"gtk_progress_bar_get_pulse_step");
    }
    public static double gtk_progress_bar_get_pulse_step ( Addressable pbar) {
        var mh$ = gtk_progress_bar_get_pulse_step$MH();
        try {
            return (double)mh$.invokeExact(pbar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_get_inverted$MH() {
        return RuntimeHelper.requireNonNull(constants$2300.gtk_progress_bar_get_inverted$MH,"gtk_progress_bar_get_inverted");
    }
    public static int gtk_progress_bar_get_inverted ( Addressable pbar) {
        var mh$ = gtk_progress_bar_get_inverted$MH();
        try {
            return (int)mh$.invokeExact(pbar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_set_ellipsize$MH() {
        return RuntimeHelper.requireNonNull(constants$2300.gtk_progress_bar_set_ellipsize$MH,"gtk_progress_bar_set_ellipsize");
    }
    public static void gtk_progress_bar_set_ellipsize ( Addressable pbar,  int mode) {
        var mh$ = gtk_progress_bar_set_ellipsize$MH();
        try {
            mh$.invokeExact(pbar, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_get_ellipsize$MH() {
        return RuntimeHelper.requireNonNull(constants$2301.gtk_progress_bar_get_ellipsize$MH,"gtk_progress_bar_get_ellipsize");
    }
    public static int gtk_progress_bar_get_ellipsize ( Addressable pbar) {
        var mh$ = gtk_progress_bar_get_ellipsize$MH();
        try {
            return (int)mh$.invokeExact(pbar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_set_show_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2301.gtk_progress_bar_set_show_text$MH,"gtk_progress_bar_set_show_text");
    }
    public static void gtk_progress_bar_set_show_text ( Addressable pbar,  int show_text) {
        var mh$ = gtk_progress_bar_set_show_text$MH();
        try {
            mh$.invokeExact(pbar, show_text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_progress_bar_get_show_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2301.gtk_progress_bar_get_show_text$MH,"gtk_progress_bar_get_show_text");
    }
    public static int gtk_progress_bar_get_show_text ( Addressable pbar) {
        var mh$ = gtk_progress_bar_get_show_text$MH();
        try {
            return (int)mh$.invokeExact(pbar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2301.gtk_range_get_type$MH,"gtk_range_get_type");
    }
    public static long gtk_range_get_type () {
        var mh$ = gtk_range_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_set_adjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$2301.gtk_range_set_adjustment$MH,"gtk_range_set_adjustment");
    }
    public static void gtk_range_set_adjustment ( Addressable range,  Addressable adjustment) {
        var mh$ = gtk_range_set_adjustment$MH();
        try {
            mh$.invokeExact(range, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_get_adjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$2301.gtk_range_get_adjustment$MH,"gtk_range_get_adjustment");
    }
    public static MemoryAddress gtk_range_get_adjustment ( Addressable range) {
        var mh$ = gtk_range_get_adjustment$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_set_inverted$MH() {
        return RuntimeHelper.requireNonNull(constants$2302.gtk_range_set_inverted$MH,"gtk_range_set_inverted");
    }
    public static void gtk_range_set_inverted ( Addressable range,  int setting) {
        var mh$ = gtk_range_set_inverted$MH();
        try {
            mh$.invokeExact(range, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_get_inverted$MH() {
        return RuntimeHelper.requireNonNull(constants$2302.gtk_range_get_inverted$MH,"gtk_range_get_inverted");
    }
    public static int gtk_range_get_inverted ( Addressable range) {
        var mh$ = gtk_range_get_inverted$MH();
        try {
            return (int)mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_set_flippable$MH() {
        return RuntimeHelper.requireNonNull(constants$2302.gtk_range_set_flippable$MH,"gtk_range_set_flippable");
    }
    public static void gtk_range_set_flippable ( Addressable range,  int flippable) {
        var mh$ = gtk_range_set_flippable$MH();
        try {
            mh$.invokeExact(range, flippable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_get_flippable$MH() {
        return RuntimeHelper.requireNonNull(constants$2302.gtk_range_get_flippable$MH,"gtk_range_get_flippable");
    }
    public static int gtk_range_get_flippable ( Addressable range) {
        var mh$ = gtk_range_get_flippable$MH();
        try {
            return (int)mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_set_slider_size_fixed$MH() {
        return RuntimeHelper.requireNonNull(constants$2302.gtk_range_set_slider_size_fixed$MH,"gtk_range_set_slider_size_fixed");
    }
    public static void gtk_range_set_slider_size_fixed ( Addressable range,  int size_fixed) {
        var mh$ = gtk_range_set_slider_size_fixed$MH();
        try {
            mh$.invokeExact(range, size_fixed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_get_slider_size_fixed$MH() {
        return RuntimeHelper.requireNonNull(constants$2302.gtk_range_get_slider_size_fixed$MH,"gtk_range_get_slider_size_fixed");
    }
    public static int gtk_range_get_slider_size_fixed ( Addressable range) {
        var mh$ = gtk_range_get_slider_size_fixed$MH();
        try {
            return (int)mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_get_range_rect$MH() {
        return RuntimeHelper.requireNonNull(constants$2303.gtk_range_get_range_rect$MH,"gtk_range_get_range_rect");
    }
    public static void gtk_range_get_range_rect ( Addressable range,  Addressable range_rect) {
        var mh$ = gtk_range_get_range_rect$MH();
        try {
            mh$.invokeExact(range, range_rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_get_slider_range$MH() {
        return RuntimeHelper.requireNonNull(constants$2303.gtk_range_get_slider_range$MH,"gtk_range_get_slider_range");
    }
    public static void gtk_range_get_slider_range ( Addressable range,  Addressable slider_start,  Addressable slider_end) {
        var mh$ = gtk_range_get_slider_range$MH();
        try {
            mh$.invokeExact(range, slider_start, slider_end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_set_increments$MH() {
        return RuntimeHelper.requireNonNull(constants$2303.gtk_range_set_increments$MH,"gtk_range_set_increments");
    }
    public static void gtk_range_set_increments ( Addressable range,  double step,  double page) {
        var mh$ = gtk_range_set_increments$MH();
        try {
            mh$.invokeExact(range, step, page);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_set_range$MH() {
        return RuntimeHelper.requireNonNull(constants$2303.gtk_range_set_range$MH,"gtk_range_set_range");
    }
    public static void gtk_range_set_range ( Addressable range,  double min,  double max) {
        var mh$ = gtk_range_set_range$MH();
        try {
            mh$.invokeExact(range, min, max);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_set_value$MH() {
        return RuntimeHelper.requireNonNull(constants$2303.gtk_range_set_value$MH,"gtk_range_set_value");
    }
    public static void gtk_range_set_value ( Addressable range,  double value) {
        var mh$ = gtk_range_set_value$MH();
        try {
            mh$.invokeExact(range, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_get_value$MH() {
        return RuntimeHelper.requireNonNull(constants$2303.gtk_range_get_value$MH,"gtk_range_get_value");
    }
    public static double gtk_range_get_value ( Addressable range) {
        var mh$ = gtk_range_get_value$MH();
        try {
            return (double)mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_set_show_fill_level$MH() {
        return RuntimeHelper.requireNonNull(constants$2304.gtk_range_set_show_fill_level$MH,"gtk_range_set_show_fill_level");
    }
    public static void gtk_range_set_show_fill_level ( Addressable range,  int show_fill_level) {
        var mh$ = gtk_range_set_show_fill_level$MH();
        try {
            mh$.invokeExact(range, show_fill_level);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_get_show_fill_level$MH() {
        return RuntimeHelper.requireNonNull(constants$2304.gtk_range_get_show_fill_level$MH,"gtk_range_get_show_fill_level");
    }
    public static int gtk_range_get_show_fill_level ( Addressable range) {
        var mh$ = gtk_range_get_show_fill_level$MH();
        try {
            return (int)mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_set_restrict_to_fill_level$MH() {
        return RuntimeHelper.requireNonNull(constants$2304.gtk_range_set_restrict_to_fill_level$MH,"gtk_range_set_restrict_to_fill_level");
    }
    public static void gtk_range_set_restrict_to_fill_level ( Addressable range,  int restrict_to_fill_level) {
        var mh$ = gtk_range_set_restrict_to_fill_level$MH();
        try {
            mh$.invokeExact(range, restrict_to_fill_level);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_get_restrict_to_fill_level$MH() {
        return RuntimeHelper.requireNonNull(constants$2304.gtk_range_get_restrict_to_fill_level$MH,"gtk_range_get_restrict_to_fill_level");
    }
    public static int gtk_range_get_restrict_to_fill_level ( Addressable range) {
        var mh$ = gtk_range_get_restrict_to_fill_level$MH();
        try {
            return (int)mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_set_fill_level$MH() {
        return RuntimeHelper.requireNonNull(constants$2304.gtk_range_set_fill_level$MH,"gtk_range_set_fill_level");
    }
    public static void gtk_range_set_fill_level ( Addressable range,  double fill_level) {
        var mh$ = gtk_range_set_fill_level$MH();
        try {
            mh$.invokeExact(range, fill_level);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_get_fill_level$MH() {
        return RuntimeHelper.requireNonNull(constants$2304.gtk_range_get_fill_level$MH,"gtk_range_get_fill_level");
    }
    public static double gtk_range_get_fill_level ( Addressable range) {
        var mh$ = gtk_range_get_fill_level$MH();
        try {
            return (double)mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_set_round_digits$MH() {
        return RuntimeHelper.requireNonNull(constants$2305.gtk_range_set_round_digits$MH,"gtk_range_set_round_digits");
    }
    public static void gtk_range_set_round_digits ( Addressable range,  int round_digits) {
        var mh$ = gtk_range_set_round_digits$MH();
        try {
            mh$.invokeExact(range, round_digits);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_range_get_round_digits$MH() {
        return RuntimeHelper.requireNonNull(constants$2305.gtk_range_get_round_digits$MH,"gtk_range_get_round_digits");
    }
    public static int gtk_range_get_round_digits ( Addressable range) {
        var mh$ = gtk_range_get_round_digits$MH();
        try {
            return (int)mh$.invokeExact(range);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GTK_RECENT_MANAGER_ERROR_NOT_FOUND() {
        return (int)0L;
    }
    public static int GTK_RECENT_MANAGER_ERROR_INVALID_URI() {
        return (int)1L;
    }
    public static int GTK_RECENT_MANAGER_ERROR_INVALID_ENCODING() {
        return (int)2L;
    }
    public static int GTK_RECENT_MANAGER_ERROR_NOT_REGISTERED() {
        return (int)3L;
    }
    public static int GTK_RECENT_MANAGER_ERROR_READ() {
        return (int)4L;
    }
    public static int GTK_RECENT_MANAGER_ERROR_WRITE() {
        return (int)5L;
    }
    public static int GTK_RECENT_MANAGER_ERROR_UNKNOWN() {
        return (int)6L;
    }
    public static MethodHandle gtk_recent_manager_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$2305.gtk_recent_manager_error_quark$MH,"gtk_recent_manager_error_quark");
    }
    public static int gtk_recent_manager_error_quark () {
        var mh$ = gtk_recent_manager_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_manager_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2305.gtk_recent_manager_get_type$MH,"gtk_recent_manager_get_type");
    }
    public static long gtk_recent_manager_get_type () {
        var mh$ = gtk_recent_manager_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_manager_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2305.gtk_recent_manager_new$MH,"gtk_recent_manager_new");
    }
    public static MemoryAddress gtk_recent_manager_new () {
        var mh$ = gtk_recent_manager_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_manager_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$2305.gtk_recent_manager_get_default$MH,"gtk_recent_manager_get_default");
    }
    public static MemoryAddress gtk_recent_manager_get_default () {
        var mh$ = gtk_recent_manager_get_default$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_manager_add_item$MH() {
        return RuntimeHelper.requireNonNull(constants$2306.gtk_recent_manager_add_item$MH,"gtk_recent_manager_add_item");
    }
    public static int gtk_recent_manager_add_item ( Addressable manager,  Addressable uri) {
        var mh$ = gtk_recent_manager_add_item$MH();
        try {
            return (int)mh$.invokeExact(manager, uri);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_manager_add_full$MH() {
        return RuntimeHelper.requireNonNull(constants$2306.gtk_recent_manager_add_full$MH,"gtk_recent_manager_add_full");
    }
    public static int gtk_recent_manager_add_full ( Addressable manager,  Addressable uri,  Addressable recent_data) {
        var mh$ = gtk_recent_manager_add_full$MH();
        try {
            return (int)mh$.invokeExact(manager, uri, recent_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_manager_remove_item$MH() {
        return RuntimeHelper.requireNonNull(constants$2306.gtk_recent_manager_remove_item$MH,"gtk_recent_manager_remove_item");
    }
    public static int gtk_recent_manager_remove_item ( Addressable manager,  Addressable uri,  Addressable error) {
        var mh$ = gtk_recent_manager_remove_item$MH();
        try {
            return (int)mh$.invokeExact(manager, uri, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_manager_lookup_item$MH() {
        return RuntimeHelper.requireNonNull(constants$2306.gtk_recent_manager_lookup_item$MH,"gtk_recent_manager_lookup_item");
    }
    public static MemoryAddress gtk_recent_manager_lookup_item ( Addressable manager,  Addressable uri,  Addressable error) {
        var mh$ = gtk_recent_manager_lookup_item$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(manager, uri, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_manager_has_item$MH() {
        return RuntimeHelper.requireNonNull(constants$2306.gtk_recent_manager_has_item$MH,"gtk_recent_manager_has_item");
    }
    public static int gtk_recent_manager_has_item ( Addressable manager,  Addressable uri) {
        var mh$ = gtk_recent_manager_has_item$MH();
        try {
            return (int)mh$.invokeExact(manager, uri);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_manager_move_item$MH() {
        return RuntimeHelper.requireNonNull(constants$2306.gtk_recent_manager_move_item$MH,"gtk_recent_manager_move_item");
    }
    public static int gtk_recent_manager_move_item ( Addressable manager,  Addressable uri,  Addressable new_uri,  Addressable error) {
        var mh$ = gtk_recent_manager_move_item$MH();
        try {
            return (int)mh$.invokeExact(manager, uri, new_uri, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_manager_get_items$MH() {
        return RuntimeHelper.requireNonNull(constants$2307.gtk_recent_manager_get_items$MH,"gtk_recent_manager_get_items");
    }
    public static MemoryAddress gtk_recent_manager_get_items ( Addressable manager) {
        var mh$ = gtk_recent_manager_get_items$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(manager);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_manager_purge_items$MH() {
        return RuntimeHelper.requireNonNull(constants$2307.gtk_recent_manager_purge_items$MH,"gtk_recent_manager_purge_items");
    }
    public static int gtk_recent_manager_purge_items ( Addressable manager,  Addressable error) {
        var mh$ = gtk_recent_manager_purge_items$MH();
        try {
            return (int)mh$.invokeExact(manager, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2307.gtk_recent_info_get_type$MH,"gtk_recent_info_get_type");
    }
    public static long gtk_recent_info_get_type () {
        var mh$ = gtk_recent_info_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$2307.gtk_recent_info_ref$MH,"gtk_recent_info_ref");
    }
    public static MemoryAddress gtk_recent_info_ref ( Addressable info) {
        var mh$ = gtk_recent_info_ref$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$2307.gtk_recent_info_unref$MH,"gtk_recent_info_unref");
    }
    public static void gtk_recent_info_unref ( Addressable info) {
        var mh$ = gtk_recent_info_unref$MH();
        try {
            mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$2307.gtk_recent_info_get_uri$MH,"gtk_recent_info_get_uri");
    }
    public static MemoryAddress gtk_recent_info_get_uri ( Addressable info) {
        var mh$ = gtk_recent_info_get_uri$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_display_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2308.gtk_recent_info_get_display_name$MH,"gtk_recent_info_get_display_name");
    }
    public static MemoryAddress gtk_recent_info_get_display_name ( Addressable info) {
        var mh$ = gtk_recent_info_get_display_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_description$MH() {
        return RuntimeHelper.requireNonNull(constants$2308.gtk_recent_info_get_description$MH,"gtk_recent_info_get_description");
    }
    public static MemoryAddress gtk_recent_info_get_description ( Addressable info) {
        var mh$ = gtk_recent_info_get_description$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_mime_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2308.gtk_recent_info_get_mime_type$MH,"gtk_recent_info_get_mime_type");
    }
    public static MemoryAddress gtk_recent_info_get_mime_type ( Addressable info) {
        var mh$ = gtk_recent_info_get_mime_type$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_added$MH() {
        return RuntimeHelper.requireNonNull(constants$2308.gtk_recent_info_get_added$MH,"gtk_recent_info_get_added");
    }
    public static MemoryAddress gtk_recent_info_get_added ( Addressable info) {
        var mh$ = gtk_recent_info_get_added$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_modified$MH() {
        return RuntimeHelper.requireNonNull(constants$2308.gtk_recent_info_get_modified$MH,"gtk_recent_info_get_modified");
    }
    public static MemoryAddress gtk_recent_info_get_modified ( Addressable info) {
        var mh$ = gtk_recent_info_get_modified$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_visited$MH() {
        return RuntimeHelper.requireNonNull(constants$2308.gtk_recent_info_get_visited$MH,"gtk_recent_info_get_visited");
    }
    public static MemoryAddress gtk_recent_info_get_visited ( Addressable info) {
        var mh$ = gtk_recent_info_get_visited$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_private_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$2309.gtk_recent_info_get_private_hint$MH,"gtk_recent_info_get_private_hint");
    }
    public static int gtk_recent_info_get_private_hint ( Addressable info) {
        var mh$ = gtk_recent_info_get_private_hint$MH();
        try {
            return (int)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_application_info$MH() {
        return RuntimeHelper.requireNonNull(constants$2309.gtk_recent_info_get_application_info$MH,"gtk_recent_info_get_application_info");
    }
    public static int gtk_recent_info_get_application_info ( Addressable info,  Addressable app_name,  Addressable app_exec,  Addressable count,  Addressable stamp) {
        var mh$ = gtk_recent_info_get_application_info$MH();
        try {
            return (int)mh$.invokeExact(info, app_name, app_exec, count, stamp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_create_app_info$MH() {
        return RuntimeHelper.requireNonNull(constants$2309.gtk_recent_info_create_app_info$MH,"gtk_recent_info_create_app_info");
    }
    public static MemoryAddress gtk_recent_info_create_app_info ( Addressable info,  Addressable app_name,  Addressable error) {
        var mh$ = gtk_recent_info_create_app_info$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(info, app_name, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_applications$MH() {
        return RuntimeHelper.requireNonNull(constants$2309.gtk_recent_info_get_applications$MH,"gtk_recent_info_get_applications");
    }
    public static MemoryAddress gtk_recent_info_get_applications ( Addressable info,  Addressable length) {
        var mh$ = gtk_recent_info_get_applications$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(info, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_last_application$MH() {
        return RuntimeHelper.requireNonNull(constants$2309.gtk_recent_info_last_application$MH,"gtk_recent_info_last_application");
    }
    public static MemoryAddress gtk_recent_info_last_application ( Addressable info) {
        var mh$ = gtk_recent_info_last_application$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_has_application$MH() {
        return RuntimeHelper.requireNonNull(constants$2309.gtk_recent_info_has_application$MH,"gtk_recent_info_has_application");
    }
    public static int gtk_recent_info_has_application ( Addressable info,  Addressable app_name) {
        var mh$ = gtk_recent_info_has_application$MH();
        try {
            return (int)mh$.invokeExact(info, app_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_groups$MH() {
        return RuntimeHelper.requireNonNull(constants$2310.gtk_recent_info_get_groups$MH,"gtk_recent_info_get_groups");
    }
    public static MemoryAddress gtk_recent_info_get_groups ( Addressable info,  Addressable length) {
        var mh$ = gtk_recent_info_get_groups$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(info, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_has_group$MH() {
        return RuntimeHelper.requireNonNull(constants$2310.gtk_recent_info_has_group$MH,"gtk_recent_info_has_group");
    }
    public static int gtk_recent_info_has_group ( Addressable info,  Addressable group_name) {
        var mh$ = gtk_recent_info_has_group$MH();
        try {
            return (int)mh$.invokeExact(info, group_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_gicon$MH() {
        return RuntimeHelper.requireNonNull(constants$2310.gtk_recent_info_get_gicon$MH,"gtk_recent_info_get_gicon");
    }
    public static MemoryAddress gtk_recent_info_get_gicon ( Addressable info) {
        var mh$ = gtk_recent_info_get_gicon$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_short_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2310.gtk_recent_info_get_short_name$MH,"gtk_recent_info_get_short_name");
    }
    public static MemoryAddress gtk_recent_info_get_short_name ( Addressable info) {
        var mh$ = gtk_recent_info_get_short_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_uri_display$MH() {
        return RuntimeHelper.requireNonNull(constants$2310.gtk_recent_info_get_uri_display$MH,"gtk_recent_info_get_uri_display");
    }
    public static MemoryAddress gtk_recent_info_get_uri_display ( Addressable info) {
        var mh$ = gtk_recent_info_get_uri_display$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_get_age$MH() {
        return RuntimeHelper.requireNonNull(constants$2310.gtk_recent_info_get_age$MH,"gtk_recent_info_get_age");
    }
    public static int gtk_recent_info_get_age ( Addressable info) {
        var mh$ = gtk_recent_info_get_age$MH();
        try {
            return (int)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_is_local$MH() {
        return RuntimeHelper.requireNonNull(constants$2311.gtk_recent_info_is_local$MH,"gtk_recent_info_is_local");
    }
    public static int gtk_recent_info_is_local ( Addressable info) {
        var mh$ = gtk_recent_info_is_local$MH();
        try {
            return (int)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_exists$MH() {
        return RuntimeHelper.requireNonNull(constants$2311.gtk_recent_info_exists$MH,"gtk_recent_info_exists");
    }
    public static int gtk_recent_info_exists ( Addressable info) {
        var mh$ = gtk_recent_info_exists$MH();
        try {
            return (int)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_recent_info_match$MH() {
        return RuntimeHelper.requireNonNull(constants$2311.gtk_recent_info_match$MH,"gtk_recent_info_match");
    }
    public static int gtk_recent_info_match ( Addressable info_a,  Addressable info_b) {
        var mh$ = gtk_recent_info_match$MH();
        try {
            return (int)mh$.invokeExact(info_a, info_b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gtk_recent_manager_sync$MH() {
        return RuntimeHelper.requireNonNull(constants$2311._gtk_recent_manager_sync$MH,"_gtk_recent_manager_sync");
    }
    public static void _gtk_recent_manager_sync () {
        var mh$ = _gtk_recent_manager_sync$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_check$MH() {
        return RuntimeHelper.requireNonNull(constants$2311.gtk_render_check$MH,"gtk_render_check");
    }
    public static void gtk_render_check ( Addressable context,  Addressable cr,  double x,  double y,  double width,  double height) {
        var mh$ = gtk_render_check$MH();
        try {
            mh$.invokeExact(context, cr, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_option$MH() {
        return RuntimeHelper.requireNonNull(constants$2311.gtk_render_option$MH,"gtk_render_option");
    }
    public static void gtk_render_option ( Addressable context,  Addressable cr,  double x,  double y,  double width,  double height) {
        var mh$ = gtk_render_option$MH();
        try {
            mh$.invokeExact(context, cr, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_arrow$MH() {
        return RuntimeHelper.requireNonNull(constants$2312.gtk_render_arrow$MH,"gtk_render_arrow");
    }
    public static void gtk_render_arrow ( Addressable context,  Addressable cr,  double angle,  double x,  double y,  double size) {
        var mh$ = gtk_render_arrow$MH();
        try {
            mh$.invokeExact(context, cr, angle, x, y, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_background$MH() {
        return RuntimeHelper.requireNonNull(constants$2312.gtk_render_background$MH,"gtk_render_background");
    }
    public static void gtk_render_background ( Addressable context,  Addressable cr,  double x,  double y,  double width,  double height) {
        var mh$ = gtk_render_background$MH();
        try {
            mh$.invokeExact(context, cr, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_frame$MH() {
        return RuntimeHelper.requireNonNull(constants$2312.gtk_render_frame$MH,"gtk_render_frame");
    }
    public static void gtk_render_frame ( Addressable context,  Addressable cr,  double x,  double y,  double width,  double height) {
        var mh$ = gtk_render_frame$MH();
        try {
            mh$.invokeExact(context, cr, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_expander$MH() {
        return RuntimeHelper.requireNonNull(constants$2312.gtk_render_expander$MH,"gtk_render_expander");
    }
    public static void gtk_render_expander ( Addressable context,  Addressable cr,  double x,  double y,  double width,  double height) {
        var mh$ = gtk_render_expander$MH();
        try {
            mh$.invokeExact(context, cr, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$2312.gtk_render_focus$MH,"gtk_render_focus");
    }
    public static void gtk_render_focus ( Addressable context,  Addressable cr,  double x,  double y,  double width,  double height) {
        var mh$ = gtk_render_focus$MH();
        try {
            mh$.invokeExact(context, cr, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$2312.gtk_render_layout$MH,"gtk_render_layout");
    }
    public static void gtk_render_layout ( Addressable context,  Addressable cr,  double x,  double y,  Addressable layout) {
        var mh$ = gtk_render_layout$MH();
        try {
            mh$.invokeExact(context, cr, x, y, layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_line$MH() {
        return RuntimeHelper.requireNonNull(constants$2313.gtk_render_line$MH,"gtk_render_line");
    }
    public static void gtk_render_line ( Addressable context,  Addressable cr,  double x0,  double y0,  double x1,  double y1) {
        var mh$ = gtk_render_line$MH();
        try {
            mh$.invokeExact(context, cr, x0, y0, x1, y1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_handle$MH() {
        return RuntimeHelper.requireNonNull(constants$2313.gtk_render_handle$MH,"gtk_render_handle");
    }
    public static void gtk_render_handle ( Addressable context,  Addressable cr,  double x,  double y,  double width,  double height) {
        var mh$ = gtk_render_handle$MH();
        try {
            mh$.invokeExact(context, cr, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_activity$MH() {
        return RuntimeHelper.requireNonNull(constants$2313.gtk_render_activity$MH,"gtk_render_activity");
    }
    public static void gtk_render_activity ( Addressable context,  Addressable cr,  double x,  double y,  double width,  double height) {
        var mh$ = gtk_render_activity$MH();
        try {
            mh$.invokeExact(context, cr, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$2313.gtk_render_icon$MH,"gtk_render_icon");
    }
    public static void gtk_render_icon ( Addressable context,  Addressable cr,  Addressable texture,  double x,  double y) {
        var mh$ = gtk_render_icon$MH();
        try {
            mh$.invokeExact(context, cr, texture, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GTK_REVEALER_TRANSITION_TYPE_NONE() {
        return (int)0L;
    }
    public static int GTK_REVEALER_TRANSITION_TYPE_CROSSFADE() {
        return (int)1L;
    }
    public static int GTK_REVEALER_TRANSITION_TYPE_SLIDE_RIGHT() {
        return (int)2L;
    }
    public static int GTK_REVEALER_TRANSITION_TYPE_SLIDE_LEFT() {
        return (int)3L;
    }
    public static int GTK_REVEALER_TRANSITION_TYPE_SLIDE_UP() {
        return (int)4L;
    }
    public static int GTK_REVEALER_TRANSITION_TYPE_SLIDE_DOWN() {
        return (int)5L;
    }
    public static int GTK_REVEALER_TRANSITION_TYPE_SWING_RIGHT() {
        return (int)6L;
    }
    public static int GTK_REVEALER_TRANSITION_TYPE_SWING_LEFT() {
        return (int)7L;
    }
    public static int GTK_REVEALER_TRANSITION_TYPE_SWING_UP() {
        return (int)8L;
    }
    public static int GTK_REVEALER_TRANSITION_TYPE_SWING_DOWN() {
        return (int)9L;
    }
    public static MethodHandle gtk_revealer_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2313.gtk_revealer_get_type$MH,"gtk_revealer_get_type");
    }
    public static long gtk_revealer_get_type () {
        var mh$ = gtk_revealer_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_revealer_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2313.gtk_revealer_new$MH,"gtk_revealer_new");
    }
    public static MemoryAddress gtk_revealer_new () {
        var mh$ = gtk_revealer_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_revealer_get_reveal_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2314.gtk_revealer_get_reveal_child$MH,"gtk_revealer_get_reveal_child");
    }
    public static int gtk_revealer_get_reveal_child ( Addressable revealer) {
        var mh$ = gtk_revealer_get_reveal_child$MH();
        try {
            return (int)mh$.invokeExact(revealer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_revealer_set_reveal_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2314.gtk_revealer_set_reveal_child$MH,"gtk_revealer_set_reveal_child");
    }
    public static void gtk_revealer_set_reveal_child ( Addressable revealer,  int reveal_child) {
        var mh$ = gtk_revealer_set_reveal_child$MH();
        try {
            mh$.invokeExact(revealer, reveal_child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_revealer_get_child_revealed$MH() {
        return RuntimeHelper.requireNonNull(constants$2314.gtk_revealer_get_child_revealed$MH,"gtk_revealer_get_child_revealed");
    }
    public static int gtk_revealer_get_child_revealed ( Addressable revealer) {
        var mh$ = gtk_revealer_get_child_revealed$MH();
        try {
            return (int)mh$.invokeExact(revealer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_revealer_get_transition_duration$MH() {
        return RuntimeHelper.requireNonNull(constants$2314.gtk_revealer_get_transition_duration$MH,"gtk_revealer_get_transition_duration");
    }
    public static int gtk_revealer_get_transition_duration ( Addressable revealer) {
        var mh$ = gtk_revealer_get_transition_duration$MH();
        try {
            return (int)mh$.invokeExact(revealer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_revealer_set_transition_duration$MH() {
        return RuntimeHelper.requireNonNull(constants$2314.gtk_revealer_set_transition_duration$MH,"gtk_revealer_set_transition_duration");
    }
    public static void gtk_revealer_set_transition_duration ( Addressable revealer,  int duration) {
        var mh$ = gtk_revealer_set_transition_duration$MH();
        try {
            mh$.invokeExact(revealer, duration);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_revealer_set_transition_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2314.gtk_revealer_set_transition_type$MH,"gtk_revealer_set_transition_type");
    }
    public static void gtk_revealer_set_transition_type ( Addressable revealer,  int transition) {
        var mh$ = gtk_revealer_set_transition_type$MH();
        try {
            mh$.invokeExact(revealer, transition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_revealer_get_transition_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2315.gtk_revealer_get_transition_type$MH,"gtk_revealer_get_transition_type");
    }
    public static int gtk_revealer_get_transition_type ( Addressable revealer) {
        var mh$ = gtk_revealer_get_transition_type$MH();
        try {
            return (int)mh$.invokeExact(revealer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_revealer_set_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2315.gtk_revealer_set_child$MH,"gtk_revealer_set_child");
    }
    public static void gtk_revealer_set_child ( Addressable revealer,  Addressable child) {
        var mh$ = gtk_revealer_set_child$MH();
        try {
            mh$.invokeExact(revealer, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_revealer_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2315.gtk_revealer_get_child$MH,"gtk_revealer_get_child");
    }
    public static MemoryAddress gtk_revealer_get_child ( Addressable revealer) {
        var mh$ = gtk_revealer_get_child$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(revealer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_root_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2315.gtk_root_get_type$MH,"gtk_root_get_type");
    }
    public static long gtk_root_get_type () {
        var mh$ = gtk_root_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkRoot_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRoot_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRoot_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRoot_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkRoot$MH() {
        return RuntimeHelper.requireNonNull(constants$2315.glib_autoptr_clear_GtkRoot$MH,"glib_autoptr_clear_GtkRoot");
    }
    public static void glib_autoptr_clear_GtkRoot ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkRoot$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkRoot$MH() {
        return RuntimeHelper.requireNonNull(constants$2315.glib_autoptr_cleanup_GtkRoot$MH,"glib_autoptr_cleanup_GtkRoot");
    }
    public static void glib_autoptr_cleanup_GtkRoot ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkRoot$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkRoot$MH() {
        return RuntimeHelper.requireNonNull(constants$2316.glib_listautoptr_cleanup_GtkRoot$MH,"glib_listautoptr_cleanup_GtkRoot");
    }
    public static void glib_listautoptr_cleanup_GtkRoot ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkRoot$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkRoot$MH() {
        return RuntimeHelper.requireNonNull(constants$2316.glib_slistautoptr_cleanup_GtkRoot$MH,"glib_slistautoptr_cleanup_GtkRoot");
    }
    public static void glib_slistautoptr_cleanup_GtkRoot ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkRoot$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkRoot$MH() {
        return RuntimeHelper.requireNonNull(constants$2316.glib_queueautoptr_cleanup_GtkRoot$MH,"glib_queueautoptr_cleanup_GtkRoot");
    }
    public static void glib_queueautoptr_cleanup_GtkRoot ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkRoot$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_ROOT$MH() {
        return RuntimeHelper.requireNonNull(constants$2316.GTK_ROOT$MH,"GTK_ROOT");
    }
    public static MemoryAddress GTK_ROOT ( Addressable ptr) {
        var mh$ = GTK_ROOT$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_ROOT$MH() {
        return RuntimeHelper.requireNonNull(constants$2316.GTK_IS_ROOT$MH,"GTK_IS_ROOT");
    }
    public static int GTK_IS_ROOT ( Addressable ptr) {
        var mh$ = GTK_IS_ROOT$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_ROOT_GET_IFACE$MH() {
        return RuntimeHelper.requireNonNull(constants$2316.GTK_ROOT_GET_IFACE$MH,"GTK_ROOT_GET_IFACE");
    }
    public static MemoryAddress GTK_ROOT_GET_IFACE ( Addressable ptr) {
        var mh$ = GTK_ROOT_GET_IFACE$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_root_get_display$MH() {
        return RuntimeHelper.requireNonNull(constants$2317.gtk_root_get_display$MH,"gtk_root_get_display");
    }
    public static MemoryAddress gtk_root_get_display ( Addressable self) {
        var mh$ = gtk_root_get_display$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_root_set_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$2317.gtk_root_set_focus$MH,"gtk_root_set_focus");
    }
    public static void gtk_root_set_focus ( Addressable self,  Addressable focus) {
        var mh$ = gtk_root_set_focus$MH();
        try {
            mh$.invokeExact(self, focus);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_root_get_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$2317.gtk_root_get_focus$MH,"gtk_root_get_focus");
    }
    public static MemoryAddress gtk_root_get_focus ( Addressable self) {
        var mh$ = gtk_root_get_focus$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2317.gtk_scale_get_type$MH,"gtk_scale_get_type");
    }
    public static long gtk_scale_get_type () {
        var mh$ = gtk_scale_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2318.gtk_scale_new$MH,"gtk_scale_new");
    }
    public static MemoryAddress gtk_scale_new ( int orientation,  Addressable adjustment) {
        var mh$ = gtk_scale_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(orientation, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_new_with_range$MH() {
        return RuntimeHelper.requireNonNull(constants$2318.gtk_scale_new_with_range$MH,"gtk_scale_new_with_range");
    }
    public static MemoryAddress gtk_scale_new_with_range ( int orientation,  double min,  double max,  double step) {
        var mh$ = gtk_scale_new_with_range$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(orientation, min, max, step);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_set_digits$MH() {
        return RuntimeHelper.requireNonNull(constants$2318.gtk_scale_set_digits$MH,"gtk_scale_set_digits");
    }
    public static void gtk_scale_set_digits ( Addressable scale,  int digits) {
        var mh$ = gtk_scale_set_digits$MH();
        try {
            mh$.invokeExact(scale, digits);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_get_digits$MH() {
        return RuntimeHelper.requireNonNull(constants$2318.gtk_scale_get_digits$MH,"gtk_scale_get_digits");
    }
    public static int gtk_scale_get_digits ( Addressable scale) {
        var mh$ = gtk_scale_get_digits$MH();
        try {
            return (int)mh$.invokeExact(scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_set_draw_value$MH() {
        return RuntimeHelper.requireNonNull(constants$2318.gtk_scale_set_draw_value$MH,"gtk_scale_set_draw_value");
    }
    public static void gtk_scale_set_draw_value ( Addressable scale,  int draw_value) {
        var mh$ = gtk_scale_set_draw_value$MH();
        try {
            mh$.invokeExact(scale, draw_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_get_draw_value$MH() {
        return RuntimeHelper.requireNonNull(constants$2318.gtk_scale_get_draw_value$MH,"gtk_scale_get_draw_value");
    }
    public static int gtk_scale_get_draw_value ( Addressable scale) {
        var mh$ = gtk_scale_get_draw_value$MH();
        try {
            return (int)mh$.invokeExact(scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_set_has_origin$MH() {
        return RuntimeHelper.requireNonNull(constants$2319.gtk_scale_set_has_origin$MH,"gtk_scale_set_has_origin");
    }
    public static void gtk_scale_set_has_origin ( Addressable scale,  int has_origin) {
        var mh$ = gtk_scale_set_has_origin$MH();
        try {
            mh$.invokeExact(scale, has_origin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_get_has_origin$MH() {
        return RuntimeHelper.requireNonNull(constants$2319.gtk_scale_get_has_origin$MH,"gtk_scale_get_has_origin");
    }
    public static int gtk_scale_get_has_origin ( Addressable scale) {
        var mh$ = gtk_scale_get_has_origin$MH();
        try {
            return (int)mh$.invokeExact(scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_set_value_pos$MH() {
        return RuntimeHelper.requireNonNull(constants$2319.gtk_scale_set_value_pos$MH,"gtk_scale_set_value_pos");
    }
    public static void gtk_scale_set_value_pos ( Addressable scale,  int pos) {
        var mh$ = gtk_scale_set_value_pos$MH();
        try {
            mh$.invokeExact(scale, pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_get_value_pos$MH() {
        return RuntimeHelper.requireNonNull(constants$2319.gtk_scale_get_value_pos$MH,"gtk_scale_get_value_pos");
    }
    public static int gtk_scale_get_value_pos ( Addressable scale) {
        var mh$ = gtk_scale_get_value_pos$MH();
        try {
            return (int)mh$.invokeExact(scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_get_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$2319.gtk_scale_get_layout$MH,"gtk_scale_get_layout");
    }
    public static MemoryAddress gtk_scale_get_layout ( Addressable scale) {
        var mh$ = gtk_scale_get_layout$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_get_layout_offsets$MH() {
        return RuntimeHelper.requireNonNull(constants$2319.gtk_scale_get_layout_offsets$MH,"gtk_scale_get_layout_offsets");
    }
    public static void gtk_scale_get_layout_offsets ( Addressable scale,  Addressable x,  Addressable y) {
        var mh$ = gtk_scale_get_layout_offsets$MH();
        try {
            mh$.invokeExact(scale, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_add_mark$MH() {
        return RuntimeHelper.requireNonNull(constants$2320.gtk_scale_add_mark$MH,"gtk_scale_add_mark");
    }
    public static void gtk_scale_add_mark ( Addressable scale,  double value,  int position,  Addressable markup) {
        var mh$ = gtk_scale_add_mark$MH();
        try {
            mh$.invokeExact(scale, value, position, markup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_clear_marks$MH() {
        return RuntimeHelper.requireNonNull(constants$2320.gtk_scale_clear_marks$MH,"gtk_scale_clear_marks");
    }
    public static void gtk_scale_clear_marks ( Addressable scale) {
        var mh$ = gtk_scale_clear_marks$MH();
        try {
            mh$.invokeExact(scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_set_format_value_func$MH() {
        return RuntimeHelper.requireNonNull(constants$2320.gtk_scale_set_format_value_func$MH,"gtk_scale_set_format_value_func");
    }
    public static void gtk_scale_set_format_value_func ( Addressable scale,  Addressable func,  Addressable user_data,  Addressable destroy_notify) {
        var mh$ = gtk_scale_set_format_value_func$MH();
        try {
            mh$.invokeExact(scale, func, user_data, destroy_notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2320.gtk_scale_button_get_type$MH,"gtk_scale_button_get_type");
    }
    public static long gtk_scale_button_get_type () {
        var mh$ = gtk_scale_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2320.gtk_scale_button_new$MH,"gtk_scale_button_new");
    }
    public static MemoryAddress gtk_scale_button_new ( double min,  double max,  double step,  Addressable icons) {
        var mh$ = gtk_scale_button_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(min, max, step, icons);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_button_set_icons$MH() {
        return RuntimeHelper.requireNonNull(constants$2320.gtk_scale_button_set_icons$MH,"gtk_scale_button_set_icons");
    }
    public static void gtk_scale_button_set_icons ( Addressable button,  Addressable icons) {
        var mh$ = gtk_scale_button_set_icons$MH();
        try {
            mh$.invokeExact(button, icons);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_button_get_value$MH() {
        return RuntimeHelper.requireNonNull(constants$2321.gtk_scale_button_get_value$MH,"gtk_scale_button_get_value");
    }
    public static double gtk_scale_button_get_value ( Addressable button) {
        var mh$ = gtk_scale_button_get_value$MH();
        try {
            return (double)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_button_set_value$MH() {
        return RuntimeHelper.requireNonNull(constants$2321.gtk_scale_button_set_value$MH,"gtk_scale_button_set_value");
    }
    public static void gtk_scale_button_set_value ( Addressable button,  double value) {
        var mh$ = gtk_scale_button_set_value$MH();
        try {
            mh$.invokeExact(button, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_button_get_adjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$2321.gtk_scale_button_get_adjustment$MH,"gtk_scale_button_get_adjustment");
    }
    public static MemoryAddress gtk_scale_button_get_adjustment ( Addressable button) {
        var mh$ = gtk_scale_button_get_adjustment$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_button_set_adjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$2321.gtk_scale_button_set_adjustment$MH,"gtk_scale_button_set_adjustment");
    }
    public static void gtk_scale_button_set_adjustment ( Addressable button,  Addressable adjustment) {
        var mh$ = gtk_scale_button_set_adjustment$MH();
        try {
            mh$.invokeExact(button, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_button_get_plus_button$MH() {
        return RuntimeHelper.requireNonNull(constants$2321.gtk_scale_button_get_plus_button$MH,"gtk_scale_button_get_plus_button");
    }
    public static MemoryAddress gtk_scale_button_get_plus_button ( Addressable button) {
        var mh$ = gtk_scale_button_get_plus_button$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_button_get_minus_button$MH() {
        return RuntimeHelper.requireNonNull(constants$2321.gtk_scale_button_get_minus_button$MH,"gtk_scale_button_get_minus_button");
    }
    public static MemoryAddress gtk_scale_button_get_minus_button ( Addressable button) {
        var mh$ = gtk_scale_button_get_minus_button$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scale_button_get_popup$MH() {
        return RuntimeHelper.requireNonNull(constants$2322.gtk_scale_button_get_popup$MH,"gtk_scale_button_get_popup");
    }
    public static MemoryAddress gtk_scale_button_get_popup ( Addressable button) {
        var mh$ = gtk_scale_button_get_popup$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollable_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2322.gtk_scrollable_get_type$MH,"gtk_scrollable_get_type");
    }
    public static long gtk_scrollable_get_type () {
        var mh$ = gtk_scrollable_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollable_get_hadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$2322.gtk_scrollable_get_hadjustment$MH,"gtk_scrollable_get_hadjustment");
    }
    public static MemoryAddress gtk_scrollable_get_hadjustment ( Addressable scrollable) {
        var mh$ = gtk_scrollable_get_hadjustment$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(scrollable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollable_set_hadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$2322.gtk_scrollable_set_hadjustment$MH,"gtk_scrollable_set_hadjustment");
    }
    public static void gtk_scrollable_set_hadjustment ( Addressable scrollable,  Addressable hadjustment) {
        var mh$ = gtk_scrollable_set_hadjustment$MH();
        try {
            mh$.invokeExact(scrollable, hadjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollable_get_vadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$2322.gtk_scrollable_get_vadjustment$MH,"gtk_scrollable_get_vadjustment");
    }
    public static MemoryAddress gtk_scrollable_get_vadjustment ( Addressable scrollable) {
        var mh$ = gtk_scrollable_get_vadjustment$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(scrollable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollable_set_vadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$2322.gtk_scrollable_set_vadjustment$MH,"gtk_scrollable_set_vadjustment");
    }
    public static void gtk_scrollable_set_vadjustment ( Addressable scrollable,  Addressable vadjustment) {
        var mh$ = gtk_scrollable_set_vadjustment$MH();
        try {
            mh$.invokeExact(scrollable, vadjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollable_get_hscroll_policy$MH() {
        return RuntimeHelper.requireNonNull(constants$2323.gtk_scrollable_get_hscroll_policy$MH,"gtk_scrollable_get_hscroll_policy");
    }
    public static int gtk_scrollable_get_hscroll_policy ( Addressable scrollable) {
        var mh$ = gtk_scrollable_get_hscroll_policy$MH();
        try {
            return (int)mh$.invokeExact(scrollable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollable_set_hscroll_policy$MH() {
        return RuntimeHelper.requireNonNull(constants$2323.gtk_scrollable_set_hscroll_policy$MH,"gtk_scrollable_set_hscroll_policy");
    }
    public static void gtk_scrollable_set_hscroll_policy ( Addressable scrollable,  int policy) {
        var mh$ = gtk_scrollable_set_hscroll_policy$MH();
        try {
            mh$.invokeExact(scrollable, policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollable_get_vscroll_policy$MH() {
        return RuntimeHelper.requireNonNull(constants$2323.gtk_scrollable_get_vscroll_policy$MH,"gtk_scrollable_get_vscroll_policy");
    }
    public static int gtk_scrollable_get_vscroll_policy ( Addressable scrollable) {
        var mh$ = gtk_scrollable_get_vscroll_policy$MH();
        try {
            return (int)mh$.invokeExact(scrollable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollable_set_vscroll_policy$MH() {
        return RuntimeHelper.requireNonNull(constants$2323.gtk_scrollable_set_vscroll_policy$MH,"gtk_scrollable_set_vscroll_policy");
    }
    public static void gtk_scrollable_set_vscroll_policy ( Addressable scrollable,  int policy) {
        var mh$ = gtk_scrollable_set_vscroll_policy$MH();
        try {
            mh$.invokeExact(scrollable, policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollable_get_border$MH() {
        return RuntimeHelper.requireNonNull(constants$2323.gtk_scrollable_get_border$MH,"gtk_scrollable_get_border");
    }
    public static int gtk_scrollable_get_border ( Addressable scrollable,  Addressable border) {
        var mh$ = gtk_scrollable_get_border$MH();
        try {
            return (int)mh$.invokeExact(scrollable, border);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollbar_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2323.gtk_scrollbar_get_type$MH,"gtk_scrollbar_get_type");
    }
    public static long gtk_scrollbar_get_type () {
        var mh$ = gtk_scrollbar_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollbar_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2324.gtk_scrollbar_new$MH,"gtk_scrollbar_new");
    }
    public static MemoryAddress gtk_scrollbar_new ( int orientation,  Addressable adjustment) {
        var mh$ = gtk_scrollbar_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(orientation, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollbar_set_adjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$2324.gtk_scrollbar_set_adjustment$MH,"gtk_scrollbar_set_adjustment");
    }
    public static void gtk_scrollbar_set_adjustment ( Addressable self,  Addressable adjustment) {
        var mh$ = gtk_scrollbar_set_adjustment$MH();
        try {
            mh$.invokeExact(self, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrollbar_get_adjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$2324.gtk_scrollbar_get_adjustment$MH,"gtk_scrollbar_get_adjustment");
    }
    public static MemoryAddress gtk_scrollbar_get_adjustment ( Addressable self) {
        var mh$ = gtk_scrollbar_get_adjustment$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GTK_CORNER_TOP_LEFT() {
        return (int)0L;
    }
    public static int GTK_CORNER_BOTTOM_LEFT() {
        return (int)1L;
    }
    public static int GTK_CORNER_TOP_RIGHT() {
        return (int)2L;
    }
    public static int GTK_CORNER_BOTTOM_RIGHT() {
        return (int)3L;
    }
    public static int GTK_POLICY_ALWAYS() {
        return (int)0L;
    }
    public static int GTK_POLICY_AUTOMATIC() {
        return (int)1L;
    }
    public static int GTK_POLICY_NEVER() {
        return (int)2L;
    }
    public static int GTK_POLICY_EXTERNAL() {
        return (int)3L;
    }
    public static MethodHandle gtk_scrolled_window_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2324.gtk_scrolled_window_get_type$MH,"gtk_scrolled_window_get_type");
    }
    public static long gtk_scrolled_window_get_type () {
        var mh$ = gtk_scrolled_window_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2324.gtk_scrolled_window_new$MH,"gtk_scrolled_window_new");
    }
    public static MemoryAddress gtk_scrolled_window_new () {
        var mh$ = gtk_scrolled_window_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_hadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$2324.gtk_scrolled_window_set_hadjustment$MH,"gtk_scrolled_window_set_hadjustment");
    }
    public static void gtk_scrolled_window_set_hadjustment ( Addressable scrolled_window,  Addressable hadjustment) {
        var mh$ = gtk_scrolled_window_set_hadjustment$MH();
        try {
            mh$.invokeExact(scrolled_window, hadjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_vadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$2325.gtk_scrolled_window_set_vadjustment$MH,"gtk_scrolled_window_set_vadjustment");
    }
    public static void gtk_scrolled_window_set_vadjustment ( Addressable scrolled_window,  Addressable vadjustment) {
        var mh$ = gtk_scrolled_window_set_vadjustment$MH();
        try {
            mh$.invokeExact(scrolled_window, vadjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_hadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$2325.gtk_scrolled_window_get_hadjustment$MH,"gtk_scrolled_window_get_hadjustment");
    }
    public static MemoryAddress gtk_scrolled_window_get_hadjustment ( Addressable scrolled_window) {
        var mh$ = gtk_scrolled_window_get_hadjustment$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_vadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$2325.gtk_scrolled_window_get_vadjustment$MH,"gtk_scrolled_window_get_vadjustment");
    }
    public static MemoryAddress gtk_scrolled_window_get_vadjustment ( Addressable scrolled_window) {
        var mh$ = gtk_scrolled_window_get_vadjustment$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_hscrollbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2325.gtk_scrolled_window_get_hscrollbar$MH,"gtk_scrolled_window_get_hscrollbar");
    }
    public static MemoryAddress gtk_scrolled_window_get_hscrollbar ( Addressable scrolled_window) {
        var mh$ = gtk_scrolled_window_get_hscrollbar$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_vscrollbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2325.gtk_scrolled_window_get_vscrollbar$MH,"gtk_scrolled_window_get_vscrollbar");
    }
    public static MemoryAddress gtk_scrolled_window_get_vscrollbar ( Addressable scrolled_window) {
        var mh$ = gtk_scrolled_window_get_vscrollbar$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_policy$MH() {
        return RuntimeHelper.requireNonNull(constants$2325.gtk_scrolled_window_set_policy$MH,"gtk_scrolled_window_set_policy");
    }
    public static void gtk_scrolled_window_set_policy ( Addressable scrolled_window,  int hscrollbar_policy,  int vscrollbar_policy) {
        var mh$ = gtk_scrolled_window_set_policy$MH();
        try {
            mh$.invokeExact(scrolled_window, hscrollbar_policy, vscrollbar_policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_policy$MH() {
        return RuntimeHelper.requireNonNull(constants$2326.gtk_scrolled_window_get_policy$MH,"gtk_scrolled_window_get_policy");
    }
    public static void gtk_scrolled_window_get_policy ( Addressable scrolled_window,  Addressable hscrollbar_policy,  Addressable vscrollbar_policy) {
        var mh$ = gtk_scrolled_window_get_policy$MH();
        try {
            mh$.invokeExact(scrolled_window, hscrollbar_policy, vscrollbar_policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_placement$MH() {
        return RuntimeHelper.requireNonNull(constants$2326.gtk_scrolled_window_set_placement$MH,"gtk_scrolled_window_set_placement");
    }
    public static void gtk_scrolled_window_set_placement ( Addressable scrolled_window,  int window_placement) {
        var mh$ = gtk_scrolled_window_set_placement$MH();
        try {
            mh$.invokeExact(scrolled_window, window_placement);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_unset_placement$MH() {
        return RuntimeHelper.requireNonNull(constants$2326.gtk_scrolled_window_unset_placement$MH,"gtk_scrolled_window_unset_placement");
    }
    public static void gtk_scrolled_window_unset_placement ( Addressable scrolled_window) {
        var mh$ = gtk_scrolled_window_unset_placement$MH();
        try {
            mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_placement$MH() {
        return RuntimeHelper.requireNonNull(constants$2326.gtk_scrolled_window_get_placement$MH,"gtk_scrolled_window_get_placement");
    }
    public static int gtk_scrolled_window_get_placement ( Addressable scrolled_window) {
        var mh$ = gtk_scrolled_window_get_placement$MH();
        try {
            return (int)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_has_frame$MH() {
        return RuntimeHelper.requireNonNull(constants$2326.gtk_scrolled_window_set_has_frame$MH,"gtk_scrolled_window_set_has_frame");
    }
    public static void gtk_scrolled_window_set_has_frame ( Addressable scrolled_window,  int has_frame) {
        var mh$ = gtk_scrolled_window_set_has_frame$MH();
        try {
            mh$.invokeExact(scrolled_window, has_frame);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_has_frame$MH() {
        return RuntimeHelper.requireNonNull(constants$2326.gtk_scrolled_window_get_has_frame$MH,"gtk_scrolled_window_get_has_frame");
    }
    public static int gtk_scrolled_window_get_has_frame ( Addressable scrolled_window) {
        var mh$ = gtk_scrolled_window_get_has_frame$MH();
        try {
            return (int)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_min_content_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2327.gtk_scrolled_window_get_min_content_width$MH,"gtk_scrolled_window_get_min_content_width");
    }
    public static int gtk_scrolled_window_get_min_content_width ( Addressable scrolled_window) {
        var mh$ = gtk_scrolled_window_get_min_content_width$MH();
        try {
            return (int)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_min_content_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2327.gtk_scrolled_window_set_min_content_width$MH,"gtk_scrolled_window_set_min_content_width");
    }
    public static void gtk_scrolled_window_set_min_content_width ( Addressable scrolled_window,  int width) {
        var mh$ = gtk_scrolled_window_set_min_content_width$MH();
        try {
            mh$.invokeExact(scrolled_window, width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_min_content_height$MH() {
        return RuntimeHelper.requireNonNull(constants$2327.gtk_scrolled_window_get_min_content_height$MH,"gtk_scrolled_window_get_min_content_height");
    }
    public static int gtk_scrolled_window_get_min_content_height ( Addressable scrolled_window) {
        var mh$ = gtk_scrolled_window_get_min_content_height$MH();
        try {
            return (int)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_min_content_height$MH() {
        return RuntimeHelper.requireNonNull(constants$2327.gtk_scrolled_window_set_min_content_height$MH,"gtk_scrolled_window_set_min_content_height");
    }
    public static void gtk_scrolled_window_set_min_content_height ( Addressable scrolled_window,  int height) {
        var mh$ = gtk_scrolled_window_set_min_content_height$MH();
        try {
            mh$.invokeExact(scrolled_window, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_kinetic_scrolling$MH() {
        return RuntimeHelper.requireNonNull(constants$2327.gtk_scrolled_window_set_kinetic_scrolling$MH,"gtk_scrolled_window_set_kinetic_scrolling");
    }
    public static void gtk_scrolled_window_set_kinetic_scrolling ( Addressable scrolled_window,  int kinetic_scrolling) {
        var mh$ = gtk_scrolled_window_set_kinetic_scrolling$MH();
        try {
            mh$.invokeExact(scrolled_window, kinetic_scrolling);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_kinetic_scrolling$MH() {
        return RuntimeHelper.requireNonNull(constants$2327.gtk_scrolled_window_get_kinetic_scrolling$MH,"gtk_scrolled_window_get_kinetic_scrolling");
    }
    public static int gtk_scrolled_window_get_kinetic_scrolling ( Addressable scrolled_window) {
        var mh$ = gtk_scrolled_window_get_kinetic_scrolling$MH();
        try {
            return (int)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_overlay_scrolling$MH() {
        return RuntimeHelper.requireNonNull(constants$2328.gtk_scrolled_window_set_overlay_scrolling$MH,"gtk_scrolled_window_set_overlay_scrolling");
    }
    public static void gtk_scrolled_window_set_overlay_scrolling ( Addressable scrolled_window,  int overlay_scrolling) {
        var mh$ = gtk_scrolled_window_set_overlay_scrolling$MH();
        try {
            mh$.invokeExact(scrolled_window, overlay_scrolling);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_overlay_scrolling$MH() {
        return RuntimeHelper.requireNonNull(constants$2328.gtk_scrolled_window_get_overlay_scrolling$MH,"gtk_scrolled_window_get_overlay_scrolling");
    }
    public static int gtk_scrolled_window_get_overlay_scrolling ( Addressable scrolled_window) {
        var mh$ = gtk_scrolled_window_get_overlay_scrolling$MH();
        try {
            return (int)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_max_content_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2328.gtk_scrolled_window_set_max_content_width$MH,"gtk_scrolled_window_set_max_content_width");
    }
    public static void gtk_scrolled_window_set_max_content_width ( Addressable scrolled_window,  int width) {
        var mh$ = gtk_scrolled_window_set_max_content_width$MH();
        try {
            mh$.invokeExact(scrolled_window, width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_max_content_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2328.gtk_scrolled_window_get_max_content_width$MH,"gtk_scrolled_window_get_max_content_width");
    }
    public static int gtk_scrolled_window_get_max_content_width ( Addressable scrolled_window) {
        var mh$ = gtk_scrolled_window_get_max_content_width$MH();
        try {
            return (int)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_max_content_height$MH() {
        return RuntimeHelper.requireNonNull(constants$2328.gtk_scrolled_window_set_max_content_height$MH,"gtk_scrolled_window_set_max_content_height");
    }
    public static void gtk_scrolled_window_set_max_content_height ( Addressable scrolled_window,  int height) {
        var mh$ = gtk_scrolled_window_set_max_content_height$MH();
        try {
            mh$.invokeExact(scrolled_window, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_max_content_height$MH() {
        return RuntimeHelper.requireNonNull(constants$2328.gtk_scrolled_window_get_max_content_height$MH,"gtk_scrolled_window_get_max_content_height");
    }
    public static int gtk_scrolled_window_get_max_content_height ( Addressable scrolled_window) {
        var mh$ = gtk_scrolled_window_get_max_content_height$MH();
        try {
            return (int)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_propagate_natural_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2329.gtk_scrolled_window_set_propagate_natural_width$MH,"gtk_scrolled_window_set_propagate_natural_width");
    }
    public static void gtk_scrolled_window_set_propagate_natural_width ( Addressable scrolled_window,  int propagate) {
        var mh$ = gtk_scrolled_window_set_propagate_natural_width$MH();
        try {
            mh$.invokeExact(scrolled_window, propagate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_propagate_natural_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2329.gtk_scrolled_window_get_propagate_natural_width$MH,"gtk_scrolled_window_get_propagate_natural_width");
    }
    public static int gtk_scrolled_window_get_propagate_natural_width ( Addressable scrolled_window) {
        var mh$ = gtk_scrolled_window_get_propagate_natural_width$MH();
        try {
            return (int)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_propagate_natural_height$MH() {
        return RuntimeHelper.requireNonNull(constants$2329.gtk_scrolled_window_set_propagate_natural_height$MH,"gtk_scrolled_window_set_propagate_natural_height");
    }
    public static void gtk_scrolled_window_set_propagate_natural_height ( Addressable scrolled_window,  int propagate) {
        var mh$ = gtk_scrolled_window_set_propagate_natural_height$MH();
        try {
            mh$.invokeExact(scrolled_window, propagate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_propagate_natural_height$MH() {
        return RuntimeHelper.requireNonNull(constants$2329.gtk_scrolled_window_get_propagate_natural_height$MH,"gtk_scrolled_window_get_propagate_natural_height");
    }
    public static int gtk_scrolled_window_get_propagate_natural_height ( Addressable scrolled_window) {
        var mh$ = gtk_scrolled_window_get_propagate_natural_height$MH();
        try {
            return (int)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_set_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2329.gtk_scrolled_window_set_child$MH,"gtk_scrolled_window_set_child");
    }
    public static void gtk_scrolled_window_set_child ( Addressable scrolled_window,  Addressable child) {
        var mh$ = gtk_scrolled_window_set_child$MH();
        try {
            mh$.invokeExact(scrolled_window, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_scrolled_window_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2329.gtk_scrolled_window_get_child$MH,"gtk_scrolled_window_get_child");
    }
    public static MemoryAddress gtk_scrolled_window_get_child ( Addressable scrolled_window) {
        var mh$ = gtk_scrolled_window_get_child$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(scrolled_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_search_bar_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2330.gtk_search_bar_get_type$MH,"gtk_search_bar_get_type");
    }
    public static long gtk_search_bar_get_type () {
        var mh$ = gtk_search_bar_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_search_bar_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2330.gtk_search_bar_new$MH,"gtk_search_bar_new");
    }
    public static MemoryAddress gtk_search_bar_new () {
        var mh$ = gtk_search_bar_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_search_bar_connect_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$2330.gtk_search_bar_connect_entry$MH,"gtk_search_bar_connect_entry");
    }
    public static void gtk_search_bar_connect_entry ( Addressable bar,  Addressable entry) {
        var mh$ = gtk_search_bar_connect_entry$MH();
        try {
            mh$.invokeExact(bar, entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_search_bar_get_search_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2330.gtk_search_bar_get_search_mode$MH,"gtk_search_bar_get_search_mode");
    }
    public static int gtk_search_bar_get_search_mode ( Addressable bar) {
        var mh$ = gtk_search_bar_get_search_mode$MH();
        try {
            return (int)mh$.invokeExact(bar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_search_bar_set_search_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2330.gtk_search_bar_set_search_mode$MH,"gtk_search_bar_set_search_mode");
    }
    public static void gtk_search_bar_set_search_mode ( Addressable bar,  int search_mode) {
        var mh$ = gtk_search_bar_set_search_mode$MH();
        try {
            mh$.invokeExact(bar, search_mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_search_bar_get_show_close_button$MH() {
        return RuntimeHelper.requireNonNull(constants$2330.gtk_search_bar_get_show_close_button$MH,"gtk_search_bar_get_show_close_button");
    }
    public static int gtk_search_bar_get_show_close_button ( Addressable bar) {
        var mh$ = gtk_search_bar_get_show_close_button$MH();
        try {
            return (int)mh$.invokeExact(bar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_search_bar_set_show_close_button$MH() {
        return RuntimeHelper.requireNonNull(constants$2331.gtk_search_bar_set_show_close_button$MH,"gtk_search_bar_set_show_close_button");
    }
    public static void gtk_search_bar_set_show_close_button ( Addressable bar,  int visible) {
        var mh$ = gtk_search_bar_set_show_close_button$MH();
        try {
            mh$.invokeExact(bar, visible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_search_bar_set_key_capture_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2331.gtk_search_bar_set_key_capture_widget$MH,"gtk_search_bar_set_key_capture_widget");
    }
    public static void gtk_search_bar_set_key_capture_widget ( Addressable bar,  Addressable widget) {
        var mh$ = gtk_search_bar_set_key_capture_widget$MH();
        try {
            mh$.invokeExact(bar, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_search_bar_get_key_capture_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2331.gtk_search_bar_get_key_capture_widget$MH,"gtk_search_bar_get_key_capture_widget");
    }
    public static MemoryAddress gtk_search_bar_get_key_capture_widget ( Addressable bar) {
        var mh$ = gtk_search_bar_get_key_capture_widget$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(bar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_search_bar_set_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2331.gtk_search_bar_set_child$MH,"gtk_search_bar_set_child");
    }
    public static void gtk_search_bar_set_child ( Addressable bar,  Addressable child) {
        var mh$ = gtk_search_bar_set_child$MH();
        try {
            mh$.invokeExact(bar, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_search_bar_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2331.gtk_search_bar_get_child$MH,"gtk_search_bar_get_child");
    }
    public static MemoryAddress gtk_search_bar_get_child ( Addressable bar) {
        var mh$ = gtk_search_bar_get_child$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(bar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_search_entry_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2331.gtk_search_entry_get_type$MH,"gtk_search_entry_get_type");
    }
    public static long gtk_search_entry_get_type () {
        var mh$ = gtk_search_entry_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_search_entry_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2332.gtk_search_entry_new$MH,"gtk_search_entry_new");
    }
    public static MemoryAddress gtk_search_entry_new () {
        var mh$ = gtk_search_entry_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_search_entry_set_key_capture_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2332.gtk_search_entry_set_key_capture_widget$MH,"gtk_search_entry_set_key_capture_widget");
    }
    public static void gtk_search_entry_set_key_capture_widget ( Addressable entry,  Addressable widget) {
        var mh$ = gtk_search_entry_set_key_capture_widget$MH();
        try {
            mh$.invokeExact(entry, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_search_entry_get_key_capture_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2332.gtk_search_entry_get_key_capture_widget$MH,"gtk_search_entry_get_key_capture_widget");
    }
    public static MemoryAddress gtk_search_entry_get_key_capture_widget ( Addressable entry) {
        var mh$ = gtk_search_entry_get_key_capture_widget$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_selection_filter_model_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2332.gtk_selection_filter_model_get_type$MH,"gtk_selection_filter_model_get_type");
    }
    public static long gtk_selection_filter_model_get_type () {
        var mh$ = gtk_selection_filter_model_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkSelectionFilterModel_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSelectionFilterModel_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSelectionFilterModel_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSelectionFilterModel_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkSelectionFilterModel$MH() {
        return RuntimeHelper.requireNonNull(constants$2332.glib_autoptr_clear_GtkSelectionFilterModel$MH,"glib_autoptr_clear_GtkSelectionFilterModel");
    }
    public static void glib_autoptr_clear_GtkSelectionFilterModel ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkSelectionFilterModel$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkSelectionFilterModel$MH() {
        return RuntimeHelper.requireNonNull(constants$2332.glib_autoptr_cleanup_GtkSelectionFilterModel$MH,"glib_autoptr_cleanup_GtkSelectionFilterModel");
    }
    public static void glib_autoptr_cleanup_GtkSelectionFilterModel ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkSelectionFilterModel$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkSelectionFilterModel$MH() {
        return RuntimeHelper.requireNonNull(constants$2333.glib_listautoptr_cleanup_GtkSelectionFilterModel$MH,"glib_listautoptr_cleanup_GtkSelectionFilterModel");
    }
    public static void glib_listautoptr_cleanup_GtkSelectionFilterModel ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkSelectionFilterModel$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkSelectionFilterModel$MH() {
        return RuntimeHelper.requireNonNull(constants$2333.glib_slistautoptr_cleanup_GtkSelectionFilterModel$MH,"glib_slistautoptr_cleanup_GtkSelectionFilterModel");
    }
    public static void glib_slistautoptr_cleanup_GtkSelectionFilterModel ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkSelectionFilterModel$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkSelectionFilterModel$MH() {
        return RuntimeHelper.requireNonNull(constants$2333.glib_queueautoptr_cleanup_GtkSelectionFilterModel$MH,"glib_queueautoptr_cleanup_GtkSelectionFilterModel");
    }
    public static void glib_queueautoptr_cleanup_GtkSelectionFilterModel ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkSelectionFilterModel$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkSelectionFilterModelClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSelectionFilterModelClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSelectionFilterModelClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSelectionFilterModelClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkSelectionFilterModelClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2333.glib_autoptr_clear_GtkSelectionFilterModelClass$MH,"glib_autoptr_clear_GtkSelectionFilterModelClass");
    }
    public static void glib_autoptr_clear_GtkSelectionFilterModelClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkSelectionFilterModelClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkSelectionFilterModelClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2333.glib_autoptr_cleanup_GtkSelectionFilterModelClass$MH,"glib_autoptr_cleanup_GtkSelectionFilterModelClass");
    }
    public static void glib_autoptr_cleanup_GtkSelectionFilterModelClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkSelectionFilterModelClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkSelectionFilterModelClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2333.glib_listautoptr_cleanup_GtkSelectionFilterModelClass$MH,"glib_listautoptr_cleanup_GtkSelectionFilterModelClass");
    }
    public static void glib_listautoptr_cleanup_GtkSelectionFilterModelClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkSelectionFilterModelClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkSelectionFilterModelClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2334.glib_slistautoptr_cleanup_GtkSelectionFilterModelClass$MH,"glib_slistautoptr_cleanup_GtkSelectionFilterModelClass");
    }
    public static void glib_slistautoptr_cleanup_GtkSelectionFilterModelClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkSelectionFilterModelClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkSelectionFilterModelClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2334.glib_queueautoptr_cleanup_GtkSelectionFilterModelClass$MH,"glib_queueautoptr_cleanup_GtkSelectionFilterModelClass");
    }
    public static void glib_queueautoptr_cleanup_GtkSelectionFilterModelClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkSelectionFilterModelClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_SELECTION_FILTER_MODEL$MH() {
        return RuntimeHelper.requireNonNull(constants$2334.GTK_SELECTION_FILTER_MODEL$MH,"GTK_SELECTION_FILTER_MODEL");
    }
    public static MemoryAddress GTK_SELECTION_FILTER_MODEL ( Addressable ptr) {
        var mh$ = GTK_SELECTION_FILTER_MODEL$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_SELECTION_FILTER_MODEL$MH() {
        return RuntimeHelper.requireNonNull(constants$2334.GTK_IS_SELECTION_FILTER_MODEL$MH,"GTK_IS_SELECTION_FILTER_MODEL");
    }
    public static int GTK_IS_SELECTION_FILTER_MODEL ( Addressable ptr) {
        var mh$ = GTK_IS_SELECTION_FILTER_MODEL$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_selection_filter_model_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2334.gtk_selection_filter_model_new$MH,"gtk_selection_filter_model_new");
    }
    public static MemoryAddress gtk_selection_filter_model_new ( Addressable model) {
        var mh$ = gtk_selection_filter_model_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_selection_filter_model_set_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2334.gtk_selection_filter_model_set_model$MH,"gtk_selection_filter_model_set_model");
    }
    public static void gtk_selection_filter_model_set_model ( Addressable self,  Addressable model) {
        var mh$ = gtk_selection_filter_model_set_model$MH();
        try {
            mh$.invokeExact(self, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_selection_filter_model_get_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2335.gtk_selection_filter_model_get_model$MH,"gtk_selection_filter_model_get_model");
    }
    public static MemoryAddress gtk_selection_filter_model_get_model ( Addressable self) {
        var mh$ = gtk_selection_filter_model_get_model$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_separator_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2335.gtk_separator_get_type$MH,"gtk_separator_get_type");
    }
    public static long gtk_separator_get_type () {
        var mh$ = gtk_separator_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_separator_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2335.gtk_separator_new$MH,"gtk_separator_new");
    }
    public static MemoryAddress gtk_separator_new ( int orientation) {
        var mh$ = gtk_separator_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(orientation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_settings_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2335.gtk_settings_get_type$MH,"gtk_settings_get_type");
    }
    public static long gtk_settings_get_type () {
        var mh$ = gtk_settings_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_settings_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$2335.gtk_settings_get_default$MH,"gtk_settings_get_default");
    }
    public static MemoryAddress gtk_settings_get_default () {
        var mh$ = gtk_settings_get_default$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_settings_get_for_display$MH() {
        return RuntimeHelper.requireNonNull(constants$2335.gtk_settings_get_for_display$MH,"gtk_settings_get_for_display");
    }
    public static MemoryAddress gtk_settings_get_for_display ( Addressable display) {
        var mh$ = gtk_settings_get_for_display$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_settings_reset_property$MH() {
        return RuntimeHelper.requireNonNull(constants$2336.gtk_settings_reset_property$MH,"gtk_settings_reset_property");
    }
    public static void gtk_settings_reset_property ( Addressable settings,  Addressable name) {
        var mh$ = gtk_settings_reset_property$MH();
        try {
            mh$.invokeExact(settings, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_controller_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2336.gtk_shortcut_controller_get_type$MH,"gtk_shortcut_controller_get_type");
    }
    public static long gtk_shortcut_controller_get_type () {
        var mh$ = gtk_shortcut_controller_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_controller_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2336.gtk_shortcut_controller_new$MH,"gtk_shortcut_controller_new");
    }
    public static MemoryAddress gtk_shortcut_controller_new () {
        var mh$ = gtk_shortcut_controller_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_controller_new_for_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2336.gtk_shortcut_controller_new_for_model$MH,"gtk_shortcut_controller_new_for_model");
    }
    public static MemoryAddress gtk_shortcut_controller_new_for_model ( Addressable model) {
        var mh$ = gtk_shortcut_controller_new_for_model$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_controller_set_mnemonics_modifiers$MH() {
        return RuntimeHelper.requireNonNull(constants$2336.gtk_shortcut_controller_set_mnemonics_modifiers$MH,"gtk_shortcut_controller_set_mnemonics_modifiers");
    }
    public static void gtk_shortcut_controller_set_mnemonics_modifiers ( Addressable self,  int modifiers) {
        var mh$ = gtk_shortcut_controller_set_mnemonics_modifiers$MH();
        try {
            mh$.invokeExact(self, modifiers);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_controller_get_mnemonics_modifiers$MH() {
        return RuntimeHelper.requireNonNull(constants$2336.gtk_shortcut_controller_get_mnemonics_modifiers$MH,"gtk_shortcut_controller_get_mnemonics_modifiers");
    }
    public static int gtk_shortcut_controller_get_mnemonics_modifiers ( Addressable self) {
        var mh$ = gtk_shortcut_controller_get_mnemonics_modifiers$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_controller_set_scope$MH() {
        return RuntimeHelper.requireNonNull(constants$2337.gtk_shortcut_controller_set_scope$MH,"gtk_shortcut_controller_set_scope");
    }
    public static void gtk_shortcut_controller_set_scope ( Addressable self,  int scope) {
        var mh$ = gtk_shortcut_controller_set_scope$MH();
        try {
            mh$.invokeExact(self, scope);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_controller_get_scope$MH() {
        return RuntimeHelper.requireNonNull(constants$2337.gtk_shortcut_controller_get_scope$MH,"gtk_shortcut_controller_get_scope");
    }
    public static int gtk_shortcut_controller_get_scope ( Addressable self) {
        var mh$ = gtk_shortcut_controller_get_scope$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_controller_add_shortcut$MH() {
        return RuntimeHelper.requireNonNull(constants$2337.gtk_shortcut_controller_add_shortcut$MH,"gtk_shortcut_controller_add_shortcut");
    }
    public static void gtk_shortcut_controller_add_shortcut ( Addressable self,  Addressable shortcut) {
        var mh$ = gtk_shortcut_controller_add_shortcut$MH();
        try {
            mh$.invokeExact(self, shortcut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_controller_remove_shortcut$MH() {
        return RuntimeHelper.requireNonNull(constants$2337.gtk_shortcut_controller_remove_shortcut$MH,"gtk_shortcut_controller_remove_shortcut");
    }
    public static void gtk_shortcut_controller_remove_shortcut ( Addressable self,  Addressable shortcut) {
        var mh$ = gtk_shortcut_controller_remove_shortcut$MH();
        try {
            mh$.invokeExact(self, shortcut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_label_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2337.gtk_shortcut_label_get_type$MH,"gtk_shortcut_label_get_type");
    }
    public static long gtk_shortcut_label_get_type () {
        var mh$ = gtk_shortcut_label_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_label_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2337.gtk_shortcut_label_new$MH,"gtk_shortcut_label_new");
    }
    public static MemoryAddress gtk_shortcut_label_new ( Addressable accelerator) {
        var mh$ = gtk_shortcut_label_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(accelerator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_label_get_accelerator$MH() {
        return RuntimeHelper.requireNonNull(constants$2338.gtk_shortcut_label_get_accelerator$MH,"gtk_shortcut_label_get_accelerator");
    }
    public static MemoryAddress gtk_shortcut_label_get_accelerator ( Addressable self) {
        var mh$ = gtk_shortcut_label_get_accelerator$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_label_set_accelerator$MH() {
        return RuntimeHelper.requireNonNull(constants$2338.gtk_shortcut_label_set_accelerator$MH,"gtk_shortcut_label_set_accelerator");
    }
    public static void gtk_shortcut_label_set_accelerator ( Addressable self,  Addressable accelerator) {
        var mh$ = gtk_shortcut_label_set_accelerator$MH();
        try {
            mh$.invokeExact(self, accelerator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_label_get_disabled_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2338.gtk_shortcut_label_get_disabled_text$MH,"gtk_shortcut_label_get_disabled_text");
    }
    public static MemoryAddress gtk_shortcut_label_get_disabled_text ( Addressable self) {
        var mh$ = gtk_shortcut_label_get_disabled_text$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_label_set_disabled_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2338.gtk_shortcut_label_set_disabled_text$MH,"gtk_shortcut_label_set_disabled_text");
    }
    public static void gtk_shortcut_label_set_disabled_text ( Addressable self,  Addressable disabled_text) {
        var mh$ = gtk_shortcut_label_set_disabled_text$MH();
        try {
            mh$.invokeExact(self, disabled_text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_manager_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2338.gtk_shortcut_manager_get_type$MH,"gtk_shortcut_manager_get_type");
    }
    public static long gtk_shortcut_manager_get_type () {
        var mh$ = gtk_shortcut_manager_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkShortcutManager_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkShortcutManager_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkShortcutManager_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkShortcutManager_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkShortcutManager$MH() {
        return RuntimeHelper.requireNonNull(constants$2338.glib_autoptr_clear_GtkShortcutManager$MH,"glib_autoptr_clear_GtkShortcutManager");
    }
    public static void glib_autoptr_clear_GtkShortcutManager ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkShortcutManager$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkShortcutManager$MH() {
        return RuntimeHelper.requireNonNull(constants$2339.glib_autoptr_cleanup_GtkShortcutManager$MH,"glib_autoptr_cleanup_GtkShortcutManager");
    }
    public static void glib_autoptr_cleanup_GtkShortcutManager ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkShortcutManager$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkShortcutManager$MH() {
        return RuntimeHelper.requireNonNull(constants$2339.glib_listautoptr_cleanup_GtkShortcutManager$MH,"glib_listautoptr_cleanup_GtkShortcutManager");
    }
    public static void glib_listautoptr_cleanup_GtkShortcutManager ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkShortcutManager$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkShortcutManager$MH() {
        return RuntimeHelper.requireNonNull(constants$2339.glib_slistautoptr_cleanup_GtkShortcutManager$MH,"glib_slistautoptr_cleanup_GtkShortcutManager");
    }
    public static void glib_slistautoptr_cleanup_GtkShortcutManager ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkShortcutManager$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkShortcutManager$MH() {
        return RuntimeHelper.requireNonNull(constants$2339.glib_queueautoptr_cleanup_GtkShortcutManager$MH,"glib_queueautoptr_cleanup_GtkShortcutManager");
    }
    public static void glib_queueautoptr_cleanup_GtkShortcutManager ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkShortcutManager$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_SHORTCUT_MANAGER$MH() {
        return RuntimeHelper.requireNonNull(constants$2339.GTK_SHORTCUT_MANAGER$MH,"GTK_SHORTCUT_MANAGER");
    }
    public static MemoryAddress GTK_SHORTCUT_MANAGER ( Addressable ptr) {
        var mh$ = GTK_SHORTCUT_MANAGER$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_SHORTCUT_MANAGER$MH() {
        return RuntimeHelper.requireNonNull(constants$2339.GTK_IS_SHORTCUT_MANAGER$MH,"GTK_IS_SHORTCUT_MANAGER");
    }
    public static int GTK_IS_SHORTCUT_MANAGER ( Addressable ptr) {
        var mh$ = GTK_IS_SHORTCUT_MANAGER$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_SHORTCUT_MANAGER_GET_IFACE$MH() {
        return RuntimeHelper.requireNonNull(constants$2340.GTK_SHORTCUT_MANAGER_GET_IFACE$MH,"GTK_SHORTCUT_MANAGER_GET_IFACE");
    }
    public static MemoryAddress GTK_SHORTCUT_MANAGER_GET_IFACE ( Addressable ptr) {
        var mh$ = GTK_SHORTCUT_MANAGER_GET_IFACE$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcuts_group_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2340.gtk_shortcuts_group_get_type$MH,"gtk_shortcuts_group_get_type");
    }
    public static long gtk_shortcuts_group_get_type () {
        var mh$ = gtk_shortcuts_group_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcuts_section_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2340.gtk_shortcuts_section_get_type$MH,"gtk_shortcuts_section_get_type");
    }
    public static long gtk_shortcuts_section_get_type () {
        var mh$ = gtk_shortcuts_section_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GTK_SHORTCUT_ACCELERATOR() {
        return (int)0L;
    }
    public static int GTK_SHORTCUT_GESTURE_PINCH() {
        return (int)1L;
    }
    public static int GTK_SHORTCUT_GESTURE_STRETCH() {
        return (int)2L;
    }
    public static int GTK_SHORTCUT_GESTURE_ROTATE_CLOCKWISE() {
        return (int)3L;
    }
    public static int GTK_SHORTCUT_GESTURE_ROTATE_COUNTERCLOCKWISE() {
        return (int)4L;
    }
    public static int GTK_SHORTCUT_GESTURE_TWO_FINGER_SWIPE_LEFT() {
        return (int)5L;
    }
    public static int GTK_SHORTCUT_GESTURE_TWO_FINGER_SWIPE_RIGHT() {
        return (int)6L;
    }
    public static int GTK_SHORTCUT_GESTURE() {
        return (int)7L;
    }
    public static int GTK_SHORTCUT_GESTURE_SWIPE_LEFT() {
        return (int)8L;
    }
    public static int GTK_SHORTCUT_GESTURE_SWIPE_RIGHT() {
        return (int)9L;
    }
    public static MethodHandle gtk_shortcuts_shortcut_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2340.gtk_shortcuts_shortcut_get_type$MH,"gtk_shortcuts_shortcut_get_type");
    }
    public static long gtk_shortcuts_shortcut_get_type () {
        var mh$ = gtk_shortcuts_shortcut_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_trigger_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2340.gtk_shortcut_trigger_get_type$MH,"gtk_shortcut_trigger_get_type");
    }
    public static long gtk_shortcut_trigger_get_type () {
        var mh$ = gtk_shortcut_trigger_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkShortcutTrigger_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkShortcutTrigger_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkShortcutTrigger_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkShortcutTrigger_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkShortcutTrigger$MH() {
        return RuntimeHelper.requireNonNull(constants$2340.glib_autoptr_clear_GtkShortcutTrigger$MH,"glib_autoptr_clear_GtkShortcutTrigger");
    }
    public static void glib_autoptr_clear_GtkShortcutTrigger ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkShortcutTrigger$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkShortcutTrigger$MH() {
        return RuntimeHelper.requireNonNull(constants$2341.glib_autoptr_cleanup_GtkShortcutTrigger$MH,"glib_autoptr_cleanup_GtkShortcutTrigger");
    }
    public static void glib_autoptr_cleanup_GtkShortcutTrigger ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkShortcutTrigger$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkShortcutTrigger$MH() {
        return RuntimeHelper.requireNonNull(constants$2341.glib_listautoptr_cleanup_GtkShortcutTrigger$MH,"glib_listautoptr_cleanup_GtkShortcutTrigger");
    }
    public static void glib_listautoptr_cleanup_GtkShortcutTrigger ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkShortcutTrigger$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkShortcutTrigger$MH() {
        return RuntimeHelper.requireNonNull(constants$2341.glib_slistautoptr_cleanup_GtkShortcutTrigger$MH,"glib_slistautoptr_cleanup_GtkShortcutTrigger");
    }
    public static void glib_slistautoptr_cleanup_GtkShortcutTrigger ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkShortcutTrigger$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkShortcutTrigger$MH() {
        return RuntimeHelper.requireNonNull(constants$2341.glib_queueautoptr_cleanup_GtkShortcutTrigger$MH,"glib_queueautoptr_cleanup_GtkShortcutTrigger");
    }
    public static void glib_queueautoptr_cleanup_GtkShortcutTrigger ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkShortcutTrigger$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkShortcutTriggerClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkShortcutTriggerClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkShortcutTriggerClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkShortcutTriggerClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkShortcutTriggerClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2341.glib_autoptr_clear_GtkShortcutTriggerClass$MH,"glib_autoptr_clear_GtkShortcutTriggerClass");
    }
    public static void glib_autoptr_clear_GtkShortcutTriggerClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkShortcutTriggerClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkShortcutTriggerClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2341.glib_autoptr_cleanup_GtkShortcutTriggerClass$MH,"glib_autoptr_cleanup_GtkShortcutTriggerClass");
    }
    public static void glib_autoptr_cleanup_GtkShortcutTriggerClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkShortcutTriggerClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkShortcutTriggerClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2342.glib_listautoptr_cleanup_GtkShortcutTriggerClass$MH,"glib_listautoptr_cleanup_GtkShortcutTriggerClass");
    }
    public static void glib_listautoptr_cleanup_GtkShortcutTriggerClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkShortcutTriggerClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkShortcutTriggerClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2342.glib_slistautoptr_cleanup_GtkShortcutTriggerClass$MH,"glib_slistautoptr_cleanup_GtkShortcutTriggerClass");
    }
    public static void glib_slistautoptr_cleanup_GtkShortcutTriggerClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkShortcutTriggerClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkShortcutTriggerClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2342.glib_queueautoptr_cleanup_GtkShortcutTriggerClass$MH,"glib_queueautoptr_cleanup_GtkShortcutTriggerClass");
    }
    public static void glib_queueautoptr_cleanup_GtkShortcutTriggerClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkShortcutTriggerClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_SHORTCUT_TRIGGER$MH() {
        return RuntimeHelper.requireNonNull(constants$2342.GTK_SHORTCUT_TRIGGER$MH,"GTK_SHORTCUT_TRIGGER");
    }
    public static MemoryAddress GTK_SHORTCUT_TRIGGER ( Addressable ptr) {
        var mh$ = GTK_SHORTCUT_TRIGGER$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_SHORTCUT_TRIGGER_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$2342.GTK_SHORTCUT_TRIGGER_CLASS$MH,"GTK_SHORTCUT_TRIGGER_CLASS");
    }
    public static MemoryAddress GTK_SHORTCUT_TRIGGER_CLASS ( Addressable ptr) {
        var mh$ = GTK_SHORTCUT_TRIGGER_CLASS$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_SHORTCUT_TRIGGER$MH() {
        return RuntimeHelper.requireNonNull(constants$2342.GTK_IS_SHORTCUT_TRIGGER$MH,"GTK_IS_SHORTCUT_TRIGGER");
    }
    public static int GTK_IS_SHORTCUT_TRIGGER ( Addressable ptr) {
        var mh$ = GTK_IS_SHORTCUT_TRIGGER$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_SHORTCUT_TRIGGER_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$2343.GTK_IS_SHORTCUT_TRIGGER_CLASS$MH,"GTK_IS_SHORTCUT_TRIGGER_CLASS");
    }
    public static int GTK_IS_SHORTCUT_TRIGGER_CLASS ( Addressable ptr) {
        var mh$ = GTK_IS_SHORTCUT_TRIGGER_CLASS$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_SHORTCUT_TRIGGER_GET_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$2343.GTK_SHORTCUT_TRIGGER_GET_CLASS$MH,"GTK_SHORTCUT_TRIGGER_GET_CLASS");
    }
    public static MemoryAddress GTK_SHORTCUT_TRIGGER_GET_CLASS ( Addressable ptr) {
        var mh$ = GTK_SHORTCUT_TRIGGER_GET_CLASS$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_trigger_parse_string$MH() {
        return RuntimeHelper.requireNonNull(constants$2343.gtk_shortcut_trigger_parse_string$MH,"gtk_shortcut_trigger_parse_string");
    }
    public static MemoryAddress gtk_shortcut_trigger_parse_string ( Addressable string) {
        var mh$ = gtk_shortcut_trigger_parse_string$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_trigger_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$2343.gtk_shortcut_trigger_to_string$MH,"gtk_shortcut_trigger_to_string");
    }
    public static MemoryAddress gtk_shortcut_trigger_to_string ( Addressable self) {
        var mh$ = gtk_shortcut_trigger_to_string$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_trigger_print$MH() {
        return RuntimeHelper.requireNonNull(constants$2343.gtk_shortcut_trigger_print$MH,"gtk_shortcut_trigger_print");
    }
    public static void gtk_shortcut_trigger_print ( Addressable self,  Addressable string) {
        var mh$ = gtk_shortcut_trigger_print$MH();
        try {
            mh$.invokeExact(self, string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_trigger_to_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2343.gtk_shortcut_trigger_to_label$MH,"gtk_shortcut_trigger_to_label");
    }
    public static MemoryAddress gtk_shortcut_trigger_to_label ( Addressable self,  Addressable display) {
        var mh$ = gtk_shortcut_trigger_to_label$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self, display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_trigger_print_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2344.gtk_shortcut_trigger_print_label$MH,"gtk_shortcut_trigger_print_label");
    }
    public static int gtk_shortcut_trigger_print_label ( Addressable self,  Addressable display,  Addressable string) {
        var mh$ = gtk_shortcut_trigger_print_label$MH();
        try {
            return (int)mh$.invokeExact(self, display, string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_trigger_hash$MH() {
        return RuntimeHelper.requireNonNull(constants$2344.gtk_shortcut_trigger_hash$MH,"gtk_shortcut_trigger_hash");
    }
    public static int gtk_shortcut_trigger_hash ( Addressable trigger) {
        var mh$ = gtk_shortcut_trigger_hash$MH();
        try {
            return (int)mh$.invokeExact(trigger);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_trigger_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$2344.gtk_shortcut_trigger_equal$MH,"gtk_shortcut_trigger_equal");
    }
    public static int gtk_shortcut_trigger_equal ( Addressable trigger1,  Addressable trigger2) {
        var mh$ = gtk_shortcut_trigger_equal$MH();
        try {
            return (int)mh$.invokeExact(trigger1, trigger2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_trigger_compare$MH() {
        return RuntimeHelper.requireNonNull(constants$2344.gtk_shortcut_trigger_compare$MH,"gtk_shortcut_trigger_compare");
    }
    public static int gtk_shortcut_trigger_compare ( Addressable trigger1,  Addressable trigger2) {
        var mh$ = gtk_shortcut_trigger_compare$MH();
        try {
            return (int)mh$.invokeExact(trigger1, trigger2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_trigger_trigger$MH() {
        return RuntimeHelper.requireNonNull(constants$2344.gtk_shortcut_trigger_trigger$MH,"gtk_shortcut_trigger_trigger");
    }
    public static int gtk_shortcut_trigger_trigger ( Addressable self,  Addressable event,  int enable_mnemonics) {
        var mh$ = gtk_shortcut_trigger_trigger$MH();
        try {
            return (int)mh$.invokeExact(self, event, enable_mnemonics);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_never_trigger_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2344.gtk_never_trigger_get_type$MH,"gtk_never_trigger_get_type");
    }
    public static long gtk_never_trigger_get_type () {
        var mh$ = gtk_never_trigger_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkNeverTrigger_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkNeverTrigger_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkNeverTrigger_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkNeverTrigger_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkNeverTrigger$MH() {
        return RuntimeHelper.requireNonNull(constants$2345.glib_autoptr_clear_GtkNeverTrigger$MH,"glib_autoptr_clear_GtkNeverTrigger");
    }
    public static void glib_autoptr_clear_GtkNeverTrigger ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkNeverTrigger$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkNeverTrigger$MH() {
        return RuntimeHelper.requireNonNull(constants$2345.glib_autoptr_cleanup_GtkNeverTrigger$MH,"glib_autoptr_cleanup_GtkNeverTrigger");
    }
    public static void glib_autoptr_cleanup_GtkNeverTrigger ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkNeverTrigger$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkNeverTrigger$MH() {
        return RuntimeHelper.requireNonNull(constants$2345.glib_listautoptr_cleanup_GtkNeverTrigger$MH,"glib_listautoptr_cleanup_GtkNeverTrigger");
    }
    public static void glib_listautoptr_cleanup_GtkNeverTrigger ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkNeverTrigger$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkNeverTrigger$MH() {
        return RuntimeHelper.requireNonNull(constants$2345.glib_slistautoptr_cleanup_GtkNeverTrigger$MH,"glib_slistautoptr_cleanup_GtkNeverTrigger");
    }
    public static void glib_slistautoptr_cleanup_GtkNeverTrigger ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkNeverTrigger$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkNeverTrigger$MH() {
        return RuntimeHelper.requireNonNull(constants$2345.glib_queueautoptr_cleanup_GtkNeverTrigger$MH,"glib_queueautoptr_cleanup_GtkNeverTrigger");
    }
    public static void glib_queueautoptr_cleanup_GtkNeverTrigger ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkNeverTrigger$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkNeverTriggerClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkNeverTriggerClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkNeverTriggerClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkNeverTriggerClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkNeverTriggerClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2345.glib_autoptr_clear_GtkNeverTriggerClass$MH,"glib_autoptr_clear_GtkNeverTriggerClass");
    }
    public static void glib_autoptr_clear_GtkNeverTriggerClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkNeverTriggerClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkNeverTriggerClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2346.glib_autoptr_cleanup_GtkNeverTriggerClass$MH,"glib_autoptr_cleanup_GtkNeverTriggerClass");
    }
    public static void glib_autoptr_cleanup_GtkNeverTriggerClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkNeverTriggerClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkNeverTriggerClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2346.glib_listautoptr_cleanup_GtkNeverTriggerClass$MH,"glib_listautoptr_cleanup_GtkNeverTriggerClass");
    }
    public static void glib_listautoptr_cleanup_GtkNeverTriggerClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkNeverTriggerClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkNeverTriggerClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2346.glib_slistautoptr_cleanup_GtkNeverTriggerClass$MH,"glib_slistautoptr_cleanup_GtkNeverTriggerClass");
    }
    public static void glib_slistautoptr_cleanup_GtkNeverTriggerClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkNeverTriggerClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkNeverTriggerClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2346.glib_queueautoptr_cleanup_GtkNeverTriggerClass$MH,"glib_queueautoptr_cleanup_GtkNeverTriggerClass");
    }
    public static void glib_queueautoptr_cleanup_GtkNeverTriggerClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkNeverTriggerClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_NEVER_TRIGGER$MH() {
        return RuntimeHelper.requireNonNull(constants$2346.GTK_NEVER_TRIGGER$MH,"GTK_NEVER_TRIGGER");
    }
    public static MemoryAddress GTK_NEVER_TRIGGER ( Addressable ptr) {
        var mh$ = GTK_NEVER_TRIGGER$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_NEVER_TRIGGER_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$2346.GTK_NEVER_TRIGGER_CLASS$MH,"GTK_NEVER_TRIGGER_CLASS");
    }
    public static MemoryAddress GTK_NEVER_TRIGGER_CLASS ( Addressable ptr) {
        var mh$ = GTK_NEVER_TRIGGER_CLASS$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_NEVER_TRIGGER$MH() {
        return RuntimeHelper.requireNonNull(constants$2347.GTK_IS_NEVER_TRIGGER$MH,"GTK_IS_NEVER_TRIGGER");
    }
    public static int GTK_IS_NEVER_TRIGGER ( Addressable ptr) {
        var mh$ = GTK_IS_NEVER_TRIGGER$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_NEVER_TRIGGER_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$2347.GTK_IS_NEVER_TRIGGER_CLASS$MH,"GTK_IS_NEVER_TRIGGER_CLASS");
    }
    public static int GTK_IS_NEVER_TRIGGER_CLASS ( Addressable ptr) {
        var mh$ = GTK_IS_NEVER_TRIGGER_CLASS$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_NEVER_TRIGGER_GET_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$2347.GTK_NEVER_TRIGGER_GET_CLASS$MH,"GTK_NEVER_TRIGGER_GET_CLASS");
    }
    public static MemoryAddress GTK_NEVER_TRIGGER_GET_CLASS ( Addressable ptr) {
        var mh$ = GTK_NEVER_TRIGGER_GET_CLASS$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_never_trigger_get$MH() {
        return RuntimeHelper.requireNonNull(constants$2347.gtk_never_trigger_get$MH,"gtk_never_trigger_get");
    }
    public static MemoryAddress gtk_never_trigger_get () {
        var mh$ = gtk_never_trigger_get$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_keyval_trigger_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2347.gtk_keyval_trigger_get_type$MH,"gtk_keyval_trigger_get_type");
    }
    public static long gtk_keyval_trigger_get_type () {
        var mh$ = gtk_keyval_trigger_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkKeyvalTrigger_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkKeyvalTrigger_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkKeyvalTrigger_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkKeyvalTrigger_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkKeyvalTrigger$MH() {
        return RuntimeHelper.requireNonNull(constants$2347.glib_autoptr_clear_GtkKeyvalTrigger$MH,"glib_autoptr_clear_GtkKeyvalTrigger");
    }
    public static void glib_autoptr_clear_GtkKeyvalTrigger ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkKeyvalTrigger$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkKeyvalTrigger$MH() {
        return RuntimeHelper.requireNonNull(constants$2348.glib_autoptr_cleanup_GtkKeyvalTrigger$MH,"glib_autoptr_cleanup_GtkKeyvalTrigger");
    }
    public static void glib_autoptr_cleanup_GtkKeyvalTrigger ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkKeyvalTrigger$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkKeyvalTrigger$MH() {
        return RuntimeHelper.requireNonNull(constants$2348.glib_listautoptr_cleanup_GtkKeyvalTrigger$MH,"glib_listautoptr_cleanup_GtkKeyvalTrigger");
    }
    public static void glib_listautoptr_cleanup_GtkKeyvalTrigger ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkKeyvalTrigger$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkKeyvalTrigger$MH() {
        return RuntimeHelper.requireNonNull(constants$2348.glib_slistautoptr_cleanup_GtkKeyvalTrigger$MH,"glib_slistautoptr_cleanup_GtkKeyvalTrigger");
    }
    public static void glib_slistautoptr_cleanup_GtkKeyvalTrigger ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkKeyvalTrigger$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkKeyvalTrigger$MH() {
        return RuntimeHelper.requireNonNull(constants$2348.glib_queueautoptr_cleanup_GtkKeyvalTrigger$MH,"glib_queueautoptr_cleanup_GtkKeyvalTrigger");
    }
    public static void glib_queueautoptr_cleanup_GtkKeyvalTrigger ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkKeyvalTrigger$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkKeyvalTriggerClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkKeyvalTriggerClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkKeyvalTriggerClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkKeyvalTriggerClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkKeyvalTriggerClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2348.glib_autoptr_clear_GtkKeyvalTriggerClass$MH,"glib_autoptr_clear_GtkKeyvalTriggerClass");
    }
    public static void glib_autoptr_clear_GtkKeyvalTriggerClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkKeyvalTriggerClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkKeyvalTriggerClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2348.glib_autoptr_cleanup_GtkKeyvalTriggerClass$MH,"glib_autoptr_cleanup_GtkKeyvalTriggerClass");
    }
    public static void glib_autoptr_cleanup_GtkKeyvalTriggerClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkKeyvalTriggerClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkKeyvalTriggerClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2349.glib_listautoptr_cleanup_GtkKeyvalTriggerClass$MH,"glib_listautoptr_cleanup_GtkKeyvalTriggerClass");
    }
    public static void glib_listautoptr_cleanup_GtkKeyvalTriggerClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkKeyvalTriggerClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkKeyvalTriggerClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2349.glib_slistautoptr_cleanup_GtkKeyvalTriggerClass$MH,"glib_slistautoptr_cleanup_GtkKeyvalTriggerClass");
    }
    public static void glib_slistautoptr_cleanup_GtkKeyvalTriggerClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkKeyvalTriggerClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkKeyvalTriggerClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2349.glib_queueautoptr_cleanup_GtkKeyvalTriggerClass$MH,"glib_queueautoptr_cleanup_GtkKeyvalTriggerClass");
    }
    public static void glib_queueautoptr_cleanup_GtkKeyvalTriggerClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkKeyvalTriggerClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_KEYVAL_TRIGGER$MH() {
        return RuntimeHelper.requireNonNull(constants$2349.GTK_KEYVAL_TRIGGER$MH,"GTK_KEYVAL_TRIGGER");
    }
    public static MemoryAddress GTK_KEYVAL_TRIGGER ( Addressable ptr) {
        var mh$ = GTK_KEYVAL_TRIGGER$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_KEYVAL_TRIGGER_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$2349.GTK_KEYVAL_TRIGGER_CLASS$MH,"GTK_KEYVAL_TRIGGER_CLASS");
    }
    public static MemoryAddress GTK_KEYVAL_TRIGGER_CLASS ( Addressable ptr) {
        var mh$ = GTK_KEYVAL_TRIGGER_CLASS$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_KEYVAL_TRIGGER$MH() {
        return RuntimeHelper.requireNonNull(constants$2349.GTK_IS_KEYVAL_TRIGGER$MH,"GTK_IS_KEYVAL_TRIGGER");
    }
    public static int GTK_IS_KEYVAL_TRIGGER ( Addressable ptr) {
        var mh$ = GTK_IS_KEYVAL_TRIGGER$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_KEYVAL_TRIGGER_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$2350.GTK_IS_KEYVAL_TRIGGER_CLASS$MH,"GTK_IS_KEYVAL_TRIGGER_CLASS");
    }
    public static int GTK_IS_KEYVAL_TRIGGER_CLASS ( Addressable ptr) {
        var mh$ = GTK_IS_KEYVAL_TRIGGER_CLASS$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_KEYVAL_TRIGGER_GET_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$2350.GTK_KEYVAL_TRIGGER_GET_CLASS$MH,"GTK_KEYVAL_TRIGGER_GET_CLASS");
    }
    public static MemoryAddress GTK_KEYVAL_TRIGGER_GET_CLASS ( Addressable ptr) {
        var mh$ = GTK_KEYVAL_TRIGGER_GET_CLASS$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_keyval_trigger_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2350.gtk_keyval_trigger_new$MH,"gtk_keyval_trigger_new");
    }
    public static MemoryAddress gtk_keyval_trigger_new ( int keyval,  int modifiers) {
        var mh$ = gtk_keyval_trigger_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(keyval, modifiers);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_keyval_trigger_get_modifiers$MH() {
        return RuntimeHelper.requireNonNull(constants$2350.gtk_keyval_trigger_get_modifiers$MH,"gtk_keyval_trigger_get_modifiers");
    }
    public static int gtk_keyval_trigger_get_modifiers ( Addressable self) {
        var mh$ = gtk_keyval_trigger_get_modifiers$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_keyval_trigger_get_keyval$MH() {
        return RuntimeHelper.requireNonNull(constants$2350.gtk_keyval_trigger_get_keyval$MH,"gtk_keyval_trigger_get_keyval");
    }
    public static int gtk_keyval_trigger_get_keyval ( Addressable self) {
        var mh$ = gtk_keyval_trigger_get_keyval$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_mnemonic_trigger_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2350.gtk_mnemonic_trigger_get_type$MH,"gtk_mnemonic_trigger_get_type");
    }
    public static long gtk_mnemonic_trigger_get_type () {
        var mh$ = gtk_mnemonic_trigger_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkMnemonicTrigger_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMnemonicTrigger_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMnemonicTrigger_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMnemonicTrigger_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkMnemonicTrigger$MH() {
        return RuntimeHelper.requireNonNull(constants$2351.glib_autoptr_clear_GtkMnemonicTrigger$MH,"glib_autoptr_clear_GtkMnemonicTrigger");
    }
    public static void glib_autoptr_clear_GtkMnemonicTrigger ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkMnemonicTrigger$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkMnemonicTrigger$MH() {
        return RuntimeHelper.requireNonNull(constants$2351.glib_autoptr_cleanup_GtkMnemonicTrigger$MH,"glib_autoptr_cleanup_GtkMnemonicTrigger");
    }
    public static void glib_autoptr_cleanup_GtkMnemonicTrigger ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkMnemonicTrigger$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkMnemonicTrigger$MH() {
        return RuntimeHelper.requireNonNull(constants$2351.glib_listautoptr_cleanup_GtkMnemonicTrigger$MH,"glib_listautoptr_cleanup_GtkMnemonicTrigger");
    }
    public static void glib_listautoptr_cleanup_GtkMnemonicTrigger ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkMnemonicTrigger$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkMnemonicTrigger$MH() {
        return RuntimeHelper.requireNonNull(constants$2351.glib_slistautoptr_cleanup_GtkMnemonicTrigger$MH,"glib_slistautoptr_cleanup_GtkMnemonicTrigger");
    }
    public static void glib_slistautoptr_cleanup_GtkMnemonicTrigger ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkMnemonicTrigger$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkMnemonicTrigger$MH() {
        return RuntimeHelper.requireNonNull(constants$2351.glib_queueautoptr_cleanup_GtkMnemonicTrigger$MH,"glib_queueautoptr_cleanup_GtkMnemonicTrigger");
    }
    public static void glib_queueautoptr_cleanup_GtkMnemonicTrigger ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkMnemonicTrigger$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkMnemonicTriggerClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMnemonicTriggerClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMnemonicTriggerClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMnemonicTriggerClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkMnemonicTriggerClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2351.glib_autoptr_clear_GtkMnemonicTriggerClass$MH,"glib_autoptr_clear_GtkMnemonicTriggerClass");
    }
    public static void glib_autoptr_clear_GtkMnemonicTriggerClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkMnemonicTriggerClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkMnemonicTriggerClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2352.glib_autoptr_cleanup_GtkMnemonicTriggerClass$MH,"glib_autoptr_cleanup_GtkMnemonicTriggerClass");
    }
    public static void glib_autoptr_cleanup_GtkMnemonicTriggerClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkMnemonicTriggerClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkMnemonicTriggerClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2352.glib_listautoptr_cleanup_GtkMnemonicTriggerClass$MH,"glib_listautoptr_cleanup_GtkMnemonicTriggerClass");
    }
    public static void glib_listautoptr_cleanup_GtkMnemonicTriggerClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkMnemonicTriggerClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkMnemonicTriggerClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2352.glib_slistautoptr_cleanup_GtkMnemonicTriggerClass$MH,"glib_slistautoptr_cleanup_GtkMnemonicTriggerClass");
    }
    public static void glib_slistautoptr_cleanup_GtkMnemonicTriggerClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkMnemonicTriggerClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkMnemonicTriggerClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2352.glib_queueautoptr_cleanup_GtkMnemonicTriggerClass$MH,"glib_queueautoptr_cleanup_GtkMnemonicTriggerClass");
    }
    public static void glib_queueautoptr_cleanup_GtkMnemonicTriggerClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkMnemonicTriggerClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_MNEMONIC_TRIGGER$MH() {
        return RuntimeHelper.requireNonNull(constants$2352.GTK_MNEMONIC_TRIGGER$MH,"GTK_MNEMONIC_TRIGGER");
    }
    public static MemoryAddress GTK_MNEMONIC_TRIGGER ( Addressable ptr) {
        var mh$ = GTK_MNEMONIC_TRIGGER$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_MNEMONIC_TRIGGER_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$2352.GTK_MNEMONIC_TRIGGER_CLASS$MH,"GTK_MNEMONIC_TRIGGER_CLASS");
    }
    public static MemoryAddress GTK_MNEMONIC_TRIGGER_CLASS ( Addressable ptr) {
        var mh$ = GTK_MNEMONIC_TRIGGER_CLASS$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_MNEMONIC_TRIGGER$MH() {
        return RuntimeHelper.requireNonNull(constants$2353.GTK_IS_MNEMONIC_TRIGGER$MH,"GTK_IS_MNEMONIC_TRIGGER");
    }
    public static int GTK_IS_MNEMONIC_TRIGGER ( Addressable ptr) {
        var mh$ = GTK_IS_MNEMONIC_TRIGGER$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_MNEMONIC_TRIGGER_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$2353.GTK_IS_MNEMONIC_TRIGGER_CLASS$MH,"GTK_IS_MNEMONIC_TRIGGER_CLASS");
    }
    public static int GTK_IS_MNEMONIC_TRIGGER_CLASS ( Addressable ptr) {
        var mh$ = GTK_IS_MNEMONIC_TRIGGER_CLASS$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_MNEMONIC_TRIGGER_GET_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$2353.GTK_MNEMONIC_TRIGGER_GET_CLASS$MH,"GTK_MNEMONIC_TRIGGER_GET_CLASS");
    }
    public static MemoryAddress GTK_MNEMONIC_TRIGGER_GET_CLASS ( Addressable ptr) {
        var mh$ = GTK_MNEMONIC_TRIGGER_GET_CLASS$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_mnemonic_trigger_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2353.gtk_mnemonic_trigger_new$MH,"gtk_mnemonic_trigger_new");
    }
    public static MemoryAddress gtk_mnemonic_trigger_new ( int keyval) {
        var mh$ = gtk_mnemonic_trigger_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(keyval);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_mnemonic_trigger_get_keyval$MH() {
        return RuntimeHelper.requireNonNull(constants$2353.gtk_mnemonic_trigger_get_keyval$MH,"gtk_mnemonic_trigger_get_keyval");
    }
    public static int gtk_mnemonic_trigger_get_keyval ( Addressable self) {
        var mh$ = gtk_mnemonic_trigger_get_keyval$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_alternative_trigger_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2353.gtk_alternative_trigger_get_type$MH,"gtk_alternative_trigger_get_type");
    }
    public static long gtk_alternative_trigger_get_type () {
        var mh$ = gtk_alternative_trigger_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkAlternativeTrigger_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkAlternativeTrigger_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkAlternativeTrigger_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkAlternativeTrigger_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkAlternativeTrigger$MH() {
        return RuntimeHelper.requireNonNull(constants$2354.glib_autoptr_clear_GtkAlternativeTrigger$MH,"glib_autoptr_clear_GtkAlternativeTrigger");
    }
    public static void glib_autoptr_clear_GtkAlternativeTrigger ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkAlternativeTrigger$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkAlternativeTrigger$MH() {
        return RuntimeHelper.requireNonNull(constants$2354.glib_autoptr_cleanup_GtkAlternativeTrigger$MH,"glib_autoptr_cleanup_GtkAlternativeTrigger");
    }
    public static void glib_autoptr_cleanup_GtkAlternativeTrigger ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkAlternativeTrigger$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkAlternativeTrigger$MH() {
        return RuntimeHelper.requireNonNull(constants$2354.glib_listautoptr_cleanup_GtkAlternativeTrigger$MH,"glib_listautoptr_cleanup_GtkAlternativeTrigger");
    }
    public static void glib_listautoptr_cleanup_GtkAlternativeTrigger ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkAlternativeTrigger$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkAlternativeTrigger$MH() {
        return RuntimeHelper.requireNonNull(constants$2354.glib_slistautoptr_cleanup_GtkAlternativeTrigger$MH,"glib_slistautoptr_cleanup_GtkAlternativeTrigger");
    }
    public static void glib_slistautoptr_cleanup_GtkAlternativeTrigger ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkAlternativeTrigger$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkAlternativeTrigger$MH() {
        return RuntimeHelper.requireNonNull(constants$2354.glib_queueautoptr_cleanup_GtkAlternativeTrigger$MH,"glib_queueautoptr_cleanup_GtkAlternativeTrigger");
    }
    public static void glib_queueautoptr_cleanup_GtkAlternativeTrigger ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkAlternativeTrigger$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkAlternativeTriggerClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkAlternativeTriggerClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkAlternativeTriggerClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkAlternativeTriggerClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkAlternativeTriggerClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2354.glib_autoptr_clear_GtkAlternativeTriggerClass$MH,"glib_autoptr_clear_GtkAlternativeTriggerClass");
    }
    public static void glib_autoptr_clear_GtkAlternativeTriggerClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkAlternativeTriggerClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkAlternativeTriggerClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2355.glib_autoptr_cleanup_GtkAlternativeTriggerClass$MH,"glib_autoptr_cleanup_GtkAlternativeTriggerClass");
    }
    public static void glib_autoptr_cleanup_GtkAlternativeTriggerClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkAlternativeTriggerClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkAlternativeTriggerClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2355.glib_listautoptr_cleanup_GtkAlternativeTriggerClass$MH,"glib_listautoptr_cleanup_GtkAlternativeTriggerClass");
    }
    public static void glib_listautoptr_cleanup_GtkAlternativeTriggerClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkAlternativeTriggerClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkAlternativeTriggerClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2355.glib_slistautoptr_cleanup_GtkAlternativeTriggerClass$MH,"glib_slistautoptr_cleanup_GtkAlternativeTriggerClass");
    }
    public static void glib_slistautoptr_cleanup_GtkAlternativeTriggerClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkAlternativeTriggerClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkAlternativeTriggerClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2355.glib_queueautoptr_cleanup_GtkAlternativeTriggerClass$MH,"glib_queueautoptr_cleanup_GtkAlternativeTriggerClass");
    }
    public static void glib_queueautoptr_cleanup_GtkAlternativeTriggerClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkAlternativeTriggerClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_ALTERNATIVE_TRIGGER$MH() {
        return RuntimeHelper.requireNonNull(constants$2355.GTK_ALTERNATIVE_TRIGGER$MH,"GTK_ALTERNATIVE_TRIGGER");
    }
    public static MemoryAddress GTK_ALTERNATIVE_TRIGGER ( Addressable ptr) {
        var mh$ = GTK_ALTERNATIVE_TRIGGER$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_ALTERNATIVE_TRIGGER_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$2355.GTK_ALTERNATIVE_TRIGGER_CLASS$MH,"GTK_ALTERNATIVE_TRIGGER_CLASS");
    }
    public static MemoryAddress GTK_ALTERNATIVE_TRIGGER_CLASS ( Addressable ptr) {
        var mh$ = GTK_ALTERNATIVE_TRIGGER_CLASS$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_ALTERNATIVE_TRIGGER$MH() {
        return RuntimeHelper.requireNonNull(constants$2356.GTK_IS_ALTERNATIVE_TRIGGER$MH,"GTK_IS_ALTERNATIVE_TRIGGER");
    }
    public static int GTK_IS_ALTERNATIVE_TRIGGER ( Addressable ptr) {
        var mh$ = GTK_IS_ALTERNATIVE_TRIGGER$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_ALTERNATIVE_TRIGGER_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$2356.GTK_IS_ALTERNATIVE_TRIGGER_CLASS$MH,"GTK_IS_ALTERNATIVE_TRIGGER_CLASS");
    }
    public static int GTK_IS_ALTERNATIVE_TRIGGER_CLASS ( Addressable ptr) {
        var mh$ = GTK_IS_ALTERNATIVE_TRIGGER_CLASS$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_ALTERNATIVE_TRIGGER_GET_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$2356.GTK_ALTERNATIVE_TRIGGER_GET_CLASS$MH,"GTK_ALTERNATIVE_TRIGGER_GET_CLASS");
    }
    public static MemoryAddress GTK_ALTERNATIVE_TRIGGER_GET_CLASS ( Addressable ptr) {
        var mh$ = GTK_ALTERNATIVE_TRIGGER_GET_CLASS$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_alternative_trigger_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2356.gtk_alternative_trigger_new$MH,"gtk_alternative_trigger_new");
    }
    public static MemoryAddress gtk_alternative_trigger_new ( Addressable first,  Addressable second) {
        var mh$ = gtk_alternative_trigger_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(first, second);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_alternative_trigger_get_first$MH() {
        return RuntimeHelper.requireNonNull(constants$2356.gtk_alternative_trigger_get_first$MH,"gtk_alternative_trigger_get_first");
    }
    public static MemoryAddress gtk_alternative_trigger_get_first ( Addressable self) {
        var mh$ = gtk_alternative_trigger_get_first$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_alternative_trigger_get_second$MH() {
        return RuntimeHelper.requireNonNull(constants$2356.gtk_alternative_trigger_get_second$MH,"gtk_alternative_trigger_get_second");
    }
    public static MemoryAddress gtk_alternative_trigger_get_second ( Addressable self) {
        var mh$ = gtk_alternative_trigger_get_second$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_show_uri_full$MH() {
        return RuntimeHelper.requireNonNull(constants$2357.gtk_show_uri_full$MH,"gtk_show_uri_full");
    }
    public static void gtk_show_uri_full ( Addressable parent,  Addressable uri,  int timestamp,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = gtk_show_uri_full$MH();
        try {
            mh$.invokeExact(parent, uri, timestamp, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_show_uri_full_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$2357.gtk_show_uri_full_finish$MH,"gtk_show_uri_full_finish");
    }
    public static int gtk_show_uri_full_finish ( Addressable parent,  Addressable result,  Addressable error) {
        var mh$ = gtk_show_uri_full_finish$MH();
        try {
            return (int)mh$.invokeExact(parent, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_show_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$2357.gtk_show_uri$MH,"gtk_show_uri");
    }
    public static void gtk_show_uri ( Addressable parent,  Addressable uri,  int timestamp) {
        var mh$ = gtk_show_uri$MH();
        try {
            mh$.invokeExact(parent, uri, timestamp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_signal_list_item_factory_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2357.gtk_signal_list_item_factory_get_type$MH,"gtk_signal_list_item_factory_get_type");
    }
    public static long gtk_signal_list_item_factory_get_type () {
        var mh$ = gtk_signal_list_item_factory_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_signal_list_item_factory_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2357.gtk_signal_list_item_factory_new$MH,"gtk_signal_list_item_factory_new");
    }
    public static MemoryAddress gtk_signal_list_item_factory_new () {
        var mh$ = gtk_signal_list_item_factory_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_single_selection_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2357.gtk_single_selection_get_type$MH,"gtk_single_selection_get_type");
    }
    public static long gtk_single_selection_get_type () {
        var mh$ = gtk_single_selection_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkSingleSelection_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSingleSelection_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSingleSelection_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSingleSelection_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkSingleSelection$MH() {
        return RuntimeHelper.requireNonNull(constants$2358.glib_autoptr_clear_GtkSingleSelection$MH,"glib_autoptr_clear_GtkSingleSelection");
    }
    public static void glib_autoptr_clear_GtkSingleSelection ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkSingleSelection$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkSingleSelection$MH() {
        return RuntimeHelper.requireNonNull(constants$2358.glib_autoptr_cleanup_GtkSingleSelection$MH,"glib_autoptr_cleanup_GtkSingleSelection");
    }
    public static void glib_autoptr_cleanup_GtkSingleSelection ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkSingleSelection$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkSingleSelection$MH() {
        return RuntimeHelper.requireNonNull(constants$2358.glib_listautoptr_cleanup_GtkSingleSelection$MH,"glib_listautoptr_cleanup_GtkSingleSelection");
    }
    public static void glib_listautoptr_cleanup_GtkSingleSelection ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkSingleSelection$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkSingleSelection$MH() {
        return RuntimeHelper.requireNonNull(constants$2358.glib_slistautoptr_cleanup_GtkSingleSelection$MH,"glib_slistautoptr_cleanup_GtkSingleSelection");
    }
    public static void glib_slistautoptr_cleanup_GtkSingleSelection ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkSingleSelection$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkSingleSelection$MH() {
        return RuntimeHelper.requireNonNull(constants$2358.glib_queueautoptr_cleanup_GtkSingleSelection$MH,"glib_queueautoptr_cleanup_GtkSingleSelection");
    }
    public static void glib_queueautoptr_cleanup_GtkSingleSelection ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkSingleSelection$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkSingleSelectionClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSingleSelectionClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSingleSelectionClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSingleSelectionClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkSingleSelectionClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2358.glib_autoptr_clear_GtkSingleSelectionClass$MH,"glib_autoptr_clear_GtkSingleSelectionClass");
    }
    public static void glib_autoptr_clear_GtkSingleSelectionClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkSingleSelectionClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkSingleSelectionClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2359.glib_autoptr_cleanup_GtkSingleSelectionClass$MH,"glib_autoptr_cleanup_GtkSingleSelectionClass");
    }
    public static void glib_autoptr_cleanup_GtkSingleSelectionClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkSingleSelectionClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkSingleSelectionClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2359.glib_listautoptr_cleanup_GtkSingleSelectionClass$MH,"glib_listautoptr_cleanup_GtkSingleSelectionClass");
    }
    public static void glib_listautoptr_cleanup_GtkSingleSelectionClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkSingleSelectionClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkSingleSelectionClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2359.glib_slistautoptr_cleanup_GtkSingleSelectionClass$MH,"glib_slistautoptr_cleanup_GtkSingleSelectionClass");
    }
    public static void glib_slistautoptr_cleanup_GtkSingleSelectionClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkSingleSelectionClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkSingleSelectionClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2359.glib_queueautoptr_cleanup_GtkSingleSelectionClass$MH,"glib_queueautoptr_cleanup_GtkSingleSelectionClass");
    }
    public static void glib_queueautoptr_cleanup_GtkSingleSelectionClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkSingleSelectionClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_SINGLE_SELECTION$MH() {
        return RuntimeHelper.requireNonNull(constants$2359.GTK_SINGLE_SELECTION$MH,"GTK_SINGLE_SELECTION");
    }
    public static MemoryAddress GTK_SINGLE_SELECTION ( Addressable ptr) {
        var mh$ = GTK_SINGLE_SELECTION$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_SINGLE_SELECTION$MH() {
        return RuntimeHelper.requireNonNull(constants$2359.GTK_IS_SINGLE_SELECTION$MH,"GTK_IS_SINGLE_SELECTION");
    }
    public static int GTK_IS_SINGLE_SELECTION ( Addressable ptr) {
        var mh$ = GTK_IS_SINGLE_SELECTION$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_single_selection_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2360.gtk_single_selection_new$MH,"gtk_single_selection_new");
    }
    public static MemoryAddress gtk_single_selection_new ( Addressable model) {
        var mh$ = gtk_single_selection_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_single_selection_get_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2360.gtk_single_selection_get_model$MH,"gtk_single_selection_get_model");
    }
    public static MemoryAddress gtk_single_selection_get_model ( Addressable self) {
        var mh$ = gtk_single_selection_get_model$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_single_selection_set_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2360.gtk_single_selection_set_model$MH,"gtk_single_selection_set_model");
    }
    public static void gtk_single_selection_set_model ( Addressable self,  Addressable model) {
        var mh$ = gtk_single_selection_set_model$MH();
        try {
            mh$.invokeExact(self, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_single_selection_get_selected$MH() {
        return RuntimeHelper.requireNonNull(constants$2360.gtk_single_selection_get_selected$MH,"gtk_single_selection_get_selected");
    }
    public static int gtk_single_selection_get_selected ( Addressable self) {
        var mh$ = gtk_single_selection_get_selected$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_single_selection_set_selected$MH() {
        return RuntimeHelper.requireNonNull(constants$2360.gtk_single_selection_set_selected$MH,"gtk_single_selection_set_selected");
    }
    public static void gtk_single_selection_set_selected ( Addressable self,  int position) {
        var mh$ = gtk_single_selection_set_selected$MH();
        try {
            mh$.invokeExact(self, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_single_selection_get_selected_item$MH() {
        return RuntimeHelper.requireNonNull(constants$2360.gtk_single_selection_get_selected_item$MH,"gtk_single_selection_get_selected_item");
    }
    public static MemoryAddress gtk_single_selection_get_selected_item ( Addressable self) {
        var mh$ = gtk_single_selection_get_selected_item$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_single_selection_get_autoselect$MH() {
        return RuntimeHelper.requireNonNull(constants$2361.gtk_single_selection_get_autoselect$MH,"gtk_single_selection_get_autoselect");
    }
    public static int gtk_single_selection_get_autoselect ( Addressable self) {
        var mh$ = gtk_single_selection_get_autoselect$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_single_selection_set_autoselect$MH() {
        return RuntimeHelper.requireNonNull(constants$2361.gtk_single_selection_set_autoselect$MH,"gtk_single_selection_set_autoselect");
    }
    public static void gtk_single_selection_set_autoselect ( Addressable self,  int autoselect) {
        var mh$ = gtk_single_selection_set_autoselect$MH();
        try {
            mh$.invokeExact(self, autoselect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_single_selection_get_can_unselect$MH() {
        return RuntimeHelper.requireNonNull(constants$2361.gtk_single_selection_get_can_unselect$MH,"gtk_single_selection_get_can_unselect");
    }
    public static int gtk_single_selection_get_can_unselect ( Addressable self) {
        var mh$ = gtk_single_selection_get_can_unselect$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_single_selection_set_can_unselect$MH() {
        return RuntimeHelper.requireNonNull(constants$2361.gtk_single_selection_set_can_unselect$MH,"gtk_single_selection_set_can_unselect");
    }
    public static void gtk_single_selection_set_can_unselect ( Addressable self,  int can_unselect) {
        var mh$ = gtk_single_selection_set_can_unselect$MH();
        try {
            mh$.invokeExact(self, can_unselect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_slice_list_model_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2361.gtk_slice_list_model_get_type$MH,"gtk_slice_list_model_get_type");
    }
    public static long gtk_slice_list_model_get_type () {
        var mh$ = gtk_slice_list_model_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkSliceListModel_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSliceListModel_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSliceListModel_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSliceListModel_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkSliceListModel$MH() {
        return RuntimeHelper.requireNonNull(constants$2361.glib_autoptr_clear_GtkSliceListModel$MH,"glib_autoptr_clear_GtkSliceListModel");
    }
    public static void glib_autoptr_clear_GtkSliceListModel ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkSliceListModel$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkSliceListModel$MH() {
        return RuntimeHelper.requireNonNull(constants$2362.glib_autoptr_cleanup_GtkSliceListModel$MH,"glib_autoptr_cleanup_GtkSliceListModel");
    }
    public static void glib_autoptr_cleanup_GtkSliceListModel ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkSliceListModel$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkSliceListModel$MH() {
        return RuntimeHelper.requireNonNull(constants$2362.glib_listautoptr_cleanup_GtkSliceListModel$MH,"glib_listautoptr_cleanup_GtkSliceListModel");
    }
    public static void glib_listautoptr_cleanup_GtkSliceListModel ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkSliceListModel$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkSliceListModel$MH() {
        return RuntimeHelper.requireNonNull(constants$2362.glib_slistautoptr_cleanup_GtkSliceListModel$MH,"glib_slistautoptr_cleanup_GtkSliceListModel");
    }
    public static void glib_slistautoptr_cleanup_GtkSliceListModel ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkSliceListModel$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkSliceListModel$MH() {
        return RuntimeHelper.requireNonNull(constants$2362.glib_queueautoptr_cleanup_GtkSliceListModel$MH,"glib_queueautoptr_cleanup_GtkSliceListModel");
    }
    public static void glib_queueautoptr_cleanup_GtkSliceListModel ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkSliceListModel$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkSliceListModelClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSliceListModelClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSliceListModelClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSliceListModelClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkSliceListModelClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2362.glib_autoptr_clear_GtkSliceListModelClass$MH,"glib_autoptr_clear_GtkSliceListModelClass");
    }
    public static void glib_autoptr_clear_GtkSliceListModelClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkSliceListModelClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkSliceListModelClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2362.glib_autoptr_cleanup_GtkSliceListModelClass$MH,"glib_autoptr_cleanup_GtkSliceListModelClass");
    }
    public static void glib_autoptr_cleanup_GtkSliceListModelClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkSliceListModelClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkSliceListModelClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2363.glib_listautoptr_cleanup_GtkSliceListModelClass$MH,"glib_listautoptr_cleanup_GtkSliceListModelClass");
    }
    public static void glib_listautoptr_cleanup_GtkSliceListModelClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkSliceListModelClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkSliceListModelClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2363.glib_slistautoptr_cleanup_GtkSliceListModelClass$MH,"glib_slistautoptr_cleanup_GtkSliceListModelClass");
    }
    public static void glib_slistautoptr_cleanup_GtkSliceListModelClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkSliceListModelClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkSliceListModelClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2363.glib_queueautoptr_cleanup_GtkSliceListModelClass$MH,"glib_queueautoptr_cleanup_GtkSliceListModelClass");
    }
    public static void glib_queueautoptr_cleanup_GtkSliceListModelClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkSliceListModelClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_SLICE_LIST_MODEL$MH() {
        return RuntimeHelper.requireNonNull(constants$2363.GTK_SLICE_LIST_MODEL$MH,"GTK_SLICE_LIST_MODEL");
    }
    public static MemoryAddress GTK_SLICE_LIST_MODEL ( Addressable ptr) {
        var mh$ = GTK_SLICE_LIST_MODEL$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_SLICE_LIST_MODEL$MH() {
        return RuntimeHelper.requireNonNull(constants$2363.GTK_IS_SLICE_LIST_MODEL$MH,"GTK_IS_SLICE_LIST_MODEL");
    }
    public static int GTK_IS_SLICE_LIST_MODEL ( Addressable ptr) {
        var mh$ = GTK_IS_SLICE_LIST_MODEL$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_slice_list_model_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2363.gtk_slice_list_model_new$MH,"gtk_slice_list_model_new");
    }
    public static MemoryAddress gtk_slice_list_model_new ( Addressable model,  int offset,  int size) {
        var mh$ = gtk_slice_list_model_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(model, offset, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_slice_list_model_set_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2364.gtk_slice_list_model_set_model$MH,"gtk_slice_list_model_set_model");
    }
    public static void gtk_slice_list_model_set_model ( Addressable self,  Addressable model) {
        var mh$ = gtk_slice_list_model_set_model$MH();
        try {
            mh$.invokeExact(self, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_slice_list_model_get_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2364.gtk_slice_list_model_get_model$MH,"gtk_slice_list_model_get_model");
    }
    public static MemoryAddress gtk_slice_list_model_get_model ( Addressable self) {
        var mh$ = gtk_slice_list_model_get_model$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_slice_list_model_set_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$2364.gtk_slice_list_model_set_offset$MH,"gtk_slice_list_model_set_offset");
    }
    public static void gtk_slice_list_model_set_offset ( Addressable self,  int offset) {
        var mh$ = gtk_slice_list_model_set_offset$MH();
        try {
            mh$.invokeExact(self, offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_slice_list_model_get_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$2364.gtk_slice_list_model_get_offset$MH,"gtk_slice_list_model_get_offset");
    }
    public static int gtk_slice_list_model_get_offset ( Addressable self) {
        var mh$ = gtk_slice_list_model_get_offset$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_slice_list_model_set_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2364.gtk_slice_list_model_set_size$MH,"gtk_slice_list_model_set_size");
    }
    public static void gtk_slice_list_model_set_size ( Addressable self,  int size) {
        var mh$ = gtk_slice_list_model_set_size$MH();
        try {
            mh$.invokeExact(self, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_slice_list_model_get_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2364.gtk_slice_list_model_get_size$MH,"gtk_slice_list_model_get_size");
    }
    public static int gtk_slice_list_model_get_size ( Addressable self) {
        var mh$ = gtk_slice_list_model_get_size$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkSnapshot_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSnapshot_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSnapshot_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSnapshot_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkSnapshot$MH() {
        return RuntimeHelper.requireNonNull(constants$2365.glib_autoptr_clear_GtkSnapshot$MH,"glib_autoptr_clear_GtkSnapshot");
    }
    public static void glib_autoptr_clear_GtkSnapshot ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkSnapshot$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkSnapshot$MH() {
        return RuntimeHelper.requireNonNull(constants$2365.glib_autoptr_cleanup_GtkSnapshot$MH,"glib_autoptr_cleanup_GtkSnapshot");
    }
    public static void glib_autoptr_cleanup_GtkSnapshot ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkSnapshot$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkSnapshot$MH() {
        return RuntimeHelper.requireNonNull(constants$2365.glib_listautoptr_cleanup_GtkSnapshot$MH,"glib_listautoptr_cleanup_GtkSnapshot");
    }
    public static void glib_listautoptr_cleanup_GtkSnapshot ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkSnapshot$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkSnapshot$MH() {
        return RuntimeHelper.requireNonNull(constants$2365.glib_slistautoptr_cleanup_GtkSnapshot$MH,"glib_slistautoptr_cleanup_GtkSnapshot");
    }
    public static void glib_slistautoptr_cleanup_GtkSnapshot ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkSnapshot$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkSnapshot$MH() {
        return RuntimeHelper.requireNonNull(constants$2365.glib_queueautoptr_cleanup_GtkSnapshot$MH,"glib_queueautoptr_cleanup_GtkSnapshot");
    }
    public static void glib_queueautoptr_cleanup_GtkSnapshot ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkSnapshot$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2365.gtk_snapshot_get_type$MH,"gtk_snapshot_get_type");
    }
    public static long gtk_snapshot_get_type () {
        var mh$ = gtk_snapshot_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2366.gtk_snapshot_new$MH,"gtk_snapshot_new");
    }
    public static MemoryAddress gtk_snapshot_new () {
        var mh$ = gtk_snapshot_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_free_to_node$MH() {
        return RuntimeHelper.requireNonNull(constants$2366.gtk_snapshot_free_to_node$MH,"gtk_snapshot_free_to_node");
    }
    public static MemoryAddress gtk_snapshot_free_to_node ( Addressable snapshot) {
        var mh$ = gtk_snapshot_free_to_node$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(snapshot);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_free_to_paintable$MH() {
        return RuntimeHelper.requireNonNull(constants$2366.gtk_snapshot_free_to_paintable$MH,"gtk_snapshot_free_to_paintable");
    }
    public static MemoryAddress gtk_snapshot_free_to_paintable ( Addressable snapshot,  Addressable size) {
        var mh$ = gtk_snapshot_free_to_paintable$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(snapshot, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_to_node$MH() {
        return RuntimeHelper.requireNonNull(constants$2366.gtk_snapshot_to_node$MH,"gtk_snapshot_to_node");
    }
    public static MemoryAddress gtk_snapshot_to_node ( Addressable snapshot) {
        var mh$ = gtk_snapshot_to_node$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(snapshot);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_to_paintable$MH() {
        return RuntimeHelper.requireNonNull(constants$2366.gtk_snapshot_to_paintable$MH,"gtk_snapshot_to_paintable");
    }
    public static MemoryAddress gtk_snapshot_to_paintable ( Addressable snapshot,  Addressable size) {
        var mh$ = gtk_snapshot_to_paintable$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(snapshot, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_push_debug$MH() {
        return RuntimeHelper.requireNonNull(constants$2366.gtk_snapshot_push_debug$MH,"gtk_snapshot_push_debug");
    }
    public static void gtk_snapshot_push_debug ( Addressable snapshot,  Addressable message, Object... x2) {
        var mh$ = gtk_snapshot_push_debug$MH();
        try {
            mh$.invokeExact(snapshot, message, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_push_opacity$MH() {
        return RuntimeHelper.requireNonNull(constants$2367.gtk_snapshot_push_opacity$MH,"gtk_snapshot_push_opacity");
    }
    public static void gtk_snapshot_push_opacity ( Addressable snapshot,  double opacity) {
        var mh$ = gtk_snapshot_push_opacity$MH();
        try {
            mh$.invokeExact(snapshot, opacity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_push_blur$MH() {
        return RuntimeHelper.requireNonNull(constants$2367.gtk_snapshot_push_blur$MH,"gtk_snapshot_push_blur");
    }
    public static void gtk_snapshot_push_blur ( Addressable snapshot,  double radius) {
        var mh$ = gtk_snapshot_push_blur$MH();
        try {
            mh$.invokeExact(snapshot, radius);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_push_color_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$2367.gtk_snapshot_push_color_matrix$MH,"gtk_snapshot_push_color_matrix");
    }
    public static void gtk_snapshot_push_color_matrix ( Addressable snapshot,  Addressable color_matrix,  Addressable color_offset) {
        var mh$ = gtk_snapshot_push_color_matrix$MH();
        try {
            mh$.invokeExact(snapshot, color_matrix, color_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_push_repeat$MH() {
        return RuntimeHelper.requireNonNull(constants$2367.gtk_snapshot_push_repeat$MH,"gtk_snapshot_push_repeat");
    }
    public static void gtk_snapshot_push_repeat ( Addressable snapshot,  Addressable bounds,  Addressable child_bounds) {
        var mh$ = gtk_snapshot_push_repeat$MH();
        try {
            mh$.invokeExact(snapshot, bounds, child_bounds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_push_clip$MH() {
        return RuntimeHelper.requireNonNull(constants$2367.gtk_snapshot_push_clip$MH,"gtk_snapshot_push_clip");
    }
    public static void gtk_snapshot_push_clip ( Addressable snapshot,  Addressable bounds) {
        var mh$ = gtk_snapshot_push_clip$MH();
        try {
            mh$.invokeExact(snapshot, bounds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_push_rounded_clip$MH() {
        return RuntimeHelper.requireNonNull(constants$2367.gtk_snapshot_push_rounded_clip$MH,"gtk_snapshot_push_rounded_clip");
    }
    public static void gtk_snapshot_push_rounded_clip ( Addressable snapshot,  Addressable bounds) {
        var mh$ = gtk_snapshot_push_rounded_clip$MH();
        try {
            mh$.invokeExact(snapshot, bounds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_push_shadow$MH() {
        return RuntimeHelper.requireNonNull(constants$2368.gtk_snapshot_push_shadow$MH,"gtk_snapshot_push_shadow");
    }
    public static void gtk_snapshot_push_shadow ( Addressable snapshot,  Addressable shadow,  long n_shadows) {
        var mh$ = gtk_snapshot_push_shadow$MH();
        try {
            mh$.invokeExact(snapshot, shadow, n_shadows);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_push_blend$MH() {
        return RuntimeHelper.requireNonNull(constants$2368.gtk_snapshot_push_blend$MH,"gtk_snapshot_push_blend");
    }
    public static void gtk_snapshot_push_blend ( Addressable snapshot,  int blend_mode) {
        var mh$ = gtk_snapshot_push_blend$MH();
        try {
            mh$.invokeExact(snapshot, blend_mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_push_cross_fade$MH() {
        return RuntimeHelper.requireNonNull(constants$2368.gtk_snapshot_push_cross_fade$MH,"gtk_snapshot_push_cross_fade");
    }
    public static void gtk_snapshot_push_cross_fade ( Addressable snapshot,  double progress) {
        var mh$ = gtk_snapshot_push_cross_fade$MH();
        try {
            mh$.invokeExact(snapshot, progress);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_push_gl_shader$MH() {
        return RuntimeHelper.requireNonNull(constants$2368.gtk_snapshot_push_gl_shader$MH,"gtk_snapshot_push_gl_shader");
    }
    public static void gtk_snapshot_push_gl_shader ( Addressable snapshot,  Addressable shader,  Addressable bounds,  Addressable take_args) {
        var mh$ = gtk_snapshot_push_gl_shader$MH();
        try {
            mh$.invokeExact(snapshot, shader, bounds, take_args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_gl_shader_pop_texture$MH() {
        return RuntimeHelper.requireNonNull(constants$2368.gtk_snapshot_gl_shader_pop_texture$MH,"gtk_snapshot_gl_shader_pop_texture");
    }
    public static void gtk_snapshot_gl_shader_pop_texture ( Addressable snapshot) {
        var mh$ = gtk_snapshot_gl_shader_pop_texture$MH();
        try {
            mh$.invokeExact(snapshot);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_pop$MH() {
        return RuntimeHelper.requireNonNull(constants$2368.gtk_snapshot_pop$MH,"gtk_snapshot_pop");
    }
    public static void gtk_snapshot_pop ( Addressable snapshot) {
        var mh$ = gtk_snapshot_pop$MH();
        try {
            mh$.invokeExact(snapshot);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_save$MH() {
        return RuntimeHelper.requireNonNull(constants$2369.gtk_snapshot_save$MH,"gtk_snapshot_save");
    }
    public static void gtk_snapshot_save ( Addressable snapshot) {
        var mh$ = gtk_snapshot_save$MH();
        try {
            mh$.invokeExact(snapshot);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_restore$MH() {
        return RuntimeHelper.requireNonNull(constants$2369.gtk_snapshot_restore$MH,"gtk_snapshot_restore");
    }
    public static void gtk_snapshot_restore ( Addressable snapshot) {
        var mh$ = gtk_snapshot_restore$MH();
        try {
            mh$.invokeExact(snapshot);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_transform$MH() {
        return RuntimeHelper.requireNonNull(constants$2369.gtk_snapshot_transform$MH,"gtk_snapshot_transform");
    }
    public static void gtk_snapshot_transform ( Addressable snapshot,  Addressable transform) {
        var mh$ = gtk_snapshot_transform$MH();
        try {
            mh$.invokeExact(snapshot, transform);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_transform_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$2369.gtk_snapshot_transform_matrix$MH,"gtk_snapshot_transform_matrix");
    }
    public static void gtk_snapshot_transform_matrix ( Addressable snapshot,  Addressable matrix) {
        var mh$ = gtk_snapshot_transform_matrix$MH();
        try {
            mh$.invokeExact(snapshot, matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_translate$MH() {
        return RuntimeHelper.requireNonNull(constants$2369.gtk_snapshot_translate$MH,"gtk_snapshot_translate");
    }
    public static void gtk_snapshot_translate ( Addressable snapshot,  Addressable point) {
        var mh$ = gtk_snapshot_translate$MH();
        try {
            mh$.invokeExact(snapshot, point);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_translate_3d$MH() {
        return RuntimeHelper.requireNonNull(constants$2369.gtk_snapshot_translate_3d$MH,"gtk_snapshot_translate_3d");
    }
    public static void gtk_snapshot_translate_3d ( Addressable snapshot,  Addressable point) {
        var mh$ = gtk_snapshot_translate_3d$MH();
        try {
            mh$.invokeExact(snapshot, point);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_rotate$MH() {
        return RuntimeHelper.requireNonNull(constants$2370.gtk_snapshot_rotate$MH,"gtk_snapshot_rotate");
    }
    public static void gtk_snapshot_rotate ( Addressable snapshot,  float angle) {
        var mh$ = gtk_snapshot_rotate$MH();
        try {
            mh$.invokeExact(snapshot, angle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_rotate_3d$MH() {
        return RuntimeHelper.requireNonNull(constants$2370.gtk_snapshot_rotate_3d$MH,"gtk_snapshot_rotate_3d");
    }
    public static void gtk_snapshot_rotate_3d ( Addressable snapshot,  float angle,  Addressable axis) {
        var mh$ = gtk_snapshot_rotate_3d$MH();
        try {
            mh$.invokeExact(snapshot, angle, axis);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$2370.gtk_snapshot_scale$MH,"gtk_snapshot_scale");
    }
    public static void gtk_snapshot_scale ( Addressable snapshot,  float factor_x,  float factor_y) {
        var mh$ = gtk_snapshot_scale$MH();
        try {
            mh$.invokeExact(snapshot, factor_x, factor_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_scale_3d$MH() {
        return RuntimeHelper.requireNonNull(constants$2370.gtk_snapshot_scale_3d$MH,"gtk_snapshot_scale_3d");
    }
    public static void gtk_snapshot_scale_3d ( Addressable snapshot,  float factor_x,  float factor_y,  float factor_z) {
        var mh$ = gtk_snapshot_scale_3d$MH();
        try {
            mh$.invokeExact(snapshot, factor_x, factor_y, factor_z);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_perspective$MH() {
        return RuntimeHelper.requireNonNull(constants$2370.gtk_snapshot_perspective$MH,"gtk_snapshot_perspective");
    }
    public static void gtk_snapshot_perspective ( Addressable snapshot,  float depth) {
        var mh$ = gtk_snapshot_perspective$MH();
        try {
            mh$.invokeExact(snapshot, depth);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_append_node$MH() {
        return RuntimeHelper.requireNonNull(constants$2370.gtk_snapshot_append_node$MH,"gtk_snapshot_append_node");
    }
    public static void gtk_snapshot_append_node ( Addressable snapshot,  Addressable node) {
        var mh$ = gtk_snapshot_append_node$MH();
        try {
            mh$.invokeExact(snapshot, node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_append_cairo$MH() {
        return RuntimeHelper.requireNonNull(constants$2371.gtk_snapshot_append_cairo$MH,"gtk_snapshot_append_cairo");
    }
    public static MemoryAddress gtk_snapshot_append_cairo ( Addressable snapshot,  Addressable bounds) {
        var mh$ = gtk_snapshot_append_cairo$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(snapshot, bounds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_append_texture$MH() {
        return RuntimeHelper.requireNonNull(constants$2371.gtk_snapshot_append_texture$MH,"gtk_snapshot_append_texture");
    }
    public static void gtk_snapshot_append_texture ( Addressable snapshot,  Addressable texture,  Addressable bounds) {
        var mh$ = gtk_snapshot_append_texture$MH();
        try {
            mh$.invokeExact(snapshot, texture, bounds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_append_color$MH() {
        return RuntimeHelper.requireNonNull(constants$2371.gtk_snapshot_append_color$MH,"gtk_snapshot_append_color");
    }
    public static void gtk_snapshot_append_color ( Addressable snapshot,  Addressable color,  Addressable bounds) {
        var mh$ = gtk_snapshot_append_color$MH();
        try {
            mh$.invokeExact(snapshot, color, bounds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_append_linear_gradient$MH() {
        return RuntimeHelper.requireNonNull(constants$2371.gtk_snapshot_append_linear_gradient$MH,"gtk_snapshot_append_linear_gradient");
    }
    public static void gtk_snapshot_append_linear_gradient ( Addressable snapshot,  Addressable bounds,  Addressable start_point,  Addressable end_point,  Addressable stops,  long n_stops) {
        var mh$ = gtk_snapshot_append_linear_gradient$MH();
        try {
            mh$.invokeExact(snapshot, bounds, start_point, end_point, stops, n_stops);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_append_repeating_linear_gradient$MH() {
        return RuntimeHelper.requireNonNull(constants$2371.gtk_snapshot_append_repeating_linear_gradient$MH,"gtk_snapshot_append_repeating_linear_gradient");
    }
    public static void gtk_snapshot_append_repeating_linear_gradient ( Addressable snapshot,  Addressable bounds,  Addressable start_point,  Addressable end_point,  Addressable stops,  long n_stops) {
        var mh$ = gtk_snapshot_append_repeating_linear_gradient$MH();
        try {
            mh$.invokeExact(snapshot, bounds, start_point, end_point, stops, n_stops);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_append_radial_gradient$MH() {
        return RuntimeHelper.requireNonNull(constants$2371.gtk_snapshot_append_radial_gradient$MH,"gtk_snapshot_append_radial_gradient");
    }
    public static void gtk_snapshot_append_radial_gradient ( Addressable snapshot,  Addressable bounds,  Addressable center,  float hradius,  float vradius,  float start,  float end,  Addressable stops,  long n_stops) {
        var mh$ = gtk_snapshot_append_radial_gradient$MH();
        try {
            mh$.invokeExact(snapshot, bounds, center, hradius, vradius, start, end, stops, n_stops);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_append_repeating_radial_gradient$MH() {
        return RuntimeHelper.requireNonNull(constants$2372.gtk_snapshot_append_repeating_radial_gradient$MH,"gtk_snapshot_append_repeating_radial_gradient");
    }
    public static void gtk_snapshot_append_repeating_radial_gradient ( Addressable snapshot,  Addressable bounds,  Addressable center,  float hradius,  float vradius,  float start,  float end,  Addressable stops,  long n_stops) {
        var mh$ = gtk_snapshot_append_repeating_radial_gradient$MH();
        try {
            mh$.invokeExact(snapshot, bounds, center, hradius, vradius, start, end, stops, n_stops);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_append_conic_gradient$MH() {
        return RuntimeHelper.requireNonNull(constants$2372.gtk_snapshot_append_conic_gradient$MH,"gtk_snapshot_append_conic_gradient");
    }
    public static void gtk_snapshot_append_conic_gradient ( Addressable snapshot,  Addressable bounds,  Addressable center,  float rotation,  Addressable stops,  long n_stops) {
        var mh$ = gtk_snapshot_append_conic_gradient$MH();
        try {
            mh$.invokeExact(snapshot, bounds, center, rotation, stops, n_stops);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_append_border$MH() {
        return RuntimeHelper.requireNonNull(constants$2372.gtk_snapshot_append_border$MH,"gtk_snapshot_append_border");
    }
    public static void gtk_snapshot_append_border ( Addressable snapshot,  Addressable outline,  Addressable border_width,  Addressable border_color) {
        var mh$ = gtk_snapshot_append_border$MH();
        try {
            mh$.invokeExact(snapshot, outline, border_width, border_color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_append_inset_shadow$MH() {
        return RuntimeHelper.requireNonNull(constants$2372.gtk_snapshot_append_inset_shadow$MH,"gtk_snapshot_append_inset_shadow");
    }
    public static void gtk_snapshot_append_inset_shadow ( Addressable snapshot,  Addressable outline,  Addressable color,  float dx,  float dy,  float spread,  float blur_radius) {
        var mh$ = gtk_snapshot_append_inset_shadow$MH();
        try {
            mh$.invokeExact(snapshot, outline, color, dx, dy, spread, blur_radius);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_append_outset_shadow$MH() {
        return RuntimeHelper.requireNonNull(constants$2372.gtk_snapshot_append_outset_shadow$MH,"gtk_snapshot_append_outset_shadow");
    }
    public static void gtk_snapshot_append_outset_shadow ( Addressable snapshot,  Addressable outline,  Addressable color,  float dx,  float dy,  float spread,  float blur_radius) {
        var mh$ = gtk_snapshot_append_outset_shadow$MH();
        try {
            mh$.invokeExact(snapshot, outline, color, dx, dy, spread, blur_radius);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_append_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$2372.gtk_snapshot_append_layout$MH,"gtk_snapshot_append_layout");
    }
    public static void gtk_snapshot_append_layout ( Addressable snapshot,  Addressable layout,  Addressable color) {
        var mh$ = gtk_snapshot_append_layout$MH();
        try {
            mh$.invokeExact(snapshot, layout, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_render_background$MH() {
        return RuntimeHelper.requireNonNull(constants$2373.gtk_snapshot_render_background$MH,"gtk_snapshot_render_background");
    }
    public static void gtk_snapshot_render_background ( Addressable snapshot,  Addressable context,  double x,  double y,  double width,  double height) {
        var mh$ = gtk_snapshot_render_background$MH();
        try {
            mh$.invokeExact(snapshot, context, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_render_frame$MH() {
        return RuntimeHelper.requireNonNull(constants$2373.gtk_snapshot_render_frame$MH,"gtk_snapshot_render_frame");
    }
    public static void gtk_snapshot_render_frame ( Addressable snapshot,  Addressable context,  double x,  double y,  double width,  double height) {
        var mh$ = gtk_snapshot_render_frame$MH();
        try {
            mh$.invokeExact(snapshot, context, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_render_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$2373.gtk_snapshot_render_focus$MH,"gtk_snapshot_render_focus");
    }
    public static void gtk_snapshot_render_focus ( Addressable snapshot,  Addressable context,  double x,  double y,  double width,  double height) {
        var mh$ = gtk_snapshot_render_focus$MH();
        try {
            mh$.invokeExact(snapshot, context, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_render_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$2373.gtk_snapshot_render_layout$MH,"gtk_snapshot_render_layout");
    }
    public static void gtk_snapshot_render_layout ( Addressable snapshot,  Addressable context,  double x,  double y,  Addressable layout) {
        var mh$ = gtk_snapshot_render_layout$MH();
        try {
            mh$.invokeExact(snapshot, context, x, y, layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_snapshot_render_insertion_cursor$MH() {
        return RuntimeHelper.requireNonNull(constants$2373.gtk_snapshot_render_insertion_cursor$MH,"gtk_snapshot_render_insertion_cursor");
    }
    public static void gtk_snapshot_render_insertion_cursor ( Addressable snapshot,  Addressable context,  double x,  double y,  Addressable layout,  int index,  int direction) {
        var mh$ = gtk_snapshot_render_insertion_cursor$MH();
        try {
            mh$.invokeExact(snapshot, context, x, y, layout, index, direction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GTK_STACK_TRANSITION_TYPE_NONE() {
        return (int)0L;
    }
    public static int GTK_STACK_TRANSITION_TYPE_CROSSFADE() {
        return (int)1L;
    }
    public static int GTK_STACK_TRANSITION_TYPE_SLIDE_RIGHT() {
        return (int)2L;
    }
    public static int GTK_STACK_TRANSITION_TYPE_SLIDE_LEFT() {
        return (int)3L;
    }
    public static int GTK_STACK_TRANSITION_TYPE_SLIDE_UP() {
        return (int)4L;
    }
    public static int GTK_STACK_TRANSITION_TYPE_SLIDE_DOWN() {
        return (int)5L;
    }
    public static int GTK_STACK_TRANSITION_TYPE_SLIDE_LEFT_RIGHT() {
        return (int)6L;
    }
    public static int GTK_STACK_TRANSITION_TYPE_SLIDE_UP_DOWN() {
        return (int)7L;
    }
    public static int GTK_STACK_TRANSITION_TYPE_OVER_UP() {
        return (int)8L;
    }
    public static int GTK_STACK_TRANSITION_TYPE_OVER_DOWN() {
        return (int)9L;
    }
    public static int GTK_STACK_TRANSITION_TYPE_OVER_LEFT() {
        return (int)10L;
    }
    public static int GTK_STACK_TRANSITION_TYPE_OVER_RIGHT() {
        return (int)11L;
    }
    public static int GTK_STACK_TRANSITION_TYPE_UNDER_UP() {
        return (int)12L;
    }
    public static int GTK_STACK_TRANSITION_TYPE_UNDER_DOWN() {
        return (int)13L;
    }
    public static int GTK_STACK_TRANSITION_TYPE_UNDER_LEFT() {
        return (int)14L;
    }
    public static int GTK_STACK_TRANSITION_TYPE_UNDER_RIGHT() {
        return (int)15L;
    }
    public static int GTK_STACK_TRANSITION_TYPE_OVER_UP_DOWN() {
        return (int)16L;
    }
    public static int GTK_STACK_TRANSITION_TYPE_OVER_DOWN_UP() {
        return (int)17L;
    }
    public static int GTK_STACK_TRANSITION_TYPE_OVER_LEFT_RIGHT() {
        return (int)18L;
    }
    public static int GTK_STACK_TRANSITION_TYPE_OVER_RIGHT_LEFT() {
        return (int)19L;
    }
    public static int GTK_STACK_TRANSITION_TYPE_ROTATE_LEFT() {
        return (int)20L;
    }
    public static int GTK_STACK_TRANSITION_TYPE_ROTATE_RIGHT() {
        return (int)21L;
    }
    public static int GTK_STACK_TRANSITION_TYPE_ROTATE_LEFT_RIGHT() {
        return (int)22L;
    }
    public static MethodHandle gtk_stack_page_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2373.gtk_stack_page_get_type$MH,"gtk_stack_page_get_type");
    }
    public static long gtk_stack_page_get_type () {
        var mh$ = gtk_stack_page_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_page_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2374.gtk_stack_page_get_child$MH,"gtk_stack_page_get_child");
    }
    public static MemoryAddress gtk_stack_page_get_child ( Addressable self) {
        var mh$ = gtk_stack_page_get_child$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_page_get_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$2374.gtk_stack_page_get_visible$MH,"gtk_stack_page_get_visible");
    }
    public static int gtk_stack_page_get_visible ( Addressable self) {
        var mh$ = gtk_stack_page_get_visible$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_page_set_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$2374.gtk_stack_page_set_visible$MH,"gtk_stack_page_set_visible");
    }
    public static void gtk_stack_page_set_visible ( Addressable self,  int visible) {
        var mh$ = gtk_stack_page_set_visible$MH();
        try {
            mh$.invokeExact(self, visible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_page_get_needs_attention$MH() {
        return RuntimeHelper.requireNonNull(constants$2374.gtk_stack_page_get_needs_attention$MH,"gtk_stack_page_get_needs_attention");
    }
    public static int gtk_stack_page_get_needs_attention ( Addressable self) {
        var mh$ = gtk_stack_page_get_needs_attention$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_page_set_needs_attention$MH() {
        return RuntimeHelper.requireNonNull(constants$2374.gtk_stack_page_set_needs_attention$MH,"gtk_stack_page_set_needs_attention");
    }
    public static void gtk_stack_page_set_needs_attention ( Addressable self,  int setting) {
        var mh$ = gtk_stack_page_set_needs_attention$MH();
        try {
            mh$.invokeExact(self, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_page_get_use_underline$MH() {
        return RuntimeHelper.requireNonNull(constants$2374.gtk_stack_page_get_use_underline$MH,"gtk_stack_page_get_use_underline");
    }
    public static int gtk_stack_page_get_use_underline ( Addressable self) {
        var mh$ = gtk_stack_page_get_use_underline$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_page_set_use_underline$MH() {
        return RuntimeHelper.requireNonNull(constants$2375.gtk_stack_page_set_use_underline$MH,"gtk_stack_page_set_use_underline");
    }
    public static void gtk_stack_page_set_use_underline ( Addressable self,  int setting) {
        var mh$ = gtk_stack_page_set_use_underline$MH();
        try {
            mh$.invokeExact(self, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_page_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2375.gtk_stack_page_get_name$MH,"gtk_stack_page_get_name");
    }
    public static MemoryAddress gtk_stack_page_get_name ( Addressable self) {
        var mh$ = gtk_stack_page_get_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_page_set_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2375.gtk_stack_page_set_name$MH,"gtk_stack_page_set_name");
    }
    public static void gtk_stack_page_set_name ( Addressable self,  Addressable setting) {
        var mh$ = gtk_stack_page_set_name$MH();
        try {
            mh$.invokeExact(self, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_page_get_title$MH() {
        return RuntimeHelper.requireNonNull(constants$2375.gtk_stack_page_get_title$MH,"gtk_stack_page_get_title");
    }
    public static MemoryAddress gtk_stack_page_get_title ( Addressable self) {
        var mh$ = gtk_stack_page_get_title$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_page_set_title$MH() {
        return RuntimeHelper.requireNonNull(constants$2375.gtk_stack_page_set_title$MH,"gtk_stack_page_set_title");
    }
    public static void gtk_stack_page_set_title ( Addressable self,  Addressable setting) {
        var mh$ = gtk_stack_page_set_title$MH();
        try {
            mh$.invokeExact(self, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_page_get_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2375.gtk_stack_page_get_icon_name$MH,"gtk_stack_page_get_icon_name");
    }
    public static MemoryAddress gtk_stack_page_get_icon_name ( Addressable self) {
        var mh$ = gtk_stack_page_get_icon_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_page_set_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2376.gtk_stack_page_set_icon_name$MH,"gtk_stack_page_set_icon_name");
    }
    public static void gtk_stack_page_set_icon_name ( Addressable self,  Addressable setting) {
        var mh$ = gtk_stack_page_set_icon_name$MH();
        try {
            mh$.invokeExact(self, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2376.gtk_stack_get_type$MH,"gtk_stack_get_type");
    }
    public static long gtk_stack_get_type () {
        var mh$ = gtk_stack_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2376.gtk_stack_new$MH,"gtk_stack_new");
    }
    public static MemoryAddress gtk_stack_new () {
        var mh$ = gtk_stack_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_add_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2376.gtk_stack_add_child$MH,"gtk_stack_add_child");
    }
    public static MemoryAddress gtk_stack_add_child ( Addressable stack,  Addressable child) {
        var mh$ = gtk_stack_add_child$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(stack, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_add_named$MH() {
        return RuntimeHelper.requireNonNull(constants$2376.gtk_stack_add_named$MH,"gtk_stack_add_named");
    }
    public static MemoryAddress gtk_stack_add_named ( Addressable stack,  Addressable child,  Addressable name) {
        var mh$ = gtk_stack_add_named$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(stack, child, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_add_titled$MH() {
        return RuntimeHelper.requireNonNull(constants$2376.gtk_stack_add_titled$MH,"gtk_stack_add_titled");
    }
    public static MemoryAddress gtk_stack_add_titled ( Addressable stack,  Addressable child,  Addressable name,  Addressable title) {
        var mh$ = gtk_stack_add_titled$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(stack, child, name, title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$2377.gtk_stack_remove$MH,"gtk_stack_remove");
    }
    public static void gtk_stack_remove ( Addressable stack,  Addressable child) {
        var mh$ = gtk_stack_remove$MH();
        try {
            mh$.invokeExact(stack, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_get_page$MH() {
        return RuntimeHelper.requireNonNull(constants$2377.gtk_stack_get_page$MH,"gtk_stack_get_page");
    }
    public static MemoryAddress gtk_stack_get_page ( Addressable stack,  Addressable child) {
        var mh$ = gtk_stack_get_page$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(stack, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_get_child_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2377.gtk_stack_get_child_by_name$MH,"gtk_stack_get_child_by_name");
    }
    public static MemoryAddress gtk_stack_get_child_by_name ( Addressable stack,  Addressable name) {
        var mh$ = gtk_stack_get_child_by_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(stack, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_set_visible_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2377.gtk_stack_set_visible_child$MH,"gtk_stack_set_visible_child");
    }
    public static void gtk_stack_set_visible_child ( Addressable stack,  Addressable child) {
        var mh$ = gtk_stack_set_visible_child$MH();
        try {
            mh$.invokeExact(stack, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_get_visible_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2377.gtk_stack_get_visible_child$MH,"gtk_stack_get_visible_child");
    }
    public static MemoryAddress gtk_stack_get_visible_child ( Addressable stack) {
        var mh$ = gtk_stack_get_visible_child$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(stack);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_set_visible_child_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2377.gtk_stack_set_visible_child_name$MH,"gtk_stack_set_visible_child_name");
    }
    public static void gtk_stack_set_visible_child_name ( Addressable stack,  Addressable name) {
        var mh$ = gtk_stack_set_visible_child_name$MH();
        try {
            mh$.invokeExact(stack, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_get_visible_child_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2378.gtk_stack_get_visible_child_name$MH,"gtk_stack_get_visible_child_name");
    }
    public static MemoryAddress gtk_stack_get_visible_child_name ( Addressable stack) {
        var mh$ = gtk_stack_get_visible_child_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(stack);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_set_visible_child_full$MH() {
        return RuntimeHelper.requireNonNull(constants$2378.gtk_stack_set_visible_child_full$MH,"gtk_stack_set_visible_child_full");
    }
    public static void gtk_stack_set_visible_child_full ( Addressable stack,  Addressable name,  int transition) {
        var mh$ = gtk_stack_set_visible_child_full$MH();
        try {
            mh$.invokeExact(stack, name, transition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_set_hhomogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$2378.gtk_stack_set_hhomogeneous$MH,"gtk_stack_set_hhomogeneous");
    }
    public static void gtk_stack_set_hhomogeneous ( Addressable stack,  int hhomogeneous) {
        var mh$ = gtk_stack_set_hhomogeneous$MH();
        try {
            mh$.invokeExact(stack, hhomogeneous);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_get_hhomogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$2378.gtk_stack_get_hhomogeneous$MH,"gtk_stack_get_hhomogeneous");
    }
    public static int gtk_stack_get_hhomogeneous ( Addressable stack) {
        var mh$ = gtk_stack_get_hhomogeneous$MH();
        try {
            return (int)mh$.invokeExact(stack);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_set_vhomogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$2378.gtk_stack_set_vhomogeneous$MH,"gtk_stack_set_vhomogeneous");
    }
    public static void gtk_stack_set_vhomogeneous ( Addressable stack,  int vhomogeneous) {
        var mh$ = gtk_stack_set_vhomogeneous$MH();
        try {
            mh$.invokeExact(stack, vhomogeneous);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_get_vhomogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$2378.gtk_stack_get_vhomogeneous$MH,"gtk_stack_get_vhomogeneous");
    }
    public static int gtk_stack_get_vhomogeneous ( Addressable stack) {
        var mh$ = gtk_stack_get_vhomogeneous$MH();
        try {
            return (int)mh$.invokeExact(stack);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_set_transition_duration$MH() {
        return RuntimeHelper.requireNonNull(constants$2379.gtk_stack_set_transition_duration$MH,"gtk_stack_set_transition_duration");
    }
    public static void gtk_stack_set_transition_duration ( Addressable stack,  int duration) {
        var mh$ = gtk_stack_set_transition_duration$MH();
        try {
            mh$.invokeExact(stack, duration);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_get_transition_duration$MH() {
        return RuntimeHelper.requireNonNull(constants$2379.gtk_stack_get_transition_duration$MH,"gtk_stack_get_transition_duration");
    }
    public static int gtk_stack_get_transition_duration ( Addressable stack) {
        var mh$ = gtk_stack_get_transition_duration$MH();
        try {
            return (int)mh$.invokeExact(stack);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_set_transition_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2379.gtk_stack_set_transition_type$MH,"gtk_stack_set_transition_type");
    }
    public static void gtk_stack_set_transition_type ( Addressable stack,  int transition) {
        var mh$ = gtk_stack_set_transition_type$MH();
        try {
            mh$.invokeExact(stack, transition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_get_transition_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2379.gtk_stack_get_transition_type$MH,"gtk_stack_get_transition_type");
    }
    public static int gtk_stack_get_transition_type ( Addressable stack) {
        var mh$ = gtk_stack_get_transition_type$MH();
        try {
            return (int)mh$.invokeExact(stack);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_get_transition_running$MH() {
        return RuntimeHelper.requireNonNull(constants$2379.gtk_stack_get_transition_running$MH,"gtk_stack_get_transition_running");
    }
    public static int gtk_stack_get_transition_running ( Addressable stack) {
        var mh$ = gtk_stack_get_transition_running$MH();
        try {
            return (int)mh$.invokeExact(stack);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_set_interpolate_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2379.gtk_stack_set_interpolate_size$MH,"gtk_stack_set_interpolate_size");
    }
    public static void gtk_stack_set_interpolate_size ( Addressable stack,  int interpolate_size) {
        var mh$ = gtk_stack_set_interpolate_size$MH();
        try {
            mh$.invokeExact(stack, interpolate_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_get_interpolate_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2380.gtk_stack_get_interpolate_size$MH,"gtk_stack_get_interpolate_size");
    }
    public static int gtk_stack_get_interpolate_size ( Addressable stack) {
        var mh$ = gtk_stack_get_interpolate_size$MH();
        try {
            return (int)mh$.invokeExact(stack);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_get_pages$MH() {
        return RuntimeHelper.requireNonNull(constants$2380.gtk_stack_get_pages$MH,"gtk_stack_get_pages");
    }
    public static MemoryAddress gtk_stack_get_pages ( Addressable stack) {
        var mh$ = gtk_stack_get_pages$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(stack);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_sidebar_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2380.gtk_stack_sidebar_get_type$MH,"gtk_stack_sidebar_get_type");
    }
    public static long gtk_stack_sidebar_get_type () {
        var mh$ = gtk_stack_sidebar_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_sidebar_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2380.gtk_stack_sidebar_new$MH,"gtk_stack_sidebar_new");
    }
    public static MemoryAddress gtk_stack_sidebar_new () {
        var mh$ = gtk_stack_sidebar_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_sidebar_set_stack$MH() {
        return RuntimeHelper.requireNonNull(constants$2380.gtk_stack_sidebar_set_stack$MH,"gtk_stack_sidebar_set_stack");
    }
    public static void gtk_stack_sidebar_set_stack ( Addressable self,  Addressable stack) {
        var mh$ = gtk_stack_sidebar_set_stack$MH();
        try {
            mh$.invokeExact(self, stack);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_sidebar_get_stack$MH() {
        return RuntimeHelper.requireNonNull(constants$2380.gtk_stack_sidebar_get_stack$MH,"gtk_stack_sidebar_get_stack");
    }
    public static MemoryAddress gtk_stack_sidebar_get_stack ( Addressable self) {
        var mh$ = gtk_stack_sidebar_get_stack$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_size_group_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2381.gtk_size_group_get_type$MH,"gtk_size_group_get_type");
    }
    public static long gtk_size_group_get_type () {
        var mh$ = gtk_size_group_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_size_group_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2381.gtk_size_group_new$MH,"gtk_size_group_new");
    }
    public static MemoryAddress gtk_size_group_new ( int mode) {
        var mh$ = gtk_size_group_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_size_group_set_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2381.gtk_size_group_set_mode$MH,"gtk_size_group_set_mode");
    }
    public static void gtk_size_group_set_mode ( Addressable size_group,  int mode) {
        var mh$ = gtk_size_group_set_mode$MH();
        try {
            mh$.invokeExact(size_group, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_size_group_get_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2381.gtk_size_group_get_mode$MH,"gtk_size_group_get_mode");
    }
    public static int gtk_size_group_get_mode ( Addressable size_group) {
        var mh$ = gtk_size_group_get_mode$MH();
        try {
            return (int)mh$.invokeExact(size_group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_size_group_add_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2381.gtk_size_group_add_widget$MH,"gtk_size_group_add_widget");
    }
    public static void gtk_size_group_add_widget ( Addressable size_group,  Addressable widget) {
        var mh$ = gtk_size_group_add_widget$MH();
        try {
            mh$.invokeExact(size_group, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_size_group_remove_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2381.gtk_size_group_remove_widget$MH,"gtk_size_group_remove_widget");
    }
    public static void gtk_size_group_remove_widget ( Addressable size_group,  Addressable widget) {
        var mh$ = gtk_size_group_remove_widget$MH();
        try {
            mh$.invokeExact(size_group, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_size_group_get_widgets$MH() {
        return RuntimeHelper.requireNonNull(constants$2382.gtk_size_group_get_widgets$MH,"gtk_size_group_get_widgets");
    }
    public static MemoryAddress gtk_size_group_get_widgets ( Addressable size_group) {
        var mh$ = gtk_size_group_get_widgets$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(size_group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_distribute_natural_allocation$MH() {
        return RuntimeHelper.requireNonNull(constants$2382.gtk_distribute_natural_allocation$MH,"gtk_distribute_natural_allocation");
    }
    public static int gtk_distribute_natural_allocation ( int extra_space,  int n_requested_sizes,  Addressable sizes) {
        var mh$ = gtk_distribute_natural_allocation$MH();
        try {
            return (int)mh$.invokeExact(extra_space, n_requested_sizes, sizes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GTK_UPDATE_ALWAYS() {
        return (int)0L;
    }
    public static int GTK_UPDATE_IF_VALID() {
        return (int)1L;
    }
    public static int GTK_SPIN_STEP_FORWARD() {
        return (int)0L;
    }
    public static int GTK_SPIN_STEP_BACKWARD() {
        return (int)1L;
    }
    public static int GTK_SPIN_PAGE_FORWARD() {
        return (int)2L;
    }
    public static int GTK_SPIN_PAGE_BACKWARD() {
        return (int)3L;
    }
    public static int GTK_SPIN_HOME() {
        return (int)4L;
    }
    public static int GTK_SPIN_END() {
        return (int)5L;
    }
    public static int GTK_SPIN_USER_DEFINED() {
        return (int)6L;
    }
    public static MethodHandle gtk_spin_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2382.gtk_spin_button_get_type$MH,"gtk_spin_button_get_type");
    }
    public static long gtk_spin_button_get_type () {
        var mh$ = gtk_spin_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_configure$MH() {
        return RuntimeHelper.requireNonNull(constants$2382.gtk_spin_button_configure$MH,"gtk_spin_button_configure");
    }
    public static void gtk_spin_button_configure ( Addressable spin_button,  Addressable adjustment,  double climb_rate,  int digits) {
        var mh$ = gtk_spin_button_configure$MH();
        try {
            mh$.invokeExact(spin_button, adjustment, climb_rate, digits);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2382.gtk_spin_button_new$MH,"gtk_spin_button_new");
    }
    public static MemoryAddress gtk_spin_button_new ( Addressable adjustment,  double climb_rate,  int digits) {
        var mh$ = gtk_spin_button_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(adjustment, climb_rate, digits);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_new_with_range$MH() {
        return RuntimeHelper.requireNonNull(constants$2382.gtk_spin_button_new_with_range$MH,"gtk_spin_button_new_with_range");
    }
    public static MemoryAddress gtk_spin_button_new_with_range ( double min,  double max,  double step) {
        var mh$ = gtk_spin_button_new_with_range$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(min, max, step);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_set_adjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$2383.gtk_spin_button_set_adjustment$MH,"gtk_spin_button_set_adjustment");
    }
    public static void gtk_spin_button_set_adjustment ( Addressable spin_button,  Addressable adjustment) {
        var mh$ = gtk_spin_button_set_adjustment$MH();
        try {
            mh$.invokeExact(spin_button, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_get_adjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$2383.gtk_spin_button_get_adjustment$MH,"gtk_spin_button_get_adjustment");
    }
    public static MemoryAddress gtk_spin_button_get_adjustment ( Addressable spin_button) {
        var mh$ = gtk_spin_button_get_adjustment$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(spin_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_set_digits$MH() {
        return RuntimeHelper.requireNonNull(constants$2383.gtk_spin_button_set_digits$MH,"gtk_spin_button_set_digits");
    }
    public static void gtk_spin_button_set_digits ( Addressable spin_button,  int digits) {
        var mh$ = gtk_spin_button_set_digits$MH();
        try {
            mh$.invokeExact(spin_button, digits);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_get_digits$MH() {
        return RuntimeHelper.requireNonNull(constants$2383.gtk_spin_button_get_digits$MH,"gtk_spin_button_get_digits");
    }
    public static int gtk_spin_button_get_digits ( Addressable spin_button) {
        var mh$ = gtk_spin_button_get_digits$MH();
        try {
            return (int)mh$.invokeExact(spin_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_set_increments$MH() {
        return RuntimeHelper.requireNonNull(constants$2383.gtk_spin_button_set_increments$MH,"gtk_spin_button_set_increments");
    }
    public static void gtk_spin_button_set_increments ( Addressable spin_button,  double step,  double page) {
        var mh$ = gtk_spin_button_set_increments$MH();
        try {
            mh$.invokeExact(spin_button, step, page);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_get_increments$MH() {
        return RuntimeHelper.requireNonNull(constants$2383.gtk_spin_button_get_increments$MH,"gtk_spin_button_get_increments");
    }
    public static void gtk_spin_button_get_increments ( Addressable spin_button,  Addressable step,  Addressable page) {
        var mh$ = gtk_spin_button_get_increments$MH();
        try {
            mh$.invokeExact(spin_button, step, page);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_set_range$MH() {
        return RuntimeHelper.requireNonNull(constants$2384.gtk_spin_button_set_range$MH,"gtk_spin_button_set_range");
    }
    public static void gtk_spin_button_set_range ( Addressable spin_button,  double min,  double max) {
        var mh$ = gtk_spin_button_set_range$MH();
        try {
            mh$.invokeExact(spin_button, min, max);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_get_range$MH() {
        return RuntimeHelper.requireNonNull(constants$2384.gtk_spin_button_get_range$MH,"gtk_spin_button_get_range");
    }
    public static void gtk_spin_button_get_range ( Addressable spin_button,  Addressable min,  Addressable max) {
        var mh$ = gtk_spin_button_get_range$MH();
        try {
            mh$.invokeExact(spin_button, min, max);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_get_value$MH() {
        return RuntimeHelper.requireNonNull(constants$2384.gtk_spin_button_get_value$MH,"gtk_spin_button_get_value");
    }
    public static double gtk_spin_button_get_value ( Addressable spin_button) {
        var mh$ = gtk_spin_button_get_value$MH();
        try {
            return (double)mh$.invokeExact(spin_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_get_value_as_int$MH() {
        return RuntimeHelper.requireNonNull(constants$2384.gtk_spin_button_get_value_as_int$MH,"gtk_spin_button_get_value_as_int");
    }
    public static int gtk_spin_button_get_value_as_int ( Addressable spin_button) {
        var mh$ = gtk_spin_button_get_value_as_int$MH();
        try {
            return (int)mh$.invokeExact(spin_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_set_value$MH() {
        return RuntimeHelper.requireNonNull(constants$2384.gtk_spin_button_set_value$MH,"gtk_spin_button_set_value");
    }
    public static void gtk_spin_button_set_value ( Addressable spin_button,  double value) {
        var mh$ = gtk_spin_button_set_value$MH();
        try {
            mh$.invokeExact(spin_button, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_set_update_policy$MH() {
        return RuntimeHelper.requireNonNull(constants$2384.gtk_spin_button_set_update_policy$MH,"gtk_spin_button_set_update_policy");
    }
    public static void gtk_spin_button_set_update_policy ( Addressable spin_button,  int policy) {
        var mh$ = gtk_spin_button_set_update_policy$MH();
        try {
            mh$.invokeExact(spin_button, policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_get_update_policy$MH() {
        return RuntimeHelper.requireNonNull(constants$2385.gtk_spin_button_get_update_policy$MH,"gtk_spin_button_get_update_policy");
    }
    public static int gtk_spin_button_get_update_policy ( Addressable spin_button) {
        var mh$ = gtk_spin_button_get_update_policy$MH();
        try {
            return (int)mh$.invokeExact(spin_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_set_numeric$MH() {
        return RuntimeHelper.requireNonNull(constants$2385.gtk_spin_button_set_numeric$MH,"gtk_spin_button_set_numeric");
    }
    public static void gtk_spin_button_set_numeric ( Addressable spin_button,  int numeric) {
        var mh$ = gtk_spin_button_set_numeric$MH();
        try {
            mh$.invokeExact(spin_button, numeric);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_get_numeric$MH() {
        return RuntimeHelper.requireNonNull(constants$2385.gtk_spin_button_get_numeric$MH,"gtk_spin_button_get_numeric");
    }
    public static int gtk_spin_button_get_numeric ( Addressable spin_button) {
        var mh$ = gtk_spin_button_get_numeric$MH();
        try {
            return (int)mh$.invokeExact(spin_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_spin$MH() {
        return RuntimeHelper.requireNonNull(constants$2385.gtk_spin_button_spin$MH,"gtk_spin_button_spin");
    }
    public static void gtk_spin_button_spin ( Addressable spin_button,  int direction,  double increment) {
        var mh$ = gtk_spin_button_spin$MH();
        try {
            mh$.invokeExact(spin_button, direction, increment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_set_wrap$MH() {
        return RuntimeHelper.requireNonNull(constants$2385.gtk_spin_button_set_wrap$MH,"gtk_spin_button_set_wrap");
    }
    public static void gtk_spin_button_set_wrap ( Addressable spin_button,  int wrap) {
        var mh$ = gtk_spin_button_set_wrap$MH();
        try {
            mh$.invokeExact(spin_button, wrap);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_get_wrap$MH() {
        return RuntimeHelper.requireNonNull(constants$2385.gtk_spin_button_get_wrap$MH,"gtk_spin_button_get_wrap");
    }
    public static int gtk_spin_button_get_wrap ( Addressable spin_button) {
        var mh$ = gtk_spin_button_get_wrap$MH();
        try {
            return (int)mh$.invokeExact(spin_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_set_snap_to_ticks$MH() {
        return RuntimeHelper.requireNonNull(constants$2386.gtk_spin_button_set_snap_to_ticks$MH,"gtk_spin_button_set_snap_to_ticks");
    }
    public static void gtk_spin_button_set_snap_to_ticks ( Addressable spin_button,  int snap_to_ticks) {
        var mh$ = gtk_spin_button_set_snap_to_ticks$MH();
        try {
            mh$.invokeExact(spin_button, snap_to_ticks);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_get_snap_to_ticks$MH() {
        return RuntimeHelper.requireNonNull(constants$2386.gtk_spin_button_get_snap_to_ticks$MH,"gtk_spin_button_get_snap_to_ticks");
    }
    public static int gtk_spin_button_get_snap_to_ticks ( Addressable spin_button) {
        var mh$ = gtk_spin_button_get_snap_to_ticks$MH();
        try {
            return (int)mh$.invokeExact(spin_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_set_climb_rate$MH() {
        return RuntimeHelper.requireNonNull(constants$2386.gtk_spin_button_set_climb_rate$MH,"gtk_spin_button_set_climb_rate");
    }
    public static void gtk_spin_button_set_climb_rate ( Addressable spin_button,  double climb_rate) {
        var mh$ = gtk_spin_button_set_climb_rate$MH();
        try {
            mh$.invokeExact(spin_button, climb_rate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_get_climb_rate$MH() {
        return RuntimeHelper.requireNonNull(constants$2386.gtk_spin_button_get_climb_rate$MH,"gtk_spin_button_get_climb_rate");
    }
    public static double gtk_spin_button_get_climb_rate ( Addressable spin_button) {
        var mh$ = gtk_spin_button_get_climb_rate$MH();
        try {
            return (double)mh$.invokeExact(spin_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spin_button_update$MH() {
        return RuntimeHelper.requireNonNull(constants$2386.gtk_spin_button_update$MH,"gtk_spin_button_update");
    }
    public static void gtk_spin_button_update ( Addressable spin_button) {
        var mh$ = gtk_spin_button_update$MH();
        try {
            mh$.invokeExact(spin_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spinner_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2386.gtk_spinner_get_type$MH,"gtk_spinner_get_type");
    }
    public static long gtk_spinner_get_type () {
        var mh$ = gtk_spinner_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spinner_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2387.gtk_spinner_new$MH,"gtk_spinner_new");
    }
    public static MemoryAddress gtk_spinner_new () {
        var mh$ = gtk_spinner_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spinner_start$MH() {
        return RuntimeHelper.requireNonNull(constants$2387.gtk_spinner_start$MH,"gtk_spinner_start");
    }
    public static void gtk_spinner_start ( Addressable spinner) {
        var mh$ = gtk_spinner_start$MH();
        try {
            mh$.invokeExact(spinner);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spinner_stop$MH() {
        return RuntimeHelper.requireNonNull(constants$2387.gtk_spinner_stop$MH,"gtk_spinner_stop");
    }
    public static void gtk_spinner_stop ( Addressable spinner) {
        var mh$ = gtk_spinner_stop$MH();
        try {
            mh$.invokeExact(spinner);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spinner_set_spinning$MH() {
        return RuntimeHelper.requireNonNull(constants$2387.gtk_spinner_set_spinning$MH,"gtk_spinner_set_spinning");
    }
    public static void gtk_spinner_set_spinning ( Addressable spinner,  int spinning) {
        var mh$ = gtk_spinner_set_spinning$MH();
        try {
            mh$.invokeExact(spinner, spinning);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_spinner_get_spinning$MH() {
        return RuntimeHelper.requireNonNull(constants$2387.gtk_spinner_get_spinning$MH,"gtk_spinner_get_spinning");
    }
    public static int gtk_spinner_get_spinning ( Addressable spinner) {
        var mh$ = gtk_spinner_get_spinning$MH();
        try {
            return (int)mh$.invokeExact(spinner);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_switcher_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2387.gtk_stack_switcher_get_type$MH,"gtk_stack_switcher_get_type");
    }
    public static long gtk_stack_switcher_get_type () {
        var mh$ = gtk_stack_switcher_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_switcher_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2388.gtk_stack_switcher_new$MH,"gtk_stack_switcher_new");
    }
    public static MemoryAddress gtk_stack_switcher_new () {
        var mh$ = gtk_stack_switcher_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_switcher_set_stack$MH() {
        return RuntimeHelper.requireNonNull(constants$2388.gtk_stack_switcher_set_stack$MH,"gtk_stack_switcher_set_stack");
    }
    public static void gtk_stack_switcher_set_stack ( Addressable switcher,  Addressable stack) {
        var mh$ = gtk_stack_switcher_set_stack$MH();
        try {
            mh$.invokeExact(switcher, stack);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_stack_switcher_get_stack$MH() {
        return RuntimeHelper.requireNonNull(constants$2388.gtk_stack_switcher_get_stack$MH,"gtk_stack_switcher_get_stack");
    }
    public static MemoryAddress gtk_stack_switcher_get_stack ( Addressable switcher) {
        var mh$ = gtk_stack_switcher_get_stack$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(switcher);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_statusbar_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2388.gtk_statusbar_get_type$MH,"gtk_statusbar_get_type");
    }
    public static long gtk_statusbar_get_type () {
        var mh$ = gtk_statusbar_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_statusbar_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2388.gtk_statusbar_new$MH,"gtk_statusbar_new");
    }
    public static MemoryAddress gtk_statusbar_new () {
        var mh$ = gtk_statusbar_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_statusbar_get_context_id$MH() {
        return RuntimeHelper.requireNonNull(constants$2388.gtk_statusbar_get_context_id$MH,"gtk_statusbar_get_context_id");
    }
    public static int gtk_statusbar_get_context_id ( Addressable statusbar,  Addressable context_description) {
        var mh$ = gtk_statusbar_get_context_id$MH();
        try {
            return (int)mh$.invokeExact(statusbar, context_description);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_statusbar_push$MH() {
        return RuntimeHelper.requireNonNull(constants$2389.gtk_statusbar_push$MH,"gtk_statusbar_push");
    }
    public static int gtk_statusbar_push ( Addressable statusbar,  int context_id,  Addressable text) {
        var mh$ = gtk_statusbar_push$MH();
        try {
            return (int)mh$.invokeExact(statusbar, context_id, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_statusbar_pop$MH() {
        return RuntimeHelper.requireNonNull(constants$2389.gtk_statusbar_pop$MH,"gtk_statusbar_pop");
    }
    public static void gtk_statusbar_pop ( Addressable statusbar,  int context_id) {
        var mh$ = gtk_statusbar_pop$MH();
        try {
            mh$.invokeExact(statusbar, context_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_statusbar_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$2389.gtk_statusbar_remove$MH,"gtk_statusbar_remove");
    }
    public static void gtk_statusbar_remove ( Addressable statusbar,  int context_id,  int message_id) {
        var mh$ = gtk_statusbar_remove$MH();
        try {
            mh$.invokeExact(statusbar, context_id, message_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_statusbar_remove_all$MH() {
        return RuntimeHelper.requireNonNull(constants$2389.gtk_statusbar_remove_all$MH,"gtk_statusbar_remove_all");
    }
    public static void gtk_statusbar_remove_all ( Addressable statusbar,  int context_id) {
        var mh$ = gtk_statusbar_remove_all$MH();
        try {
            mh$.invokeExact(statusbar, context_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GTK_STRING_FILTER_MATCH_MODE_EXACT() {
        return (int)0L;
    }
    public static int GTK_STRING_FILTER_MATCH_MODE_SUBSTRING() {
        return (int)1L;
    }
    public static int GTK_STRING_FILTER_MATCH_MODE_PREFIX() {
        return (int)2L;
    }
    public static MethodHandle gtk_string_filter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2389.gtk_string_filter_get_type$MH,"gtk_string_filter_get_type");
    }
    public static long gtk_string_filter_get_type () {
        var mh$ = gtk_string_filter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkStringFilter_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStringFilter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStringFilter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStringFilter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkStringFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2389.glib_autoptr_clear_GtkStringFilter$MH,"glib_autoptr_clear_GtkStringFilter");
    }
    public static void glib_autoptr_clear_GtkStringFilter ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkStringFilter$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkStringFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2390.glib_autoptr_cleanup_GtkStringFilter$MH,"glib_autoptr_cleanup_GtkStringFilter");
    }
    public static void glib_autoptr_cleanup_GtkStringFilter ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkStringFilter$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkStringFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2390.glib_listautoptr_cleanup_GtkStringFilter$MH,"glib_listautoptr_cleanup_GtkStringFilter");
    }
    public static void glib_listautoptr_cleanup_GtkStringFilter ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkStringFilter$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkStringFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2390.glib_slistautoptr_cleanup_GtkStringFilter$MH,"glib_slistautoptr_cleanup_GtkStringFilter");
    }
    public static void glib_slistautoptr_cleanup_GtkStringFilter ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkStringFilter$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkStringFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2390.glib_queueautoptr_cleanup_GtkStringFilter$MH,"glib_queueautoptr_cleanup_GtkStringFilter");
    }
    public static void glib_queueautoptr_cleanup_GtkStringFilter ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkStringFilter$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkStringFilterClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStringFilterClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStringFilterClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStringFilterClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkStringFilterClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2390.glib_autoptr_clear_GtkStringFilterClass$MH,"glib_autoptr_clear_GtkStringFilterClass");
    }
    public static void glib_autoptr_clear_GtkStringFilterClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkStringFilterClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkStringFilterClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2390.glib_autoptr_cleanup_GtkStringFilterClass$MH,"glib_autoptr_cleanup_GtkStringFilterClass");
    }
    public static void glib_autoptr_cleanup_GtkStringFilterClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkStringFilterClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkStringFilterClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2391.glib_listautoptr_cleanup_GtkStringFilterClass$MH,"glib_listautoptr_cleanup_GtkStringFilterClass");
    }
    public static void glib_listautoptr_cleanup_GtkStringFilterClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkStringFilterClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkStringFilterClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2391.glib_slistautoptr_cleanup_GtkStringFilterClass$MH,"glib_slistautoptr_cleanup_GtkStringFilterClass");
    }
    public static void glib_slistautoptr_cleanup_GtkStringFilterClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkStringFilterClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkStringFilterClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2391.glib_queueautoptr_cleanup_GtkStringFilterClass$MH,"glib_queueautoptr_cleanup_GtkStringFilterClass");
    }
    public static void glib_queueautoptr_cleanup_GtkStringFilterClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkStringFilterClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_STRING_FILTER$MH() {
        return RuntimeHelper.requireNonNull(constants$2391.GTK_STRING_FILTER$MH,"GTK_STRING_FILTER");
    }
    public static MemoryAddress GTK_STRING_FILTER ( Addressable ptr) {
        var mh$ = GTK_STRING_FILTER$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_STRING_FILTER$MH() {
        return RuntimeHelper.requireNonNull(constants$2391.GTK_IS_STRING_FILTER$MH,"GTK_IS_STRING_FILTER");
    }
    public static int GTK_IS_STRING_FILTER ( Addressable ptr) {
        var mh$ = GTK_IS_STRING_FILTER$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_filter_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2391.gtk_string_filter_new$MH,"gtk_string_filter_new");
    }
    public static MemoryAddress gtk_string_filter_new ( Addressable expression) {
        var mh$ = gtk_string_filter_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(expression);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_filter_get_search$MH() {
        return RuntimeHelper.requireNonNull(constants$2392.gtk_string_filter_get_search$MH,"gtk_string_filter_get_search");
    }
    public static MemoryAddress gtk_string_filter_get_search ( Addressable self) {
        var mh$ = gtk_string_filter_get_search$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_filter_set_search$MH() {
        return RuntimeHelper.requireNonNull(constants$2392.gtk_string_filter_set_search$MH,"gtk_string_filter_set_search");
    }
    public static void gtk_string_filter_set_search ( Addressable self,  Addressable search) {
        var mh$ = gtk_string_filter_set_search$MH();
        try {
            mh$.invokeExact(self, search);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_filter_get_expression$MH() {
        return RuntimeHelper.requireNonNull(constants$2392.gtk_string_filter_get_expression$MH,"gtk_string_filter_get_expression");
    }
    public static MemoryAddress gtk_string_filter_get_expression ( Addressable self) {
        var mh$ = gtk_string_filter_get_expression$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_filter_set_expression$MH() {
        return RuntimeHelper.requireNonNull(constants$2392.gtk_string_filter_set_expression$MH,"gtk_string_filter_set_expression");
    }
    public static void gtk_string_filter_set_expression ( Addressable self,  Addressable expression) {
        var mh$ = gtk_string_filter_set_expression$MH();
        try {
            mh$.invokeExact(self, expression);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_filter_get_ignore_case$MH() {
        return RuntimeHelper.requireNonNull(constants$2392.gtk_string_filter_get_ignore_case$MH,"gtk_string_filter_get_ignore_case");
    }
    public static int gtk_string_filter_get_ignore_case ( Addressable self) {
        var mh$ = gtk_string_filter_get_ignore_case$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_filter_set_ignore_case$MH() {
        return RuntimeHelper.requireNonNull(constants$2392.gtk_string_filter_set_ignore_case$MH,"gtk_string_filter_set_ignore_case");
    }
    public static void gtk_string_filter_set_ignore_case ( Addressable self,  int ignore_case) {
        var mh$ = gtk_string_filter_set_ignore_case$MH();
        try {
            mh$.invokeExact(self, ignore_case);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_filter_get_match_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2393.gtk_string_filter_get_match_mode$MH,"gtk_string_filter_get_match_mode");
    }
    public static int gtk_string_filter_get_match_mode ( Addressable self) {
        var mh$ = gtk_string_filter_get_match_mode$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_filter_set_match_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2393.gtk_string_filter_set_match_mode$MH,"gtk_string_filter_set_match_mode");
    }
    public static void gtk_string_filter_set_match_mode ( Addressable self,  int mode) {
        var mh$ = gtk_string_filter_set_match_mode$MH();
        try {
            mh$.invokeExact(self, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_object_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2393.gtk_string_object_get_type$MH,"gtk_string_object_get_type");
    }
    public static long gtk_string_object_get_type () {
        var mh$ = gtk_string_object_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkStringObject_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStringObject_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStringObject_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStringObject_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkStringObject$MH() {
        return RuntimeHelper.requireNonNull(constants$2393.glib_autoptr_clear_GtkStringObject$MH,"glib_autoptr_clear_GtkStringObject");
    }
    public static void glib_autoptr_clear_GtkStringObject ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkStringObject$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkStringObject$MH() {
        return RuntimeHelper.requireNonNull(constants$2393.glib_autoptr_cleanup_GtkStringObject$MH,"glib_autoptr_cleanup_GtkStringObject");
    }
    public static void glib_autoptr_cleanup_GtkStringObject ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkStringObject$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkStringObject$MH() {
        return RuntimeHelper.requireNonNull(constants$2393.glib_listautoptr_cleanup_GtkStringObject$MH,"glib_listautoptr_cleanup_GtkStringObject");
    }
    public static void glib_listautoptr_cleanup_GtkStringObject ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkStringObject$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkStringObject$MH() {
        return RuntimeHelper.requireNonNull(constants$2394.glib_slistautoptr_cleanup_GtkStringObject$MH,"glib_slistautoptr_cleanup_GtkStringObject");
    }
    public static void glib_slistautoptr_cleanup_GtkStringObject ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkStringObject$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkStringObject$MH() {
        return RuntimeHelper.requireNonNull(constants$2394.glib_queueautoptr_cleanup_GtkStringObject$MH,"glib_queueautoptr_cleanup_GtkStringObject");
    }
    public static void glib_queueautoptr_cleanup_GtkStringObject ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkStringObject$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkStringObjectClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStringObjectClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStringObjectClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStringObjectClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkStringObjectClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2394.glib_autoptr_clear_GtkStringObjectClass$MH,"glib_autoptr_clear_GtkStringObjectClass");
    }
    public static void glib_autoptr_clear_GtkStringObjectClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkStringObjectClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkStringObjectClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2394.glib_autoptr_cleanup_GtkStringObjectClass$MH,"glib_autoptr_cleanup_GtkStringObjectClass");
    }
    public static void glib_autoptr_cleanup_GtkStringObjectClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkStringObjectClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkStringObjectClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2394.glib_listautoptr_cleanup_GtkStringObjectClass$MH,"glib_listautoptr_cleanup_GtkStringObjectClass");
    }
    public static void glib_listautoptr_cleanup_GtkStringObjectClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkStringObjectClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkStringObjectClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2394.glib_slistautoptr_cleanup_GtkStringObjectClass$MH,"glib_slistautoptr_cleanup_GtkStringObjectClass");
    }
    public static void glib_slistautoptr_cleanup_GtkStringObjectClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkStringObjectClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkStringObjectClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2395.glib_queueautoptr_cleanup_GtkStringObjectClass$MH,"glib_queueautoptr_cleanup_GtkStringObjectClass");
    }
    public static void glib_queueautoptr_cleanup_GtkStringObjectClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkStringObjectClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_STRING_OBJECT$MH() {
        return RuntimeHelper.requireNonNull(constants$2395.GTK_STRING_OBJECT$MH,"GTK_STRING_OBJECT");
    }
    public static MemoryAddress GTK_STRING_OBJECT ( Addressable ptr) {
        var mh$ = GTK_STRING_OBJECT$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_STRING_OBJECT$MH() {
        return RuntimeHelper.requireNonNull(constants$2395.GTK_IS_STRING_OBJECT$MH,"GTK_IS_STRING_OBJECT");
    }
    public static int GTK_IS_STRING_OBJECT ( Addressable ptr) {
        var mh$ = GTK_IS_STRING_OBJECT$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_object_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2395.gtk_string_object_new$MH,"gtk_string_object_new");
    }
    public static MemoryAddress gtk_string_object_new ( Addressable string) {
        var mh$ = gtk_string_object_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_object_get_string$MH() {
        return RuntimeHelper.requireNonNull(constants$2395.gtk_string_object_get_string$MH,"gtk_string_object_get_string");
    }
    public static MemoryAddress gtk_string_object_get_string ( Addressable self) {
        var mh$ = gtk_string_object_get_string$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_list_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2395.gtk_string_list_get_type$MH,"gtk_string_list_get_type");
    }
    public static long gtk_string_list_get_type () {
        var mh$ = gtk_string_list_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkStringList_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStringList_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStringList_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStringList_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkStringList$MH() {
        return RuntimeHelper.requireNonNull(constants$2396.glib_autoptr_clear_GtkStringList$MH,"glib_autoptr_clear_GtkStringList");
    }
    public static void glib_autoptr_clear_GtkStringList ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkStringList$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkStringList$MH() {
        return RuntimeHelper.requireNonNull(constants$2396.glib_autoptr_cleanup_GtkStringList$MH,"glib_autoptr_cleanup_GtkStringList");
    }
    public static void glib_autoptr_cleanup_GtkStringList ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkStringList$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkStringList$MH() {
        return RuntimeHelper.requireNonNull(constants$2396.glib_listautoptr_cleanup_GtkStringList$MH,"glib_listautoptr_cleanup_GtkStringList");
    }
    public static void glib_listautoptr_cleanup_GtkStringList ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkStringList$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkStringList$MH() {
        return RuntimeHelper.requireNonNull(constants$2396.glib_slistautoptr_cleanup_GtkStringList$MH,"glib_slistautoptr_cleanup_GtkStringList");
    }
    public static void glib_slistautoptr_cleanup_GtkStringList ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkStringList$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkStringList$MH() {
        return RuntimeHelper.requireNonNull(constants$2396.glib_queueautoptr_cleanup_GtkStringList$MH,"glib_queueautoptr_cleanup_GtkStringList");
    }
    public static void glib_queueautoptr_cleanup_GtkStringList ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkStringList$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkStringListClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStringListClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStringListClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStringListClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkStringListClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2396.glib_autoptr_clear_GtkStringListClass$MH,"glib_autoptr_clear_GtkStringListClass");
    }
    public static void glib_autoptr_clear_GtkStringListClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkStringListClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkStringListClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2397.glib_autoptr_cleanup_GtkStringListClass$MH,"glib_autoptr_cleanup_GtkStringListClass");
    }
    public static void glib_autoptr_cleanup_GtkStringListClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkStringListClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkStringListClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2397.glib_listautoptr_cleanup_GtkStringListClass$MH,"glib_listautoptr_cleanup_GtkStringListClass");
    }
    public static void glib_listautoptr_cleanup_GtkStringListClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkStringListClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkStringListClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2397.glib_slistautoptr_cleanup_GtkStringListClass$MH,"glib_slistautoptr_cleanup_GtkStringListClass");
    }
    public static void glib_slistautoptr_cleanup_GtkStringListClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkStringListClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkStringListClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2397.glib_queueautoptr_cleanup_GtkStringListClass$MH,"glib_queueautoptr_cleanup_GtkStringListClass");
    }
    public static void glib_queueautoptr_cleanup_GtkStringListClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkStringListClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_STRING_LIST$MH() {
        return RuntimeHelper.requireNonNull(constants$2397.GTK_STRING_LIST$MH,"GTK_STRING_LIST");
    }
    public static MemoryAddress GTK_STRING_LIST ( Addressable ptr) {
        var mh$ = GTK_STRING_LIST$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_STRING_LIST$MH() {
        return RuntimeHelper.requireNonNull(constants$2397.GTK_IS_STRING_LIST$MH,"GTK_IS_STRING_LIST");
    }
    public static int GTK_IS_STRING_LIST ( Addressable ptr) {
        var mh$ = GTK_IS_STRING_LIST$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_list_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2398.gtk_string_list_new$MH,"gtk_string_list_new");
    }
    public static MemoryAddress gtk_string_list_new ( Addressable strings) {
        var mh$ = gtk_string_list_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(strings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_list_append$MH() {
        return RuntimeHelper.requireNonNull(constants$2398.gtk_string_list_append$MH,"gtk_string_list_append");
    }
    public static void gtk_string_list_append ( Addressable self,  Addressable string) {
        var mh$ = gtk_string_list_append$MH();
        try {
            mh$.invokeExact(self, string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_list_take$MH() {
        return RuntimeHelper.requireNonNull(constants$2398.gtk_string_list_take$MH,"gtk_string_list_take");
    }
    public static void gtk_string_list_take ( Addressable self,  Addressable string) {
        var mh$ = gtk_string_list_take$MH();
        try {
            mh$.invokeExact(self, string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_list_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$2398.gtk_string_list_remove$MH,"gtk_string_list_remove");
    }
    public static void gtk_string_list_remove ( Addressable self,  int position) {
        var mh$ = gtk_string_list_remove$MH();
        try {
            mh$.invokeExact(self, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_list_splice$MH() {
        return RuntimeHelper.requireNonNull(constants$2398.gtk_string_list_splice$MH,"gtk_string_list_splice");
    }
    public static void gtk_string_list_splice ( Addressable self,  int position,  int n_removals,  Addressable additions) {
        var mh$ = gtk_string_list_splice$MH();
        try {
            mh$.invokeExact(self, position, n_removals, additions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_list_get_string$MH() {
        return RuntimeHelper.requireNonNull(constants$2398.gtk_string_list_get_string$MH,"gtk_string_list_get_string");
    }
    public static MemoryAddress gtk_string_list_get_string ( Addressable self,  int position) {
        var mh$ = gtk_string_list_get_string$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_sorter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2399.gtk_string_sorter_get_type$MH,"gtk_string_sorter_get_type");
    }
    public static long gtk_string_sorter_get_type () {
        var mh$ = gtk_string_sorter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkStringSorter_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStringSorter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStringSorter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStringSorter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkStringSorter$MH() {
        return RuntimeHelper.requireNonNull(constants$2399.glib_autoptr_clear_GtkStringSorter$MH,"glib_autoptr_clear_GtkStringSorter");
    }
    public static void glib_autoptr_clear_GtkStringSorter ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkStringSorter$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkStringSorter$MH() {
        return RuntimeHelper.requireNonNull(constants$2399.glib_autoptr_cleanup_GtkStringSorter$MH,"glib_autoptr_cleanup_GtkStringSorter");
    }
    public static void glib_autoptr_cleanup_GtkStringSorter ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkStringSorter$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkStringSorter$MH() {
        return RuntimeHelper.requireNonNull(constants$2399.glib_listautoptr_cleanup_GtkStringSorter$MH,"glib_listautoptr_cleanup_GtkStringSorter");
    }
    public static void glib_listautoptr_cleanup_GtkStringSorter ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkStringSorter$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkStringSorter$MH() {
        return RuntimeHelper.requireNonNull(constants$2399.glib_slistautoptr_cleanup_GtkStringSorter$MH,"glib_slistautoptr_cleanup_GtkStringSorter");
    }
    public static void glib_slistautoptr_cleanup_GtkStringSorter ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkStringSorter$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkStringSorter$MH() {
        return RuntimeHelper.requireNonNull(constants$2399.glib_queueautoptr_cleanup_GtkStringSorter$MH,"glib_queueautoptr_cleanup_GtkStringSorter");
    }
    public static void glib_queueautoptr_cleanup_GtkStringSorter ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkStringSorter$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkStringSorterClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStringSorterClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStringSorterClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStringSorterClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkStringSorterClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2400.glib_autoptr_clear_GtkStringSorterClass$MH,"glib_autoptr_clear_GtkStringSorterClass");
    }
    public static void glib_autoptr_clear_GtkStringSorterClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkStringSorterClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkStringSorterClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2400.glib_autoptr_cleanup_GtkStringSorterClass$MH,"glib_autoptr_cleanup_GtkStringSorterClass");
    }
    public static void glib_autoptr_cleanup_GtkStringSorterClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkStringSorterClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkStringSorterClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2400.glib_listautoptr_cleanup_GtkStringSorterClass$MH,"glib_listautoptr_cleanup_GtkStringSorterClass");
    }
    public static void glib_listautoptr_cleanup_GtkStringSorterClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkStringSorterClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkStringSorterClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2400.glib_slistautoptr_cleanup_GtkStringSorterClass$MH,"glib_slistautoptr_cleanup_GtkStringSorterClass");
    }
    public static void glib_slistautoptr_cleanup_GtkStringSorterClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkStringSorterClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkStringSorterClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2400.glib_queueautoptr_cleanup_GtkStringSorterClass$MH,"glib_queueautoptr_cleanup_GtkStringSorterClass");
    }
    public static void glib_queueautoptr_cleanup_GtkStringSorterClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkStringSorterClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_STRING_SORTER$MH() {
        return RuntimeHelper.requireNonNull(constants$2400.GTK_STRING_SORTER$MH,"GTK_STRING_SORTER");
    }
    public static MemoryAddress GTK_STRING_SORTER ( Addressable ptr) {
        var mh$ = GTK_STRING_SORTER$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_STRING_SORTER$MH() {
        return RuntimeHelper.requireNonNull(constants$2401.GTK_IS_STRING_SORTER$MH,"GTK_IS_STRING_SORTER");
    }
    public static int GTK_IS_STRING_SORTER ( Addressable ptr) {
        var mh$ = GTK_IS_STRING_SORTER$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_sorter_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2401.gtk_string_sorter_new$MH,"gtk_string_sorter_new");
    }
    public static MemoryAddress gtk_string_sorter_new ( Addressable expression) {
        var mh$ = gtk_string_sorter_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(expression);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_sorter_get_expression$MH() {
        return RuntimeHelper.requireNonNull(constants$2401.gtk_string_sorter_get_expression$MH,"gtk_string_sorter_get_expression");
    }
    public static MemoryAddress gtk_string_sorter_get_expression ( Addressable self) {
        var mh$ = gtk_string_sorter_get_expression$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_sorter_set_expression$MH() {
        return RuntimeHelper.requireNonNull(constants$2401.gtk_string_sorter_set_expression$MH,"gtk_string_sorter_set_expression");
    }
    public static void gtk_string_sorter_set_expression ( Addressable self,  Addressable expression) {
        var mh$ = gtk_string_sorter_set_expression$MH();
        try {
            mh$.invokeExact(self, expression);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_sorter_get_ignore_case$MH() {
        return RuntimeHelper.requireNonNull(constants$2401.gtk_string_sorter_get_ignore_case$MH,"gtk_string_sorter_get_ignore_case");
    }
    public static int gtk_string_sorter_get_ignore_case ( Addressable self) {
        var mh$ = gtk_string_sorter_get_ignore_case$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_string_sorter_set_ignore_case$MH() {
        return RuntimeHelper.requireNonNull(constants$2401.gtk_string_sorter_set_ignore_case$MH,"gtk_string_sorter_set_ignore_case");
    }
    public static void gtk_string_sorter_set_ignore_case ( Addressable self,  int ignore_case) {
        var mh$ = gtk_string_sorter_set_ignore_case$MH();
        try {
            mh$.invokeExact(self, ignore_case);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_provider_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2402.gtk_style_provider_get_type$MH,"gtk_style_provider_get_type");
    }
    public static long gtk_style_provider_get_type () {
        var mh$ = gtk_style_provider_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2402.gtk_style_context_get_type$MH,"gtk_style_context_get_type");
    }
    public static long gtk_style_context_get_type () {
        var mh$ = gtk_style_context_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_add_provider_for_display$MH() {
        return RuntimeHelper.requireNonNull(constants$2402.gtk_style_context_add_provider_for_display$MH,"gtk_style_context_add_provider_for_display");
    }
    public static void gtk_style_context_add_provider_for_display ( Addressable display,  Addressable provider,  int priority) {
        var mh$ = gtk_style_context_add_provider_for_display$MH();
        try {
            mh$.invokeExact(display, provider, priority);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_remove_provider_for_display$MH() {
        return RuntimeHelper.requireNonNull(constants$2402.gtk_style_context_remove_provider_for_display$MH,"gtk_style_context_remove_provider_for_display");
    }
    public static void gtk_style_context_remove_provider_for_display ( Addressable display,  Addressable provider) {
        var mh$ = gtk_style_context_remove_provider_for_display$MH();
        try {
            mh$.invokeExact(display, provider);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_add_provider$MH() {
        return RuntimeHelper.requireNonNull(constants$2402.gtk_style_context_add_provider$MH,"gtk_style_context_add_provider");
    }
    public static void gtk_style_context_add_provider ( Addressable context,  Addressable provider,  int priority) {
        var mh$ = gtk_style_context_add_provider$MH();
        try {
            mh$.invokeExact(context, provider, priority);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_remove_provider$MH() {
        return RuntimeHelper.requireNonNull(constants$2402.gtk_style_context_remove_provider$MH,"gtk_style_context_remove_provider");
    }
    public static void gtk_style_context_remove_provider ( Addressable context,  Addressable provider) {
        var mh$ = gtk_style_context_remove_provider$MH();
        try {
            mh$.invokeExact(context, provider);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_save$MH() {
        return RuntimeHelper.requireNonNull(constants$2403.gtk_style_context_save$MH,"gtk_style_context_save");
    }
    public static void gtk_style_context_save ( Addressable context) {
        var mh$ = gtk_style_context_save$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_restore$MH() {
        return RuntimeHelper.requireNonNull(constants$2403.gtk_style_context_restore$MH,"gtk_style_context_restore");
    }
    public static void gtk_style_context_restore ( Addressable context) {
        var mh$ = gtk_style_context_restore$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_set_state$MH() {
        return RuntimeHelper.requireNonNull(constants$2403.gtk_style_context_set_state$MH,"gtk_style_context_set_state");
    }
    public static void gtk_style_context_set_state ( Addressable context,  int flags) {
        var mh$ = gtk_style_context_set_state$MH();
        try {
            mh$.invokeExact(context, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_state$MH() {
        return RuntimeHelper.requireNonNull(constants$2403.gtk_style_context_get_state$MH,"gtk_style_context_get_state");
    }
    public static int gtk_style_context_get_state ( Addressable context) {
        var mh$ = gtk_style_context_get_state$MH();
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_set_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$2403.gtk_style_context_set_scale$MH,"gtk_style_context_set_scale");
    }
    public static void gtk_style_context_set_scale ( Addressable context,  int scale) {
        var mh$ = gtk_style_context_set_scale$MH();
        try {
            mh$.invokeExact(context, scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$2403.gtk_style_context_get_scale$MH,"gtk_style_context_get_scale");
    }
    public static int gtk_style_context_get_scale ( Addressable context) {
        var mh$ = gtk_style_context_get_scale$MH();
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_add_class$MH() {
        return RuntimeHelper.requireNonNull(constants$2404.gtk_style_context_add_class$MH,"gtk_style_context_add_class");
    }
    public static void gtk_style_context_add_class ( Addressable context,  Addressable class_name) {
        var mh$ = gtk_style_context_add_class$MH();
        try {
            mh$.invokeExact(context, class_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_remove_class$MH() {
        return RuntimeHelper.requireNonNull(constants$2404.gtk_style_context_remove_class$MH,"gtk_style_context_remove_class");
    }
    public static void gtk_style_context_remove_class ( Addressable context,  Addressable class_name) {
        var mh$ = gtk_style_context_remove_class$MH();
        try {
            mh$.invokeExact(context, class_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_has_class$MH() {
        return RuntimeHelper.requireNonNull(constants$2404.gtk_style_context_has_class$MH,"gtk_style_context_has_class");
    }
    public static int gtk_style_context_has_class ( Addressable context,  Addressable class_name) {
        var mh$ = gtk_style_context_has_class$MH();
        try {
            return (int)mh$.invokeExact(context, class_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_set_display$MH() {
        return RuntimeHelper.requireNonNull(constants$2404.gtk_style_context_set_display$MH,"gtk_style_context_set_display");
    }
    public static void gtk_style_context_set_display ( Addressable context,  Addressable display) {
        var mh$ = gtk_style_context_set_display$MH();
        try {
            mh$.invokeExact(context, display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_display$MH() {
        return RuntimeHelper.requireNonNull(constants$2404.gtk_style_context_get_display$MH,"gtk_style_context_get_display");
    }
    public static MemoryAddress gtk_style_context_get_display ( Addressable context) {
        var mh$ = gtk_style_context_get_display$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_lookup_color$MH() {
        return RuntimeHelper.requireNonNull(constants$2404.gtk_style_context_lookup_color$MH,"gtk_style_context_lookup_color");
    }
    public static int gtk_style_context_lookup_color ( Addressable context,  Addressable color_name,  Addressable color) {
        var mh$ = gtk_style_context_lookup_color$MH();
        try {
            return (int)mh$.invokeExact(context, color_name, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_color$MH() {
        return RuntimeHelper.requireNonNull(constants$2405.gtk_style_context_get_color$MH,"gtk_style_context_get_color");
    }
    public static void gtk_style_context_get_color ( Addressable context,  Addressable color) {
        var mh$ = gtk_style_context_get_color$MH();
        try {
            mh$.invokeExact(context, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_border$MH() {
        return RuntimeHelper.requireNonNull(constants$2405.gtk_style_context_get_border$MH,"gtk_style_context_get_border");
    }
    public static void gtk_style_context_get_border ( Addressable context,  Addressable border) {
        var mh$ = gtk_style_context_get_border$MH();
        try {
            mh$.invokeExact(context, border);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_padding$MH() {
        return RuntimeHelper.requireNonNull(constants$2405.gtk_style_context_get_padding$MH,"gtk_style_context_get_padding");
    }
    public static void gtk_style_context_get_padding ( Addressable context,  Addressable padding) {
        var mh$ = gtk_style_context_get_padding$MH();
        try {
            mh$.invokeExact(context, padding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$2405.gtk_style_context_get_margin$MH,"gtk_style_context_get_margin");
    }
    public static void gtk_style_context_get_margin ( Addressable context,  Addressable margin) {
        var mh$ = gtk_style_context_get_margin$MH();
        try {
            mh$.invokeExact(context, margin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GTK_STYLE_CONTEXT_PRINT_NONE() {
        return (int)0L;
    }
    public static int GTK_STYLE_CONTEXT_PRINT_RECURSE() {
        return (int)1L;
    }
    public static int GTK_STYLE_CONTEXT_PRINT_SHOW_STYLE() {
        return (int)2L;
    }
    public static int GTK_STYLE_CONTEXT_PRINT_SHOW_CHANGE() {
        return (int)4L;
    }
    public static MethodHandle gtk_style_context_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$2405.gtk_style_context_to_string$MH,"gtk_style_context_to_string");
    }
    public static MemoryAddress gtk_style_context_to_string ( Addressable context,  int flags) {
        var mh$ = gtk_style_context_to_string$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(context, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_switch_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2405.gtk_switch_get_type$MH,"gtk_switch_get_type");
    }
    public static long gtk_switch_get_type () {
        var mh$ = gtk_switch_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_switch_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2406.gtk_switch_new$MH,"gtk_switch_new");
    }
    public static MemoryAddress gtk_switch_new () {
        var mh$ = gtk_switch_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_switch_set_active$MH() {
        return RuntimeHelper.requireNonNull(constants$2406.gtk_switch_set_active$MH,"gtk_switch_set_active");
    }
    public static void gtk_switch_set_active ( Addressable self,  int is_active) {
        var mh$ = gtk_switch_set_active$MH();
        try {
            mh$.invokeExact(self, is_active);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_switch_get_active$MH() {
        return RuntimeHelper.requireNonNull(constants$2406.gtk_switch_get_active$MH,"gtk_switch_get_active");
    }
    public static int gtk_switch_get_active ( Addressable self) {
        var mh$ = gtk_switch_get_active$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_switch_set_state$MH() {
        return RuntimeHelper.requireNonNull(constants$2406.gtk_switch_set_state$MH,"gtk_switch_set_state");
    }
    public static void gtk_switch_set_state ( Addressable self,  int state) {
        var mh$ = gtk_switch_set_state$MH();
        try {
            mh$.invokeExact(self, state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_switch_get_state$MH() {
        return RuntimeHelper.requireNonNull(constants$2406.gtk_switch_get_state$MH,"gtk_switch_get_state");
    }
    public static int gtk_switch_get_state ( Addressable self) {
        var mh$ = gtk_switch_get_state$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_symbolic_paintable_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2406.gtk_symbolic_paintable_get_type$MH,"gtk_symbolic_paintable_get_type");
    }
    public static long gtk_symbolic_paintable_get_type () {
        var mh$ = gtk_symbolic_paintable_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkSymbolicPaintable_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSymbolicPaintable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSymbolicPaintable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSymbolicPaintable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkSymbolicPaintable$MH() {
        return RuntimeHelper.requireNonNull(constants$2407.glib_autoptr_clear_GtkSymbolicPaintable$MH,"glib_autoptr_clear_GtkSymbolicPaintable");
    }
    public static void glib_autoptr_clear_GtkSymbolicPaintable ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkSymbolicPaintable$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkSymbolicPaintable$MH() {
        return RuntimeHelper.requireNonNull(constants$2407.glib_autoptr_cleanup_GtkSymbolicPaintable$MH,"glib_autoptr_cleanup_GtkSymbolicPaintable");
    }
    public static void glib_autoptr_cleanup_GtkSymbolicPaintable ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkSymbolicPaintable$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkSymbolicPaintable$MH() {
        return RuntimeHelper.requireNonNull(constants$2407.glib_listautoptr_cleanup_GtkSymbolicPaintable$MH,"glib_listautoptr_cleanup_GtkSymbolicPaintable");
    }
    public static void glib_listautoptr_cleanup_GtkSymbolicPaintable ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkSymbolicPaintable$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkSymbolicPaintable$MH() {
        return RuntimeHelper.requireNonNull(constants$2407.glib_slistautoptr_cleanup_GtkSymbolicPaintable$MH,"glib_slistautoptr_cleanup_GtkSymbolicPaintable");
    }
    public static void glib_slistautoptr_cleanup_GtkSymbolicPaintable ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkSymbolicPaintable$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkSymbolicPaintable$MH() {
        return RuntimeHelper.requireNonNull(constants$2407.glib_queueautoptr_cleanup_GtkSymbolicPaintable$MH,"glib_queueautoptr_cleanup_GtkSymbolicPaintable");
    }
    public static void glib_queueautoptr_cleanup_GtkSymbolicPaintable ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkSymbolicPaintable$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_SYMBOLIC_PAINTABLE$MH() {
        return RuntimeHelper.requireNonNull(constants$2407.GTK_SYMBOLIC_PAINTABLE$MH,"GTK_SYMBOLIC_PAINTABLE");
    }
    public static MemoryAddress GTK_SYMBOLIC_PAINTABLE ( Addressable ptr) {
        var mh$ = GTK_SYMBOLIC_PAINTABLE$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_SYMBOLIC_PAINTABLE$MH() {
        return RuntimeHelper.requireNonNull(constants$2408.GTK_IS_SYMBOLIC_PAINTABLE$MH,"GTK_IS_SYMBOLIC_PAINTABLE");
    }
    public static int GTK_IS_SYMBOLIC_PAINTABLE ( Addressable ptr) {
        var mh$ = GTK_IS_SYMBOLIC_PAINTABLE$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_SYMBOLIC_PAINTABLE_GET_IFACE$MH() {
        return RuntimeHelper.requireNonNull(constants$2408.GTK_SYMBOLIC_PAINTABLE_GET_IFACE$MH,"GTK_SYMBOLIC_PAINTABLE_GET_IFACE");
    }
    public static MemoryAddress GTK_SYMBOLIC_PAINTABLE_GET_IFACE ( Addressable ptr) {
        var mh$ = GTK_SYMBOLIC_PAINTABLE_GET_IFACE$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_symbolic_paintable_snapshot_symbolic$MH() {
        return RuntimeHelper.requireNonNull(constants$2408.gtk_symbolic_paintable_snapshot_symbolic$MH,"gtk_symbolic_paintable_snapshot_symbolic");
    }
    public static void gtk_symbolic_paintable_snapshot_symbolic ( Addressable paintable,  Addressable snapshot,  double width,  double height,  Addressable colors,  long n_colors) {
        var mh$ = gtk_symbolic_paintable_snapshot_symbolic$MH();
        try {
            mh$.invokeExact(paintable, snapshot, width, height, colors, n_colors);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2408.gtk_text_get_type$MH,"gtk_text_get_type");
    }
    public static long gtk_text_get_type () {
        var mh$ = gtk_text_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2408.gtk_text_new$MH,"gtk_text_new");
    }
    public static MemoryAddress gtk_text_new () {
        var mh$ = gtk_text_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_new_with_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2408.gtk_text_new_with_buffer$MH,"gtk_text_new_with_buffer");
    }
    public static MemoryAddress gtk_text_new_with_buffer ( Addressable buffer) {
        var mh$ = gtk_text_new_with_buffer$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_get_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2409.gtk_text_get_buffer$MH,"gtk_text_get_buffer");
    }
    public static MemoryAddress gtk_text_get_buffer ( Addressable self) {
        var mh$ = gtk_text_get_buffer$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_set_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2409.gtk_text_set_buffer$MH,"gtk_text_set_buffer");
    }
    public static void gtk_text_set_buffer ( Addressable self,  Addressable buffer) {
        var mh$ = gtk_text_set_buffer$MH();
        try {
            mh$.invokeExact(self, buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_set_visibility$MH() {
        return RuntimeHelper.requireNonNull(constants$2409.gtk_text_set_visibility$MH,"gtk_text_set_visibility");
    }
    public static void gtk_text_set_visibility ( Addressable self,  int visible) {
        var mh$ = gtk_text_set_visibility$MH();
        try {
            mh$.invokeExact(self, visible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_get_visibility$MH() {
        return RuntimeHelper.requireNonNull(constants$2409.gtk_text_get_visibility$MH,"gtk_text_get_visibility");
    }
    public static int gtk_text_get_visibility ( Addressable self) {
        var mh$ = gtk_text_get_visibility$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_set_invisible_char$MH() {
        return RuntimeHelper.requireNonNull(constants$2409.gtk_text_set_invisible_char$MH,"gtk_text_set_invisible_char");
    }
    public static void gtk_text_set_invisible_char ( Addressable self,  int ch) {
        var mh$ = gtk_text_set_invisible_char$MH();
        try {
            mh$.invokeExact(self, ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_get_invisible_char$MH() {
        return RuntimeHelper.requireNonNull(constants$2409.gtk_text_get_invisible_char$MH,"gtk_text_get_invisible_char");
    }
    public static int gtk_text_get_invisible_char ( Addressable self) {
        var mh$ = gtk_text_get_invisible_char$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_unset_invisible_char$MH() {
        return RuntimeHelper.requireNonNull(constants$2410.gtk_text_unset_invisible_char$MH,"gtk_text_unset_invisible_char");
    }
    public static void gtk_text_unset_invisible_char ( Addressable self) {
        var mh$ = gtk_text_unset_invisible_char$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_set_overwrite_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2410.gtk_text_set_overwrite_mode$MH,"gtk_text_set_overwrite_mode");
    }
    public static void gtk_text_set_overwrite_mode ( Addressable self,  int overwrite) {
        var mh$ = gtk_text_set_overwrite_mode$MH();
        try {
            mh$.invokeExact(self, overwrite);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_get_overwrite_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2410.gtk_text_get_overwrite_mode$MH,"gtk_text_get_overwrite_mode");
    }
    public static int gtk_text_get_overwrite_mode ( Addressable self) {
        var mh$ = gtk_text_get_overwrite_mode$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_set_max_length$MH() {
        return RuntimeHelper.requireNonNull(constants$2410.gtk_text_set_max_length$MH,"gtk_text_set_max_length");
    }
    public static void gtk_text_set_max_length ( Addressable self,  int length) {
        var mh$ = gtk_text_set_max_length$MH();
        try {
            mh$.invokeExact(self, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_get_max_length$MH() {
        return RuntimeHelper.requireNonNull(constants$2410.gtk_text_get_max_length$MH,"gtk_text_get_max_length");
    }
    public static int gtk_text_get_max_length ( Addressable self) {
        var mh$ = gtk_text_get_max_length$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_get_text_length$MH() {
        return RuntimeHelper.requireNonNull(constants$2410.gtk_text_get_text_length$MH,"gtk_text_get_text_length");
    }
    public static short gtk_text_get_text_length ( Addressable self) {
        var mh$ = gtk_text_get_text_length$MH();
        try {
            return (short)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_set_activates_default$MH() {
        return RuntimeHelper.requireNonNull(constants$2411.gtk_text_set_activates_default$MH,"gtk_text_set_activates_default");
    }
    public static void gtk_text_set_activates_default ( Addressable self,  int activates) {
        var mh$ = gtk_text_set_activates_default$MH();
        try {
            mh$.invokeExact(self, activates);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_get_activates_default$MH() {
        return RuntimeHelper.requireNonNull(constants$2411.gtk_text_get_activates_default$MH,"gtk_text_get_activates_default");
    }
    public static int gtk_text_get_activates_default ( Addressable self) {
        var mh$ = gtk_text_get_activates_default$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_get_placeholder_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2411.gtk_text_get_placeholder_text$MH,"gtk_text_get_placeholder_text");
    }
    public static MemoryAddress gtk_text_get_placeholder_text ( Addressable self) {
        var mh$ = gtk_text_get_placeholder_text$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_set_placeholder_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2411.gtk_text_set_placeholder_text$MH,"gtk_text_set_placeholder_text");
    }
    public static void gtk_text_set_placeholder_text ( Addressable self,  Addressable text) {
        var mh$ = gtk_text_set_placeholder_text$MH();
        try {
            mh$.invokeExact(self, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_set_input_purpose$MH() {
        return RuntimeHelper.requireNonNull(constants$2411.gtk_text_set_input_purpose$MH,"gtk_text_set_input_purpose");
    }
    public static void gtk_text_set_input_purpose ( Addressable self,  int purpose) {
        var mh$ = gtk_text_set_input_purpose$MH();
        try {
            mh$.invokeExact(self, purpose);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_get_input_purpose$MH() {
        return RuntimeHelper.requireNonNull(constants$2411.gtk_text_get_input_purpose$MH,"gtk_text_get_input_purpose");
    }
    public static int gtk_text_get_input_purpose ( Addressable self) {
        var mh$ = gtk_text_get_input_purpose$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_set_input_hints$MH() {
        return RuntimeHelper.requireNonNull(constants$2412.gtk_text_set_input_hints$MH,"gtk_text_set_input_hints");
    }
    public static void gtk_text_set_input_hints ( Addressable self,  int hints) {
        var mh$ = gtk_text_set_input_hints$MH();
        try {
            mh$.invokeExact(self, hints);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_get_input_hints$MH() {
        return RuntimeHelper.requireNonNull(constants$2412.gtk_text_get_input_hints$MH,"gtk_text_get_input_hints");
    }
    public static int gtk_text_get_input_hints ( Addressable self) {
        var mh$ = gtk_text_get_input_hints$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_set_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$2412.gtk_text_set_attributes$MH,"gtk_text_set_attributes");
    }
    public static void gtk_text_set_attributes ( Addressable self,  Addressable attrs) {
        var mh$ = gtk_text_set_attributes$MH();
        try {
            mh$.invokeExact(self, attrs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_get_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$2412.gtk_text_get_attributes$MH,"gtk_text_get_attributes");
    }
    public static MemoryAddress gtk_text_get_attributes ( Addressable self) {
        var mh$ = gtk_text_get_attributes$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_set_tabs$MH() {
        return RuntimeHelper.requireNonNull(constants$2412.gtk_text_set_tabs$MH,"gtk_text_set_tabs");
    }
    public static void gtk_text_set_tabs ( Addressable self,  Addressable tabs) {
        var mh$ = gtk_text_set_tabs$MH();
        try {
            mh$.invokeExact(self, tabs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_get_tabs$MH() {
        return RuntimeHelper.requireNonNull(constants$2412.gtk_text_get_tabs$MH,"gtk_text_get_tabs");
    }
    public static MemoryAddress gtk_text_get_tabs ( Addressable self) {
        var mh$ = gtk_text_get_tabs$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_grab_focus_without_selecting$MH() {
        return RuntimeHelper.requireNonNull(constants$2413.gtk_text_grab_focus_without_selecting$MH,"gtk_text_grab_focus_without_selecting");
    }
    public static int gtk_text_grab_focus_without_selecting ( Addressable self) {
        var mh$ = gtk_text_grab_focus_without_selecting$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_set_extra_menu$MH() {
        return RuntimeHelper.requireNonNull(constants$2413.gtk_text_set_extra_menu$MH,"gtk_text_set_extra_menu");
    }
    public static void gtk_text_set_extra_menu ( Addressable self,  Addressable model) {
        var mh$ = gtk_text_set_extra_menu$MH();
        try {
            mh$.invokeExact(self, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_get_extra_menu$MH() {
        return RuntimeHelper.requireNonNull(constants$2413.gtk_text_get_extra_menu$MH,"gtk_text_get_extra_menu");
    }
    public static MemoryAddress gtk_text_get_extra_menu ( Addressable self) {
        var mh$ = gtk_text_get_extra_menu$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_set_enable_emoji_completion$MH() {
        return RuntimeHelper.requireNonNull(constants$2413.gtk_text_set_enable_emoji_completion$MH,"gtk_text_set_enable_emoji_completion");
    }
    public static void gtk_text_set_enable_emoji_completion ( Addressable self,  int enable_emoji_completion) {
        var mh$ = gtk_text_set_enable_emoji_completion$MH();
        try {
            mh$.invokeExact(self, enable_emoji_completion);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_get_enable_emoji_completion$MH() {
        return RuntimeHelper.requireNonNull(constants$2413.gtk_text_get_enable_emoji_completion$MH,"gtk_text_get_enable_emoji_completion");
    }
    public static int gtk_text_get_enable_emoji_completion ( Addressable self) {
        var mh$ = gtk_text_get_enable_emoji_completion$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_set_propagate_text_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2413.gtk_text_set_propagate_text_width$MH,"gtk_text_set_propagate_text_width");
    }
    public static void gtk_text_set_propagate_text_width ( Addressable self,  int propagate_text_width) {
        var mh$ = gtk_text_set_propagate_text_width$MH();
        try {
            mh$.invokeExact(self, propagate_text_width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_get_propagate_text_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2414.gtk_text_get_propagate_text_width$MH,"gtk_text_get_propagate_text_width");
    }
    public static int gtk_text_get_propagate_text_width ( Addressable self) {
        var mh$ = gtk_text_get_propagate_text_width$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_set_truncate_multiline$MH() {
        return RuntimeHelper.requireNonNull(constants$2414.gtk_text_set_truncate_multiline$MH,"gtk_text_set_truncate_multiline");
    }
    public static void gtk_text_set_truncate_multiline ( Addressable self,  int truncate_multiline) {
        var mh$ = gtk_text_set_truncate_multiline$MH();
        try {
            mh$.invokeExact(self, truncate_multiline);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_get_truncate_multiline$MH() {
        return RuntimeHelper.requireNonNull(constants$2414.gtk_text_get_truncate_multiline$MH,"gtk_text_get_truncate_multiline");
    }
    public static int gtk_text_get_truncate_multiline ( Addressable self) {
        var mh$ = gtk_text_get_truncate_multiline$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_compute_cursor_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$2414.gtk_text_compute_cursor_extents$MH,"gtk_text_compute_cursor_extents");
    }
    public static void gtk_text_compute_cursor_extents ( Addressable self,  long position,  Addressable strong,  Addressable weak) {
        var mh$ = gtk_text_compute_cursor_extents$MH();
        try {
            mh$.invokeExact(self, position, strong, weak);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_tag_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2414.gtk_text_tag_get_type$MH,"gtk_text_tag_get_type");
    }
    public static long gtk_text_tag_get_type () {
        var mh$ = gtk_text_tag_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_tag_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2414.gtk_text_tag_new$MH,"gtk_text_tag_new");
    }
    public static MemoryAddress gtk_text_tag_new ( Addressable name) {
        var mh$ = gtk_text_tag_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_tag_get_priority$MH() {
        return RuntimeHelper.requireNonNull(constants$2415.gtk_text_tag_get_priority$MH,"gtk_text_tag_get_priority");
    }
    public static int gtk_text_tag_get_priority ( Addressable tag) {
        var mh$ = gtk_text_tag_get_priority$MH();
        try {
            return (int)mh$.invokeExact(tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_tag_set_priority$MH() {
        return RuntimeHelper.requireNonNull(constants$2415.gtk_text_tag_set_priority$MH,"gtk_text_tag_set_priority");
    }
    public static void gtk_text_tag_set_priority ( Addressable tag,  int priority) {
        var mh$ = gtk_text_tag_set_priority$MH();
        try {
            mh$.invokeExact(tag, priority);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_tag_changed$MH() {
        return RuntimeHelper.requireNonNull(constants$2415.gtk_text_tag_changed$MH,"gtk_text_tag_changed");
    }
    public static void gtk_text_tag_changed ( Addressable tag,  int size_changed) {
        var mh$ = gtk_text_tag_changed$MH();
        try {
            mh$.invokeExact(tag, size_changed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_tag_table_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2415.gtk_text_tag_table_get_type$MH,"gtk_text_tag_table_get_type");
    }
    public static long gtk_text_tag_table_get_type () {
        var mh$ = gtk_text_tag_table_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_tag_table_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2416.gtk_text_tag_table_new$MH,"gtk_text_tag_table_new");
    }
    public static MemoryAddress gtk_text_tag_table_new () {
        var mh$ = gtk_text_tag_table_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_tag_table_add$MH() {
        return RuntimeHelper.requireNonNull(constants$2416.gtk_text_tag_table_add$MH,"gtk_text_tag_table_add");
    }
    public static int gtk_text_tag_table_add ( Addressable table,  Addressable tag) {
        var mh$ = gtk_text_tag_table_add$MH();
        try {
            return (int)mh$.invokeExact(table, tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_tag_table_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$2416.gtk_text_tag_table_remove$MH,"gtk_text_tag_table_remove");
    }
    public static void gtk_text_tag_table_remove ( Addressable table,  Addressable tag) {
        var mh$ = gtk_text_tag_table_remove$MH();
        try {
            mh$.invokeExact(table, tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_tag_table_lookup$MH() {
        return RuntimeHelper.requireNonNull(constants$2416.gtk_text_tag_table_lookup$MH,"gtk_text_tag_table_lookup");
    }
    public static MemoryAddress gtk_text_tag_table_lookup ( Addressable table,  Addressable name) {
        var mh$ = gtk_text_tag_table_lookup$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(table, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_tag_table_foreach$MH() {
        return RuntimeHelper.requireNonNull(constants$2416.gtk_text_tag_table_foreach$MH,"gtk_text_tag_table_foreach");
    }
    public static void gtk_text_tag_table_foreach ( Addressable table,  Addressable func,  Addressable data) {
        var mh$ = gtk_text_tag_table_foreach$MH();
        try {
            mh$.invokeExact(table, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_tag_table_get_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2416.gtk_text_tag_table_get_size$MH,"gtk_text_tag_table_get_size");
    }
    public static int gtk_text_tag_table_get_size ( Addressable table) {
        var mh$ = gtk_text_tag_table_get_size$MH();
        try {
            return (int)mh$.invokeExact(table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_child_anchor_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2417.gtk_text_child_anchor_get_type$MH,"gtk_text_child_anchor_get_type");
    }
    public static long gtk_text_child_anchor_get_type () {
        var mh$ = gtk_text_child_anchor_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_child_anchor_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2417.gtk_text_child_anchor_new$MH,"gtk_text_child_anchor_new");
    }
    public static MemoryAddress gtk_text_child_anchor_new () {
        var mh$ = gtk_text_child_anchor_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_child_anchor_new_with_replacement$MH() {
        return RuntimeHelper.requireNonNull(constants$2417.gtk_text_child_anchor_new_with_replacement$MH,"gtk_text_child_anchor_new_with_replacement");
    }
    public static MemoryAddress gtk_text_child_anchor_new_with_replacement ( Addressable character) {
        var mh$ = gtk_text_child_anchor_new_with_replacement$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(character);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_child_anchor_get_widgets$MH() {
        return RuntimeHelper.requireNonNull(constants$2417.gtk_text_child_anchor_get_widgets$MH,"gtk_text_child_anchor_get_widgets");
    }
    public static MemoryAddress gtk_text_child_anchor_get_widgets ( Addressable anchor,  Addressable out_len) {
        var mh$ = gtk_text_child_anchor_get_widgets$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(anchor, out_len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_child_anchor_get_deleted$MH() {
        return RuntimeHelper.requireNonNull(constants$2417.gtk_text_child_anchor_get_deleted$MH,"gtk_text_child_anchor_get_deleted");
    }
    public static int gtk_text_child_anchor_get_deleted ( Addressable anchor) {
        var mh$ = gtk_text_child_anchor_get_deleted$MH();
        try {
            return (int)mh$.invokeExact(anchor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GTK_TEXT_SEARCH_VISIBLE_ONLY() {
        return (int)1L;
    }
    public static int GTK_TEXT_SEARCH_TEXT_ONLY() {
        return (int)2L;
    }
    public static int GTK_TEXT_SEARCH_CASE_INSENSITIVE() {
        return (int)4L;
    }
    public static MethodHandle gtk_text_iter_get_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2417.gtk_text_iter_get_buffer$MH,"gtk_text_iter_get_buffer");
    }
    public static MemoryAddress gtk_text_iter_get_buffer ( Addressable iter) {
        var mh$ = gtk_text_iter_get_buffer$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$2418.gtk_text_iter_copy$MH,"gtk_text_iter_copy");
    }
    public static MemoryAddress gtk_text_iter_copy ( Addressable iter) {
        var mh$ = gtk_text_iter_copy$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_free$MH() {
        return RuntimeHelper.requireNonNull(constants$2418.gtk_text_iter_free$MH,"gtk_text_iter_free");
    }
    public static void gtk_text_iter_free ( Addressable iter) {
        var mh$ = gtk_text_iter_free$MH();
        try {
            mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_assign$MH() {
        return RuntimeHelper.requireNonNull(constants$2418.gtk_text_iter_assign$MH,"gtk_text_iter_assign");
    }
    public static void gtk_text_iter_assign ( Addressable iter,  Addressable other) {
        var mh$ = gtk_text_iter_assign$MH();
        try {
            mh$.invokeExact(iter, other);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2418.gtk_text_iter_get_type$MH,"gtk_text_iter_get_type");
    }
    public static long gtk_text_iter_get_type () {
        var mh$ = gtk_text_iter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$2418.gtk_text_iter_get_offset$MH,"gtk_text_iter_get_offset");
    }
    public static int gtk_text_iter_get_offset ( Addressable iter) {
        var mh$ = gtk_text_iter_get_offset$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_line$MH() {
        return RuntimeHelper.requireNonNull(constants$2418.gtk_text_iter_get_line$MH,"gtk_text_iter_get_line");
    }
    public static int gtk_text_iter_get_line ( Addressable iter) {
        var mh$ = gtk_text_iter_get_line$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_line_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$2419.gtk_text_iter_get_line_offset$MH,"gtk_text_iter_get_line_offset");
    }
    public static int gtk_text_iter_get_line_offset ( Addressable iter) {
        var mh$ = gtk_text_iter_get_line_offset$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_line_index$MH() {
        return RuntimeHelper.requireNonNull(constants$2419.gtk_text_iter_get_line_index$MH,"gtk_text_iter_get_line_index");
    }
    public static int gtk_text_iter_get_line_index ( Addressable iter) {
        var mh$ = gtk_text_iter_get_line_index$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_visible_line_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$2419.gtk_text_iter_get_visible_line_offset$MH,"gtk_text_iter_get_visible_line_offset");
    }
    public static int gtk_text_iter_get_visible_line_offset ( Addressable iter) {
        var mh$ = gtk_text_iter_get_visible_line_offset$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_visible_line_index$MH() {
        return RuntimeHelper.requireNonNull(constants$2419.gtk_text_iter_get_visible_line_index$MH,"gtk_text_iter_get_visible_line_index");
    }
    public static int gtk_text_iter_get_visible_line_index ( Addressable iter) {
        var mh$ = gtk_text_iter_get_visible_line_index$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_char$MH() {
        return RuntimeHelper.requireNonNull(constants$2419.gtk_text_iter_get_char$MH,"gtk_text_iter_get_char");
    }
    public static int gtk_text_iter_get_char ( Addressable iter) {
        var mh$ = gtk_text_iter_get_char$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_slice$MH() {
        return RuntimeHelper.requireNonNull(constants$2419.gtk_text_iter_get_slice$MH,"gtk_text_iter_get_slice");
    }
    public static MemoryAddress gtk_text_iter_get_slice ( Addressable start,  Addressable end) {
        var mh$ = gtk_text_iter_get_slice$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2420.gtk_text_iter_get_text$MH,"gtk_text_iter_get_text");
    }
    public static MemoryAddress gtk_text_iter_get_text ( Addressable start,  Addressable end) {
        var mh$ = gtk_text_iter_get_text$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_visible_slice$MH() {
        return RuntimeHelper.requireNonNull(constants$2420.gtk_text_iter_get_visible_slice$MH,"gtk_text_iter_get_visible_slice");
    }
    public static MemoryAddress gtk_text_iter_get_visible_slice ( Addressable start,  Addressable end) {
        var mh$ = gtk_text_iter_get_visible_slice$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_visible_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2420.gtk_text_iter_get_visible_text$MH,"gtk_text_iter_get_visible_text");
    }
    public static MemoryAddress gtk_text_iter_get_visible_text ( Addressable start,  Addressable end) {
        var mh$ = gtk_text_iter_get_visible_text$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_paintable$MH() {
        return RuntimeHelper.requireNonNull(constants$2420.gtk_text_iter_get_paintable$MH,"gtk_text_iter_get_paintable");
    }
    public static MemoryAddress gtk_text_iter_get_paintable ( Addressable iter) {
        var mh$ = gtk_text_iter_get_paintable$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_marks$MH() {
        return RuntimeHelper.requireNonNull(constants$2420.gtk_text_iter_get_marks$MH,"gtk_text_iter_get_marks");
    }
    public static MemoryAddress gtk_text_iter_get_marks ( Addressable iter) {
        var mh$ = gtk_text_iter_get_marks$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_child_anchor$MH() {
        return RuntimeHelper.requireNonNull(constants$2420.gtk_text_iter_get_child_anchor$MH,"gtk_text_iter_get_child_anchor");
    }
    public static MemoryAddress gtk_text_iter_get_child_anchor ( Addressable iter) {
        var mh$ = gtk_text_iter_get_child_anchor$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_toggled_tags$MH() {
        return RuntimeHelper.requireNonNull(constants$2421.gtk_text_iter_get_toggled_tags$MH,"gtk_text_iter_get_toggled_tags");
    }
    public static MemoryAddress gtk_text_iter_get_toggled_tags ( Addressable iter,  int toggled_on) {
        var mh$ = gtk_text_iter_get_toggled_tags$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(iter, toggled_on);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_starts_tag$MH() {
        return RuntimeHelper.requireNonNull(constants$2421.gtk_text_iter_starts_tag$MH,"gtk_text_iter_starts_tag");
    }
    public static int gtk_text_iter_starts_tag ( Addressable iter,  Addressable tag) {
        var mh$ = gtk_text_iter_starts_tag$MH();
        try {
            return (int)mh$.invokeExact(iter, tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_ends_tag$MH() {
        return RuntimeHelper.requireNonNull(constants$2421.gtk_text_iter_ends_tag$MH,"gtk_text_iter_ends_tag");
    }
    public static int gtk_text_iter_ends_tag ( Addressable iter,  Addressable tag) {
        var mh$ = gtk_text_iter_ends_tag$MH();
        try {
            return (int)mh$.invokeExact(iter, tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_toggles_tag$MH() {
        return RuntimeHelper.requireNonNull(constants$2421.gtk_text_iter_toggles_tag$MH,"gtk_text_iter_toggles_tag");
    }
    public static int gtk_text_iter_toggles_tag ( Addressable iter,  Addressable tag) {
        var mh$ = gtk_text_iter_toggles_tag$MH();
        try {
            return (int)mh$.invokeExact(iter, tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_has_tag$MH() {
        return RuntimeHelper.requireNonNull(constants$2421.gtk_text_iter_has_tag$MH,"gtk_text_iter_has_tag");
    }
    public static int gtk_text_iter_has_tag ( Addressable iter,  Addressable tag) {
        var mh$ = gtk_text_iter_has_tag$MH();
        try {
            return (int)mh$.invokeExact(iter, tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_tags$MH() {
        return RuntimeHelper.requireNonNull(constants$2421.gtk_text_iter_get_tags$MH,"gtk_text_iter_get_tags");
    }
    public static MemoryAddress gtk_text_iter_get_tags ( Addressable iter) {
        var mh$ = gtk_text_iter_get_tags$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_editable$MH() {
        return RuntimeHelper.requireNonNull(constants$2422.gtk_text_iter_editable$MH,"gtk_text_iter_editable");
    }
    public static int gtk_text_iter_editable ( Addressable iter,  int default_setting) {
        var mh$ = gtk_text_iter_editable$MH();
        try {
            return (int)mh$.invokeExact(iter, default_setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_can_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$2422.gtk_text_iter_can_insert$MH,"gtk_text_iter_can_insert");
    }
    public static int gtk_text_iter_can_insert ( Addressable iter,  int default_editability) {
        var mh$ = gtk_text_iter_can_insert$MH();
        try {
            return (int)mh$.invokeExact(iter, default_editability);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_starts_word$MH() {
        return RuntimeHelper.requireNonNull(constants$2422.gtk_text_iter_starts_word$MH,"gtk_text_iter_starts_word");
    }
    public static int gtk_text_iter_starts_word ( Addressable iter) {
        var mh$ = gtk_text_iter_starts_word$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_ends_word$MH() {
        return RuntimeHelper.requireNonNull(constants$2422.gtk_text_iter_ends_word$MH,"gtk_text_iter_ends_word");
    }
    public static int gtk_text_iter_ends_word ( Addressable iter) {
        var mh$ = gtk_text_iter_ends_word$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_inside_word$MH() {
        return RuntimeHelper.requireNonNull(constants$2422.gtk_text_iter_inside_word$MH,"gtk_text_iter_inside_word");
    }
    public static int gtk_text_iter_inside_word ( Addressable iter) {
        var mh$ = gtk_text_iter_inside_word$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_starts_sentence$MH() {
        return RuntimeHelper.requireNonNull(constants$2422.gtk_text_iter_starts_sentence$MH,"gtk_text_iter_starts_sentence");
    }
    public static int gtk_text_iter_starts_sentence ( Addressable iter) {
        var mh$ = gtk_text_iter_starts_sentence$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_ends_sentence$MH() {
        return RuntimeHelper.requireNonNull(constants$2423.gtk_text_iter_ends_sentence$MH,"gtk_text_iter_ends_sentence");
    }
    public static int gtk_text_iter_ends_sentence ( Addressable iter) {
        var mh$ = gtk_text_iter_ends_sentence$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_inside_sentence$MH() {
        return RuntimeHelper.requireNonNull(constants$2423.gtk_text_iter_inside_sentence$MH,"gtk_text_iter_inside_sentence");
    }
    public static int gtk_text_iter_inside_sentence ( Addressable iter) {
        var mh$ = gtk_text_iter_inside_sentence$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_starts_line$MH() {
        return RuntimeHelper.requireNonNull(constants$2423.gtk_text_iter_starts_line$MH,"gtk_text_iter_starts_line");
    }
    public static int gtk_text_iter_starts_line ( Addressable iter) {
        var mh$ = gtk_text_iter_starts_line$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_ends_line$MH() {
        return RuntimeHelper.requireNonNull(constants$2423.gtk_text_iter_ends_line$MH,"gtk_text_iter_ends_line");
    }
    public static int gtk_text_iter_ends_line ( Addressable iter) {
        var mh$ = gtk_text_iter_ends_line$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_is_cursor_position$MH() {
        return RuntimeHelper.requireNonNull(constants$2423.gtk_text_iter_is_cursor_position$MH,"gtk_text_iter_is_cursor_position");
    }
    public static int gtk_text_iter_is_cursor_position ( Addressable iter) {
        var mh$ = gtk_text_iter_is_cursor_position$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_chars_in_line$MH() {
        return RuntimeHelper.requireNonNull(constants$2423.gtk_text_iter_get_chars_in_line$MH,"gtk_text_iter_get_chars_in_line");
    }
    public static int gtk_text_iter_get_chars_in_line ( Addressable iter) {
        var mh$ = gtk_text_iter_get_chars_in_line$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_bytes_in_line$MH() {
        return RuntimeHelper.requireNonNull(constants$2424.gtk_text_iter_get_bytes_in_line$MH,"gtk_text_iter_get_bytes_in_line");
    }
    public static int gtk_text_iter_get_bytes_in_line ( Addressable iter) {
        var mh$ = gtk_text_iter_get_bytes_in_line$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_language$MH() {
        return RuntimeHelper.requireNonNull(constants$2424.gtk_text_iter_get_language$MH,"gtk_text_iter_get_language");
    }
    public static MemoryAddress gtk_text_iter_get_language ( Addressable iter) {
        var mh$ = gtk_text_iter_get_language$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_is_end$MH() {
        return RuntimeHelper.requireNonNull(constants$2424.gtk_text_iter_is_end$MH,"gtk_text_iter_is_end");
    }
    public static int gtk_text_iter_is_end ( Addressable iter) {
        var mh$ = gtk_text_iter_is_end$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_is_start$MH() {
        return RuntimeHelper.requireNonNull(constants$2424.gtk_text_iter_is_start$MH,"gtk_text_iter_is_start");
    }
    public static int gtk_text_iter_is_start ( Addressable iter) {
        var mh$ = gtk_text_iter_is_start$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_char$MH() {
        return RuntimeHelper.requireNonNull(constants$2424.gtk_text_iter_forward_char$MH,"gtk_text_iter_forward_char");
    }
    public static int gtk_text_iter_forward_char ( Addressable iter) {
        var mh$ = gtk_text_iter_forward_char$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_char$MH() {
        return RuntimeHelper.requireNonNull(constants$2424.gtk_text_iter_backward_char$MH,"gtk_text_iter_backward_char");
    }
    public static int gtk_text_iter_backward_char ( Addressable iter) {
        var mh$ = gtk_text_iter_backward_char$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$2425.gtk_text_iter_forward_chars$MH,"gtk_text_iter_forward_chars");
    }
    public static int gtk_text_iter_forward_chars ( Addressable iter,  int count) {
        var mh$ = gtk_text_iter_forward_chars$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$2425.gtk_text_iter_backward_chars$MH,"gtk_text_iter_backward_chars");
    }
    public static int gtk_text_iter_backward_chars ( Addressable iter,  int count) {
        var mh$ = gtk_text_iter_backward_chars$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_line$MH() {
        return RuntimeHelper.requireNonNull(constants$2425.gtk_text_iter_forward_line$MH,"gtk_text_iter_forward_line");
    }
    public static int gtk_text_iter_forward_line ( Addressable iter) {
        var mh$ = gtk_text_iter_forward_line$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_line$MH() {
        return RuntimeHelper.requireNonNull(constants$2425.gtk_text_iter_backward_line$MH,"gtk_text_iter_backward_line");
    }
    public static int gtk_text_iter_backward_line ( Addressable iter) {
        var mh$ = gtk_text_iter_backward_line$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_lines$MH() {
        return RuntimeHelper.requireNonNull(constants$2425.gtk_text_iter_forward_lines$MH,"gtk_text_iter_forward_lines");
    }
    public static int gtk_text_iter_forward_lines ( Addressable iter,  int count) {
        var mh$ = gtk_text_iter_forward_lines$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_lines$MH() {
        return RuntimeHelper.requireNonNull(constants$2425.gtk_text_iter_backward_lines$MH,"gtk_text_iter_backward_lines");
    }
    public static int gtk_text_iter_backward_lines ( Addressable iter,  int count) {
        var mh$ = gtk_text_iter_backward_lines$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_word_end$MH() {
        return RuntimeHelper.requireNonNull(constants$2426.gtk_text_iter_forward_word_end$MH,"gtk_text_iter_forward_word_end");
    }
    public static int gtk_text_iter_forward_word_end ( Addressable iter) {
        var mh$ = gtk_text_iter_forward_word_end$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_word_start$MH() {
        return RuntimeHelper.requireNonNull(constants$2426.gtk_text_iter_backward_word_start$MH,"gtk_text_iter_backward_word_start");
    }
    public static int gtk_text_iter_backward_word_start ( Addressable iter) {
        var mh$ = gtk_text_iter_backward_word_start$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_word_ends$MH() {
        return RuntimeHelper.requireNonNull(constants$2426.gtk_text_iter_forward_word_ends$MH,"gtk_text_iter_forward_word_ends");
    }
    public static int gtk_text_iter_forward_word_ends ( Addressable iter,  int count) {
        var mh$ = gtk_text_iter_forward_word_ends$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


