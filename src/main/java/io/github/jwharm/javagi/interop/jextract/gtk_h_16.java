// Generated by jextract

package io.github.jwharm.javagi.interop.jextract;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
 class gtk_h_16 extends gtk_h_15 {

    public static MethodHandle _mm_load_ps$MH() {
        return RuntimeHelper.requireNonNull(constants$1470._mm_load_ps$MH,"_mm_load_ps");
    }
    public static MemoryAddress _mm_load_ps ( Addressable __p) {
        var mh$ = _mm_load_ps$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_loadu_ps$MH() {
        return RuntimeHelper.requireNonNull(constants$1470._mm_loadu_ps$MH,"_mm_loadu_ps");
    }
    public static MemoryAddress _mm_loadu_ps ( Addressable __p) {
        var mh$ = _mm_loadu_ps$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_loadr_ps$MH() {
        return RuntimeHelper.requireNonNull(constants$1470._mm_loadr_ps$MH,"_mm_loadr_ps");
    }
    public static MemoryAddress _mm_loadr_ps ( Addressable __p) {
        var mh$ = _mm_loadr_ps$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_undefined_ps$MH() {
        return RuntimeHelper.requireNonNull(constants$1470._mm_undefined_ps$MH,"_mm_undefined_ps");
    }
    public static MemoryAddress _mm_undefined_ps () {
        var mh$ = _mm_undefined_ps$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_set_ss$MH() {
        return RuntimeHelper.requireNonNull(constants$1470._mm_set_ss$MH,"_mm_set_ss");
    }
    public static MemoryAddress _mm_set_ss ( float __w) {
        var mh$ = _mm_set_ss$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__w);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_set1_ps$MH() {
        return RuntimeHelper.requireNonNull(constants$1470._mm_set1_ps$MH,"_mm_set1_ps");
    }
    public static MemoryAddress _mm_set1_ps ( float __w) {
        var mh$ = _mm_set1_ps$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__w);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_set_ps1$MH() {
        return RuntimeHelper.requireNonNull(constants$1471._mm_set_ps1$MH,"_mm_set_ps1");
    }
    public static MemoryAddress _mm_set_ps1 ( float __w) {
        var mh$ = _mm_set_ps1$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__w);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_set_ps$MH() {
        return RuntimeHelper.requireNonNull(constants$1471._mm_set_ps$MH,"_mm_set_ps");
    }
    public static MemoryAddress _mm_set_ps ( float __z,  float __y,  float __x,  float __w) {
        var mh$ = _mm_set_ps$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__z, __y, __x, __w);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_setr_ps$MH() {
        return RuntimeHelper.requireNonNull(constants$1471._mm_setr_ps$MH,"_mm_setr_ps");
    }
    public static MemoryAddress _mm_setr_ps ( float __z,  float __y,  float __x,  float __w) {
        var mh$ = _mm_setr_ps$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__z, __y, __x, __w);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_setzero_ps$MH() {
        return RuntimeHelper.requireNonNull(constants$1471._mm_setzero_ps$MH,"_mm_setzero_ps");
    }
    public static MemoryAddress _mm_setzero_ps () {
        var mh$ = _mm_setzero_ps$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_storeh_pi$MH() {
        return RuntimeHelper.requireNonNull(constants$1471._mm_storeh_pi$MH,"_mm_storeh_pi");
    }
    public static void _mm_storeh_pi ( Addressable __p,  Addressable __a) {
        var mh$ = _mm_storeh_pi$MH();
        try {
            mh$.invokeExact(__p, __a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_storel_pi$MH() {
        return RuntimeHelper.requireNonNull(constants$1471._mm_storel_pi$MH,"_mm_storel_pi");
    }
    public static void _mm_storel_pi ( Addressable __p,  Addressable __a) {
        var mh$ = _mm_storel_pi$MH();
        try {
            mh$.invokeExact(__p, __a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_store_ss$MH() {
        return RuntimeHelper.requireNonNull(constants$1472._mm_store_ss$MH,"_mm_store_ss");
    }
    public static void _mm_store_ss ( Addressable __p,  Addressable __a) {
        var mh$ = _mm_store_ss$MH();
        try {
            mh$.invokeExact(__p, __a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_storeu_ps$MH() {
        return RuntimeHelper.requireNonNull(constants$1472._mm_storeu_ps$MH,"_mm_storeu_ps");
    }
    public static void _mm_storeu_ps ( Addressable __p,  Addressable __a) {
        var mh$ = _mm_storeu_ps$MH();
        try {
            mh$.invokeExact(__p, __a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_store_ps$MH() {
        return RuntimeHelper.requireNonNull(constants$1472._mm_store_ps$MH,"_mm_store_ps");
    }
    public static void _mm_store_ps ( Addressable __p,  Addressable __a) {
        var mh$ = _mm_store_ps$MH();
        try {
            mh$.invokeExact(__p, __a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_store1_ps$MH() {
        return RuntimeHelper.requireNonNull(constants$1472._mm_store1_ps$MH,"_mm_store1_ps");
    }
    public static void _mm_store1_ps ( Addressable __p,  Addressable __a) {
        var mh$ = _mm_store1_ps$MH();
        try {
            mh$.invokeExact(__p, __a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_store_ps1$MH() {
        return RuntimeHelper.requireNonNull(constants$1472._mm_store_ps1$MH,"_mm_store_ps1");
    }
    public static void _mm_store_ps1 ( Addressable __p,  Addressable __a) {
        var mh$ = _mm_store_ps1$MH();
        try {
            mh$.invokeExact(__p, __a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_storer_ps$MH() {
        return RuntimeHelper.requireNonNull(constants$1472._mm_storer_ps$MH,"_mm_storer_ps");
    }
    public static void _mm_storer_ps ( Addressable __p,  Addressable __a) {
        var mh$ = _mm_storer_ps$MH();
        try {
            mh$.invokeExact(__p, __a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_stream_pi$MH() {
        return RuntimeHelper.requireNonNull(constants$1473._mm_stream_pi$MH,"_mm_stream_pi");
    }
    public static void _mm_stream_pi ( Addressable __p,  Addressable __a) {
        var mh$ = _mm_stream_pi$MH();
        try {
            mh$.invokeExact(__p, __a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_stream_ps$MH() {
        return RuntimeHelper.requireNonNull(constants$1473._mm_stream_ps$MH,"_mm_stream_ps");
    }
    public static void _mm_stream_ps ( Addressable __p,  Addressable __a) {
        var mh$ = _mm_stream_ps$MH();
        try {
            mh$.invokeExact(__p, __a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_sfence$MH() {
        return RuntimeHelper.requireNonNull(constants$1473._mm_sfence$MH,"_mm_sfence");
    }
    public static void _mm_sfence () {
        var mh$ = _mm_sfence$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_max_pi16$MH() {
        return RuntimeHelper.requireNonNull(constants$1473._mm_max_pi16$MH,"_mm_max_pi16");
    }
    public static MemoryAddress _mm_max_pi16 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_max_pi16$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_max_pu8$MH() {
        return RuntimeHelper.requireNonNull(constants$1473._mm_max_pu8$MH,"_mm_max_pu8");
    }
    public static MemoryAddress _mm_max_pu8 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_max_pu8$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_min_pi16$MH() {
        return RuntimeHelper.requireNonNull(constants$1473._mm_min_pi16$MH,"_mm_min_pi16");
    }
    public static MemoryAddress _mm_min_pi16 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_min_pi16$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_min_pu8$MH() {
        return RuntimeHelper.requireNonNull(constants$1474._mm_min_pu8$MH,"_mm_min_pu8");
    }
    public static MemoryAddress _mm_min_pu8 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_min_pu8$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_movemask_pi8$MH() {
        return RuntimeHelper.requireNonNull(constants$1474._mm_movemask_pi8$MH,"_mm_movemask_pi8");
    }
    public static int _mm_movemask_pi8 ( Addressable __a) {
        var mh$ = _mm_movemask_pi8$MH();
        try {
            return (int)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_mulhi_pu16$MH() {
        return RuntimeHelper.requireNonNull(constants$1474._mm_mulhi_pu16$MH,"_mm_mulhi_pu16");
    }
    public static MemoryAddress _mm_mulhi_pu16 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_mulhi_pu16$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_maskmove_si64$MH() {
        return RuntimeHelper.requireNonNull(constants$1474._mm_maskmove_si64$MH,"_mm_maskmove_si64");
    }
    public static void _mm_maskmove_si64 ( Addressable __d,  Addressable __n,  Addressable __p) {
        var mh$ = _mm_maskmove_si64$MH();
        try {
            mh$.invokeExact(__d, __n, __p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_avg_pu8$MH() {
        return RuntimeHelper.requireNonNull(constants$1474._mm_avg_pu8$MH,"_mm_avg_pu8");
    }
    public static MemoryAddress _mm_avg_pu8 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_avg_pu8$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_avg_pu16$MH() {
        return RuntimeHelper.requireNonNull(constants$1474._mm_avg_pu16$MH,"_mm_avg_pu16");
    }
    public static MemoryAddress _mm_avg_pu16 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_avg_pu16$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_sad_pu8$MH() {
        return RuntimeHelper.requireNonNull(constants$1475._mm_sad_pu8$MH,"_mm_sad_pu8");
    }
    public static MemoryAddress _mm_sad_pu8 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_sad_pu8$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_getcsr$MH() {
        return RuntimeHelper.requireNonNull(constants$1475._mm_getcsr$MH,"_mm_getcsr");
    }
    public static int _mm_getcsr () {
        var mh$ = _mm_getcsr$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_setcsr$MH() {
        return RuntimeHelper.requireNonNull(constants$1475._mm_setcsr$MH,"_mm_setcsr");
    }
    public static void _mm_setcsr ( int __i) {
        var mh$ = _mm_setcsr$MH();
        try {
            mh$.invokeExact(__i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_unpackhi_ps$MH() {
        return RuntimeHelper.requireNonNull(constants$1475._mm_unpackhi_ps$MH,"_mm_unpackhi_ps");
    }
    public static MemoryAddress _mm_unpackhi_ps ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_unpackhi_ps$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_unpacklo_ps$MH() {
        return RuntimeHelper.requireNonNull(constants$1475._mm_unpacklo_ps$MH,"_mm_unpacklo_ps");
    }
    public static MemoryAddress _mm_unpacklo_ps ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_unpacklo_ps$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_move_ss$MH() {
        return RuntimeHelper.requireNonNull(constants$1475._mm_move_ss$MH,"_mm_move_ss");
    }
    public static MemoryAddress _mm_move_ss ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_move_ss$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_movehl_ps$MH() {
        return RuntimeHelper.requireNonNull(constants$1476._mm_movehl_ps$MH,"_mm_movehl_ps");
    }
    public static MemoryAddress _mm_movehl_ps ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_movehl_ps$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_movelh_ps$MH() {
        return RuntimeHelper.requireNonNull(constants$1476._mm_movelh_ps$MH,"_mm_movelh_ps");
    }
    public static MemoryAddress _mm_movelh_ps ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_movelh_ps$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cvtpi16_ps$MH() {
        return RuntimeHelper.requireNonNull(constants$1476._mm_cvtpi16_ps$MH,"_mm_cvtpi16_ps");
    }
    public static MemoryAddress _mm_cvtpi16_ps ( Addressable __a) {
        var mh$ = _mm_cvtpi16_ps$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cvtpu16_ps$MH() {
        return RuntimeHelper.requireNonNull(constants$1476._mm_cvtpu16_ps$MH,"_mm_cvtpu16_ps");
    }
    public static MemoryAddress _mm_cvtpu16_ps ( Addressable __a) {
        var mh$ = _mm_cvtpu16_ps$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cvtpi8_ps$MH() {
        return RuntimeHelper.requireNonNull(constants$1476._mm_cvtpi8_ps$MH,"_mm_cvtpi8_ps");
    }
    public static MemoryAddress _mm_cvtpi8_ps ( Addressable __a) {
        var mh$ = _mm_cvtpi8_ps$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cvtpu8_ps$MH() {
        return RuntimeHelper.requireNonNull(constants$1476._mm_cvtpu8_ps$MH,"_mm_cvtpu8_ps");
    }
    public static MemoryAddress _mm_cvtpu8_ps ( Addressable __a) {
        var mh$ = _mm_cvtpu8_ps$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cvtpi32x2_ps$MH() {
        return RuntimeHelper.requireNonNull(constants$1477._mm_cvtpi32x2_ps$MH,"_mm_cvtpi32x2_ps");
    }
    public static MemoryAddress _mm_cvtpi32x2_ps ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_cvtpi32x2_ps$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cvtps_pi16$MH() {
        return RuntimeHelper.requireNonNull(constants$1477._mm_cvtps_pi16$MH,"_mm_cvtps_pi16");
    }
    public static MemoryAddress _mm_cvtps_pi16 ( Addressable __a) {
        var mh$ = _mm_cvtps_pi16$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cvtps_pi8$MH() {
        return RuntimeHelper.requireNonNull(constants$1477._mm_cvtps_pi8$MH,"_mm_cvtps_pi8");
    }
    public static MemoryAddress _mm_cvtps_pi8 ( Addressable __a) {
        var mh$ = _mm_cvtps_pi8$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_movemask_ps$MH() {
        return RuntimeHelper.requireNonNull(constants$1477._mm_movemask_ps$MH,"_mm_movemask_ps");
    }
    public static int _mm_movemask_ps ( Addressable __a) {
        var mh$ = _mm_movemask_ps$MH();
        try {
            return (int)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_add_sd$MH() {
        return RuntimeHelper.requireNonNull(constants$1477._mm_add_sd$MH,"_mm_add_sd");
    }
    public static MemoryAddress _mm_add_sd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_add_sd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_add_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1477._mm_add_pd$MH,"_mm_add_pd");
    }
    public static MemoryAddress _mm_add_pd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_add_pd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_sub_sd$MH() {
        return RuntimeHelper.requireNonNull(constants$1478._mm_sub_sd$MH,"_mm_sub_sd");
    }
    public static MemoryAddress _mm_sub_sd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_sub_sd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_sub_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1478._mm_sub_pd$MH,"_mm_sub_pd");
    }
    public static MemoryAddress _mm_sub_pd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_sub_pd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_mul_sd$MH() {
        return RuntimeHelper.requireNonNull(constants$1478._mm_mul_sd$MH,"_mm_mul_sd");
    }
    public static MemoryAddress _mm_mul_sd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_mul_sd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_mul_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1478._mm_mul_pd$MH,"_mm_mul_pd");
    }
    public static MemoryAddress _mm_mul_pd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_mul_pd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_div_sd$MH() {
        return RuntimeHelper.requireNonNull(constants$1478._mm_div_sd$MH,"_mm_div_sd");
    }
    public static MemoryAddress _mm_div_sd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_div_sd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_div_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1478._mm_div_pd$MH,"_mm_div_pd");
    }
    public static MemoryAddress _mm_div_pd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_div_pd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_sqrt_sd$MH() {
        return RuntimeHelper.requireNonNull(constants$1479._mm_sqrt_sd$MH,"_mm_sqrt_sd");
    }
    public static MemoryAddress _mm_sqrt_sd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_sqrt_sd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_sqrt_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1479._mm_sqrt_pd$MH,"_mm_sqrt_pd");
    }
    public static MemoryAddress _mm_sqrt_pd ( Addressable __a) {
        var mh$ = _mm_sqrt_pd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_min_sd$MH() {
        return RuntimeHelper.requireNonNull(constants$1479._mm_min_sd$MH,"_mm_min_sd");
    }
    public static MemoryAddress _mm_min_sd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_min_sd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_min_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1479._mm_min_pd$MH,"_mm_min_pd");
    }
    public static MemoryAddress _mm_min_pd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_min_pd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_max_sd$MH() {
        return RuntimeHelper.requireNonNull(constants$1479._mm_max_sd$MH,"_mm_max_sd");
    }
    public static MemoryAddress _mm_max_sd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_max_sd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_max_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1479._mm_max_pd$MH,"_mm_max_pd");
    }
    public static MemoryAddress _mm_max_pd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_max_pd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_and_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1480._mm_and_pd$MH,"_mm_and_pd");
    }
    public static MemoryAddress _mm_and_pd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_and_pd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_andnot_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1480._mm_andnot_pd$MH,"_mm_andnot_pd");
    }
    public static MemoryAddress _mm_andnot_pd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_andnot_pd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_or_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1480._mm_or_pd$MH,"_mm_or_pd");
    }
    public static MemoryAddress _mm_or_pd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_or_pd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_xor_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1480._mm_xor_pd$MH,"_mm_xor_pd");
    }
    public static MemoryAddress _mm_xor_pd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_xor_pd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cmpeq_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1480._mm_cmpeq_pd$MH,"_mm_cmpeq_pd");
    }
    public static MemoryAddress _mm_cmpeq_pd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_cmpeq_pd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cmplt_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1480._mm_cmplt_pd$MH,"_mm_cmplt_pd");
    }
    public static MemoryAddress _mm_cmplt_pd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_cmplt_pd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cmple_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1481._mm_cmple_pd$MH,"_mm_cmple_pd");
    }
    public static MemoryAddress _mm_cmple_pd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_cmple_pd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cmpgt_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1481._mm_cmpgt_pd$MH,"_mm_cmpgt_pd");
    }
    public static MemoryAddress _mm_cmpgt_pd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_cmpgt_pd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cmpge_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1481._mm_cmpge_pd$MH,"_mm_cmpge_pd");
    }
    public static MemoryAddress _mm_cmpge_pd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_cmpge_pd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cmpord_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1481._mm_cmpord_pd$MH,"_mm_cmpord_pd");
    }
    public static MemoryAddress _mm_cmpord_pd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_cmpord_pd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cmpunord_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1481._mm_cmpunord_pd$MH,"_mm_cmpunord_pd");
    }
    public static MemoryAddress _mm_cmpunord_pd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_cmpunord_pd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cmpneq_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1481._mm_cmpneq_pd$MH,"_mm_cmpneq_pd");
    }
    public static MemoryAddress _mm_cmpneq_pd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_cmpneq_pd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cmpnlt_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1482._mm_cmpnlt_pd$MH,"_mm_cmpnlt_pd");
    }
    public static MemoryAddress _mm_cmpnlt_pd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_cmpnlt_pd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cmpnle_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1482._mm_cmpnle_pd$MH,"_mm_cmpnle_pd");
    }
    public static MemoryAddress _mm_cmpnle_pd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_cmpnle_pd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cmpngt_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1482._mm_cmpngt_pd$MH,"_mm_cmpngt_pd");
    }
    public static MemoryAddress _mm_cmpngt_pd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_cmpngt_pd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cmpnge_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1482._mm_cmpnge_pd$MH,"_mm_cmpnge_pd");
    }
    public static MemoryAddress _mm_cmpnge_pd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_cmpnge_pd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cmpeq_sd$MH() {
        return RuntimeHelper.requireNonNull(constants$1482._mm_cmpeq_sd$MH,"_mm_cmpeq_sd");
    }
    public static MemoryAddress _mm_cmpeq_sd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_cmpeq_sd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cmplt_sd$MH() {
        return RuntimeHelper.requireNonNull(constants$1482._mm_cmplt_sd$MH,"_mm_cmplt_sd");
    }
    public static MemoryAddress _mm_cmplt_sd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_cmplt_sd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cmple_sd$MH() {
        return RuntimeHelper.requireNonNull(constants$1483._mm_cmple_sd$MH,"_mm_cmple_sd");
    }
    public static MemoryAddress _mm_cmple_sd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_cmple_sd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cmpgt_sd$MH() {
        return RuntimeHelper.requireNonNull(constants$1483._mm_cmpgt_sd$MH,"_mm_cmpgt_sd");
    }
    public static MemoryAddress _mm_cmpgt_sd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_cmpgt_sd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cmpge_sd$MH() {
        return RuntimeHelper.requireNonNull(constants$1483._mm_cmpge_sd$MH,"_mm_cmpge_sd");
    }
    public static MemoryAddress _mm_cmpge_sd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_cmpge_sd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cmpord_sd$MH() {
        return RuntimeHelper.requireNonNull(constants$1483._mm_cmpord_sd$MH,"_mm_cmpord_sd");
    }
    public static MemoryAddress _mm_cmpord_sd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_cmpord_sd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cmpunord_sd$MH() {
        return RuntimeHelper.requireNonNull(constants$1483._mm_cmpunord_sd$MH,"_mm_cmpunord_sd");
    }
    public static MemoryAddress _mm_cmpunord_sd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_cmpunord_sd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cmpneq_sd$MH() {
        return RuntimeHelper.requireNonNull(constants$1483._mm_cmpneq_sd$MH,"_mm_cmpneq_sd");
    }
    public static MemoryAddress _mm_cmpneq_sd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_cmpneq_sd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cmpnlt_sd$MH() {
        return RuntimeHelper.requireNonNull(constants$1484._mm_cmpnlt_sd$MH,"_mm_cmpnlt_sd");
    }
    public static MemoryAddress _mm_cmpnlt_sd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_cmpnlt_sd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cmpnle_sd$MH() {
        return RuntimeHelper.requireNonNull(constants$1484._mm_cmpnle_sd$MH,"_mm_cmpnle_sd");
    }
    public static MemoryAddress _mm_cmpnle_sd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_cmpnle_sd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cmpngt_sd$MH() {
        return RuntimeHelper.requireNonNull(constants$1484._mm_cmpngt_sd$MH,"_mm_cmpngt_sd");
    }
    public static MemoryAddress _mm_cmpngt_sd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_cmpngt_sd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cmpnge_sd$MH() {
        return RuntimeHelper.requireNonNull(constants$1484._mm_cmpnge_sd$MH,"_mm_cmpnge_sd");
    }
    public static MemoryAddress _mm_cmpnge_sd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_cmpnge_sd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_comieq_sd$MH() {
        return RuntimeHelper.requireNonNull(constants$1484._mm_comieq_sd$MH,"_mm_comieq_sd");
    }
    public static int _mm_comieq_sd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_comieq_sd$MH();
        try {
            return (int)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_comilt_sd$MH() {
        return RuntimeHelper.requireNonNull(constants$1484._mm_comilt_sd$MH,"_mm_comilt_sd");
    }
    public static int _mm_comilt_sd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_comilt_sd$MH();
        try {
            return (int)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_comile_sd$MH() {
        return RuntimeHelper.requireNonNull(constants$1485._mm_comile_sd$MH,"_mm_comile_sd");
    }
    public static int _mm_comile_sd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_comile_sd$MH();
        try {
            return (int)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_comigt_sd$MH() {
        return RuntimeHelper.requireNonNull(constants$1485._mm_comigt_sd$MH,"_mm_comigt_sd");
    }
    public static int _mm_comigt_sd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_comigt_sd$MH();
        try {
            return (int)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_comige_sd$MH() {
        return RuntimeHelper.requireNonNull(constants$1485._mm_comige_sd$MH,"_mm_comige_sd");
    }
    public static int _mm_comige_sd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_comige_sd$MH();
        try {
            return (int)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_comineq_sd$MH() {
        return RuntimeHelper.requireNonNull(constants$1485._mm_comineq_sd$MH,"_mm_comineq_sd");
    }
    public static int _mm_comineq_sd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_comineq_sd$MH();
        try {
            return (int)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_ucomieq_sd$MH() {
        return RuntimeHelper.requireNonNull(constants$1485._mm_ucomieq_sd$MH,"_mm_ucomieq_sd");
    }
    public static int _mm_ucomieq_sd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_ucomieq_sd$MH();
        try {
            return (int)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_ucomilt_sd$MH() {
        return RuntimeHelper.requireNonNull(constants$1485._mm_ucomilt_sd$MH,"_mm_ucomilt_sd");
    }
    public static int _mm_ucomilt_sd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_ucomilt_sd$MH();
        try {
            return (int)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_ucomile_sd$MH() {
        return RuntimeHelper.requireNonNull(constants$1486._mm_ucomile_sd$MH,"_mm_ucomile_sd");
    }
    public static int _mm_ucomile_sd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_ucomile_sd$MH();
        try {
            return (int)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_ucomigt_sd$MH() {
        return RuntimeHelper.requireNonNull(constants$1486._mm_ucomigt_sd$MH,"_mm_ucomigt_sd");
    }
    public static int _mm_ucomigt_sd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_ucomigt_sd$MH();
        try {
            return (int)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_ucomige_sd$MH() {
        return RuntimeHelper.requireNonNull(constants$1486._mm_ucomige_sd$MH,"_mm_ucomige_sd");
    }
    public static int _mm_ucomige_sd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_ucomige_sd$MH();
        try {
            return (int)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_ucomineq_sd$MH() {
        return RuntimeHelper.requireNonNull(constants$1486._mm_ucomineq_sd$MH,"_mm_ucomineq_sd");
    }
    public static int _mm_ucomineq_sd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_ucomineq_sd$MH();
        try {
            return (int)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cvtpd_ps$MH() {
        return RuntimeHelper.requireNonNull(constants$1486._mm_cvtpd_ps$MH,"_mm_cvtpd_ps");
    }
    public static MemoryAddress _mm_cvtpd_ps ( Addressable __a) {
        var mh$ = _mm_cvtpd_ps$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cvtps_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1486._mm_cvtps_pd$MH,"_mm_cvtps_pd");
    }
    public static MemoryAddress _mm_cvtps_pd ( Addressable __a) {
        var mh$ = _mm_cvtps_pd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cvtepi32_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1487._mm_cvtepi32_pd$MH,"_mm_cvtepi32_pd");
    }
    public static MemoryAddress _mm_cvtepi32_pd ( Addressable __a) {
        var mh$ = _mm_cvtepi32_pd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cvtpd_epi32$MH() {
        return RuntimeHelper.requireNonNull(constants$1487._mm_cvtpd_epi32$MH,"_mm_cvtpd_epi32");
    }
    public static MemoryAddress _mm_cvtpd_epi32 ( Addressable __a) {
        var mh$ = _mm_cvtpd_epi32$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cvtsd_si32$MH() {
        return RuntimeHelper.requireNonNull(constants$1487._mm_cvtsd_si32$MH,"_mm_cvtsd_si32");
    }
    public static int _mm_cvtsd_si32 ( Addressable __a) {
        var mh$ = _mm_cvtsd_si32$MH();
        try {
            return (int)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cvtsd_ss$MH() {
        return RuntimeHelper.requireNonNull(constants$1487._mm_cvtsd_ss$MH,"_mm_cvtsd_ss");
    }
    public static MemoryAddress _mm_cvtsd_ss ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_cvtsd_ss$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cvtsi32_sd$MH() {
        return RuntimeHelper.requireNonNull(constants$1487._mm_cvtsi32_sd$MH,"_mm_cvtsi32_sd");
    }
    public static MemoryAddress _mm_cvtsi32_sd ( Addressable __a,  int __b) {
        var mh$ = _mm_cvtsi32_sd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cvtss_sd$MH() {
        return RuntimeHelper.requireNonNull(constants$1487._mm_cvtss_sd$MH,"_mm_cvtss_sd");
    }
    public static MemoryAddress _mm_cvtss_sd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_cvtss_sd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cvttpd_epi32$MH() {
        return RuntimeHelper.requireNonNull(constants$1488._mm_cvttpd_epi32$MH,"_mm_cvttpd_epi32");
    }
    public static MemoryAddress _mm_cvttpd_epi32 ( Addressable __a) {
        var mh$ = _mm_cvttpd_epi32$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cvttsd_si32$MH() {
        return RuntimeHelper.requireNonNull(constants$1488._mm_cvttsd_si32$MH,"_mm_cvttsd_si32");
    }
    public static int _mm_cvttsd_si32 ( Addressable __a) {
        var mh$ = _mm_cvttsd_si32$MH();
        try {
            return (int)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cvtpd_pi32$MH() {
        return RuntimeHelper.requireNonNull(constants$1488._mm_cvtpd_pi32$MH,"_mm_cvtpd_pi32");
    }
    public static MemoryAddress _mm_cvtpd_pi32 ( Addressable __a) {
        var mh$ = _mm_cvtpd_pi32$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cvttpd_pi32$MH() {
        return RuntimeHelper.requireNonNull(constants$1488._mm_cvttpd_pi32$MH,"_mm_cvttpd_pi32");
    }
    public static MemoryAddress _mm_cvttpd_pi32 ( Addressable __a) {
        var mh$ = _mm_cvttpd_pi32$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cvtpi32_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1488._mm_cvtpi32_pd$MH,"_mm_cvtpi32_pd");
    }
    public static MemoryAddress _mm_cvtpi32_pd ( Addressable __a) {
        var mh$ = _mm_cvtpi32_pd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cvtsd_f64$MH() {
        return RuntimeHelper.requireNonNull(constants$1488._mm_cvtsd_f64$MH,"_mm_cvtsd_f64");
    }
    public static double _mm_cvtsd_f64 ( Addressable __a) {
        var mh$ = _mm_cvtsd_f64$MH();
        try {
            return (double)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_load_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1489._mm_load_pd$MH,"_mm_load_pd");
    }
    public static MemoryAddress _mm_load_pd ( Addressable __dp) {
        var mh$ = _mm_load_pd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__dp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_load1_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1489._mm_load1_pd$MH,"_mm_load1_pd");
    }
    public static MemoryAddress _mm_load1_pd ( Addressable __dp) {
        var mh$ = _mm_load1_pd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__dp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_loadr_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1489._mm_loadr_pd$MH,"_mm_loadr_pd");
    }
    public static MemoryAddress _mm_loadr_pd ( Addressable __dp) {
        var mh$ = _mm_loadr_pd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__dp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_loadu_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1489._mm_loadu_pd$MH,"_mm_loadu_pd");
    }
    public static MemoryAddress _mm_loadu_pd ( Addressable __dp) {
        var mh$ = _mm_loadu_pd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__dp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_loadu_si64$MH() {
        return RuntimeHelper.requireNonNull(constants$1489._mm_loadu_si64$MH,"_mm_loadu_si64");
    }
    public static MemoryAddress _mm_loadu_si64 ( Addressable __a) {
        var mh$ = _mm_loadu_si64$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_loadu_si32$MH() {
        return RuntimeHelper.requireNonNull(constants$1489._mm_loadu_si32$MH,"_mm_loadu_si32");
    }
    public static MemoryAddress _mm_loadu_si32 ( Addressable __a) {
        var mh$ = _mm_loadu_si32$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_loadu_si16$MH() {
        return RuntimeHelper.requireNonNull(constants$1490._mm_loadu_si16$MH,"_mm_loadu_si16");
    }
    public static MemoryAddress _mm_loadu_si16 ( Addressable __a) {
        var mh$ = _mm_loadu_si16$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_load_sd$MH() {
        return RuntimeHelper.requireNonNull(constants$1490._mm_load_sd$MH,"_mm_load_sd");
    }
    public static MemoryAddress _mm_load_sd ( Addressable __dp) {
        var mh$ = _mm_load_sd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__dp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_loadh_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1490._mm_loadh_pd$MH,"_mm_loadh_pd");
    }
    public static MemoryAddress _mm_loadh_pd ( Addressable __a,  Addressable __dp) {
        var mh$ = _mm_loadh_pd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __dp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_loadl_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1490._mm_loadl_pd$MH,"_mm_loadl_pd");
    }
    public static MemoryAddress _mm_loadl_pd ( Addressable __a,  Addressable __dp) {
        var mh$ = _mm_loadl_pd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __dp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_undefined_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1490._mm_undefined_pd$MH,"_mm_undefined_pd");
    }
    public static MemoryAddress _mm_undefined_pd () {
        var mh$ = _mm_undefined_pd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_set_sd$MH() {
        return RuntimeHelper.requireNonNull(constants$1490._mm_set_sd$MH,"_mm_set_sd");
    }
    public static MemoryAddress _mm_set_sd ( double __w) {
        var mh$ = _mm_set_sd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__w);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_set1_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1491._mm_set1_pd$MH,"_mm_set1_pd");
    }
    public static MemoryAddress _mm_set1_pd ( double __w) {
        var mh$ = _mm_set1_pd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__w);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_set_pd1$MH() {
        return RuntimeHelper.requireNonNull(constants$1491._mm_set_pd1$MH,"_mm_set_pd1");
    }
    public static MemoryAddress _mm_set_pd1 ( double __w) {
        var mh$ = _mm_set_pd1$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__w);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_set_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1491._mm_set_pd$MH,"_mm_set_pd");
    }
    public static MemoryAddress _mm_set_pd ( double __w,  double __x) {
        var mh$ = _mm_set_pd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__w, __x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_setr_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1491._mm_setr_pd$MH,"_mm_setr_pd");
    }
    public static MemoryAddress _mm_setr_pd ( double __w,  double __x) {
        var mh$ = _mm_setr_pd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__w, __x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_setzero_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1491._mm_setzero_pd$MH,"_mm_setzero_pd");
    }
    public static MemoryAddress _mm_setzero_pd () {
        var mh$ = _mm_setzero_pd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_move_sd$MH() {
        return RuntimeHelper.requireNonNull(constants$1491._mm_move_sd$MH,"_mm_move_sd");
    }
    public static MemoryAddress _mm_move_sd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_move_sd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_store_sd$MH() {
        return RuntimeHelper.requireNonNull(constants$1492._mm_store_sd$MH,"_mm_store_sd");
    }
    public static void _mm_store_sd ( Addressable __dp,  Addressable __a) {
        var mh$ = _mm_store_sd$MH();
        try {
            mh$.invokeExact(__dp, __a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_store_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1492._mm_store_pd$MH,"_mm_store_pd");
    }
    public static void _mm_store_pd ( Addressable __dp,  Addressable __a) {
        var mh$ = _mm_store_pd$MH();
        try {
            mh$.invokeExact(__dp, __a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_store1_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1492._mm_store1_pd$MH,"_mm_store1_pd");
    }
    public static void _mm_store1_pd ( Addressable __dp,  Addressable __a) {
        var mh$ = _mm_store1_pd$MH();
        try {
            mh$.invokeExact(__dp, __a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_store_pd1$MH() {
        return RuntimeHelper.requireNonNull(constants$1492._mm_store_pd1$MH,"_mm_store_pd1");
    }
    public static void _mm_store_pd1 ( Addressable __dp,  Addressable __a) {
        var mh$ = _mm_store_pd1$MH();
        try {
            mh$.invokeExact(__dp, __a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_storeu_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1492._mm_storeu_pd$MH,"_mm_storeu_pd");
    }
    public static void _mm_storeu_pd ( Addressable __dp,  Addressable __a) {
        var mh$ = _mm_storeu_pd$MH();
        try {
            mh$.invokeExact(__dp, __a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_storer_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1492._mm_storer_pd$MH,"_mm_storer_pd");
    }
    public static void _mm_storer_pd ( Addressable __dp,  Addressable __a) {
        var mh$ = _mm_storer_pd$MH();
        try {
            mh$.invokeExact(__dp, __a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_storeh_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1493._mm_storeh_pd$MH,"_mm_storeh_pd");
    }
    public static void _mm_storeh_pd ( Addressable __dp,  Addressable __a) {
        var mh$ = _mm_storeh_pd$MH();
        try {
            mh$.invokeExact(__dp, __a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_storel_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1493._mm_storel_pd$MH,"_mm_storel_pd");
    }
    public static void _mm_storel_pd ( Addressable __dp,  Addressable __a) {
        var mh$ = _mm_storel_pd$MH();
        try {
            mh$.invokeExact(__dp, __a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_add_epi8$MH() {
        return RuntimeHelper.requireNonNull(constants$1493._mm_add_epi8$MH,"_mm_add_epi8");
    }
    public static MemoryAddress _mm_add_epi8 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_add_epi8$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_add_epi16$MH() {
        return RuntimeHelper.requireNonNull(constants$1493._mm_add_epi16$MH,"_mm_add_epi16");
    }
    public static MemoryAddress _mm_add_epi16 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_add_epi16$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_add_epi32$MH() {
        return RuntimeHelper.requireNonNull(constants$1493._mm_add_epi32$MH,"_mm_add_epi32");
    }
    public static MemoryAddress _mm_add_epi32 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_add_epi32$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_add_si64$MH() {
        return RuntimeHelper.requireNonNull(constants$1493._mm_add_si64$MH,"_mm_add_si64");
    }
    public static MemoryAddress _mm_add_si64 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_add_si64$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_add_epi64$MH() {
        return RuntimeHelper.requireNonNull(constants$1494._mm_add_epi64$MH,"_mm_add_epi64");
    }
    public static MemoryAddress _mm_add_epi64 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_add_epi64$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_adds_epi8$MH() {
        return RuntimeHelper.requireNonNull(constants$1494._mm_adds_epi8$MH,"_mm_adds_epi8");
    }
    public static MemoryAddress _mm_adds_epi8 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_adds_epi8$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_adds_epi16$MH() {
        return RuntimeHelper.requireNonNull(constants$1494._mm_adds_epi16$MH,"_mm_adds_epi16");
    }
    public static MemoryAddress _mm_adds_epi16 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_adds_epi16$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_adds_epu8$MH() {
        return RuntimeHelper.requireNonNull(constants$1494._mm_adds_epu8$MH,"_mm_adds_epu8");
    }
    public static MemoryAddress _mm_adds_epu8 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_adds_epu8$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_adds_epu16$MH() {
        return RuntimeHelper.requireNonNull(constants$1494._mm_adds_epu16$MH,"_mm_adds_epu16");
    }
    public static MemoryAddress _mm_adds_epu16 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_adds_epu16$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_avg_epu8$MH() {
        return RuntimeHelper.requireNonNull(constants$1494._mm_avg_epu8$MH,"_mm_avg_epu8");
    }
    public static MemoryAddress _mm_avg_epu8 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_avg_epu8$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_avg_epu16$MH() {
        return RuntimeHelper.requireNonNull(constants$1495._mm_avg_epu16$MH,"_mm_avg_epu16");
    }
    public static MemoryAddress _mm_avg_epu16 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_avg_epu16$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_madd_epi16$MH() {
        return RuntimeHelper.requireNonNull(constants$1495._mm_madd_epi16$MH,"_mm_madd_epi16");
    }
    public static MemoryAddress _mm_madd_epi16 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_madd_epi16$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_max_epi16$MH() {
        return RuntimeHelper.requireNonNull(constants$1495._mm_max_epi16$MH,"_mm_max_epi16");
    }
    public static MemoryAddress _mm_max_epi16 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_max_epi16$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_max_epu8$MH() {
        return RuntimeHelper.requireNonNull(constants$1495._mm_max_epu8$MH,"_mm_max_epu8");
    }
    public static MemoryAddress _mm_max_epu8 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_max_epu8$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_min_epi16$MH() {
        return RuntimeHelper.requireNonNull(constants$1495._mm_min_epi16$MH,"_mm_min_epi16");
    }
    public static MemoryAddress _mm_min_epi16 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_min_epi16$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_min_epu8$MH() {
        return RuntimeHelper.requireNonNull(constants$1495._mm_min_epu8$MH,"_mm_min_epu8");
    }
    public static MemoryAddress _mm_min_epu8 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_min_epu8$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_mulhi_epi16$MH() {
        return RuntimeHelper.requireNonNull(constants$1496._mm_mulhi_epi16$MH,"_mm_mulhi_epi16");
    }
    public static MemoryAddress _mm_mulhi_epi16 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_mulhi_epi16$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_mulhi_epu16$MH() {
        return RuntimeHelper.requireNonNull(constants$1496._mm_mulhi_epu16$MH,"_mm_mulhi_epu16");
    }
    public static MemoryAddress _mm_mulhi_epu16 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_mulhi_epu16$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_mullo_epi16$MH() {
        return RuntimeHelper.requireNonNull(constants$1496._mm_mullo_epi16$MH,"_mm_mullo_epi16");
    }
    public static MemoryAddress _mm_mullo_epi16 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_mullo_epi16$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_mul_su32$MH() {
        return RuntimeHelper.requireNonNull(constants$1496._mm_mul_su32$MH,"_mm_mul_su32");
    }
    public static MemoryAddress _mm_mul_su32 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_mul_su32$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_mul_epu32$MH() {
        return RuntimeHelper.requireNonNull(constants$1496._mm_mul_epu32$MH,"_mm_mul_epu32");
    }
    public static MemoryAddress _mm_mul_epu32 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_mul_epu32$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_sad_epu8$MH() {
        return RuntimeHelper.requireNonNull(constants$1496._mm_sad_epu8$MH,"_mm_sad_epu8");
    }
    public static MemoryAddress _mm_sad_epu8 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_sad_epu8$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_sub_epi8$MH() {
        return RuntimeHelper.requireNonNull(constants$1497._mm_sub_epi8$MH,"_mm_sub_epi8");
    }
    public static MemoryAddress _mm_sub_epi8 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_sub_epi8$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_sub_epi16$MH() {
        return RuntimeHelper.requireNonNull(constants$1497._mm_sub_epi16$MH,"_mm_sub_epi16");
    }
    public static MemoryAddress _mm_sub_epi16 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_sub_epi16$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_sub_epi32$MH() {
        return RuntimeHelper.requireNonNull(constants$1497._mm_sub_epi32$MH,"_mm_sub_epi32");
    }
    public static MemoryAddress _mm_sub_epi32 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_sub_epi32$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_sub_si64$MH() {
        return RuntimeHelper.requireNonNull(constants$1497._mm_sub_si64$MH,"_mm_sub_si64");
    }
    public static MemoryAddress _mm_sub_si64 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_sub_si64$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_sub_epi64$MH() {
        return RuntimeHelper.requireNonNull(constants$1497._mm_sub_epi64$MH,"_mm_sub_epi64");
    }
    public static MemoryAddress _mm_sub_epi64 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_sub_epi64$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_subs_epi8$MH() {
        return RuntimeHelper.requireNonNull(constants$1497._mm_subs_epi8$MH,"_mm_subs_epi8");
    }
    public static MemoryAddress _mm_subs_epi8 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_subs_epi8$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_subs_epi16$MH() {
        return RuntimeHelper.requireNonNull(constants$1498._mm_subs_epi16$MH,"_mm_subs_epi16");
    }
    public static MemoryAddress _mm_subs_epi16 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_subs_epi16$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_subs_epu8$MH() {
        return RuntimeHelper.requireNonNull(constants$1498._mm_subs_epu8$MH,"_mm_subs_epu8");
    }
    public static MemoryAddress _mm_subs_epu8 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_subs_epu8$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_subs_epu16$MH() {
        return RuntimeHelper.requireNonNull(constants$1498._mm_subs_epu16$MH,"_mm_subs_epu16");
    }
    public static MemoryAddress _mm_subs_epu16 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_subs_epu16$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_and_si128$MH() {
        return RuntimeHelper.requireNonNull(constants$1498._mm_and_si128$MH,"_mm_and_si128");
    }
    public static MemoryAddress _mm_and_si128 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_and_si128$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_andnot_si128$MH() {
        return RuntimeHelper.requireNonNull(constants$1498._mm_andnot_si128$MH,"_mm_andnot_si128");
    }
    public static MemoryAddress _mm_andnot_si128 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_andnot_si128$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_or_si128$MH() {
        return RuntimeHelper.requireNonNull(constants$1498._mm_or_si128$MH,"_mm_or_si128");
    }
    public static MemoryAddress _mm_or_si128 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_or_si128$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_xor_si128$MH() {
        return RuntimeHelper.requireNonNull(constants$1499._mm_xor_si128$MH,"_mm_xor_si128");
    }
    public static MemoryAddress _mm_xor_si128 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_xor_si128$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_slli_epi16$MH() {
        return RuntimeHelper.requireNonNull(constants$1499._mm_slli_epi16$MH,"_mm_slli_epi16");
    }
    public static MemoryAddress _mm_slli_epi16 ( Addressable __a,  int __count) {
        var mh$ = _mm_slli_epi16$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_sll_epi16$MH() {
        return RuntimeHelper.requireNonNull(constants$1499._mm_sll_epi16$MH,"_mm_sll_epi16");
    }
    public static MemoryAddress _mm_sll_epi16 ( Addressable __a,  Addressable __count) {
        var mh$ = _mm_sll_epi16$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_slli_epi32$MH() {
        return RuntimeHelper.requireNonNull(constants$1499._mm_slli_epi32$MH,"_mm_slli_epi32");
    }
    public static MemoryAddress _mm_slli_epi32 ( Addressable __a,  int __count) {
        var mh$ = _mm_slli_epi32$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_sll_epi32$MH() {
        return RuntimeHelper.requireNonNull(constants$1499._mm_sll_epi32$MH,"_mm_sll_epi32");
    }
    public static MemoryAddress _mm_sll_epi32 ( Addressable __a,  Addressable __count) {
        var mh$ = _mm_sll_epi32$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_slli_epi64$MH() {
        return RuntimeHelper.requireNonNull(constants$1499._mm_slli_epi64$MH,"_mm_slli_epi64");
    }
    public static MemoryAddress _mm_slli_epi64 ( Addressable __a,  int __count) {
        var mh$ = _mm_slli_epi64$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_sll_epi64$MH() {
        return RuntimeHelper.requireNonNull(constants$1500._mm_sll_epi64$MH,"_mm_sll_epi64");
    }
    public static MemoryAddress _mm_sll_epi64 ( Addressable __a,  Addressable __count) {
        var mh$ = _mm_sll_epi64$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_srai_epi16$MH() {
        return RuntimeHelper.requireNonNull(constants$1500._mm_srai_epi16$MH,"_mm_srai_epi16");
    }
    public static MemoryAddress _mm_srai_epi16 ( Addressable __a,  int __count) {
        var mh$ = _mm_srai_epi16$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_sra_epi16$MH() {
        return RuntimeHelper.requireNonNull(constants$1500._mm_sra_epi16$MH,"_mm_sra_epi16");
    }
    public static MemoryAddress _mm_sra_epi16 ( Addressable __a,  Addressable __count) {
        var mh$ = _mm_sra_epi16$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_srai_epi32$MH() {
        return RuntimeHelper.requireNonNull(constants$1500._mm_srai_epi32$MH,"_mm_srai_epi32");
    }
    public static MemoryAddress _mm_srai_epi32 ( Addressable __a,  int __count) {
        var mh$ = _mm_srai_epi32$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_sra_epi32$MH() {
        return RuntimeHelper.requireNonNull(constants$1500._mm_sra_epi32$MH,"_mm_sra_epi32");
    }
    public static MemoryAddress _mm_sra_epi32 ( Addressable __a,  Addressable __count) {
        var mh$ = _mm_sra_epi32$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_srli_epi16$MH() {
        return RuntimeHelper.requireNonNull(constants$1500._mm_srli_epi16$MH,"_mm_srli_epi16");
    }
    public static MemoryAddress _mm_srli_epi16 ( Addressable __a,  int __count) {
        var mh$ = _mm_srli_epi16$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_srl_epi16$MH() {
        return RuntimeHelper.requireNonNull(constants$1501._mm_srl_epi16$MH,"_mm_srl_epi16");
    }
    public static MemoryAddress _mm_srl_epi16 ( Addressable __a,  Addressable __count) {
        var mh$ = _mm_srl_epi16$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_srli_epi32$MH() {
        return RuntimeHelper.requireNonNull(constants$1501._mm_srli_epi32$MH,"_mm_srli_epi32");
    }
    public static MemoryAddress _mm_srli_epi32 ( Addressable __a,  int __count) {
        var mh$ = _mm_srli_epi32$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_srl_epi32$MH() {
        return RuntimeHelper.requireNonNull(constants$1501._mm_srl_epi32$MH,"_mm_srl_epi32");
    }
    public static MemoryAddress _mm_srl_epi32 ( Addressable __a,  Addressable __count) {
        var mh$ = _mm_srl_epi32$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_srli_epi64$MH() {
        return RuntimeHelper.requireNonNull(constants$1501._mm_srli_epi64$MH,"_mm_srli_epi64");
    }
    public static MemoryAddress _mm_srli_epi64 ( Addressable __a,  int __count) {
        var mh$ = _mm_srli_epi64$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_srl_epi64$MH() {
        return RuntimeHelper.requireNonNull(constants$1501._mm_srl_epi64$MH,"_mm_srl_epi64");
    }
    public static MemoryAddress _mm_srl_epi64 ( Addressable __a,  Addressable __count) {
        var mh$ = _mm_srl_epi64$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cmpeq_epi8$MH() {
        return RuntimeHelper.requireNonNull(constants$1501._mm_cmpeq_epi8$MH,"_mm_cmpeq_epi8");
    }
    public static MemoryAddress _mm_cmpeq_epi8 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_cmpeq_epi8$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cmpeq_epi16$MH() {
        return RuntimeHelper.requireNonNull(constants$1502._mm_cmpeq_epi16$MH,"_mm_cmpeq_epi16");
    }
    public static MemoryAddress _mm_cmpeq_epi16 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_cmpeq_epi16$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cmpeq_epi32$MH() {
        return RuntimeHelper.requireNonNull(constants$1502._mm_cmpeq_epi32$MH,"_mm_cmpeq_epi32");
    }
    public static MemoryAddress _mm_cmpeq_epi32 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_cmpeq_epi32$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cmpgt_epi8$MH() {
        return RuntimeHelper.requireNonNull(constants$1502._mm_cmpgt_epi8$MH,"_mm_cmpgt_epi8");
    }
    public static MemoryAddress _mm_cmpgt_epi8 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_cmpgt_epi8$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cmpgt_epi16$MH() {
        return RuntimeHelper.requireNonNull(constants$1502._mm_cmpgt_epi16$MH,"_mm_cmpgt_epi16");
    }
    public static MemoryAddress _mm_cmpgt_epi16 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_cmpgt_epi16$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cmpgt_epi32$MH() {
        return RuntimeHelper.requireNonNull(constants$1502._mm_cmpgt_epi32$MH,"_mm_cmpgt_epi32");
    }
    public static MemoryAddress _mm_cmpgt_epi32 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_cmpgt_epi32$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cmplt_epi8$MH() {
        return RuntimeHelper.requireNonNull(constants$1502._mm_cmplt_epi8$MH,"_mm_cmplt_epi8");
    }
    public static MemoryAddress _mm_cmplt_epi8 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_cmplt_epi8$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cmplt_epi16$MH() {
        return RuntimeHelper.requireNonNull(constants$1503._mm_cmplt_epi16$MH,"_mm_cmplt_epi16");
    }
    public static MemoryAddress _mm_cmplt_epi16 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_cmplt_epi16$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cmplt_epi32$MH() {
        return RuntimeHelper.requireNonNull(constants$1503._mm_cmplt_epi32$MH,"_mm_cmplt_epi32");
    }
    public static MemoryAddress _mm_cmplt_epi32 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_cmplt_epi32$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cvtsi64_sd$MH() {
        return RuntimeHelper.requireNonNull(constants$1503._mm_cvtsi64_sd$MH,"_mm_cvtsi64_sd");
    }
    public static MemoryAddress _mm_cvtsi64_sd ( Addressable __a,  long __b) {
        var mh$ = _mm_cvtsi64_sd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cvtsd_si64$MH() {
        return RuntimeHelper.requireNonNull(constants$1503._mm_cvtsd_si64$MH,"_mm_cvtsd_si64");
    }
    public static long _mm_cvtsd_si64 ( Addressable __a) {
        var mh$ = _mm_cvtsd_si64$MH();
        try {
            return (long)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cvttsd_si64$MH() {
        return RuntimeHelper.requireNonNull(constants$1503._mm_cvttsd_si64$MH,"_mm_cvttsd_si64");
    }
    public static long _mm_cvttsd_si64 ( Addressable __a) {
        var mh$ = _mm_cvttsd_si64$MH();
        try {
            return (long)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cvtepi32_ps$MH() {
        return RuntimeHelper.requireNonNull(constants$1503._mm_cvtepi32_ps$MH,"_mm_cvtepi32_ps");
    }
    public static MemoryAddress _mm_cvtepi32_ps ( Addressable __a) {
        var mh$ = _mm_cvtepi32_ps$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cvtps_epi32$MH() {
        return RuntimeHelper.requireNonNull(constants$1504._mm_cvtps_epi32$MH,"_mm_cvtps_epi32");
    }
    public static MemoryAddress _mm_cvtps_epi32 ( Addressable __a) {
        var mh$ = _mm_cvtps_epi32$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cvttps_epi32$MH() {
        return RuntimeHelper.requireNonNull(constants$1504._mm_cvttps_epi32$MH,"_mm_cvttps_epi32");
    }
    public static MemoryAddress _mm_cvttps_epi32 ( Addressable __a) {
        var mh$ = _mm_cvttps_epi32$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cvtsi32_si128$MH() {
        return RuntimeHelper.requireNonNull(constants$1504._mm_cvtsi32_si128$MH,"_mm_cvtsi32_si128");
    }
    public static MemoryAddress _mm_cvtsi32_si128 ( int __a) {
        var mh$ = _mm_cvtsi32_si128$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cvtsi64_si128$MH() {
        return RuntimeHelper.requireNonNull(constants$1504._mm_cvtsi64_si128$MH,"_mm_cvtsi64_si128");
    }
    public static MemoryAddress _mm_cvtsi64_si128 ( long __a) {
        var mh$ = _mm_cvtsi64_si128$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cvtsi128_si32$MH() {
        return RuntimeHelper.requireNonNull(constants$1504._mm_cvtsi128_si32$MH,"_mm_cvtsi128_si32");
    }
    public static int _mm_cvtsi128_si32 ( Addressable __a) {
        var mh$ = _mm_cvtsi128_si32$MH();
        try {
            return (int)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_cvtsi128_si64$MH() {
        return RuntimeHelper.requireNonNull(constants$1504._mm_cvtsi128_si64$MH,"_mm_cvtsi128_si64");
    }
    public static long _mm_cvtsi128_si64 ( Addressable __a) {
        var mh$ = _mm_cvtsi128_si64$MH();
        try {
            return (long)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_load_si128$MH() {
        return RuntimeHelper.requireNonNull(constants$1505._mm_load_si128$MH,"_mm_load_si128");
    }
    public static MemoryAddress _mm_load_si128 ( Addressable __p) {
        var mh$ = _mm_load_si128$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_loadu_si128$MH() {
        return RuntimeHelper.requireNonNull(constants$1505._mm_loadu_si128$MH,"_mm_loadu_si128");
    }
    public static MemoryAddress _mm_loadu_si128 ( Addressable __p) {
        var mh$ = _mm_loadu_si128$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_loadl_epi64$MH() {
        return RuntimeHelper.requireNonNull(constants$1505._mm_loadl_epi64$MH,"_mm_loadl_epi64");
    }
    public static MemoryAddress _mm_loadl_epi64 ( Addressable __p) {
        var mh$ = _mm_loadl_epi64$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_undefined_si128$MH() {
        return RuntimeHelper.requireNonNull(constants$1505._mm_undefined_si128$MH,"_mm_undefined_si128");
    }
    public static MemoryAddress _mm_undefined_si128 () {
        var mh$ = _mm_undefined_si128$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_set_epi64x$MH() {
        return RuntimeHelper.requireNonNull(constants$1505._mm_set_epi64x$MH,"_mm_set_epi64x");
    }
    public static MemoryAddress _mm_set_epi64x ( long __q1,  long __q0) {
        var mh$ = _mm_set_epi64x$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__q1, __q0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_set_epi64$MH() {
        return RuntimeHelper.requireNonNull(constants$1505._mm_set_epi64$MH,"_mm_set_epi64");
    }
    public static MemoryAddress _mm_set_epi64 ( Addressable __q1,  Addressable __q0) {
        var mh$ = _mm_set_epi64$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__q1, __q0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_set_epi32$MH() {
        return RuntimeHelper.requireNonNull(constants$1506._mm_set_epi32$MH,"_mm_set_epi32");
    }
    public static MemoryAddress _mm_set_epi32 ( int __i3,  int __i2,  int __i1,  int __i0) {
        var mh$ = _mm_set_epi32$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__i3, __i2, __i1, __i0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_set_epi16$MH() {
        return RuntimeHelper.requireNonNull(constants$1506._mm_set_epi16$MH,"_mm_set_epi16");
    }
    public static MemoryAddress _mm_set_epi16 ( short __w7,  short __w6,  short __w5,  short __w4,  short __w3,  short __w2,  short __w1,  short __w0) {
        var mh$ = _mm_set_epi16$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__w7, __w6, __w5, __w4, __w3, __w2, __w1, __w0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_set_epi8$MH() {
        return RuntimeHelper.requireNonNull(constants$1506._mm_set_epi8$MH,"_mm_set_epi8");
    }
    public static MemoryAddress _mm_set_epi8 ( byte __b15,  byte __b14,  byte __b13,  byte __b12,  byte __b11,  byte __b10,  byte __b9,  byte __b8,  byte __b7,  byte __b6,  byte __b5,  byte __b4,  byte __b3,  byte __b2,  byte __b1,  byte __b0) {
        var mh$ = _mm_set_epi8$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__b15, __b14, __b13, __b12, __b11, __b10, __b9, __b8, __b7, __b6, __b5, __b4, __b3, __b2, __b1, __b0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_set1_epi64x$MH() {
        return RuntimeHelper.requireNonNull(constants$1506._mm_set1_epi64x$MH,"_mm_set1_epi64x");
    }
    public static MemoryAddress _mm_set1_epi64x ( long __q) {
        var mh$ = _mm_set1_epi64x$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_set1_epi64$MH() {
        return RuntimeHelper.requireNonNull(constants$1506._mm_set1_epi64$MH,"_mm_set1_epi64");
    }
    public static MemoryAddress _mm_set1_epi64 ( Addressable __q) {
        var mh$ = _mm_set1_epi64$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_set1_epi32$MH() {
        return RuntimeHelper.requireNonNull(constants$1506._mm_set1_epi32$MH,"_mm_set1_epi32");
    }
    public static MemoryAddress _mm_set1_epi32 ( int __i) {
        var mh$ = _mm_set1_epi32$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_set1_epi16$MH() {
        return RuntimeHelper.requireNonNull(constants$1507._mm_set1_epi16$MH,"_mm_set1_epi16");
    }
    public static MemoryAddress _mm_set1_epi16 ( short __w) {
        var mh$ = _mm_set1_epi16$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__w);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_set1_epi8$MH() {
        return RuntimeHelper.requireNonNull(constants$1507._mm_set1_epi8$MH,"_mm_set1_epi8");
    }
    public static MemoryAddress _mm_set1_epi8 ( byte __b) {
        var mh$ = _mm_set1_epi8$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_setr_epi64$MH() {
        return RuntimeHelper.requireNonNull(constants$1507._mm_setr_epi64$MH,"_mm_setr_epi64");
    }
    public static MemoryAddress _mm_setr_epi64 ( Addressable __q0,  Addressable __q1) {
        var mh$ = _mm_setr_epi64$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__q0, __q1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_setr_epi32$MH() {
        return RuntimeHelper.requireNonNull(constants$1507._mm_setr_epi32$MH,"_mm_setr_epi32");
    }
    public static MemoryAddress _mm_setr_epi32 ( int __i0,  int __i1,  int __i2,  int __i3) {
        var mh$ = _mm_setr_epi32$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__i0, __i1, __i2, __i3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_setr_epi16$MH() {
        return RuntimeHelper.requireNonNull(constants$1507._mm_setr_epi16$MH,"_mm_setr_epi16");
    }
    public static MemoryAddress _mm_setr_epi16 ( short __w0,  short __w1,  short __w2,  short __w3,  short __w4,  short __w5,  short __w6,  short __w7) {
        var mh$ = _mm_setr_epi16$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__w0, __w1, __w2, __w3, __w4, __w5, __w6, __w7);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_setr_epi8$MH() {
        return RuntimeHelper.requireNonNull(constants$1507._mm_setr_epi8$MH,"_mm_setr_epi8");
    }
    public static MemoryAddress _mm_setr_epi8 ( byte __b0,  byte __b1,  byte __b2,  byte __b3,  byte __b4,  byte __b5,  byte __b6,  byte __b7,  byte __b8,  byte __b9,  byte __b10,  byte __b11,  byte __b12,  byte __b13,  byte __b14,  byte __b15) {
        var mh$ = _mm_setr_epi8$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__b0, __b1, __b2, __b3, __b4, __b5, __b6, __b7, __b8, __b9, __b10, __b11, __b12, __b13, __b14, __b15);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_setzero_si128$MH() {
        return RuntimeHelper.requireNonNull(constants$1508._mm_setzero_si128$MH,"_mm_setzero_si128");
    }
    public static MemoryAddress _mm_setzero_si128 () {
        var mh$ = _mm_setzero_si128$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_store_si128$MH() {
        return RuntimeHelper.requireNonNull(constants$1508._mm_store_si128$MH,"_mm_store_si128");
    }
    public static void _mm_store_si128 ( Addressable __p,  Addressable __b) {
        var mh$ = _mm_store_si128$MH();
        try {
            mh$.invokeExact(__p, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_storeu_si128$MH() {
        return RuntimeHelper.requireNonNull(constants$1508._mm_storeu_si128$MH,"_mm_storeu_si128");
    }
    public static void _mm_storeu_si128 ( Addressable __p,  Addressable __b) {
        var mh$ = _mm_storeu_si128$MH();
        try {
            mh$.invokeExact(__p, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_storeu_si64$MH() {
        return RuntimeHelper.requireNonNull(constants$1508._mm_storeu_si64$MH,"_mm_storeu_si64");
    }
    public static void _mm_storeu_si64 ( Addressable __p,  Addressable __b) {
        var mh$ = _mm_storeu_si64$MH();
        try {
            mh$.invokeExact(__p, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_storeu_si32$MH() {
        return RuntimeHelper.requireNonNull(constants$1508._mm_storeu_si32$MH,"_mm_storeu_si32");
    }
    public static void _mm_storeu_si32 ( Addressable __p,  Addressable __b) {
        var mh$ = _mm_storeu_si32$MH();
        try {
            mh$.invokeExact(__p, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_storeu_si16$MH() {
        return RuntimeHelper.requireNonNull(constants$1508._mm_storeu_si16$MH,"_mm_storeu_si16");
    }
    public static void _mm_storeu_si16 ( Addressable __p,  Addressable __b) {
        var mh$ = _mm_storeu_si16$MH();
        try {
            mh$.invokeExact(__p, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_maskmoveu_si128$MH() {
        return RuntimeHelper.requireNonNull(constants$1509._mm_maskmoveu_si128$MH,"_mm_maskmoveu_si128");
    }
    public static void _mm_maskmoveu_si128 ( Addressable __d,  Addressable __n,  Addressable __p) {
        var mh$ = _mm_maskmoveu_si128$MH();
        try {
            mh$.invokeExact(__d, __n, __p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_storel_epi64$MH() {
        return RuntimeHelper.requireNonNull(constants$1509._mm_storel_epi64$MH,"_mm_storel_epi64");
    }
    public static void _mm_storel_epi64 ( Addressable __p,  Addressable __a) {
        var mh$ = _mm_storel_epi64$MH();
        try {
            mh$.invokeExact(__p, __a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_stream_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1509._mm_stream_pd$MH,"_mm_stream_pd");
    }
    public static void _mm_stream_pd ( Addressable __p,  Addressable __a) {
        var mh$ = _mm_stream_pd$MH();
        try {
            mh$.invokeExact(__p, __a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_stream_si128$MH() {
        return RuntimeHelper.requireNonNull(constants$1509._mm_stream_si128$MH,"_mm_stream_si128");
    }
    public static void _mm_stream_si128 ( Addressable __p,  Addressable __a) {
        var mh$ = _mm_stream_si128$MH();
        try {
            mh$.invokeExact(__p, __a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_stream_si32$MH() {
        return RuntimeHelper.requireNonNull(constants$1509._mm_stream_si32$MH,"_mm_stream_si32");
    }
    public static void _mm_stream_si32 ( Addressable __p,  int __a) {
        var mh$ = _mm_stream_si32$MH();
        try {
            mh$.invokeExact(__p, __a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_stream_si64$MH() {
        return RuntimeHelper.requireNonNull(constants$1509._mm_stream_si64$MH,"_mm_stream_si64");
    }
    public static void _mm_stream_si64 ( Addressable __p,  long __a) {
        var mh$ = _mm_stream_si64$MH();
        try {
            mh$.invokeExact(__p, __a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_clflush$MH() {
        return RuntimeHelper.requireNonNull(constants$1510._mm_clflush$MH,"_mm_clflush");
    }
    public static void _mm_clflush ( Addressable __p) {
        var mh$ = _mm_clflush$MH();
        try {
            mh$.invokeExact(__p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_lfence$MH() {
        return RuntimeHelper.requireNonNull(constants$1510._mm_lfence$MH,"_mm_lfence");
    }
    public static void _mm_lfence () {
        var mh$ = _mm_lfence$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_mfence$MH() {
        return RuntimeHelper.requireNonNull(constants$1510._mm_mfence$MH,"_mm_mfence");
    }
    public static void _mm_mfence () {
        var mh$ = _mm_mfence$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_packs_epi16$MH() {
        return RuntimeHelper.requireNonNull(constants$1510._mm_packs_epi16$MH,"_mm_packs_epi16");
    }
    public static MemoryAddress _mm_packs_epi16 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_packs_epi16$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_packs_epi32$MH() {
        return RuntimeHelper.requireNonNull(constants$1510._mm_packs_epi32$MH,"_mm_packs_epi32");
    }
    public static MemoryAddress _mm_packs_epi32 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_packs_epi32$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_packus_epi16$MH() {
        return RuntimeHelper.requireNonNull(constants$1510._mm_packus_epi16$MH,"_mm_packus_epi16");
    }
    public static MemoryAddress _mm_packus_epi16 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_packus_epi16$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_movemask_epi8$MH() {
        return RuntimeHelper.requireNonNull(constants$1511._mm_movemask_epi8$MH,"_mm_movemask_epi8");
    }
    public static int _mm_movemask_epi8 ( Addressable __a) {
        var mh$ = _mm_movemask_epi8$MH();
        try {
            return (int)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_unpackhi_epi8$MH() {
        return RuntimeHelper.requireNonNull(constants$1511._mm_unpackhi_epi8$MH,"_mm_unpackhi_epi8");
    }
    public static MemoryAddress _mm_unpackhi_epi8 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_unpackhi_epi8$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_unpackhi_epi16$MH() {
        return RuntimeHelper.requireNonNull(constants$1511._mm_unpackhi_epi16$MH,"_mm_unpackhi_epi16");
    }
    public static MemoryAddress _mm_unpackhi_epi16 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_unpackhi_epi16$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_unpackhi_epi32$MH() {
        return RuntimeHelper.requireNonNull(constants$1511._mm_unpackhi_epi32$MH,"_mm_unpackhi_epi32");
    }
    public static MemoryAddress _mm_unpackhi_epi32 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_unpackhi_epi32$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_unpackhi_epi64$MH() {
        return RuntimeHelper.requireNonNull(constants$1511._mm_unpackhi_epi64$MH,"_mm_unpackhi_epi64");
    }
    public static MemoryAddress _mm_unpackhi_epi64 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_unpackhi_epi64$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_unpacklo_epi8$MH() {
        return RuntimeHelper.requireNonNull(constants$1511._mm_unpacklo_epi8$MH,"_mm_unpacklo_epi8");
    }
    public static MemoryAddress _mm_unpacklo_epi8 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_unpacklo_epi8$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_unpacklo_epi16$MH() {
        return RuntimeHelper.requireNonNull(constants$1512._mm_unpacklo_epi16$MH,"_mm_unpacklo_epi16");
    }
    public static MemoryAddress _mm_unpacklo_epi16 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_unpacklo_epi16$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_unpacklo_epi32$MH() {
        return RuntimeHelper.requireNonNull(constants$1512._mm_unpacklo_epi32$MH,"_mm_unpacklo_epi32");
    }
    public static MemoryAddress _mm_unpacklo_epi32 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_unpacklo_epi32$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_unpacklo_epi64$MH() {
        return RuntimeHelper.requireNonNull(constants$1512._mm_unpacklo_epi64$MH,"_mm_unpacklo_epi64");
    }
    public static MemoryAddress _mm_unpacklo_epi64 ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_unpacklo_epi64$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_movepi64_pi64$MH() {
        return RuntimeHelper.requireNonNull(constants$1512._mm_movepi64_pi64$MH,"_mm_movepi64_pi64");
    }
    public static MemoryAddress _mm_movepi64_pi64 ( Addressable __a) {
        var mh$ = _mm_movepi64_pi64$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_movpi64_epi64$MH() {
        return RuntimeHelper.requireNonNull(constants$1512._mm_movpi64_epi64$MH,"_mm_movpi64_epi64");
    }
    public static MemoryAddress _mm_movpi64_epi64 ( Addressable __a) {
        var mh$ = _mm_movpi64_epi64$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_move_epi64$MH() {
        return RuntimeHelper.requireNonNull(constants$1512._mm_move_epi64$MH,"_mm_move_epi64");
    }
    public static MemoryAddress _mm_move_epi64 ( Addressable __a) {
        var mh$ = _mm_move_epi64$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_unpackhi_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1513._mm_unpackhi_pd$MH,"_mm_unpackhi_pd");
    }
    public static MemoryAddress _mm_unpackhi_pd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_unpackhi_pd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_unpacklo_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1513._mm_unpacklo_pd$MH,"_mm_unpacklo_pd");
    }
    public static MemoryAddress _mm_unpacklo_pd ( Addressable __a,  Addressable __b) {
        var mh$ = _mm_unpacklo_pd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a, __b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_movemask_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1513._mm_movemask_pd$MH,"_mm_movemask_pd");
    }
    public static int _mm_movemask_pd ( Addressable __a) {
        var mh$ = _mm_movemask_pd$MH();
        try {
            return (int)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_castpd_ps$MH() {
        return RuntimeHelper.requireNonNull(constants$1513._mm_castpd_ps$MH,"_mm_castpd_ps");
    }
    public static MemoryAddress _mm_castpd_ps ( Addressable __a) {
        var mh$ = _mm_castpd_ps$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_castpd_si128$MH() {
        return RuntimeHelper.requireNonNull(constants$1513._mm_castpd_si128$MH,"_mm_castpd_si128");
    }
    public static MemoryAddress _mm_castpd_si128 ( Addressable __a) {
        var mh$ = _mm_castpd_si128$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_castps_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1513._mm_castps_pd$MH,"_mm_castps_pd");
    }
    public static MemoryAddress _mm_castps_pd ( Addressable __a) {
        var mh$ = _mm_castps_pd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_castps_si128$MH() {
        return RuntimeHelper.requireNonNull(constants$1514._mm_castps_si128$MH,"_mm_castps_si128");
    }
    public static MemoryAddress _mm_castps_si128 ( Addressable __a) {
        var mh$ = _mm_castps_si128$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_castsi128_ps$MH() {
        return RuntimeHelper.requireNonNull(constants$1514._mm_castsi128_ps$MH,"_mm_castsi128_ps");
    }
    public static MemoryAddress _mm_castsi128_ps ( Addressable __a) {
        var mh$ = _mm_castsi128_ps$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_castsi128_pd$MH() {
        return RuntimeHelper.requireNonNull(constants$1514._mm_castsi128_pd$MH,"_mm_castsi128_pd");
    }
    public static MemoryAddress _mm_castsi128_pd ( Addressable __a) {
        var mh$ = _mm_castsi128_pd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mm_pause$MH() {
        return RuntimeHelper.requireNonNull(constants$1514._mm_pause$MH,"_mm_pause");
    }
    public static void _mm_pause () {
        var mh$ = _mm_pause$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfFloat float_t = Constants$root.C_FLOAT$LAYOUT;
    public static OfDouble double_t = Constants$root.C_DOUBLE$LAYOUT;
    public static MethodHandle __fpclassify$MH() {
        return RuntimeHelper.requireNonNull(constants$1514.__fpclassify$MH,"__fpclassify");
    }
    public static int __fpclassify ( double __value) {
        var mh$ = __fpclassify$MH();
        try {
            return (int)mh$.invokeExact(__value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __signbit$MH() {
        return RuntimeHelper.requireNonNull(constants$1514.__signbit$MH,"__signbit");
    }
    public static int __signbit ( double __value) {
        var mh$ = __signbit$MH();
        try {
            return (int)mh$.invokeExact(__value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __isinf$MH() {
        return RuntimeHelper.requireNonNull(constants$1515.__isinf$MH,"__isinf");
    }
    public static int __isinf ( double __value) {
        var mh$ = __isinf$MH();
        try {
            return (int)mh$.invokeExact(__value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __finite$MH() {
        return RuntimeHelper.requireNonNull(constants$1515.__finite$MH,"__finite");
    }
    public static int __finite ( double __value) {
        var mh$ = __finite$MH();
        try {
            return (int)mh$.invokeExact(__value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __isnan$MH() {
        return RuntimeHelper.requireNonNull(constants$1515.__isnan$MH,"__isnan");
    }
    public static int __isnan ( double __value) {
        var mh$ = __isnan$MH();
        try {
            return (int)mh$.invokeExact(__value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __iseqsig$MH() {
        return RuntimeHelper.requireNonNull(constants$1515.__iseqsig$MH,"__iseqsig");
    }
    public static int __iseqsig ( double __x,  double __y) {
        var mh$ = __iseqsig$MH();
        try {
            return (int)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __issignaling$MH() {
        return RuntimeHelper.requireNonNull(constants$1515.__issignaling$MH,"__issignaling");
    }
    public static int __issignaling ( double __value) {
        var mh$ = __issignaling$MH();
        try {
            return (int)mh$.invokeExact(__value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle acos$MH() {
        return RuntimeHelper.requireNonNull(constants$1515.acos$MH,"acos");
    }
    public static double acos ( double __x) {
        var mh$ = acos$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __acos$MH() {
        return RuntimeHelper.requireNonNull(constants$1516.__acos$MH,"__acos");
    }
    public static double __acos ( double __x) {
        var mh$ = __acos$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle asin$MH() {
        return RuntimeHelper.requireNonNull(constants$1516.asin$MH,"asin");
    }
    public static double asin ( double __x) {
        var mh$ = asin$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __asin$MH() {
        return RuntimeHelper.requireNonNull(constants$1516.__asin$MH,"__asin");
    }
    public static double __asin ( double __x) {
        var mh$ = __asin$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atan$MH() {
        return RuntimeHelper.requireNonNull(constants$1516.atan$MH,"atan");
    }
    public static double atan ( double __x) {
        var mh$ = atan$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __atan$MH() {
        return RuntimeHelper.requireNonNull(constants$1516.__atan$MH,"__atan");
    }
    public static double __atan ( double __x) {
        var mh$ = __atan$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atan2$MH() {
        return RuntimeHelper.requireNonNull(constants$1516.atan2$MH,"atan2");
    }
    public static double atan2 ( double __y,  double __x) {
        var mh$ = atan2$MH();
        try {
            return (double)mh$.invokeExact(__y, __x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __atan2$MH() {
        return RuntimeHelper.requireNonNull(constants$1517.__atan2$MH,"__atan2");
    }
    public static double __atan2 ( double __y,  double __x) {
        var mh$ = __atan2$MH();
        try {
            return (double)mh$.invokeExact(__y, __x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cos$MH() {
        return RuntimeHelper.requireNonNull(constants$1517.cos$MH,"cos");
    }
    public static double cos ( double __x) {
        var mh$ = cos$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __cos$MH() {
        return RuntimeHelper.requireNonNull(constants$1517.__cos$MH,"__cos");
    }
    public static double __cos ( double __x) {
        var mh$ = __cos$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sin$MH() {
        return RuntimeHelper.requireNonNull(constants$1517.sin$MH,"sin");
    }
    public static double sin ( double __x) {
        var mh$ = sin$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __sin$MH() {
        return RuntimeHelper.requireNonNull(constants$1517.__sin$MH,"__sin");
    }
    public static double __sin ( double __x) {
        var mh$ = __sin$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle tan$MH() {
        return RuntimeHelper.requireNonNull(constants$1517.tan$MH,"tan");
    }
    public static double tan ( double __x) {
        var mh$ = tan$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __tan$MH() {
        return RuntimeHelper.requireNonNull(constants$1518.__tan$MH,"__tan");
    }
    public static double __tan ( double __x) {
        var mh$ = __tan$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cosh$MH() {
        return RuntimeHelper.requireNonNull(constants$1518.cosh$MH,"cosh");
    }
    public static double cosh ( double __x) {
        var mh$ = cosh$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __cosh$MH() {
        return RuntimeHelper.requireNonNull(constants$1518.__cosh$MH,"__cosh");
    }
    public static double __cosh ( double __x) {
        var mh$ = __cosh$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sinh$MH() {
        return RuntimeHelper.requireNonNull(constants$1518.sinh$MH,"sinh");
    }
    public static double sinh ( double __x) {
        var mh$ = sinh$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __sinh$MH() {
        return RuntimeHelper.requireNonNull(constants$1518.__sinh$MH,"__sinh");
    }
    public static double __sinh ( double __x) {
        var mh$ = __sinh$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle tanh$MH() {
        return RuntimeHelper.requireNonNull(constants$1518.tanh$MH,"tanh");
    }
    public static double tanh ( double __x) {
        var mh$ = tanh$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __tanh$MH() {
        return RuntimeHelper.requireNonNull(constants$1519.__tanh$MH,"__tanh");
    }
    public static double __tanh ( double __x) {
        var mh$ = __tanh$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle acosh$MH() {
        return RuntimeHelper.requireNonNull(constants$1519.acosh$MH,"acosh");
    }
    public static double acosh ( double __x) {
        var mh$ = acosh$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __acosh$MH() {
        return RuntimeHelper.requireNonNull(constants$1519.__acosh$MH,"__acosh");
    }
    public static double __acosh ( double __x) {
        var mh$ = __acosh$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle asinh$MH() {
        return RuntimeHelper.requireNonNull(constants$1519.asinh$MH,"asinh");
    }
    public static double asinh ( double __x) {
        var mh$ = asinh$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __asinh$MH() {
        return RuntimeHelper.requireNonNull(constants$1519.__asinh$MH,"__asinh");
    }
    public static double __asinh ( double __x) {
        var mh$ = __asinh$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atanh$MH() {
        return RuntimeHelper.requireNonNull(constants$1519.atanh$MH,"atanh");
    }
    public static double atanh ( double __x) {
        var mh$ = atanh$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __atanh$MH() {
        return RuntimeHelper.requireNonNull(constants$1520.__atanh$MH,"__atanh");
    }
    public static double __atanh ( double __x) {
        var mh$ = __atanh$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle exp$MH() {
        return RuntimeHelper.requireNonNull(constants$1520.exp$MH,"exp");
    }
    public static double exp ( double __x) {
        var mh$ = exp$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __exp$MH() {
        return RuntimeHelper.requireNonNull(constants$1520.__exp$MH,"__exp");
    }
    public static double __exp ( double __x) {
        var mh$ = __exp$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle frexp$MH() {
        return RuntimeHelper.requireNonNull(constants$1520.frexp$MH,"frexp");
    }
    public static double frexp ( double __x,  Addressable __exponent) {
        var mh$ = frexp$MH();
        try {
            return (double)mh$.invokeExact(__x, __exponent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __frexp$MH() {
        return RuntimeHelper.requireNonNull(constants$1520.__frexp$MH,"__frexp");
    }
    public static double __frexp ( double __x,  Addressable __exponent) {
        var mh$ = __frexp$MH();
        try {
            return (double)mh$.invokeExact(__x, __exponent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ldexp$MH() {
        return RuntimeHelper.requireNonNull(constants$1520.ldexp$MH,"ldexp");
    }
    public static double ldexp ( double __x,  int __exponent) {
        var mh$ = ldexp$MH();
        try {
            return (double)mh$.invokeExact(__x, __exponent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __ldexp$MH() {
        return RuntimeHelper.requireNonNull(constants$1521.__ldexp$MH,"__ldexp");
    }
    public static double __ldexp ( double __x,  int __exponent) {
        var mh$ = __ldexp$MH();
        try {
            return (double)mh$.invokeExact(__x, __exponent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle log$MH() {
        return RuntimeHelper.requireNonNull(constants$1521.log$MH,"log");
    }
    public static double log ( double __x) {
        var mh$ = log$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __log$MH() {
        return RuntimeHelper.requireNonNull(constants$1521.__log$MH,"__log");
    }
    public static double __log ( double __x) {
        var mh$ = __log$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle log10$MH() {
        return RuntimeHelper.requireNonNull(constants$1521.log10$MH,"log10");
    }
    public static double log10 ( double __x) {
        var mh$ = log10$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __log10$MH() {
        return RuntimeHelper.requireNonNull(constants$1521.__log10$MH,"__log10");
    }
    public static double __log10 ( double __x) {
        var mh$ = __log10$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle modf$MH() {
        return RuntimeHelper.requireNonNull(constants$1521.modf$MH,"modf");
    }
    public static double modf ( double __x,  Addressable __iptr) {
        var mh$ = modf$MH();
        try {
            return (double)mh$.invokeExact(__x, __iptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __modf$MH() {
        return RuntimeHelper.requireNonNull(constants$1522.__modf$MH,"__modf");
    }
    public static double __modf ( double __x,  Addressable __iptr) {
        var mh$ = __modf$MH();
        try {
            return (double)mh$.invokeExact(__x, __iptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle expm1$MH() {
        return RuntimeHelper.requireNonNull(constants$1522.expm1$MH,"expm1");
    }
    public static double expm1 ( double __x) {
        var mh$ = expm1$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __expm1$MH() {
        return RuntimeHelper.requireNonNull(constants$1522.__expm1$MH,"__expm1");
    }
    public static double __expm1 ( double __x) {
        var mh$ = __expm1$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle log1p$MH() {
        return RuntimeHelper.requireNonNull(constants$1522.log1p$MH,"log1p");
    }
    public static double log1p ( double __x) {
        var mh$ = log1p$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __log1p$MH() {
        return RuntimeHelper.requireNonNull(constants$1522.__log1p$MH,"__log1p");
    }
    public static double __log1p ( double __x) {
        var mh$ = __log1p$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle logb$MH() {
        return RuntimeHelper.requireNonNull(constants$1522.logb$MH,"logb");
    }
    public static double logb ( double __x) {
        var mh$ = logb$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __logb$MH() {
        return RuntimeHelper.requireNonNull(constants$1523.__logb$MH,"__logb");
    }
    public static double __logb ( double __x) {
        var mh$ = __logb$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle exp2$MH() {
        return RuntimeHelper.requireNonNull(constants$1523.exp2$MH,"exp2");
    }
    public static double exp2 ( double __x) {
        var mh$ = exp2$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __exp2$MH() {
        return RuntimeHelper.requireNonNull(constants$1523.__exp2$MH,"__exp2");
    }
    public static double __exp2 ( double __x) {
        var mh$ = __exp2$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle log2$MH() {
        return RuntimeHelper.requireNonNull(constants$1523.log2$MH,"log2");
    }
    public static double log2 ( double __x) {
        var mh$ = log2$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __log2$MH() {
        return RuntimeHelper.requireNonNull(constants$1523.__log2$MH,"__log2");
    }
    public static double __log2 ( double __x) {
        var mh$ = __log2$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pow$MH() {
        return RuntimeHelper.requireNonNull(constants$1523.pow$MH,"pow");
    }
    public static double pow ( double __x,  double __y) {
        var mh$ = pow$MH();
        try {
            return (double)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __pow$MH() {
        return RuntimeHelper.requireNonNull(constants$1524.__pow$MH,"__pow");
    }
    public static double __pow ( double __x,  double __y) {
        var mh$ = __pow$MH();
        try {
            return (double)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sqrt$MH() {
        return RuntimeHelper.requireNonNull(constants$1524.sqrt$MH,"sqrt");
    }
    public static double sqrt ( double __x) {
        var mh$ = sqrt$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __sqrt$MH() {
        return RuntimeHelper.requireNonNull(constants$1524.__sqrt$MH,"__sqrt");
    }
    public static double __sqrt ( double __x) {
        var mh$ = __sqrt$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hypot$MH() {
        return RuntimeHelper.requireNonNull(constants$1524.hypot$MH,"hypot");
    }
    public static double hypot ( double __x,  double __y) {
        var mh$ = hypot$MH();
        try {
            return (double)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __hypot$MH() {
        return RuntimeHelper.requireNonNull(constants$1524.__hypot$MH,"__hypot");
    }
    public static double __hypot ( double __x,  double __y) {
        var mh$ = __hypot$MH();
        try {
            return (double)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cbrt$MH() {
        return RuntimeHelper.requireNonNull(constants$1524.cbrt$MH,"cbrt");
    }
    public static double cbrt ( double __x) {
        var mh$ = cbrt$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __cbrt$MH() {
        return RuntimeHelper.requireNonNull(constants$1525.__cbrt$MH,"__cbrt");
    }
    public static double __cbrt ( double __x) {
        var mh$ = __cbrt$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ceil$MH() {
        return RuntimeHelper.requireNonNull(constants$1525.ceil$MH,"ceil");
    }
    public static double ceil ( double __x) {
        var mh$ = ceil$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __ceil$MH() {
        return RuntimeHelper.requireNonNull(constants$1525.__ceil$MH,"__ceil");
    }
    public static double __ceil ( double __x) {
        var mh$ = __ceil$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fabs$MH() {
        return RuntimeHelper.requireNonNull(constants$1525.fabs$MH,"fabs");
    }
    public static double fabs ( double __x) {
        var mh$ = fabs$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __fabs$MH() {
        return RuntimeHelper.requireNonNull(constants$1525.__fabs$MH,"__fabs");
    }
    public static double __fabs ( double __x) {
        var mh$ = __fabs$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle floor$MH() {
        return RuntimeHelper.requireNonNull(constants$1525.floor$MH,"floor");
    }
    public static double floor ( double __x) {
        var mh$ = floor$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __floor$MH() {
        return RuntimeHelper.requireNonNull(constants$1526.__floor$MH,"__floor");
    }
    public static double __floor ( double __x) {
        var mh$ = __floor$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fmod$MH() {
        return RuntimeHelper.requireNonNull(constants$1526.fmod$MH,"fmod");
    }
    public static double fmod ( double __x,  double __y) {
        var mh$ = fmod$MH();
        try {
            return (double)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __fmod$MH() {
        return RuntimeHelper.requireNonNull(constants$1526.__fmod$MH,"__fmod");
    }
    public static double __fmod ( double __x,  double __y) {
        var mh$ = __fmod$MH();
        try {
            return (double)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle isinf$MH() {
        return RuntimeHelper.requireNonNull(constants$1526.isinf$MH,"isinf");
    }
    public static int isinf ( double __value) {
        var mh$ = isinf$MH();
        try {
            return (int)mh$.invokeExact(__value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle finite$MH() {
        return RuntimeHelper.requireNonNull(constants$1526.finite$MH,"finite");
    }
    public static int finite ( double __value) {
        var mh$ = finite$MH();
        try {
            return (int)mh$.invokeExact(__value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle drem$MH() {
        return RuntimeHelper.requireNonNull(constants$1526.drem$MH,"drem");
    }
    public static double drem ( double __x,  double __y) {
        var mh$ = drem$MH();
        try {
            return (double)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __drem$MH() {
        return RuntimeHelper.requireNonNull(constants$1527.__drem$MH,"__drem");
    }
    public static double __drem ( double __x,  double __y) {
        var mh$ = __drem$MH();
        try {
            return (double)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle significand$MH() {
        return RuntimeHelper.requireNonNull(constants$1527.significand$MH,"significand");
    }
    public static double significand ( double __x) {
        var mh$ = significand$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __significand$MH() {
        return RuntimeHelper.requireNonNull(constants$1527.__significand$MH,"__significand");
    }
    public static double __significand ( double __x) {
        var mh$ = __significand$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle copysign$MH() {
        return RuntimeHelper.requireNonNull(constants$1527.copysign$MH,"copysign");
    }
    public static double copysign ( double __x,  double __y) {
        var mh$ = copysign$MH();
        try {
            return (double)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __copysign$MH() {
        return RuntimeHelper.requireNonNull(constants$1527.__copysign$MH,"__copysign");
    }
    public static double __copysign ( double __x,  double __y) {
        var mh$ = __copysign$MH();
        try {
            return (double)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle nan$MH() {
        return RuntimeHelper.requireNonNull(constants$1527.nan$MH,"nan");
    }
    public static double nan ( Addressable __tagb) {
        var mh$ = nan$MH();
        try {
            return (double)mh$.invokeExact(__tagb);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __nan$MH() {
        return RuntimeHelper.requireNonNull(constants$1528.__nan$MH,"__nan");
    }
    public static double __nan ( Addressable __tagb) {
        var mh$ = __nan$MH();
        try {
            return (double)mh$.invokeExact(__tagb);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle isnan$MH() {
        return RuntimeHelper.requireNonNull(constants$1528.isnan$MH,"isnan");
    }
    public static int isnan ( double __value) {
        var mh$ = isnan$MH();
        try {
            return (int)mh$.invokeExact(__value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle j0$MH() {
        return RuntimeHelper.requireNonNull(constants$1528.j0$MH,"j0");
    }
    public static double j0 ( double x0) {
        var mh$ = j0$MH();
        try {
            return (double)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __j0$MH() {
        return RuntimeHelper.requireNonNull(constants$1528.__j0$MH,"__j0");
    }
    public static double __j0 ( double x0) {
        var mh$ = __j0$MH();
        try {
            return (double)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle j1$MH() {
        return RuntimeHelper.requireNonNull(constants$1528.j1$MH,"j1");
    }
    public static double j1 ( double x0) {
        var mh$ = j1$MH();
        try {
            return (double)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __j1$MH() {
        return RuntimeHelper.requireNonNull(constants$1528.__j1$MH,"__j1");
    }
    public static double __j1 ( double x0) {
        var mh$ = __j1$MH();
        try {
            return (double)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle jn$MH() {
        return RuntimeHelper.requireNonNull(constants$1529.jn$MH,"jn");
    }
    public static double jn ( int x0,  double x1) {
        var mh$ = jn$MH();
        try {
            return (double)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __jn$MH() {
        return RuntimeHelper.requireNonNull(constants$1529.__jn$MH,"__jn");
    }
    public static double __jn ( int x0,  double x1) {
        var mh$ = __jn$MH();
        try {
            return (double)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle y0$MH() {
        return RuntimeHelper.requireNonNull(constants$1529.y0$MH,"y0");
    }
    public static double y0 ( double x0) {
        var mh$ = y0$MH();
        try {
            return (double)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __y0$MH() {
        return RuntimeHelper.requireNonNull(constants$1529.__y0$MH,"__y0");
    }
    public static double __y0 ( double x0) {
        var mh$ = __y0$MH();
        try {
            return (double)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle y1$MH() {
        return RuntimeHelper.requireNonNull(constants$1529.y1$MH,"y1");
    }
    public static double y1 ( double x0) {
        var mh$ = y1$MH();
        try {
            return (double)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __y1$MH() {
        return RuntimeHelper.requireNonNull(constants$1529.__y1$MH,"__y1");
    }
    public static double __y1 ( double x0) {
        var mh$ = __y1$MH();
        try {
            return (double)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle yn$MH() {
        return RuntimeHelper.requireNonNull(constants$1530.yn$MH,"yn");
    }
    public static double yn ( int x0,  double x1) {
        var mh$ = yn$MH();
        try {
            return (double)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __yn$MH() {
        return RuntimeHelper.requireNonNull(constants$1530.__yn$MH,"__yn");
    }
    public static double __yn ( int x0,  double x1) {
        var mh$ = __yn$MH();
        try {
            return (double)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle erf$MH() {
        return RuntimeHelper.requireNonNull(constants$1530.erf$MH,"erf");
    }
    public static double erf ( double x0) {
        var mh$ = erf$MH();
        try {
            return (double)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __erf$MH() {
        return RuntimeHelper.requireNonNull(constants$1530.__erf$MH,"__erf");
    }
    public static double __erf ( double x0) {
        var mh$ = __erf$MH();
        try {
            return (double)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle erfc$MH() {
        return RuntimeHelper.requireNonNull(constants$1530.erfc$MH,"erfc");
    }
    public static double erfc ( double x0) {
        var mh$ = erfc$MH();
        try {
            return (double)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __erfc$MH() {
        return RuntimeHelper.requireNonNull(constants$1530.__erfc$MH,"__erfc");
    }
    public static double __erfc ( double x0) {
        var mh$ = __erfc$MH();
        try {
            return (double)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lgamma$MH() {
        return RuntimeHelper.requireNonNull(constants$1531.lgamma$MH,"lgamma");
    }
    public static double lgamma ( double x0) {
        var mh$ = lgamma$MH();
        try {
            return (double)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __lgamma$MH() {
        return RuntimeHelper.requireNonNull(constants$1531.__lgamma$MH,"__lgamma");
    }
    public static double __lgamma ( double x0) {
        var mh$ = __lgamma$MH();
        try {
            return (double)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle tgamma$MH() {
        return RuntimeHelper.requireNonNull(constants$1531.tgamma$MH,"tgamma");
    }
    public static double tgamma ( double x0) {
        var mh$ = tgamma$MH();
        try {
            return (double)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __tgamma$MH() {
        return RuntimeHelper.requireNonNull(constants$1531.__tgamma$MH,"__tgamma");
    }
    public static double __tgamma ( double x0) {
        var mh$ = __tgamma$MH();
        try {
            return (double)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gamma$MH() {
        return RuntimeHelper.requireNonNull(constants$1531.gamma$MH,"gamma");
    }
    public static double gamma ( double x0) {
        var mh$ = gamma$MH();
        try {
            return (double)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __gamma$MH() {
        return RuntimeHelper.requireNonNull(constants$1531.__gamma$MH,"__gamma");
    }
    public static double __gamma ( double x0) {
        var mh$ = __gamma$MH();
        try {
            return (double)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lgamma_r$MH() {
        return RuntimeHelper.requireNonNull(constants$1532.lgamma_r$MH,"lgamma_r");
    }
    public static double lgamma_r ( double x0,  Addressable __signgamp) {
        var mh$ = lgamma_r$MH();
        try {
            return (double)mh$.invokeExact(x0, __signgamp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __lgamma_r$MH() {
        return RuntimeHelper.requireNonNull(constants$1532.__lgamma_r$MH,"__lgamma_r");
    }
    public static double __lgamma_r ( double x0,  Addressable __signgamp) {
        var mh$ = __lgamma_r$MH();
        try {
            return (double)mh$.invokeExact(x0, __signgamp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rint$MH() {
        return RuntimeHelper.requireNonNull(constants$1532.rint$MH,"rint");
    }
    public static double rint ( double __x) {
        var mh$ = rint$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __rint$MH() {
        return RuntimeHelper.requireNonNull(constants$1532.__rint$MH,"__rint");
    }
    public static double __rint ( double __x) {
        var mh$ = __rint$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle nextafter$MH() {
        return RuntimeHelper.requireNonNull(constants$1532.nextafter$MH,"nextafter");
    }
    public static double nextafter ( double __x,  double __y) {
        var mh$ = nextafter$MH();
        try {
            return (double)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __nextafter$MH() {
        return RuntimeHelper.requireNonNull(constants$1532.__nextafter$MH,"__nextafter");
    }
    public static double __nextafter ( double __x,  double __y) {
        var mh$ = __nextafter$MH();
        try {
            return (double)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle remainder$MH() {
        return RuntimeHelper.requireNonNull(constants$1533.remainder$MH,"remainder");
    }
    public static double remainder ( double __x,  double __y) {
        var mh$ = remainder$MH();
        try {
            return (double)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __remainder$MH() {
        return RuntimeHelper.requireNonNull(constants$1533.__remainder$MH,"__remainder");
    }
    public static double __remainder ( double __x,  double __y) {
        var mh$ = __remainder$MH();
        try {
            return (double)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle scalbn$MH() {
        return RuntimeHelper.requireNonNull(constants$1533.scalbn$MH,"scalbn");
    }
    public static double scalbn ( double __x,  int __n) {
        var mh$ = scalbn$MH();
        try {
            return (double)mh$.invokeExact(__x, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __scalbn$MH() {
        return RuntimeHelper.requireNonNull(constants$1533.__scalbn$MH,"__scalbn");
    }
    public static double __scalbn ( double __x,  int __n) {
        var mh$ = __scalbn$MH();
        try {
            return (double)mh$.invokeExact(__x, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ilogb$MH() {
        return RuntimeHelper.requireNonNull(constants$1533.ilogb$MH,"ilogb");
    }
    public static int ilogb ( double __x) {
        var mh$ = ilogb$MH();
        try {
            return (int)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __ilogb$MH() {
        return RuntimeHelper.requireNonNull(constants$1533.__ilogb$MH,"__ilogb");
    }
    public static int __ilogb ( double __x) {
        var mh$ = __ilogb$MH();
        try {
            return (int)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle scalbln$MH() {
        return RuntimeHelper.requireNonNull(constants$1534.scalbln$MH,"scalbln");
    }
    public static double scalbln ( double __x,  long __n) {
        var mh$ = scalbln$MH();
        try {
            return (double)mh$.invokeExact(__x, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __scalbln$MH() {
        return RuntimeHelper.requireNonNull(constants$1534.__scalbln$MH,"__scalbln");
    }
    public static double __scalbln ( double __x,  long __n) {
        var mh$ = __scalbln$MH();
        try {
            return (double)mh$.invokeExact(__x, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle nearbyint$MH() {
        return RuntimeHelper.requireNonNull(constants$1534.nearbyint$MH,"nearbyint");
    }
    public static double nearbyint ( double __x) {
        var mh$ = nearbyint$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __nearbyint$MH() {
        return RuntimeHelper.requireNonNull(constants$1534.__nearbyint$MH,"__nearbyint");
    }
    public static double __nearbyint ( double __x) {
        var mh$ = __nearbyint$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle round$MH() {
        return RuntimeHelper.requireNonNull(constants$1534.round$MH,"round");
    }
    public static double round ( double __x) {
        var mh$ = round$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __round$MH() {
        return RuntimeHelper.requireNonNull(constants$1534.__round$MH,"__round");
    }
    public static double __round ( double __x) {
        var mh$ = __round$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle trunc$MH() {
        return RuntimeHelper.requireNonNull(constants$1535.trunc$MH,"trunc");
    }
    public static double trunc ( double __x) {
        var mh$ = trunc$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __trunc$MH() {
        return RuntimeHelper.requireNonNull(constants$1535.__trunc$MH,"__trunc");
    }
    public static double __trunc ( double __x) {
        var mh$ = __trunc$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle remquo$MH() {
        return RuntimeHelper.requireNonNull(constants$1535.remquo$MH,"remquo");
    }
    public static double remquo ( double __x,  double __y,  Addressable __quo) {
        var mh$ = remquo$MH();
        try {
            return (double)mh$.invokeExact(__x, __y, __quo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __remquo$MH() {
        return RuntimeHelper.requireNonNull(constants$1535.__remquo$MH,"__remquo");
    }
    public static double __remquo ( double __x,  double __y,  Addressable __quo) {
        var mh$ = __remquo$MH();
        try {
            return (double)mh$.invokeExact(__x, __y, __quo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lrint$MH() {
        return RuntimeHelper.requireNonNull(constants$1535.lrint$MH,"lrint");
    }
    public static long lrint ( double __x) {
        var mh$ = lrint$MH();
        try {
            return (long)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __lrint$MH() {
        return RuntimeHelper.requireNonNull(constants$1535.__lrint$MH,"__lrint");
    }
    public static long __lrint ( double __x) {
        var mh$ = __lrint$MH();
        try {
            return (long)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle llrint$MH() {
        return RuntimeHelper.requireNonNull(constants$1536.llrint$MH,"llrint");
    }
    public static long llrint ( double __x) {
        var mh$ = llrint$MH();
        try {
            return (long)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __llrint$MH() {
        return RuntimeHelper.requireNonNull(constants$1536.__llrint$MH,"__llrint");
    }
    public static long __llrint ( double __x) {
        var mh$ = __llrint$MH();
        try {
            return (long)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lround$MH() {
        return RuntimeHelper.requireNonNull(constants$1536.lround$MH,"lround");
    }
    public static long lround ( double __x) {
        var mh$ = lround$MH();
        try {
            return (long)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __lround$MH() {
        return RuntimeHelper.requireNonNull(constants$1536.__lround$MH,"__lround");
    }
    public static long __lround ( double __x) {
        var mh$ = __lround$MH();
        try {
            return (long)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle llround$MH() {
        return RuntimeHelper.requireNonNull(constants$1536.llround$MH,"llround");
    }
    public static long llround ( double __x) {
        var mh$ = llround$MH();
        try {
            return (long)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __llround$MH() {
        return RuntimeHelper.requireNonNull(constants$1536.__llround$MH,"__llround");
    }
    public static long __llround ( double __x) {
        var mh$ = __llround$MH();
        try {
            return (long)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fdim$MH() {
        return RuntimeHelper.requireNonNull(constants$1537.fdim$MH,"fdim");
    }
    public static double fdim ( double __x,  double __y) {
        var mh$ = fdim$MH();
        try {
            return (double)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __fdim$MH() {
        return RuntimeHelper.requireNonNull(constants$1537.__fdim$MH,"__fdim");
    }
    public static double __fdim ( double __x,  double __y) {
        var mh$ = __fdim$MH();
        try {
            return (double)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fmax$MH() {
        return RuntimeHelper.requireNonNull(constants$1537.fmax$MH,"fmax");
    }
    public static double fmax ( double __x,  double __y) {
        var mh$ = fmax$MH();
        try {
            return (double)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __fmax$MH() {
        return RuntimeHelper.requireNonNull(constants$1537.__fmax$MH,"__fmax");
    }
    public static double __fmax ( double __x,  double __y) {
        var mh$ = __fmax$MH();
        try {
            return (double)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fmin$MH() {
        return RuntimeHelper.requireNonNull(constants$1537.fmin$MH,"fmin");
    }
    public static double fmin ( double __x,  double __y) {
        var mh$ = fmin$MH();
        try {
            return (double)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __fmin$MH() {
        return RuntimeHelper.requireNonNull(constants$1537.__fmin$MH,"__fmin");
    }
    public static double __fmin ( double __x,  double __y) {
        var mh$ = __fmin$MH();
        try {
            return (double)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fma$MH() {
        return RuntimeHelper.requireNonNull(constants$1538.fma$MH,"fma");
    }
    public static double fma ( double __x,  double __y,  double __z) {
        var mh$ = fma$MH();
        try {
            return (double)mh$.invokeExact(__x, __y, __z);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __fma$MH() {
        return RuntimeHelper.requireNonNull(constants$1538.__fma$MH,"__fma");
    }
    public static double __fma ( double __x,  double __y,  double __z) {
        var mh$ = __fma$MH();
        try {
            return (double)mh$.invokeExact(__x, __y, __z);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle scalb$MH() {
        return RuntimeHelper.requireNonNull(constants$1538.scalb$MH,"scalb");
    }
    public static double scalb ( double __x,  double __n) {
        var mh$ = scalb$MH();
        try {
            return (double)mh$.invokeExact(__x, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __scalb$MH() {
        return RuntimeHelper.requireNonNull(constants$1538.__scalb$MH,"__scalb");
    }
    public static double __scalb ( double __x,  double __n) {
        var mh$ = __scalb$MH();
        try {
            return (double)mh$.invokeExact(__x, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __fpclassifyf$MH() {
        return RuntimeHelper.requireNonNull(constants$1538.__fpclassifyf$MH,"__fpclassifyf");
    }
    public static int __fpclassifyf ( float __value) {
        var mh$ = __fpclassifyf$MH();
        try {
            return (int)mh$.invokeExact(__value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __signbitf$MH() {
        return RuntimeHelper.requireNonNull(constants$1538.__signbitf$MH,"__signbitf");
    }
    public static int __signbitf ( float __value) {
        var mh$ = __signbitf$MH();
        try {
            return (int)mh$.invokeExact(__value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __isinff$MH() {
        return RuntimeHelper.requireNonNull(constants$1539.__isinff$MH,"__isinff");
    }
    public static int __isinff ( float __value) {
        var mh$ = __isinff$MH();
        try {
            return (int)mh$.invokeExact(__value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __finitef$MH() {
        return RuntimeHelper.requireNonNull(constants$1539.__finitef$MH,"__finitef");
    }
    public static int __finitef ( float __value) {
        var mh$ = __finitef$MH();
        try {
            return (int)mh$.invokeExact(__value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __isnanf$MH() {
        return RuntimeHelper.requireNonNull(constants$1539.__isnanf$MH,"__isnanf");
    }
    public static int __isnanf ( float __value) {
        var mh$ = __isnanf$MH();
        try {
            return (int)mh$.invokeExact(__value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __iseqsigf$MH() {
        return RuntimeHelper.requireNonNull(constants$1539.__iseqsigf$MH,"__iseqsigf");
    }
    public static int __iseqsigf ( float __x,  float __y) {
        var mh$ = __iseqsigf$MH();
        try {
            return (int)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __issignalingf$MH() {
        return RuntimeHelper.requireNonNull(constants$1539.__issignalingf$MH,"__issignalingf");
    }
    public static int __issignalingf ( float __value) {
        var mh$ = __issignalingf$MH();
        try {
            return (int)mh$.invokeExact(__value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle acosf$MH() {
        return RuntimeHelper.requireNonNull(constants$1539.acosf$MH,"acosf");
    }
    public static float acosf ( float __x) {
        var mh$ = acosf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __acosf$MH() {
        return RuntimeHelper.requireNonNull(constants$1540.__acosf$MH,"__acosf");
    }
    public static float __acosf ( float __x) {
        var mh$ = __acosf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle asinf$MH() {
        return RuntimeHelper.requireNonNull(constants$1540.asinf$MH,"asinf");
    }
    public static float asinf ( float __x) {
        var mh$ = asinf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __asinf$MH() {
        return RuntimeHelper.requireNonNull(constants$1540.__asinf$MH,"__asinf");
    }
    public static float __asinf ( float __x) {
        var mh$ = __asinf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atanf$MH() {
        return RuntimeHelper.requireNonNull(constants$1540.atanf$MH,"atanf");
    }
    public static float atanf ( float __x) {
        var mh$ = atanf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __atanf$MH() {
        return RuntimeHelper.requireNonNull(constants$1540.__atanf$MH,"__atanf");
    }
    public static float __atanf ( float __x) {
        var mh$ = __atanf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atan2f$MH() {
        return RuntimeHelper.requireNonNull(constants$1540.atan2f$MH,"atan2f");
    }
    public static float atan2f ( float __y,  float __x) {
        var mh$ = atan2f$MH();
        try {
            return (float)mh$.invokeExact(__y, __x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __atan2f$MH() {
        return RuntimeHelper.requireNonNull(constants$1541.__atan2f$MH,"__atan2f");
    }
    public static float __atan2f ( float __y,  float __x) {
        var mh$ = __atan2f$MH();
        try {
            return (float)mh$.invokeExact(__y, __x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cosf$MH() {
        return RuntimeHelper.requireNonNull(constants$1541.cosf$MH,"cosf");
    }
    public static float cosf ( float __x) {
        var mh$ = cosf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __cosf$MH() {
        return RuntimeHelper.requireNonNull(constants$1541.__cosf$MH,"__cosf");
    }
    public static float __cosf ( float __x) {
        var mh$ = __cosf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sinf$MH() {
        return RuntimeHelper.requireNonNull(constants$1541.sinf$MH,"sinf");
    }
    public static float sinf ( float __x) {
        var mh$ = sinf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __sinf$MH() {
        return RuntimeHelper.requireNonNull(constants$1541.__sinf$MH,"__sinf");
    }
    public static float __sinf ( float __x) {
        var mh$ = __sinf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle tanf$MH() {
        return RuntimeHelper.requireNonNull(constants$1541.tanf$MH,"tanf");
    }
    public static float tanf ( float __x) {
        var mh$ = tanf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __tanf$MH() {
        return RuntimeHelper.requireNonNull(constants$1542.__tanf$MH,"__tanf");
    }
    public static float __tanf ( float __x) {
        var mh$ = __tanf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle coshf$MH() {
        return RuntimeHelper.requireNonNull(constants$1542.coshf$MH,"coshf");
    }
    public static float coshf ( float __x) {
        var mh$ = coshf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __coshf$MH() {
        return RuntimeHelper.requireNonNull(constants$1542.__coshf$MH,"__coshf");
    }
    public static float __coshf ( float __x) {
        var mh$ = __coshf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sinhf$MH() {
        return RuntimeHelper.requireNonNull(constants$1542.sinhf$MH,"sinhf");
    }
    public static float sinhf ( float __x) {
        var mh$ = sinhf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __sinhf$MH() {
        return RuntimeHelper.requireNonNull(constants$1542.__sinhf$MH,"__sinhf");
    }
    public static float __sinhf ( float __x) {
        var mh$ = __sinhf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle tanhf$MH() {
        return RuntimeHelper.requireNonNull(constants$1542.tanhf$MH,"tanhf");
    }
    public static float tanhf ( float __x) {
        var mh$ = tanhf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __tanhf$MH() {
        return RuntimeHelper.requireNonNull(constants$1543.__tanhf$MH,"__tanhf");
    }
    public static float __tanhf ( float __x) {
        var mh$ = __tanhf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle acoshf$MH() {
        return RuntimeHelper.requireNonNull(constants$1543.acoshf$MH,"acoshf");
    }
    public static float acoshf ( float __x) {
        var mh$ = acoshf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __acoshf$MH() {
        return RuntimeHelper.requireNonNull(constants$1543.__acoshf$MH,"__acoshf");
    }
    public static float __acoshf ( float __x) {
        var mh$ = __acoshf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle asinhf$MH() {
        return RuntimeHelper.requireNonNull(constants$1543.asinhf$MH,"asinhf");
    }
    public static float asinhf ( float __x) {
        var mh$ = asinhf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __asinhf$MH() {
        return RuntimeHelper.requireNonNull(constants$1543.__asinhf$MH,"__asinhf");
    }
    public static float __asinhf ( float __x) {
        var mh$ = __asinhf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atanhf$MH() {
        return RuntimeHelper.requireNonNull(constants$1543.atanhf$MH,"atanhf");
    }
    public static float atanhf ( float __x) {
        var mh$ = atanhf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __atanhf$MH() {
        return RuntimeHelper.requireNonNull(constants$1544.__atanhf$MH,"__atanhf");
    }
    public static float __atanhf ( float __x) {
        var mh$ = __atanhf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle expf$MH() {
        return RuntimeHelper.requireNonNull(constants$1544.expf$MH,"expf");
    }
    public static float expf ( float __x) {
        var mh$ = expf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __expf$MH() {
        return RuntimeHelper.requireNonNull(constants$1544.__expf$MH,"__expf");
    }
    public static float __expf ( float __x) {
        var mh$ = __expf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle frexpf$MH() {
        return RuntimeHelper.requireNonNull(constants$1544.frexpf$MH,"frexpf");
    }
    public static float frexpf ( float __x,  Addressable __exponent) {
        var mh$ = frexpf$MH();
        try {
            return (float)mh$.invokeExact(__x, __exponent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __frexpf$MH() {
        return RuntimeHelper.requireNonNull(constants$1544.__frexpf$MH,"__frexpf");
    }
    public static float __frexpf ( float __x,  Addressable __exponent) {
        var mh$ = __frexpf$MH();
        try {
            return (float)mh$.invokeExact(__x, __exponent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ldexpf$MH() {
        return RuntimeHelper.requireNonNull(constants$1544.ldexpf$MH,"ldexpf");
    }
    public static float ldexpf ( float __x,  int __exponent) {
        var mh$ = ldexpf$MH();
        try {
            return (float)mh$.invokeExact(__x, __exponent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __ldexpf$MH() {
        return RuntimeHelper.requireNonNull(constants$1545.__ldexpf$MH,"__ldexpf");
    }
    public static float __ldexpf ( float __x,  int __exponent) {
        var mh$ = __ldexpf$MH();
        try {
            return (float)mh$.invokeExact(__x, __exponent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle logf$MH() {
        return RuntimeHelper.requireNonNull(constants$1545.logf$MH,"logf");
    }
    public static float logf ( float __x) {
        var mh$ = logf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __logf$MH() {
        return RuntimeHelper.requireNonNull(constants$1545.__logf$MH,"__logf");
    }
    public static float __logf ( float __x) {
        var mh$ = __logf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle log10f$MH() {
        return RuntimeHelper.requireNonNull(constants$1545.log10f$MH,"log10f");
    }
    public static float log10f ( float __x) {
        var mh$ = log10f$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __log10f$MH() {
        return RuntimeHelper.requireNonNull(constants$1545.__log10f$MH,"__log10f");
    }
    public static float __log10f ( float __x) {
        var mh$ = __log10f$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle modff$MH() {
        return RuntimeHelper.requireNonNull(constants$1545.modff$MH,"modff");
    }
    public static float modff ( float __x,  Addressable __iptr) {
        var mh$ = modff$MH();
        try {
            return (float)mh$.invokeExact(__x, __iptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __modff$MH() {
        return RuntimeHelper.requireNonNull(constants$1546.__modff$MH,"__modff");
    }
    public static float __modff ( float __x,  Addressable __iptr) {
        var mh$ = __modff$MH();
        try {
            return (float)mh$.invokeExact(__x, __iptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle expm1f$MH() {
        return RuntimeHelper.requireNonNull(constants$1546.expm1f$MH,"expm1f");
    }
    public static float expm1f ( float __x) {
        var mh$ = expm1f$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __expm1f$MH() {
        return RuntimeHelper.requireNonNull(constants$1546.__expm1f$MH,"__expm1f");
    }
    public static float __expm1f ( float __x) {
        var mh$ = __expm1f$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle log1pf$MH() {
        return RuntimeHelper.requireNonNull(constants$1546.log1pf$MH,"log1pf");
    }
    public static float log1pf ( float __x) {
        var mh$ = log1pf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __log1pf$MH() {
        return RuntimeHelper.requireNonNull(constants$1546.__log1pf$MH,"__log1pf");
    }
    public static float __log1pf ( float __x) {
        var mh$ = __log1pf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle logbf$MH() {
        return RuntimeHelper.requireNonNull(constants$1546.logbf$MH,"logbf");
    }
    public static float logbf ( float __x) {
        var mh$ = logbf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __logbf$MH() {
        return RuntimeHelper.requireNonNull(constants$1547.__logbf$MH,"__logbf");
    }
    public static float __logbf ( float __x) {
        var mh$ = __logbf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle exp2f$MH() {
        return RuntimeHelper.requireNonNull(constants$1547.exp2f$MH,"exp2f");
    }
    public static float exp2f ( float __x) {
        var mh$ = exp2f$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __exp2f$MH() {
        return RuntimeHelper.requireNonNull(constants$1547.__exp2f$MH,"__exp2f");
    }
    public static float __exp2f ( float __x) {
        var mh$ = __exp2f$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle log2f$MH() {
        return RuntimeHelper.requireNonNull(constants$1547.log2f$MH,"log2f");
    }
    public static float log2f ( float __x) {
        var mh$ = log2f$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __log2f$MH() {
        return RuntimeHelper.requireNonNull(constants$1547.__log2f$MH,"__log2f");
    }
    public static float __log2f ( float __x) {
        var mh$ = __log2f$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle powf$MH() {
        return RuntimeHelper.requireNonNull(constants$1547.powf$MH,"powf");
    }
    public static float powf ( float __x,  float __y) {
        var mh$ = powf$MH();
        try {
            return (float)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __powf$MH() {
        return RuntimeHelper.requireNonNull(constants$1548.__powf$MH,"__powf");
    }
    public static float __powf ( float __x,  float __y) {
        var mh$ = __powf$MH();
        try {
            return (float)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sqrtf$MH() {
        return RuntimeHelper.requireNonNull(constants$1548.sqrtf$MH,"sqrtf");
    }
    public static float sqrtf ( float __x) {
        var mh$ = sqrtf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __sqrtf$MH() {
        return RuntimeHelper.requireNonNull(constants$1548.__sqrtf$MH,"__sqrtf");
    }
    public static float __sqrtf ( float __x) {
        var mh$ = __sqrtf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hypotf$MH() {
        return RuntimeHelper.requireNonNull(constants$1548.hypotf$MH,"hypotf");
    }
    public static float hypotf ( float __x,  float __y) {
        var mh$ = hypotf$MH();
        try {
            return (float)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __hypotf$MH() {
        return RuntimeHelper.requireNonNull(constants$1548.__hypotf$MH,"__hypotf");
    }
    public static float __hypotf ( float __x,  float __y) {
        var mh$ = __hypotf$MH();
        try {
            return (float)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cbrtf$MH() {
        return RuntimeHelper.requireNonNull(constants$1548.cbrtf$MH,"cbrtf");
    }
    public static float cbrtf ( float __x) {
        var mh$ = cbrtf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __cbrtf$MH() {
        return RuntimeHelper.requireNonNull(constants$1549.__cbrtf$MH,"__cbrtf");
    }
    public static float __cbrtf ( float __x) {
        var mh$ = __cbrtf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ceilf$MH() {
        return RuntimeHelper.requireNonNull(constants$1549.ceilf$MH,"ceilf");
    }
    public static float ceilf ( float __x) {
        var mh$ = ceilf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __ceilf$MH() {
        return RuntimeHelper.requireNonNull(constants$1549.__ceilf$MH,"__ceilf");
    }
    public static float __ceilf ( float __x) {
        var mh$ = __ceilf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fabsf$MH() {
        return RuntimeHelper.requireNonNull(constants$1549.fabsf$MH,"fabsf");
    }
    public static float fabsf ( float __x) {
        var mh$ = fabsf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __fabsf$MH() {
        return RuntimeHelper.requireNonNull(constants$1549.__fabsf$MH,"__fabsf");
    }
    public static float __fabsf ( float __x) {
        var mh$ = __fabsf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle floorf$MH() {
        return RuntimeHelper.requireNonNull(constants$1549.floorf$MH,"floorf");
    }
    public static float floorf ( float __x) {
        var mh$ = floorf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __floorf$MH() {
        return RuntimeHelper.requireNonNull(constants$1550.__floorf$MH,"__floorf");
    }
    public static float __floorf ( float __x) {
        var mh$ = __floorf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fmodf$MH() {
        return RuntimeHelper.requireNonNull(constants$1550.fmodf$MH,"fmodf");
    }
    public static float fmodf ( float __x,  float __y) {
        var mh$ = fmodf$MH();
        try {
            return (float)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __fmodf$MH() {
        return RuntimeHelper.requireNonNull(constants$1550.__fmodf$MH,"__fmodf");
    }
    public static float __fmodf ( float __x,  float __y) {
        var mh$ = __fmodf$MH();
        try {
            return (float)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle isinff$MH() {
        return RuntimeHelper.requireNonNull(constants$1550.isinff$MH,"isinff");
    }
    public static int isinff ( float __value) {
        var mh$ = isinff$MH();
        try {
            return (int)mh$.invokeExact(__value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle finitef$MH() {
        return RuntimeHelper.requireNonNull(constants$1550.finitef$MH,"finitef");
    }
    public static int finitef ( float __value) {
        var mh$ = finitef$MH();
        try {
            return (int)mh$.invokeExact(__value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle dremf$MH() {
        return RuntimeHelper.requireNonNull(constants$1550.dremf$MH,"dremf");
    }
    public static float dremf ( float __x,  float __y) {
        var mh$ = dremf$MH();
        try {
            return (float)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __dremf$MH() {
        return RuntimeHelper.requireNonNull(constants$1551.__dremf$MH,"__dremf");
    }
    public static float __dremf ( float __x,  float __y) {
        var mh$ = __dremf$MH();
        try {
            return (float)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle significandf$MH() {
        return RuntimeHelper.requireNonNull(constants$1551.significandf$MH,"significandf");
    }
    public static float significandf ( float __x) {
        var mh$ = significandf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __significandf$MH() {
        return RuntimeHelper.requireNonNull(constants$1551.__significandf$MH,"__significandf");
    }
    public static float __significandf ( float __x) {
        var mh$ = __significandf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle copysignf$MH() {
        return RuntimeHelper.requireNonNull(constants$1551.copysignf$MH,"copysignf");
    }
    public static float copysignf ( float __x,  float __y) {
        var mh$ = copysignf$MH();
        try {
            return (float)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __copysignf$MH() {
        return RuntimeHelper.requireNonNull(constants$1551.__copysignf$MH,"__copysignf");
    }
    public static float __copysignf ( float __x,  float __y) {
        var mh$ = __copysignf$MH();
        try {
            return (float)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle nanf$MH() {
        return RuntimeHelper.requireNonNull(constants$1551.nanf$MH,"nanf");
    }
    public static float nanf ( Addressable __tagb) {
        var mh$ = nanf$MH();
        try {
            return (float)mh$.invokeExact(__tagb);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __nanf$MH() {
        return RuntimeHelper.requireNonNull(constants$1552.__nanf$MH,"__nanf");
    }
    public static float __nanf ( Addressable __tagb) {
        var mh$ = __nanf$MH();
        try {
            return (float)mh$.invokeExact(__tagb);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle isnanf$MH() {
        return RuntimeHelper.requireNonNull(constants$1552.isnanf$MH,"isnanf");
    }
    public static int isnanf ( float __value) {
        var mh$ = isnanf$MH();
        try {
            return (int)mh$.invokeExact(__value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle j0f$MH() {
        return RuntimeHelper.requireNonNull(constants$1552.j0f$MH,"j0f");
    }
    public static float j0f ( float x0) {
        var mh$ = j0f$MH();
        try {
            return (float)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __j0f$MH() {
        return RuntimeHelper.requireNonNull(constants$1552.__j0f$MH,"__j0f");
    }
    public static float __j0f ( float x0) {
        var mh$ = __j0f$MH();
        try {
            return (float)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle j1f$MH() {
        return RuntimeHelper.requireNonNull(constants$1552.j1f$MH,"j1f");
    }
    public static float j1f ( float x0) {
        var mh$ = j1f$MH();
        try {
            return (float)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __j1f$MH() {
        return RuntimeHelper.requireNonNull(constants$1552.__j1f$MH,"__j1f");
    }
    public static float __j1f ( float x0) {
        var mh$ = __j1f$MH();
        try {
            return (float)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle jnf$MH() {
        return RuntimeHelper.requireNonNull(constants$1553.jnf$MH,"jnf");
    }
    public static float jnf ( int x0,  float x1) {
        var mh$ = jnf$MH();
        try {
            return (float)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __jnf$MH() {
        return RuntimeHelper.requireNonNull(constants$1553.__jnf$MH,"__jnf");
    }
    public static float __jnf ( int x0,  float x1) {
        var mh$ = __jnf$MH();
        try {
            return (float)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle y0f$MH() {
        return RuntimeHelper.requireNonNull(constants$1553.y0f$MH,"y0f");
    }
    public static float y0f ( float x0) {
        var mh$ = y0f$MH();
        try {
            return (float)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __y0f$MH() {
        return RuntimeHelper.requireNonNull(constants$1553.__y0f$MH,"__y0f");
    }
    public static float __y0f ( float x0) {
        var mh$ = __y0f$MH();
        try {
            return (float)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle y1f$MH() {
        return RuntimeHelper.requireNonNull(constants$1553.y1f$MH,"y1f");
    }
    public static float y1f ( float x0) {
        var mh$ = y1f$MH();
        try {
            return (float)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __y1f$MH() {
        return RuntimeHelper.requireNonNull(constants$1553.__y1f$MH,"__y1f");
    }
    public static float __y1f ( float x0) {
        var mh$ = __y1f$MH();
        try {
            return (float)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ynf$MH() {
        return RuntimeHelper.requireNonNull(constants$1554.ynf$MH,"ynf");
    }
    public static float ynf ( int x0,  float x1) {
        var mh$ = ynf$MH();
        try {
            return (float)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __ynf$MH() {
        return RuntimeHelper.requireNonNull(constants$1554.__ynf$MH,"__ynf");
    }
    public static float __ynf ( int x0,  float x1) {
        var mh$ = __ynf$MH();
        try {
            return (float)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle erff$MH() {
        return RuntimeHelper.requireNonNull(constants$1554.erff$MH,"erff");
    }
    public static float erff ( float x0) {
        var mh$ = erff$MH();
        try {
            return (float)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __erff$MH() {
        return RuntimeHelper.requireNonNull(constants$1554.__erff$MH,"__erff");
    }
    public static float __erff ( float x0) {
        var mh$ = __erff$MH();
        try {
            return (float)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle erfcf$MH() {
        return RuntimeHelper.requireNonNull(constants$1554.erfcf$MH,"erfcf");
    }
    public static float erfcf ( float x0) {
        var mh$ = erfcf$MH();
        try {
            return (float)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __erfcf$MH() {
        return RuntimeHelper.requireNonNull(constants$1554.__erfcf$MH,"__erfcf");
    }
    public static float __erfcf ( float x0) {
        var mh$ = __erfcf$MH();
        try {
            return (float)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lgammaf$MH() {
        return RuntimeHelper.requireNonNull(constants$1555.lgammaf$MH,"lgammaf");
    }
    public static float lgammaf ( float x0) {
        var mh$ = lgammaf$MH();
        try {
            return (float)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __lgammaf$MH() {
        return RuntimeHelper.requireNonNull(constants$1555.__lgammaf$MH,"__lgammaf");
    }
    public static float __lgammaf ( float x0) {
        var mh$ = __lgammaf$MH();
        try {
            return (float)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle tgammaf$MH() {
        return RuntimeHelper.requireNonNull(constants$1555.tgammaf$MH,"tgammaf");
    }
    public static float tgammaf ( float x0) {
        var mh$ = tgammaf$MH();
        try {
            return (float)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __tgammaf$MH() {
        return RuntimeHelper.requireNonNull(constants$1555.__tgammaf$MH,"__tgammaf");
    }
    public static float __tgammaf ( float x0) {
        var mh$ = __tgammaf$MH();
        try {
            return (float)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gammaf$MH() {
        return RuntimeHelper.requireNonNull(constants$1555.gammaf$MH,"gammaf");
    }
    public static float gammaf ( float x0) {
        var mh$ = gammaf$MH();
        try {
            return (float)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __gammaf$MH() {
        return RuntimeHelper.requireNonNull(constants$1555.__gammaf$MH,"__gammaf");
    }
    public static float __gammaf ( float x0) {
        var mh$ = __gammaf$MH();
        try {
            return (float)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lgammaf_r$MH() {
        return RuntimeHelper.requireNonNull(constants$1556.lgammaf_r$MH,"lgammaf_r");
    }
    public static float lgammaf_r ( float x0,  Addressable __signgamp) {
        var mh$ = lgammaf_r$MH();
        try {
            return (float)mh$.invokeExact(x0, __signgamp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __lgammaf_r$MH() {
        return RuntimeHelper.requireNonNull(constants$1556.__lgammaf_r$MH,"__lgammaf_r");
    }
    public static float __lgammaf_r ( float x0,  Addressable __signgamp) {
        var mh$ = __lgammaf_r$MH();
        try {
            return (float)mh$.invokeExact(x0, __signgamp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rintf$MH() {
        return RuntimeHelper.requireNonNull(constants$1556.rintf$MH,"rintf");
    }
    public static float rintf ( float __x) {
        var mh$ = rintf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __rintf$MH() {
        return RuntimeHelper.requireNonNull(constants$1556.__rintf$MH,"__rintf");
    }
    public static float __rintf ( float __x) {
        var mh$ = __rintf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle nextafterf$MH() {
        return RuntimeHelper.requireNonNull(constants$1556.nextafterf$MH,"nextafterf");
    }
    public static float nextafterf ( float __x,  float __y) {
        var mh$ = nextafterf$MH();
        try {
            return (float)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __nextafterf$MH() {
        return RuntimeHelper.requireNonNull(constants$1556.__nextafterf$MH,"__nextafterf");
    }
    public static float __nextafterf ( float __x,  float __y) {
        var mh$ = __nextafterf$MH();
        try {
            return (float)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle remainderf$MH() {
        return RuntimeHelper.requireNonNull(constants$1557.remainderf$MH,"remainderf");
    }
    public static float remainderf ( float __x,  float __y) {
        var mh$ = remainderf$MH();
        try {
            return (float)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __remainderf$MH() {
        return RuntimeHelper.requireNonNull(constants$1557.__remainderf$MH,"__remainderf");
    }
    public static float __remainderf ( float __x,  float __y) {
        var mh$ = __remainderf$MH();
        try {
            return (float)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle scalbnf$MH() {
        return RuntimeHelper.requireNonNull(constants$1557.scalbnf$MH,"scalbnf");
    }
    public static float scalbnf ( float __x,  int __n) {
        var mh$ = scalbnf$MH();
        try {
            return (float)mh$.invokeExact(__x, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __scalbnf$MH() {
        return RuntimeHelper.requireNonNull(constants$1557.__scalbnf$MH,"__scalbnf");
    }
    public static float __scalbnf ( float __x,  int __n) {
        var mh$ = __scalbnf$MH();
        try {
            return (float)mh$.invokeExact(__x, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ilogbf$MH() {
        return RuntimeHelper.requireNonNull(constants$1557.ilogbf$MH,"ilogbf");
    }
    public static int ilogbf ( float __x) {
        var mh$ = ilogbf$MH();
        try {
            return (int)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __ilogbf$MH() {
        return RuntimeHelper.requireNonNull(constants$1557.__ilogbf$MH,"__ilogbf");
    }
    public static int __ilogbf ( float __x) {
        var mh$ = __ilogbf$MH();
        try {
            return (int)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle scalblnf$MH() {
        return RuntimeHelper.requireNonNull(constants$1558.scalblnf$MH,"scalblnf");
    }
    public static float scalblnf ( float __x,  long __n) {
        var mh$ = scalblnf$MH();
        try {
            return (float)mh$.invokeExact(__x, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __scalblnf$MH() {
        return RuntimeHelper.requireNonNull(constants$1558.__scalblnf$MH,"__scalblnf");
    }
    public static float __scalblnf ( float __x,  long __n) {
        var mh$ = __scalblnf$MH();
        try {
            return (float)mh$.invokeExact(__x, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle nearbyintf$MH() {
        return RuntimeHelper.requireNonNull(constants$1558.nearbyintf$MH,"nearbyintf");
    }
    public static float nearbyintf ( float __x) {
        var mh$ = nearbyintf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __nearbyintf$MH() {
        return RuntimeHelper.requireNonNull(constants$1558.__nearbyintf$MH,"__nearbyintf");
    }
    public static float __nearbyintf ( float __x) {
        var mh$ = __nearbyintf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle roundf$MH() {
        return RuntimeHelper.requireNonNull(constants$1558.roundf$MH,"roundf");
    }
    public static float roundf ( float __x) {
        var mh$ = roundf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __roundf$MH() {
        return RuntimeHelper.requireNonNull(constants$1558.__roundf$MH,"__roundf");
    }
    public static float __roundf ( float __x) {
        var mh$ = __roundf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle truncf$MH() {
        return RuntimeHelper.requireNonNull(constants$1559.truncf$MH,"truncf");
    }
    public static float truncf ( float __x) {
        var mh$ = truncf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __truncf$MH() {
        return RuntimeHelper.requireNonNull(constants$1559.__truncf$MH,"__truncf");
    }
    public static float __truncf ( float __x) {
        var mh$ = __truncf$MH();
        try {
            return (float)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle remquof$MH() {
        return RuntimeHelper.requireNonNull(constants$1559.remquof$MH,"remquof");
    }
    public static float remquof ( float __x,  float __y,  Addressable __quo) {
        var mh$ = remquof$MH();
        try {
            return (float)mh$.invokeExact(__x, __y, __quo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __remquof$MH() {
        return RuntimeHelper.requireNonNull(constants$1559.__remquof$MH,"__remquof");
    }
    public static float __remquof ( float __x,  float __y,  Addressable __quo) {
        var mh$ = __remquof$MH();
        try {
            return (float)mh$.invokeExact(__x, __y, __quo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lrintf$MH() {
        return RuntimeHelper.requireNonNull(constants$1559.lrintf$MH,"lrintf");
    }
    public static long lrintf ( float __x) {
        var mh$ = lrintf$MH();
        try {
            return (long)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __lrintf$MH() {
        return RuntimeHelper.requireNonNull(constants$1559.__lrintf$MH,"__lrintf");
    }
    public static long __lrintf ( float __x) {
        var mh$ = __lrintf$MH();
        try {
            return (long)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle llrintf$MH() {
        return RuntimeHelper.requireNonNull(constants$1560.llrintf$MH,"llrintf");
    }
    public static long llrintf ( float __x) {
        var mh$ = llrintf$MH();
        try {
            return (long)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __llrintf$MH() {
        return RuntimeHelper.requireNonNull(constants$1560.__llrintf$MH,"__llrintf");
    }
    public static long __llrintf ( float __x) {
        var mh$ = __llrintf$MH();
        try {
            return (long)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lroundf$MH() {
        return RuntimeHelper.requireNonNull(constants$1560.lroundf$MH,"lroundf");
    }
    public static long lroundf ( float __x) {
        var mh$ = lroundf$MH();
        try {
            return (long)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __lroundf$MH() {
        return RuntimeHelper.requireNonNull(constants$1560.__lroundf$MH,"__lroundf");
    }
    public static long __lroundf ( float __x) {
        var mh$ = __lroundf$MH();
        try {
            return (long)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle llroundf$MH() {
        return RuntimeHelper.requireNonNull(constants$1560.llroundf$MH,"llroundf");
    }
    public static long llroundf ( float __x) {
        var mh$ = llroundf$MH();
        try {
            return (long)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __llroundf$MH() {
        return RuntimeHelper.requireNonNull(constants$1560.__llroundf$MH,"__llroundf");
    }
    public static long __llroundf ( float __x) {
        var mh$ = __llroundf$MH();
        try {
            return (long)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fdimf$MH() {
        return RuntimeHelper.requireNonNull(constants$1561.fdimf$MH,"fdimf");
    }
    public static float fdimf ( float __x,  float __y) {
        var mh$ = fdimf$MH();
        try {
            return (float)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __fdimf$MH() {
        return RuntimeHelper.requireNonNull(constants$1561.__fdimf$MH,"__fdimf");
    }
    public static float __fdimf ( float __x,  float __y) {
        var mh$ = __fdimf$MH();
        try {
            return (float)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fmaxf$MH() {
        return RuntimeHelper.requireNonNull(constants$1561.fmaxf$MH,"fmaxf");
    }
    public static float fmaxf ( float __x,  float __y) {
        var mh$ = fmaxf$MH();
        try {
            return (float)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __fmaxf$MH() {
        return RuntimeHelper.requireNonNull(constants$1561.__fmaxf$MH,"__fmaxf");
    }
    public static float __fmaxf ( float __x,  float __y) {
        var mh$ = __fmaxf$MH();
        try {
            return (float)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fminf$MH() {
        return RuntimeHelper.requireNonNull(constants$1561.fminf$MH,"fminf");
    }
    public static float fminf ( float __x,  float __y) {
        var mh$ = fminf$MH();
        try {
            return (float)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __fminf$MH() {
        return RuntimeHelper.requireNonNull(constants$1561.__fminf$MH,"__fminf");
    }
    public static float __fminf ( float __x,  float __y) {
        var mh$ = __fminf$MH();
        try {
            return (float)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fmaf$MH() {
        return RuntimeHelper.requireNonNull(constants$1562.fmaf$MH,"fmaf");
    }
    public static float fmaf ( float __x,  float __y,  float __z) {
        var mh$ = fmaf$MH();
        try {
            return (float)mh$.invokeExact(__x, __y, __z);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __fmaf$MH() {
        return RuntimeHelper.requireNonNull(constants$1562.__fmaf$MH,"__fmaf");
    }
    public static float __fmaf ( float __x,  float __y,  float __z) {
        var mh$ = __fmaf$MH();
        try {
            return (float)mh$.invokeExact(__x, __y, __z);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle scalbf$MH() {
        return RuntimeHelper.requireNonNull(constants$1562.scalbf$MH,"scalbf");
    }
    public static float scalbf ( float __x,  float __n) {
        var mh$ = scalbf$MH();
        try {
            return (float)mh$.invokeExact(__x, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __scalbf$MH() {
        return RuntimeHelper.requireNonNull(constants$1562.__scalbf$MH,"__scalbf");
    }
    public static float __scalbf ( float __x,  float __n) {
        var mh$ = __scalbf$MH();
        try {
            return (float)mh$.invokeExact(__x, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout signgam$LAYOUT() {
        return constants$1562.signgam$LAYOUT;
    }
    public static VarHandle signgam$VH() {
        return constants$1562.signgam$VH;
    }
    public static MemorySegment signgam$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1562.signgam$SEGMENT,"signgam");
    }
    public static int signgam$get() {
        return (int) constants$1562.signgam$VH.get(RuntimeHelper.requireNonNull(constants$1562.signgam$SEGMENT, "signgam"));
    }
    public static void signgam$set( int x) {
        constants$1562.signgam$VH.set(RuntimeHelper.requireNonNull(constants$1562.signgam$SEGMENT, "signgam"), x);
    }
    public static MethodHandle graphene_simd4f_init$MH() {
        return RuntimeHelper.requireNonNull(constants$1562.graphene_simd4f_init$MH,"graphene_simd4f_init");
    }
    public static MemoryAddress graphene_simd4f_init ( float x,  float y,  float z,  float w) {
        var mh$ = graphene_simd4f_init$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(x, y, z, w);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_init_zero$MH() {
        return RuntimeHelper.requireNonNull(constants$1563.graphene_simd4f_init_zero$MH,"graphene_simd4f_init_zero");
    }
    public static MemoryAddress graphene_simd4f_init_zero () {
        var mh$ = graphene_simd4f_init_zero$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_init_4f$MH() {
        return RuntimeHelper.requireNonNull(constants$1563.graphene_simd4f_init_4f$MH,"graphene_simd4f_init_4f");
    }
    public static MemoryAddress graphene_simd4f_init_4f ( Addressable v) {
        var mh$ = graphene_simd4f_init_4f$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_init_3f$MH() {
        return RuntimeHelper.requireNonNull(constants$1563.graphene_simd4f_init_3f$MH,"graphene_simd4f_init_3f");
    }
    public static MemoryAddress graphene_simd4f_init_3f ( Addressable v) {
        var mh$ = graphene_simd4f_init_3f$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_init_2f$MH() {
        return RuntimeHelper.requireNonNull(constants$1563.graphene_simd4f_init_2f$MH,"graphene_simd4f_init_2f");
    }
    public static MemoryAddress graphene_simd4f_init_2f ( Addressable v) {
        var mh$ = graphene_simd4f_init_2f$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_dup_4f$MH() {
        return RuntimeHelper.requireNonNull(constants$1563.graphene_simd4f_dup_4f$MH,"graphene_simd4f_dup_4f");
    }
    public static void graphene_simd4f_dup_4f ( Addressable s,  Addressable v) {
        var mh$ = graphene_simd4f_dup_4f$MH();
        try {
            mh$.invokeExact(s, v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_dup_3f$MH() {
        return RuntimeHelper.requireNonNull(constants$1563.graphene_simd4f_dup_3f$MH,"graphene_simd4f_dup_3f");
    }
    public static void graphene_simd4f_dup_3f ( Addressable s,  Addressable v) {
        var mh$ = graphene_simd4f_dup_3f$MH();
        try {
            mh$.invokeExact(s, v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_dup_2f$MH() {
        return RuntimeHelper.requireNonNull(constants$1564.graphene_simd4f_dup_2f$MH,"graphene_simd4f_dup_2f");
    }
    public static void graphene_simd4f_dup_2f ( Addressable s,  Addressable v) {
        var mh$ = graphene_simd4f_dup_2f$MH();
        try {
            mh$.invokeExact(s, v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_get$MH() {
        return RuntimeHelper.requireNonNull(constants$1564.graphene_simd4f_get$MH,"graphene_simd4f_get");
    }
    public static float graphene_simd4f_get ( Addressable s,  int i) {
        var mh$ = graphene_simd4f_get$MH();
        try {
            return (float)mh$.invokeExact(s, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_get_x$MH() {
        return RuntimeHelper.requireNonNull(constants$1564.graphene_simd4f_get_x$MH,"graphene_simd4f_get_x");
    }
    public static float graphene_simd4f_get_x ( Addressable s) {
        var mh$ = graphene_simd4f_get_x$MH();
        try {
            return (float)mh$.invokeExact(s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_get_y$MH() {
        return RuntimeHelper.requireNonNull(constants$1564.graphene_simd4f_get_y$MH,"graphene_simd4f_get_y");
    }
    public static float graphene_simd4f_get_y ( Addressable s) {
        var mh$ = graphene_simd4f_get_y$MH();
        try {
            return (float)mh$.invokeExact(s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_get_z$MH() {
        return RuntimeHelper.requireNonNull(constants$1564.graphene_simd4f_get_z$MH,"graphene_simd4f_get_z");
    }
    public static float graphene_simd4f_get_z ( Addressable s) {
        var mh$ = graphene_simd4f_get_z$MH();
        try {
            return (float)mh$.invokeExact(s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_get_w$MH() {
        return RuntimeHelper.requireNonNull(constants$1564.graphene_simd4f_get_w$MH,"graphene_simd4f_get_w");
    }
    public static float graphene_simd4f_get_w ( Addressable s) {
        var mh$ = graphene_simd4f_get_w$MH();
        try {
            return (float)mh$.invokeExact(s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_splat$MH() {
        return RuntimeHelper.requireNonNull(constants$1565.graphene_simd4f_splat$MH,"graphene_simd4f_splat");
    }
    public static MemoryAddress graphene_simd4f_splat ( float v) {
        var mh$ = graphene_simd4f_splat$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_splat_x$MH() {
        return RuntimeHelper.requireNonNull(constants$1565.graphene_simd4f_splat_x$MH,"graphene_simd4f_splat_x");
    }
    public static MemoryAddress graphene_simd4f_splat_x ( Addressable s) {
        var mh$ = graphene_simd4f_splat_x$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_splat_y$MH() {
        return RuntimeHelper.requireNonNull(constants$1565.graphene_simd4f_splat_y$MH,"graphene_simd4f_splat_y");
    }
    public static MemoryAddress graphene_simd4f_splat_y ( Addressable s) {
        var mh$ = graphene_simd4f_splat_y$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_splat_z$MH() {
        return RuntimeHelper.requireNonNull(constants$1565.graphene_simd4f_splat_z$MH,"graphene_simd4f_splat_z");
    }
    public static MemoryAddress graphene_simd4f_splat_z ( Addressable s) {
        var mh$ = graphene_simd4f_splat_z$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_splat_w$MH() {
        return RuntimeHelper.requireNonNull(constants$1565.graphene_simd4f_splat_w$MH,"graphene_simd4f_splat_w");
    }
    public static MemoryAddress graphene_simd4f_splat_w ( Addressable s) {
        var mh$ = graphene_simd4f_splat_w$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_add$MH() {
        return RuntimeHelper.requireNonNull(constants$1565.graphene_simd4f_add$MH,"graphene_simd4f_add");
    }
    public static MemoryAddress graphene_simd4f_add ( Addressable a,  Addressable b) {
        var mh$ = graphene_simd4f_add$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_sub$MH() {
        return RuntimeHelper.requireNonNull(constants$1566.graphene_simd4f_sub$MH,"graphene_simd4f_sub");
    }
    public static MemoryAddress graphene_simd4f_sub ( Addressable a,  Addressable b) {
        var mh$ = graphene_simd4f_sub$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_mul$MH() {
        return RuntimeHelper.requireNonNull(constants$1566.graphene_simd4f_mul$MH,"graphene_simd4f_mul");
    }
    public static MemoryAddress graphene_simd4f_mul ( Addressable a,  Addressable b) {
        var mh$ = graphene_simd4f_mul$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_div$MH() {
        return RuntimeHelper.requireNonNull(constants$1566.graphene_simd4f_div$MH,"graphene_simd4f_div");
    }
    public static MemoryAddress graphene_simd4f_div ( Addressable a,  Addressable b) {
        var mh$ = graphene_simd4f_div$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_sqrt$MH() {
        return RuntimeHelper.requireNonNull(constants$1566.graphene_simd4f_sqrt$MH,"graphene_simd4f_sqrt");
    }
    public static MemoryAddress graphene_simd4f_sqrt ( Addressable s) {
        var mh$ = graphene_simd4f_sqrt$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_reciprocal$MH() {
        return RuntimeHelper.requireNonNull(constants$1566.graphene_simd4f_reciprocal$MH,"graphene_simd4f_reciprocal");
    }
    public static MemoryAddress graphene_simd4f_reciprocal ( Addressable s) {
        var mh$ = graphene_simd4f_reciprocal$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_rsqrt$MH() {
        return RuntimeHelper.requireNonNull(constants$1566.graphene_simd4f_rsqrt$MH,"graphene_simd4f_rsqrt");
    }
    public static MemoryAddress graphene_simd4f_rsqrt ( Addressable s) {
        var mh$ = graphene_simd4f_rsqrt$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_cross3$MH() {
        return RuntimeHelper.requireNonNull(constants$1567.graphene_simd4f_cross3$MH,"graphene_simd4f_cross3");
    }
    public static MemoryAddress graphene_simd4f_cross3 ( Addressable a,  Addressable b) {
        var mh$ = graphene_simd4f_cross3$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_dot3$MH() {
        return RuntimeHelper.requireNonNull(constants$1567.graphene_simd4f_dot3$MH,"graphene_simd4f_dot3");
    }
    public static MemoryAddress graphene_simd4f_dot3 ( Addressable a,  Addressable b) {
        var mh$ = graphene_simd4f_dot3$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_dot3_scalar$MH() {
        return RuntimeHelper.requireNonNull(constants$1567.graphene_simd4f_dot3_scalar$MH,"graphene_simd4f_dot3_scalar");
    }
    public static float graphene_simd4f_dot3_scalar ( Addressable a,  Addressable b) {
        var mh$ = graphene_simd4f_dot3_scalar$MH();
        try {
            return (float)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_min$MH() {
        return RuntimeHelper.requireNonNull(constants$1567.graphene_simd4f_min$MH,"graphene_simd4f_min");
    }
    public static MemoryAddress graphene_simd4f_min ( Addressable a,  Addressable b) {
        var mh$ = graphene_simd4f_min$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_max$MH() {
        return RuntimeHelper.requireNonNull(constants$1567.graphene_simd4f_max$MH,"graphene_simd4f_max");
    }
    public static MemoryAddress graphene_simd4f_max ( Addressable a,  Addressable b) {
        var mh$ = graphene_simd4f_max$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_shuffle_wxyz$MH() {
        return RuntimeHelper.requireNonNull(constants$1567.graphene_simd4f_shuffle_wxyz$MH,"graphene_simd4f_shuffle_wxyz");
    }
    public static MemoryAddress graphene_simd4f_shuffle_wxyz ( Addressable s) {
        var mh$ = graphene_simd4f_shuffle_wxyz$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_shuffle_zwxy$MH() {
        return RuntimeHelper.requireNonNull(constants$1568.graphene_simd4f_shuffle_zwxy$MH,"graphene_simd4f_shuffle_zwxy");
    }
    public static MemoryAddress graphene_simd4f_shuffle_zwxy ( Addressable s) {
        var mh$ = graphene_simd4f_shuffle_zwxy$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_shuffle_yzwx$MH() {
        return RuntimeHelper.requireNonNull(constants$1568.graphene_simd4f_shuffle_yzwx$MH,"graphene_simd4f_shuffle_yzwx");
    }
    public static MemoryAddress graphene_simd4f_shuffle_yzwx ( Addressable s) {
        var mh$ = graphene_simd4f_shuffle_yzwx$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_zero_w$MH() {
        return RuntimeHelper.requireNonNull(constants$1568.graphene_simd4f_zero_w$MH,"graphene_simd4f_zero_w");
    }
    public static MemoryAddress graphene_simd4f_zero_w ( Addressable s) {
        var mh$ = graphene_simd4f_zero_w$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_zero_zw$MH() {
        return RuntimeHelper.requireNonNull(constants$1568.graphene_simd4f_zero_zw$MH,"graphene_simd4f_zero_zw");
    }
    public static MemoryAddress graphene_simd4f_zero_zw ( Addressable s) {
        var mh$ = graphene_simd4f_zero_zw$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_merge_high$MH() {
        return RuntimeHelper.requireNonNull(constants$1568.graphene_simd4f_merge_high$MH,"graphene_simd4f_merge_high");
    }
    public static MemoryAddress graphene_simd4f_merge_high ( Addressable a,  Addressable b) {
        var mh$ = graphene_simd4f_merge_high$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_merge_low$MH() {
        return RuntimeHelper.requireNonNull(constants$1568.graphene_simd4f_merge_low$MH,"graphene_simd4f_merge_low");
    }
    public static MemoryAddress graphene_simd4f_merge_low ( Addressable a,  Addressable b) {
        var mh$ = graphene_simd4f_merge_low$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_merge_w$MH() {
        return RuntimeHelper.requireNonNull(constants$1569.graphene_simd4f_merge_w$MH,"graphene_simd4f_merge_w");
    }
    public static MemoryAddress graphene_simd4f_merge_w ( Addressable s,  float v) {
        var mh$ = graphene_simd4f_merge_w$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(s, v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_flip_sign_0101$MH() {
        return RuntimeHelper.requireNonNull(constants$1569.graphene_simd4f_flip_sign_0101$MH,"graphene_simd4f_flip_sign_0101");
    }
    public static MemoryAddress graphene_simd4f_flip_sign_0101 ( Addressable s) {
        var mh$ = graphene_simd4f_flip_sign_0101$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_flip_sign_1010$MH() {
        return RuntimeHelper.requireNonNull(constants$1569.graphene_simd4f_flip_sign_1010$MH,"graphene_simd4f_flip_sign_1010");
    }
    public static MemoryAddress graphene_simd4f_flip_sign_1010 ( Addressable s) {
        var mh$ = graphene_simd4f_flip_sign_1010$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_cmp_eq$MH() {
        return RuntimeHelper.requireNonNull(constants$1569.graphene_simd4f_cmp_eq$MH,"graphene_simd4f_cmp_eq");
    }
    public static boolean graphene_simd4f_cmp_eq ( Addressable a,  Addressable b) {
        var mh$ = graphene_simd4f_cmp_eq$MH();
        try {
            return (boolean)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_cmp_neq$MH() {
        return RuntimeHelper.requireNonNull(constants$1569.graphene_simd4f_cmp_neq$MH,"graphene_simd4f_cmp_neq");
    }
    public static boolean graphene_simd4f_cmp_neq ( Addressable a,  Addressable b) {
        var mh$ = graphene_simd4f_cmp_neq$MH();
        try {
            return (boolean)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_cmp_lt$MH() {
        return RuntimeHelper.requireNonNull(constants$1569.graphene_simd4f_cmp_lt$MH,"graphene_simd4f_cmp_lt");
    }
    public static boolean graphene_simd4f_cmp_lt ( Addressable a,  Addressable b) {
        var mh$ = graphene_simd4f_cmp_lt$MH();
        try {
            return (boolean)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_cmp_le$MH() {
        return RuntimeHelper.requireNonNull(constants$1570.graphene_simd4f_cmp_le$MH,"graphene_simd4f_cmp_le");
    }
    public static boolean graphene_simd4f_cmp_le ( Addressable a,  Addressable b) {
        var mh$ = graphene_simd4f_cmp_le$MH();
        try {
            return (boolean)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_cmp_ge$MH() {
        return RuntimeHelper.requireNonNull(constants$1570.graphene_simd4f_cmp_ge$MH,"graphene_simd4f_cmp_ge");
    }
    public static boolean graphene_simd4f_cmp_ge ( Addressable a,  Addressable b) {
        var mh$ = graphene_simd4f_cmp_ge$MH();
        try {
            return (boolean)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_cmp_gt$MH() {
        return RuntimeHelper.requireNonNull(constants$1570.graphene_simd4f_cmp_gt$MH,"graphene_simd4f_cmp_gt");
    }
    public static boolean graphene_simd4f_cmp_gt ( Addressable a,  Addressable b) {
        var mh$ = graphene_simd4f_cmp_gt$MH();
        try {
            return (boolean)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_neg$MH() {
        return RuntimeHelper.requireNonNull(constants$1570.graphene_simd4f_neg$MH,"graphene_simd4f_neg");
    }
    public static MemoryAddress graphene_simd4f_neg ( Addressable s) {
        var mh$ = graphene_simd4f_neg$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_madd$MH() {
        return RuntimeHelper.requireNonNull(constants$1570.graphene_simd4f_madd$MH,"graphene_simd4f_madd");
    }
    public static MemoryAddress graphene_simd4f_madd ( Addressable m1,  Addressable m2,  Addressable a) {
        var mh$ = graphene_simd4f_madd$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(m1, m2, a);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_sum$MH() {
        return RuntimeHelper.requireNonNull(constants$1570.graphene_simd4f_sum$MH,"graphene_simd4f_sum");
    }
    public static MemoryAddress graphene_simd4f_sum ( Addressable v) {
        var mh$ = graphene_simd4f_sum$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_sum_scalar$MH() {
        return RuntimeHelper.requireNonNull(constants$1571.graphene_simd4f_sum_scalar$MH,"graphene_simd4f_sum_scalar");
    }
    public static float graphene_simd4f_sum_scalar ( Addressable v) {
        var mh$ = graphene_simd4f_sum_scalar$MH();
        try {
            return (float)mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_dot4$MH() {
        return RuntimeHelper.requireNonNull(constants$1571.graphene_simd4f_dot4$MH,"graphene_simd4f_dot4");
    }
    public static MemoryAddress graphene_simd4f_dot4 ( Addressable a,  Addressable b) {
        var mh$ = graphene_simd4f_dot4$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_dot2$MH() {
        return RuntimeHelper.requireNonNull(constants$1571.graphene_simd4f_dot2$MH,"graphene_simd4f_dot2");
    }
    public static MemoryAddress graphene_simd4f_dot2 ( Addressable a,  Addressable b) {
        var mh$ = graphene_simd4f_dot2$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_length4$MH() {
        return RuntimeHelper.requireNonNull(constants$1571.graphene_simd4f_length4$MH,"graphene_simd4f_length4");
    }
    public static MemoryAddress graphene_simd4f_length4 ( Addressable v) {
        var mh$ = graphene_simd4f_length4$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_length3$MH() {
        return RuntimeHelper.requireNonNull(constants$1571.graphene_simd4f_length3$MH,"graphene_simd4f_length3");
    }
    public static MemoryAddress graphene_simd4f_length3 ( Addressable v) {
        var mh$ = graphene_simd4f_length3$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_length2$MH() {
        return RuntimeHelper.requireNonNull(constants$1571.graphene_simd4f_length2$MH,"graphene_simd4f_length2");
    }
    public static MemoryAddress graphene_simd4f_length2 ( Addressable v) {
        var mh$ = graphene_simd4f_length2$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_normalize4$MH() {
        return RuntimeHelper.requireNonNull(constants$1572.graphene_simd4f_normalize4$MH,"graphene_simd4f_normalize4");
    }
    public static MemoryAddress graphene_simd4f_normalize4 ( Addressable v) {
        var mh$ = graphene_simd4f_normalize4$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_normalize3$MH() {
        return RuntimeHelper.requireNonNull(constants$1572.graphene_simd4f_normalize3$MH,"graphene_simd4f_normalize3");
    }
    public static MemoryAddress graphene_simd4f_normalize3 ( Addressable v) {
        var mh$ = graphene_simd4f_normalize3$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_normalize2$MH() {
        return RuntimeHelper.requireNonNull(constants$1572.graphene_simd4f_normalize2$MH,"graphene_simd4f_normalize2");
    }
    public static MemoryAddress graphene_simd4f_normalize2 ( Addressable v) {
        var mh$ = graphene_simd4f_normalize2$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_is_zero4$MH() {
        return RuntimeHelper.requireNonNull(constants$1572.graphene_simd4f_is_zero4$MH,"graphene_simd4f_is_zero4");
    }
    public static boolean graphene_simd4f_is_zero4 ( Addressable v) {
        var mh$ = graphene_simd4f_is_zero4$MH();
        try {
            return (boolean)mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_is_zero3$MH() {
        return RuntimeHelper.requireNonNull(constants$1572.graphene_simd4f_is_zero3$MH,"graphene_simd4f_is_zero3");
    }
    public static boolean graphene_simd4f_is_zero3 ( Addressable v) {
        var mh$ = graphene_simd4f_is_zero3$MH();
        try {
            return (boolean)mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_is_zero2$MH() {
        return RuntimeHelper.requireNonNull(constants$1572.graphene_simd4f_is_zero2$MH,"graphene_simd4f_is_zero2");
    }
    public static boolean graphene_simd4f_is_zero2 ( Addressable v) {
        var mh$ = graphene_simd4f_is_zero2$MH();
        try {
            return (boolean)mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_interpolate$MH() {
        return RuntimeHelper.requireNonNull(constants$1573.graphene_simd4f_interpolate$MH,"graphene_simd4f_interpolate");
    }
    public static MemoryAddress graphene_simd4f_interpolate ( Addressable a,  Addressable b,  float f) {
        var mh$ = graphene_simd4f_interpolate$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(a, b, f);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_clamp$MH() {
        return RuntimeHelper.requireNonNull(constants$1573.graphene_simd4f_clamp$MH,"graphene_simd4f_clamp");
    }
    public static MemoryAddress graphene_simd4f_clamp ( Addressable v,  Addressable min,  Addressable max) {
        var mh$ = graphene_simd4f_clamp$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(v, min, max);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_clamp_scalar$MH() {
        return RuntimeHelper.requireNonNull(constants$1573.graphene_simd4f_clamp_scalar$MH,"graphene_simd4f_clamp_scalar");
    }
    public static MemoryAddress graphene_simd4f_clamp_scalar ( Addressable v,  float min,  float max) {
        var mh$ = graphene_simd4f_clamp_scalar$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(v, min, max);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_min_val$MH() {
        return RuntimeHelper.requireNonNull(constants$1573.graphene_simd4f_min_val$MH,"graphene_simd4f_min_val");
    }
    public static MemoryAddress graphene_simd4f_min_val ( Addressable v) {
        var mh$ = graphene_simd4f_min_val$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4f_max_val$MH() {
        return RuntimeHelper.requireNonNull(constants$1573.graphene_simd4f_max_val$MH,"graphene_simd4f_max_val");
    }
    public static MemoryAddress graphene_simd4f_max_val ( Addressable v) {
        var mh$ = graphene_simd4f_max_val$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4x4f_init$MH() {
        return RuntimeHelper.requireNonNull(constants$1573.graphene_simd4x4f_init$MH,"graphene_simd4x4f_init");
    }
    public static MemorySegment graphene_simd4x4f_init ( SegmentAllocator allocator,  Addressable x,  Addressable y,  Addressable z,  Addressable w) {
        var mh$ = graphene_simd4x4f_init$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(allocator, x, y, z, w);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4x4f_init_identity$MH() {
        return RuntimeHelper.requireNonNull(constants$1574.graphene_simd4x4f_init_identity$MH,"graphene_simd4x4f_init_identity");
    }
    public static void graphene_simd4x4f_init_identity ( Addressable m) {
        var mh$ = graphene_simd4x4f_init_identity$MH();
        try {
            mh$.invokeExact(m);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4x4f_init_from_float$MH() {
        return RuntimeHelper.requireNonNull(constants$1574.graphene_simd4x4f_init_from_float$MH,"graphene_simd4x4f_init_from_float");
    }
    public static void graphene_simd4x4f_init_from_float ( Addressable m,  Addressable f) {
        var mh$ = graphene_simd4x4f_init_from_float$MH();
        try {
            mh$.invokeExact(m, f);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4x4f_to_float$MH() {
        return RuntimeHelper.requireNonNull(constants$1574.graphene_simd4x4f_to_float$MH,"graphene_simd4x4f_to_float");
    }
    public static void graphene_simd4x4f_to_float ( Addressable m,  Addressable v) {
        var mh$ = graphene_simd4x4f_to_float$MH();
        try {
            mh$.invokeExact(m, v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4x4f_transpose_in_place$MH() {
        return RuntimeHelper.requireNonNull(constants$1574.graphene_simd4x4f_transpose_in_place$MH,"graphene_simd4x4f_transpose_in_place");
    }
    public static void graphene_simd4x4f_transpose_in_place ( Addressable s) {
        var mh$ = graphene_simd4x4f_transpose_in_place$MH();
        try {
            mh$.invokeExact(s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4x4f_sum$MH() {
        return RuntimeHelper.requireNonNull(constants$1574.graphene_simd4x4f_sum$MH,"graphene_simd4x4f_sum");
    }
    public static void graphene_simd4x4f_sum ( Addressable a,  Addressable res) {
        var mh$ = graphene_simd4x4f_sum$MH();
        try {
            mh$.invokeExact(a, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4x4f_vec4_mul$MH() {
        return RuntimeHelper.requireNonNull(constants$1574.graphene_simd4x4f_vec4_mul$MH,"graphene_simd4x4f_vec4_mul");
    }
    public static void graphene_simd4x4f_vec4_mul ( Addressable a,  Addressable b,  Addressable res) {
        var mh$ = graphene_simd4x4f_vec4_mul$MH();
        try {
            mh$.invokeExact(a, b, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4x4f_vec3_mul$MH() {
        return RuntimeHelper.requireNonNull(constants$1575.graphene_simd4x4f_vec3_mul$MH,"graphene_simd4x4f_vec3_mul");
    }
    public static void graphene_simd4x4f_vec3_mul ( Addressable m,  Addressable v,  Addressable res) {
        var mh$ = graphene_simd4x4f_vec3_mul$MH();
        try {
            mh$.invokeExact(m, v, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4x4f_point3_mul$MH() {
        return RuntimeHelper.requireNonNull(constants$1575.graphene_simd4x4f_point3_mul$MH,"graphene_simd4x4f_point3_mul");
    }
    public static void graphene_simd4x4f_point3_mul ( Addressable m,  Addressable p,  Addressable res) {
        var mh$ = graphene_simd4x4f_point3_mul$MH();
        try {
            mh$.invokeExact(m, p, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4x4f_transpose$MH() {
        return RuntimeHelper.requireNonNull(constants$1575.graphene_simd4x4f_transpose$MH,"graphene_simd4x4f_transpose");
    }
    public static void graphene_simd4x4f_transpose ( Addressable s,  Addressable res) {
        var mh$ = graphene_simd4x4f_transpose$MH();
        try {
            mh$.invokeExact(s, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4x4f_inv_ortho_vec3_mul$MH() {
        return RuntimeHelper.requireNonNull(constants$1575.graphene_simd4x4f_inv_ortho_vec3_mul$MH,"graphene_simd4x4f_inv_ortho_vec3_mul");
    }
    public static void graphene_simd4x4f_inv_ortho_vec3_mul ( Addressable a,  Addressable b,  Addressable res) {
        var mh$ = graphene_simd4x4f_inv_ortho_vec3_mul$MH();
        try {
            mh$.invokeExact(a, b, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4x4f_inv_ortho_point3_mul$MH() {
        return RuntimeHelper.requireNonNull(constants$1575.graphene_simd4x4f_inv_ortho_point3_mul$MH,"graphene_simd4x4f_inv_ortho_point3_mul");
    }
    public static void graphene_simd4x4f_inv_ortho_point3_mul ( Addressable a,  Addressable b,  Addressable res) {
        var mh$ = graphene_simd4x4f_inv_ortho_point3_mul$MH();
        try {
            mh$.invokeExact(a, b, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4x4f_matrix_mul$MH() {
        return RuntimeHelper.requireNonNull(constants$1575.graphene_simd4x4f_matrix_mul$MH,"graphene_simd4x4f_matrix_mul");
    }
    public static void graphene_simd4x4f_matrix_mul ( Addressable a,  Addressable b,  Addressable res) {
        var mh$ = graphene_simd4x4f_matrix_mul$MH();
        try {
            mh$.invokeExact(a, b, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4x4f_init_perspective$MH() {
        return RuntimeHelper.requireNonNull(constants$1576.graphene_simd4x4f_init_perspective$MH,"graphene_simd4x4f_init_perspective");
    }
    public static void graphene_simd4x4f_init_perspective ( Addressable m,  float fovy_rad,  float aspect,  float z_near,  float z_far) {
        var mh$ = graphene_simd4x4f_init_perspective$MH();
        try {
            mh$.invokeExact(m, fovy_rad, aspect, z_near, z_far);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4x4f_init_ortho$MH() {
        return RuntimeHelper.requireNonNull(constants$1576.graphene_simd4x4f_init_ortho$MH,"graphene_simd4x4f_init_ortho");
    }
    public static void graphene_simd4x4f_init_ortho ( Addressable m,  float left,  float right,  float bottom,  float top,  float z_near,  float z_far) {
        var mh$ = graphene_simd4x4f_init_ortho$MH();
        try {
            mh$.invokeExact(m, left, right, bottom, top, z_near, z_far);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4x4f_init_look_at$MH() {
        return RuntimeHelper.requireNonNull(constants$1576.graphene_simd4x4f_init_look_at$MH,"graphene_simd4x4f_init_look_at");
    }
    public static void graphene_simd4x4f_init_look_at ( Addressable m,  Addressable eye,  Addressable center,  Addressable up) {
        var mh$ = graphene_simd4x4f_init_look_at$MH();
        try {
            mh$.invokeExact(m, eye, center, up);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4x4f_init_frustum$MH() {
        return RuntimeHelper.requireNonNull(constants$1576.graphene_simd4x4f_init_frustum$MH,"graphene_simd4x4f_init_frustum");
    }
    public static void graphene_simd4x4f_init_frustum ( Addressable m,  float left,  float right,  float bottom,  float top,  float z_near,  float z_far) {
        var mh$ = graphene_simd4x4f_init_frustum$MH();
        try {
            mh$.invokeExact(m, left, right, bottom, top, z_near, z_far);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4x4f_perspective$MH() {
        return RuntimeHelper.requireNonNull(constants$1576.graphene_simd4x4f_perspective$MH,"graphene_simd4x4f_perspective");
    }
    public static void graphene_simd4x4f_perspective ( Addressable m,  float depth) {
        var mh$ = graphene_simd4x4f_perspective$MH();
        try {
            mh$.invokeExact(m, depth);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4x4f_translation$MH() {
        return RuntimeHelper.requireNonNull(constants$1576.graphene_simd4x4f_translation$MH,"graphene_simd4x4f_translation");
    }
    public static void graphene_simd4x4f_translation ( Addressable m,  float x,  float y,  float z) {
        var mh$ = graphene_simd4x4f_translation$MH();
        try {
            mh$.invokeExact(m, x, y, z);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4x4f_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$1577.graphene_simd4x4f_scale$MH,"graphene_simd4x4f_scale");
    }
    public static void graphene_simd4x4f_scale ( Addressable m,  float x,  float y,  float z) {
        var mh$ = graphene_simd4x4f_scale$MH();
        try {
            mh$.invokeExact(m, x, y, z);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4x4f_rotation$MH() {
        return RuntimeHelper.requireNonNull(constants$1577.graphene_simd4x4f_rotation$MH,"graphene_simd4x4f_rotation");
    }
    public static void graphene_simd4x4f_rotation ( Addressable m,  float rad,  Addressable axis) {
        var mh$ = graphene_simd4x4f_rotation$MH();
        try {
            mh$.invokeExact(m, rad, axis);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4x4f_add$MH() {
        return RuntimeHelper.requireNonNull(constants$1577.graphene_simd4x4f_add$MH,"graphene_simd4x4f_add");
    }
    public static void graphene_simd4x4f_add ( Addressable a,  Addressable b,  Addressable res) {
        var mh$ = graphene_simd4x4f_add$MH();
        try {
            mh$.invokeExact(a, b, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4x4f_sub$MH() {
        return RuntimeHelper.requireNonNull(constants$1577.graphene_simd4x4f_sub$MH,"graphene_simd4x4f_sub");
    }
    public static void graphene_simd4x4f_sub ( Addressable a,  Addressable b,  Addressable res) {
        var mh$ = graphene_simd4x4f_sub$MH();
        try {
            mh$.invokeExact(a, b, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4x4f_mul$MH() {
        return RuntimeHelper.requireNonNull(constants$1577.graphene_simd4x4f_mul$MH,"graphene_simd4x4f_mul");
    }
    public static void graphene_simd4x4f_mul ( Addressable a,  Addressable b,  Addressable res) {
        var mh$ = graphene_simd4x4f_mul$MH();
        try {
            mh$.invokeExact(a, b, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4x4f_div$MH() {
        return RuntimeHelper.requireNonNull(constants$1577.graphene_simd4x4f_div$MH,"graphene_simd4x4f_div");
    }
    public static void graphene_simd4x4f_div ( Addressable a,  Addressable b,  Addressable res) {
        var mh$ = graphene_simd4x4f_div$MH();
        try {
            mh$.invokeExact(a, b, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4x4f_inverse$MH() {
        return RuntimeHelper.requireNonNull(constants$1578.graphene_simd4x4f_inverse$MH,"graphene_simd4x4f_inverse");
    }
    public static boolean graphene_simd4x4f_inverse ( Addressable m,  Addressable res) {
        var mh$ = graphene_simd4x4f_inverse$MH();
        try {
            return (boolean)mh$.invokeExact(m, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4x4f_determinant$MH() {
        return RuntimeHelper.requireNonNull(constants$1578.graphene_simd4x4f_determinant$MH,"graphene_simd4x4f_determinant");
    }
    public static void graphene_simd4x4f_determinant ( Addressable m,  Addressable det_r,  Addressable invdet_r) {
        var mh$ = graphene_simd4x4f_determinant$MH();
        try {
            mh$.invokeExact(m, det_r, invdet_r);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4x4f_is_identity$MH() {
        return RuntimeHelper.requireNonNull(constants$1578.graphene_simd4x4f_is_identity$MH,"graphene_simd4x4f_is_identity");
    }
    public static boolean graphene_simd4x4f_is_identity ( Addressable m) {
        var mh$ = graphene_simd4x4f_is_identity$MH();
        try {
            return (boolean)mh$.invokeExact(m);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_simd4x4f_is_2d$MH() {
        return RuntimeHelper.requireNonNull(constants$1578.graphene_simd4x4f_is_2d$MH,"graphene_simd4x4f_is_2d");
    }
    public static boolean graphene_simd4x4f_is_2d ( Addressable m) {
        var mh$ = graphene_simd4x4f_is_2d$MH();
        try {
            return (boolean)mh$.invokeExact(m);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec2_alloc$MH() {
        return RuntimeHelper.requireNonNull(constants$1578.graphene_vec2_alloc$MH,"graphene_vec2_alloc");
    }
    public static MemoryAddress graphene_vec2_alloc () {
        var mh$ = graphene_vec2_alloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec2_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1578.graphene_vec2_free$MH,"graphene_vec2_free");
    }
    public static void graphene_vec2_free ( Addressable v) {
        var mh$ = graphene_vec2_free$MH();
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec2_init$MH() {
        return RuntimeHelper.requireNonNull(constants$1579.graphene_vec2_init$MH,"graphene_vec2_init");
    }
    public static MemoryAddress graphene_vec2_init ( Addressable v,  float x,  float y) {
        var mh$ = graphene_vec2_init$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(v, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec2_init_from_vec2$MH() {
        return RuntimeHelper.requireNonNull(constants$1579.graphene_vec2_init_from_vec2$MH,"graphene_vec2_init_from_vec2");
    }
    public static MemoryAddress graphene_vec2_init_from_vec2 ( Addressable v,  Addressable src) {
        var mh$ = graphene_vec2_init_from_vec2$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(v, src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec2_init_from_float$MH() {
        return RuntimeHelper.requireNonNull(constants$1579.graphene_vec2_init_from_float$MH,"graphene_vec2_init_from_float");
    }
    public static MemoryAddress graphene_vec2_init_from_float ( Addressable v,  Addressable src) {
        var mh$ = graphene_vec2_init_from_float$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(v, src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec2_to_float$MH() {
        return RuntimeHelper.requireNonNull(constants$1579.graphene_vec2_to_float$MH,"graphene_vec2_to_float");
    }
    public static void graphene_vec2_to_float ( Addressable v,  Addressable dest) {
        var mh$ = graphene_vec2_to_float$MH();
        try {
            mh$.invokeExact(v, dest);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec2_add$MH() {
        return RuntimeHelper.requireNonNull(constants$1579.graphene_vec2_add$MH,"graphene_vec2_add");
    }
    public static void graphene_vec2_add ( Addressable a,  Addressable b,  Addressable res) {
        var mh$ = graphene_vec2_add$MH();
        try {
            mh$.invokeExact(a, b, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec2_subtract$MH() {
        return RuntimeHelper.requireNonNull(constants$1579.graphene_vec2_subtract$MH,"graphene_vec2_subtract");
    }
    public static void graphene_vec2_subtract ( Addressable a,  Addressable b,  Addressable res) {
        var mh$ = graphene_vec2_subtract$MH();
        try {
            mh$.invokeExact(a, b, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec2_multiply$MH() {
        return RuntimeHelper.requireNonNull(constants$1580.graphene_vec2_multiply$MH,"graphene_vec2_multiply");
    }
    public static void graphene_vec2_multiply ( Addressable a,  Addressable b,  Addressable res) {
        var mh$ = graphene_vec2_multiply$MH();
        try {
            mh$.invokeExact(a, b, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec2_divide$MH() {
        return RuntimeHelper.requireNonNull(constants$1580.graphene_vec2_divide$MH,"graphene_vec2_divide");
    }
    public static void graphene_vec2_divide ( Addressable a,  Addressable b,  Addressable res) {
        var mh$ = graphene_vec2_divide$MH();
        try {
            mh$.invokeExact(a, b, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec2_dot$MH() {
        return RuntimeHelper.requireNonNull(constants$1580.graphene_vec2_dot$MH,"graphene_vec2_dot");
    }
    public static float graphene_vec2_dot ( Addressable a,  Addressable b) {
        var mh$ = graphene_vec2_dot$MH();
        try {
            return (float)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec2_length$MH() {
        return RuntimeHelper.requireNonNull(constants$1580.graphene_vec2_length$MH,"graphene_vec2_length");
    }
    public static float graphene_vec2_length ( Addressable v) {
        var mh$ = graphene_vec2_length$MH();
        try {
            return (float)mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec2_normalize$MH() {
        return RuntimeHelper.requireNonNull(constants$1580.graphene_vec2_normalize$MH,"graphene_vec2_normalize");
    }
    public static void graphene_vec2_normalize ( Addressable v,  Addressable res) {
        var mh$ = graphene_vec2_normalize$MH();
        try {
            mh$.invokeExact(v, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec2_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$1580.graphene_vec2_scale$MH,"graphene_vec2_scale");
    }
    public static void graphene_vec2_scale ( Addressable v,  float factor,  Addressable res) {
        var mh$ = graphene_vec2_scale$MH();
        try {
            mh$.invokeExact(v, factor, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec2_negate$MH() {
        return RuntimeHelper.requireNonNull(constants$1581.graphene_vec2_negate$MH,"graphene_vec2_negate");
    }
    public static void graphene_vec2_negate ( Addressable v,  Addressable res) {
        var mh$ = graphene_vec2_negate$MH();
        try {
            mh$.invokeExact(v, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec2_near$MH() {
        return RuntimeHelper.requireNonNull(constants$1581.graphene_vec2_near$MH,"graphene_vec2_near");
    }
    public static boolean graphene_vec2_near ( Addressable v1,  Addressable v2,  float epsilon) {
        var mh$ = graphene_vec2_near$MH();
        try {
            return (boolean)mh$.invokeExact(v1, v2, epsilon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec2_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$1581.graphene_vec2_equal$MH,"graphene_vec2_equal");
    }
    public static boolean graphene_vec2_equal ( Addressable v1,  Addressable v2) {
        var mh$ = graphene_vec2_equal$MH();
        try {
            return (boolean)mh$.invokeExact(v1, v2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec2_min$MH() {
        return RuntimeHelper.requireNonNull(constants$1581.graphene_vec2_min$MH,"graphene_vec2_min");
    }
    public static void graphene_vec2_min ( Addressable a,  Addressable b,  Addressable res) {
        var mh$ = graphene_vec2_min$MH();
        try {
            mh$.invokeExact(a, b, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec2_max$MH() {
        return RuntimeHelper.requireNonNull(constants$1581.graphene_vec2_max$MH,"graphene_vec2_max");
    }
    public static void graphene_vec2_max ( Addressable a,  Addressable b,  Addressable res) {
        var mh$ = graphene_vec2_max$MH();
        try {
            mh$.invokeExact(a, b, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec2_interpolate$MH() {
        return RuntimeHelper.requireNonNull(constants$1581.graphene_vec2_interpolate$MH,"graphene_vec2_interpolate");
    }
    public static void graphene_vec2_interpolate ( Addressable v1,  Addressable v2,  double factor,  Addressable res) {
        var mh$ = graphene_vec2_interpolate$MH();
        try {
            mh$.invokeExact(v1, v2, factor, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec2_get_x$MH() {
        return RuntimeHelper.requireNonNull(constants$1582.graphene_vec2_get_x$MH,"graphene_vec2_get_x");
    }
    public static float graphene_vec2_get_x ( Addressable v) {
        var mh$ = graphene_vec2_get_x$MH();
        try {
            return (float)mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec2_get_y$MH() {
        return RuntimeHelper.requireNonNull(constants$1582.graphene_vec2_get_y$MH,"graphene_vec2_get_y");
    }
    public static float graphene_vec2_get_y ( Addressable v) {
        var mh$ = graphene_vec2_get_y$MH();
        try {
            return (float)mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec2_zero$MH() {
        return RuntimeHelper.requireNonNull(constants$1582.graphene_vec2_zero$MH,"graphene_vec2_zero");
    }
    public static MemoryAddress graphene_vec2_zero () {
        var mh$ = graphene_vec2_zero$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec2_one$MH() {
        return RuntimeHelper.requireNonNull(constants$1582.graphene_vec2_one$MH,"graphene_vec2_one");
    }
    public static MemoryAddress graphene_vec2_one () {
        var mh$ = graphene_vec2_one$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec2_x_axis$MH() {
        return RuntimeHelper.requireNonNull(constants$1582.graphene_vec2_x_axis$MH,"graphene_vec2_x_axis");
    }
    public static MemoryAddress graphene_vec2_x_axis () {
        var mh$ = graphene_vec2_x_axis$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec2_y_axis$MH() {
        return RuntimeHelper.requireNonNull(constants$1582.graphene_vec2_y_axis$MH,"graphene_vec2_y_axis");
    }
    public static MemoryAddress graphene_vec2_y_axis () {
        var mh$ = graphene_vec2_y_axis$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec3_alloc$MH() {
        return RuntimeHelper.requireNonNull(constants$1583.graphene_vec3_alloc$MH,"graphene_vec3_alloc");
    }
    public static MemoryAddress graphene_vec3_alloc () {
        var mh$ = graphene_vec3_alloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec3_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1583.graphene_vec3_free$MH,"graphene_vec3_free");
    }
    public static void graphene_vec3_free ( Addressable v) {
        var mh$ = graphene_vec3_free$MH();
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec3_init$MH() {
        return RuntimeHelper.requireNonNull(constants$1583.graphene_vec3_init$MH,"graphene_vec3_init");
    }
    public static MemoryAddress graphene_vec3_init ( Addressable v,  float x,  float y,  float z) {
        var mh$ = graphene_vec3_init$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(v, x, y, z);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec3_init_from_vec3$MH() {
        return RuntimeHelper.requireNonNull(constants$1583.graphene_vec3_init_from_vec3$MH,"graphene_vec3_init_from_vec3");
    }
    public static MemoryAddress graphene_vec3_init_from_vec3 ( Addressable v,  Addressable src) {
        var mh$ = graphene_vec3_init_from_vec3$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(v, src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec3_init_from_float$MH() {
        return RuntimeHelper.requireNonNull(constants$1583.graphene_vec3_init_from_float$MH,"graphene_vec3_init_from_float");
    }
    public static MemoryAddress graphene_vec3_init_from_float ( Addressable v,  Addressable src) {
        var mh$ = graphene_vec3_init_from_float$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(v, src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec3_to_float$MH() {
        return RuntimeHelper.requireNonNull(constants$1583.graphene_vec3_to_float$MH,"graphene_vec3_to_float");
    }
    public static void graphene_vec3_to_float ( Addressable v,  Addressable dest) {
        var mh$ = graphene_vec3_to_float$MH();
        try {
            mh$.invokeExact(v, dest);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec3_add$MH() {
        return RuntimeHelper.requireNonNull(constants$1584.graphene_vec3_add$MH,"graphene_vec3_add");
    }
    public static void graphene_vec3_add ( Addressable a,  Addressable b,  Addressable res) {
        var mh$ = graphene_vec3_add$MH();
        try {
            mh$.invokeExact(a, b, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec3_subtract$MH() {
        return RuntimeHelper.requireNonNull(constants$1584.graphene_vec3_subtract$MH,"graphene_vec3_subtract");
    }
    public static void graphene_vec3_subtract ( Addressable a,  Addressable b,  Addressable res) {
        var mh$ = graphene_vec3_subtract$MH();
        try {
            mh$.invokeExact(a, b, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec3_multiply$MH() {
        return RuntimeHelper.requireNonNull(constants$1584.graphene_vec3_multiply$MH,"graphene_vec3_multiply");
    }
    public static void graphene_vec3_multiply ( Addressable a,  Addressable b,  Addressable res) {
        var mh$ = graphene_vec3_multiply$MH();
        try {
            mh$.invokeExact(a, b, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec3_divide$MH() {
        return RuntimeHelper.requireNonNull(constants$1584.graphene_vec3_divide$MH,"graphene_vec3_divide");
    }
    public static void graphene_vec3_divide ( Addressable a,  Addressable b,  Addressable res) {
        var mh$ = graphene_vec3_divide$MH();
        try {
            mh$.invokeExact(a, b, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec3_cross$MH() {
        return RuntimeHelper.requireNonNull(constants$1584.graphene_vec3_cross$MH,"graphene_vec3_cross");
    }
    public static void graphene_vec3_cross ( Addressable a,  Addressable b,  Addressable res) {
        var mh$ = graphene_vec3_cross$MH();
        try {
            mh$.invokeExact(a, b, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec3_dot$MH() {
        return RuntimeHelper.requireNonNull(constants$1584.graphene_vec3_dot$MH,"graphene_vec3_dot");
    }
    public static float graphene_vec3_dot ( Addressable a,  Addressable b) {
        var mh$ = graphene_vec3_dot$MH();
        try {
            return (float)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec3_length$MH() {
        return RuntimeHelper.requireNonNull(constants$1585.graphene_vec3_length$MH,"graphene_vec3_length");
    }
    public static float graphene_vec3_length ( Addressable v) {
        var mh$ = graphene_vec3_length$MH();
        try {
            return (float)mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec3_normalize$MH() {
        return RuntimeHelper.requireNonNull(constants$1585.graphene_vec3_normalize$MH,"graphene_vec3_normalize");
    }
    public static void graphene_vec3_normalize ( Addressable v,  Addressable res) {
        var mh$ = graphene_vec3_normalize$MH();
        try {
            mh$.invokeExact(v, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec3_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$1585.graphene_vec3_scale$MH,"graphene_vec3_scale");
    }
    public static void graphene_vec3_scale ( Addressable v,  float factor,  Addressable res) {
        var mh$ = graphene_vec3_scale$MH();
        try {
            mh$.invokeExact(v, factor, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec3_negate$MH() {
        return RuntimeHelper.requireNonNull(constants$1585.graphene_vec3_negate$MH,"graphene_vec3_negate");
    }
    public static void graphene_vec3_negate ( Addressable v,  Addressable res) {
        var mh$ = graphene_vec3_negate$MH();
        try {
            mh$.invokeExact(v, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec3_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$1585.graphene_vec3_equal$MH,"graphene_vec3_equal");
    }
    public static boolean graphene_vec3_equal ( Addressable v1,  Addressable v2) {
        var mh$ = graphene_vec3_equal$MH();
        try {
            return (boolean)mh$.invokeExact(v1, v2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec3_near$MH() {
        return RuntimeHelper.requireNonNull(constants$1585.graphene_vec3_near$MH,"graphene_vec3_near");
    }
    public static boolean graphene_vec3_near ( Addressable v1,  Addressable v2,  float epsilon) {
        var mh$ = graphene_vec3_near$MH();
        try {
            return (boolean)mh$.invokeExact(v1, v2, epsilon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec3_min$MH() {
        return RuntimeHelper.requireNonNull(constants$1586.graphene_vec3_min$MH,"graphene_vec3_min");
    }
    public static void graphene_vec3_min ( Addressable a,  Addressable b,  Addressable res) {
        var mh$ = graphene_vec3_min$MH();
        try {
            mh$.invokeExact(a, b, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec3_max$MH() {
        return RuntimeHelper.requireNonNull(constants$1586.graphene_vec3_max$MH,"graphene_vec3_max");
    }
    public static void graphene_vec3_max ( Addressable a,  Addressable b,  Addressable res) {
        var mh$ = graphene_vec3_max$MH();
        try {
            mh$.invokeExact(a, b, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec3_interpolate$MH() {
        return RuntimeHelper.requireNonNull(constants$1586.graphene_vec3_interpolate$MH,"graphene_vec3_interpolate");
    }
    public static void graphene_vec3_interpolate ( Addressable v1,  Addressable v2,  double factor,  Addressable res) {
        var mh$ = graphene_vec3_interpolate$MH();
        try {
            mh$.invokeExact(v1, v2, factor, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec3_get_x$MH() {
        return RuntimeHelper.requireNonNull(constants$1586.graphene_vec3_get_x$MH,"graphene_vec3_get_x");
    }
    public static float graphene_vec3_get_x ( Addressable v) {
        var mh$ = graphene_vec3_get_x$MH();
        try {
            return (float)mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec3_get_y$MH() {
        return RuntimeHelper.requireNonNull(constants$1586.graphene_vec3_get_y$MH,"graphene_vec3_get_y");
    }
    public static float graphene_vec3_get_y ( Addressable v) {
        var mh$ = graphene_vec3_get_y$MH();
        try {
            return (float)mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec3_get_z$MH() {
        return RuntimeHelper.requireNonNull(constants$1586.graphene_vec3_get_z$MH,"graphene_vec3_get_z");
    }
    public static float graphene_vec3_get_z ( Addressable v) {
        var mh$ = graphene_vec3_get_z$MH();
        try {
            return (float)mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec3_get_xy$MH() {
        return RuntimeHelper.requireNonNull(constants$1587.graphene_vec3_get_xy$MH,"graphene_vec3_get_xy");
    }
    public static void graphene_vec3_get_xy ( Addressable v,  Addressable res) {
        var mh$ = graphene_vec3_get_xy$MH();
        try {
            mh$.invokeExact(v, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec3_get_xy0$MH() {
        return RuntimeHelper.requireNonNull(constants$1587.graphene_vec3_get_xy0$MH,"graphene_vec3_get_xy0");
    }
    public static void graphene_vec3_get_xy0 ( Addressable v,  Addressable res) {
        var mh$ = graphene_vec3_get_xy0$MH();
        try {
            mh$.invokeExact(v, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec3_get_xyz0$MH() {
        return RuntimeHelper.requireNonNull(constants$1587.graphene_vec3_get_xyz0$MH,"graphene_vec3_get_xyz0");
    }
    public static void graphene_vec3_get_xyz0 ( Addressable v,  Addressable res) {
        var mh$ = graphene_vec3_get_xyz0$MH();
        try {
            mh$.invokeExact(v, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec3_get_xyz1$MH() {
        return RuntimeHelper.requireNonNull(constants$1587.graphene_vec3_get_xyz1$MH,"graphene_vec3_get_xyz1");
    }
    public static void graphene_vec3_get_xyz1 ( Addressable v,  Addressable res) {
        var mh$ = graphene_vec3_get_xyz1$MH();
        try {
            mh$.invokeExact(v, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec3_get_xyzw$MH() {
        return RuntimeHelper.requireNonNull(constants$1587.graphene_vec3_get_xyzw$MH,"graphene_vec3_get_xyzw");
    }
    public static void graphene_vec3_get_xyzw ( Addressable v,  float w,  Addressable res) {
        var mh$ = graphene_vec3_get_xyzw$MH();
        try {
            mh$.invokeExact(v, w, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec3_zero$MH() {
        return RuntimeHelper.requireNonNull(constants$1587.graphene_vec3_zero$MH,"graphene_vec3_zero");
    }
    public static MemoryAddress graphene_vec3_zero () {
        var mh$ = graphene_vec3_zero$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec3_one$MH() {
        return RuntimeHelper.requireNonNull(constants$1588.graphene_vec3_one$MH,"graphene_vec3_one");
    }
    public static MemoryAddress graphene_vec3_one () {
        var mh$ = graphene_vec3_one$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec3_x_axis$MH() {
        return RuntimeHelper.requireNonNull(constants$1588.graphene_vec3_x_axis$MH,"graphene_vec3_x_axis");
    }
    public static MemoryAddress graphene_vec3_x_axis () {
        var mh$ = graphene_vec3_x_axis$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec3_y_axis$MH() {
        return RuntimeHelper.requireNonNull(constants$1588.graphene_vec3_y_axis$MH,"graphene_vec3_y_axis");
    }
    public static MemoryAddress graphene_vec3_y_axis () {
        var mh$ = graphene_vec3_y_axis$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec3_z_axis$MH() {
        return RuntimeHelper.requireNonNull(constants$1588.graphene_vec3_z_axis$MH,"graphene_vec3_z_axis");
    }
    public static MemoryAddress graphene_vec3_z_axis () {
        var mh$ = graphene_vec3_z_axis$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec4_alloc$MH() {
        return RuntimeHelper.requireNonNull(constants$1588.graphene_vec4_alloc$MH,"graphene_vec4_alloc");
    }
    public static MemoryAddress graphene_vec4_alloc () {
        var mh$ = graphene_vec4_alloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec4_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1588.graphene_vec4_free$MH,"graphene_vec4_free");
    }
    public static void graphene_vec4_free ( Addressable v) {
        var mh$ = graphene_vec4_free$MH();
        try {
            mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec4_init$MH() {
        return RuntimeHelper.requireNonNull(constants$1589.graphene_vec4_init$MH,"graphene_vec4_init");
    }
    public static MemoryAddress graphene_vec4_init ( Addressable v,  float x,  float y,  float z,  float w) {
        var mh$ = graphene_vec4_init$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(v, x, y, z, w);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec4_init_from_vec4$MH() {
        return RuntimeHelper.requireNonNull(constants$1589.graphene_vec4_init_from_vec4$MH,"graphene_vec4_init_from_vec4");
    }
    public static MemoryAddress graphene_vec4_init_from_vec4 ( Addressable v,  Addressable src) {
        var mh$ = graphene_vec4_init_from_vec4$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(v, src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec4_init_from_vec3$MH() {
        return RuntimeHelper.requireNonNull(constants$1589.graphene_vec4_init_from_vec3$MH,"graphene_vec4_init_from_vec3");
    }
    public static MemoryAddress graphene_vec4_init_from_vec3 ( Addressable v,  Addressable src,  float w) {
        var mh$ = graphene_vec4_init_from_vec3$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(v, src, w);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec4_init_from_vec2$MH() {
        return RuntimeHelper.requireNonNull(constants$1589.graphene_vec4_init_from_vec2$MH,"graphene_vec4_init_from_vec2");
    }
    public static MemoryAddress graphene_vec4_init_from_vec2 ( Addressable v,  Addressable src,  float z,  float w) {
        var mh$ = graphene_vec4_init_from_vec2$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(v, src, z, w);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec4_init_from_float$MH() {
        return RuntimeHelper.requireNonNull(constants$1589.graphene_vec4_init_from_float$MH,"graphene_vec4_init_from_float");
    }
    public static MemoryAddress graphene_vec4_init_from_float ( Addressable v,  Addressable src) {
        var mh$ = graphene_vec4_init_from_float$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(v, src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec4_to_float$MH() {
        return RuntimeHelper.requireNonNull(constants$1589.graphene_vec4_to_float$MH,"graphene_vec4_to_float");
    }
    public static void graphene_vec4_to_float ( Addressable v,  Addressable dest) {
        var mh$ = graphene_vec4_to_float$MH();
        try {
            mh$.invokeExact(v, dest);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec4_add$MH() {
        return RuntimeHelper.requireNonNull(constants$1590.graphene_vec4_add$MH,"graphene_vec4_add");
    }
    public static void graphene_vec4_add ( Addressable a,  Addressable b,  Addressable res) {
        var mh$ = graphene_vec4_add$MH();
        try {
            mh$.invokeExact(a, b, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec4_subtract$MH() {
        return RuntimeHelper.requireNonNull(constants$1590.graphene_vec4_subtract$MH,"graphene_vec4_subtract");
    }
    public static void graphene_vec4_subtract ( Addressable a,  Addressable b,  Addressable res) {
        var mh$ = graphene_vec4_subtract$MH();
        try {
            mh$.invokeExact(a, b, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec4_multiply$MH() {
        return RuntimeHelper.requireNonNull(constants$1590.graphene_vec4_multiply$MH,"graphene_vec4_multiply");
    }
    public static void graphene_vec4_multiply ( Addressable a,  Addressable b,  Addressable res) {
        var mh$ = graphene_vec4_multiply$MH();
        try {
            mh$.invokeExact(a, b, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec4_divide$MH() {
        return RuntimeHelper.requireNonNull(constants$1590.graphene_vec4_divide$MH,"graphene_vec4_divide");
    }
    public static void graphene_vec4_divide ( Addressable a,  Addressable b,  Addressable res) {
        var mh$ = graphene_vec4_divide$MH();
        try {
            mh$.invokeExact(a, b, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec4_dot$MH() {
        return RuntimeHelper.requireNonNull(constants$1590.graphene_vec4_dot$MH,"graphene_vec4_dot");
    }
    public static float graphene_vec4_dot ( Addressable a,  Addressable b) {
        var mh$ = graphene_vec4_dot$MH();
        try {
            return (float)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec4_length$MH() {
        return RuntimeHelper.requireNonNull(constants$1590.graphene_vec4_length$MH,"graphene_vec4_length");
    }
    public static float graphene_vec4_length ( Addressable v) {
        var mh$ = graphene_vec4_length$MH();
        try {
            return (float)mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec4_normalize$MH() {
        return RuntimeHelper.requireNonNull(constants$1591.graphene_vec4_normalize$MH,"graphene_vec4_normalize");
    }
    public static void graphene_vec4_normalize ( Addressable v,  Addressable res) {
        var mh$ = graphene_vec4_normalize$MH();
        try {
            mh$.invokeExact(v, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec4_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$1591.graphene_vec4_scale$MH,"graphene_vec4_scale");
    }
    public static void graphene_vec4_scale ( Addressable v,  float factor,  Addressable res) {
        var mh$ = graphene_vec4_scale$MH();
        try {
            mh$.invokeExact(v, factor, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec4_negate$MH() {
        return RuntimeHelper.requireNonNull(constants$1591.graphene_vec4_negate$MH,"graphene_vec4_negate");
    }
    public static void graphene_vec4_negate ( Addressable v,  Addressable res) {
        var mh$ = graphene_vec4_negate$MH();
        try {
            mh$.invokeExact(v, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec4_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$1591.graphene_vec4_equal$MH,"graphene_vec4_equal");
    }
    public static boolean graphene_vec4_equal ( Addressable v1,  Addressable v2) {
        var mh$ = graphene_vec4_equal$MH();
        try {
            return (boolean)mh$.invokeExact(v1, v2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec4_near$MH() {
        return RuntimeHelper.requireNonNull(constants$1591.graphene_vec4_near$MH,"graphene_vec4_near");
    }
    public static boolean graphene_vec4_near ( Addressable v1,  Addressable v2,  float epsilon) {
        var mh$ = graphene_vec4_near$MH();
        try {
            return (boolean)mh$.invokeExact(v1, v2, epsilon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec4_min$MH() {
        return RuntimeHelper.requireNonNull(constants$1591.graphene_vec4_min$MH,"graphene_vec4_min");
    }
    public static void graphene_vec4_min ( Addressable a,  Addressable b,  Addressable res) {
        var mh$ = graphene_vec4_min$MH();
        try {
            mh$.invokeExact(a, b, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec4_max$MH() {
        return RuntimeHelper.requireNonNull(constants$1592.graphene_vec4_max$MH,"graphene_vec4_max");
    }
    public static void graphene_vec4_max ( Addressable a,  Addressable b,  Addressable res) {
        var mh$ = graphene_vec4_max$MH();
        try {
            mh$.invokeExact(a, b, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec4_interpolate$MH() {
        return RuntimeHelper.requireNonNull(constants$1592.graphene_vec4_interpolate$MH,"graphene_vec4_interpolate");
    }
    public static void graphene_vec4_interpolate ( Addressable v1,  Addressable v2,  double factor,  Addressable res) {
        var mh$ = graphene_vec4_interpolate$MH();
        try {
            mh$.invokeExact(v1, v2, factor, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec4_get_x$MH() {
        return RuntimeHelper.requireNonNull(constants$1592.graphene_vec4_get_x$MH,"graphene_vec4_get_x");
    }
    public static float graphene_vec4_get_x ( Addressable v) {
        var mh$ = graphene_vec4_get_x$MH();
        try {
            return (float)mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec4_get_y$MH() {
        return RuntimeHelper.requireNonNull(constants$1592.graphene_vec4_get_y$MH,"graphene_vec4_get_y");
    }
    public static float graphene_vec4_get_y ( Addressable v) {
        var mh$ = graphene_vec4_get_y$MH();
        try {
            return (float)mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec4_get_z$MH() {
        return RuntimeHelper.requireNonNull(constants$1592.graphene_vec4_get_z$MH,"graphene_vec4_get_z");
    }
    public static float graphene_vec4_get_z ( Addressable v) {
        var mh$ = graphene_vec4_get_z$MH();
        try {
            return (float)mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec4_get_w$MH() {
        return RuntimeHelper.requireNonNull(constants$1592.graphene_vec4_get_w$MH,"graphene_vec4_get_w");
    }
    public static float graphene_vec4_get_w ( Addressable v) {
        var mh$ = graphene_vec4_get_w$MH();
        try {
            return (float)mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec4_get_xy$MH() {
        return RuntimeHelper.requireNonNull(constants$1593.graphene_vec4_get_xy$MH,"graphene_vec4_get_xy");
    }
    public static void graphene_vec4_get_xy ( Addressable v,  Addressable res) {
        var mh$ = graphene_vec4_get_xy$MH();
        try {
            mh$.invokeExact(v, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec4_get_xyz$MH() {
        return RuntimeHelper.requireNonNull(constants$1593.graphene_vec4_get_xyz$MH,"graphene_vec4_get_xyz");
    }
    public static void graphene_vec4_get_xyz ( Addressable v,  Addressable res) {
        var mh$ = graphene_vec4_get_xyz$MH();
        try {
            mh$.invokeExact(v, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec4_zero$MH() {
        return RuntimeHelper.requireNonNull(constants$1593.graphene_vec4_zero$MH,"graphene_vec4_zero");
    }
    public static MemoryAddress graphene_vec4_zero () {
        var mh$ = graphene_vec4_zero$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec4_one$MH() {
        return RuntimeHelper.requireNonNull(constants$1593.graphene_vec4_one$MH,"graphene_vec4_one");
    }
    public static MemoryAddress graphene_vec4_one () {
        var mh$ = graphene_vec4_one$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec4_x_axis$MH() {
        return RuntimeHelper.requireNonNull(constants$1593.graphene_vec4_x_axis$MH,"graphene_vec4_x_axis");
    }
    public static MemoryAddress graphene_vec4_x_axis () {
        var mh$ = graphene_vec4_x_axis$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec4_y_axis$MH() {
        return RuntimeHelper.requireNonNull(constants$1593.graphene_vec4_y_axis$MH,"graphene_vec4_y_axis");
    }
    public static MemoryAddress graphene_vec4_y_axis () {
        var mh$ = graphene_vec4_y_axis$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec4_z_axis$MH() {
        return RuntimeHelper.requireNonNull(constants$1594.graphene_vec4_z_axis$MH,"graphene_vec4_z_axis");
    }
    public static MemoryAddress graphene_vec4_z_axis () {
        var mh$ = graphene_vec4_z_axis$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_vec4_w_axis$MH() {
        return RuntimeHelper.requireNonNull(constants$1594.graphene_vec4_w_axis$MH,"graphene_vec4_w_axis");
    }
    public static MemoryAddress graphene_vec4_w_axis () {
        var mh$ = graphene_vec4_w_axis$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_alloc$MH() {
        return RuntimeHelper.requireNonNull(constants$1594.graphene_matrix_alloc$MH,"graphene_matrix_alloc");
    }
    public static MemoryAddress graphene_matrix_alloc () {
        var mh$ = graphene_matrix_alloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1594.graphene_matrix_free$MH,"graphene_matrix_free");
    }
    public static void graphene_matrix_free ( Addressable m) {
        var mh$ = graphene_matrix_free$MH();
        try {
            mh$.invokeExact(m);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_init_identity$MH() {
        return RuntimeHelper.requireNonNull(constants$1594.graphene_matrix_init_identity$MH,"graphene_matrix_init_identity");
    }
    public static MemoryAddress graphene_matrix_init_identity ( Addressable m) {
        var mh$ = graphene_matrix_init_identity$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(m);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_init_from_float$MH() {
        return RuntimeHelper.requireNonNull(constants$1594.graphene_matrix_init_from_float$MH,"graphene_matrix_init_from_float");
    }
    public static MemoryAddress graphene_matrix_init_from_float ( Addressable m,  Addressable v) {
        var mh$ = graphene_matrix_init_from_float$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(m, v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_init_from_vec4$MH() {
        return RuntimeHelper.requireNonNull(constants$1595.graphene_matrix_init_from_vec4$MH,"graphene_matrix_init_from_vec4");
    }
    public static MemoryAddress graphene_matrix_init_from_vec4 ( Addressable m,  Addressable v0,  Addressable v1,  Addressable v2,  Addressable v3) {
        var mh$ = graphene_matrix_init_from_vec4$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(m, v0, v1, v2, v3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_init_from_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$1595.graphene_matrix_init_from_matrix$MH,"graphene_matrix_init_from_matrix");
    }
    public static MemoryAddress graphene_matrix_init_from_matrix ( Addressable m,  Addressable src) {
        var mh$ = graphene_matrix_init_from_matrix$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(m, src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_init_perspective$MH() {
        return RuntimeHelper.requireNonNull(constants$1595.graphene_matrix_init_perspective$MH,"graphene_matrix_init_perspective");
    }
    public static MemoryAddress graphene_matrix_init_perspective ( Addressable m,  float fovy,  float aspect,  float z_near,  float z_far) {
        var mh$ = graphene_matrix_init_perspective$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(m, fovy, aspect, z_near, z_far);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_init_ortho$MH() {
        return RuntimeHelper.requireNonNull(constants$1595.graphene_matrix_init_ortho$MH,"graphene_matrix_init_ortho");
    }
    public static MemoryAddress graphene_matrix_init_ortho ( Addressable m,  float left,  float right,  float top,  float bottom,  float z_near,  float z_far) {
        var mh$ = graphene_matrix_init_ortho$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(m, left, right, top, bottom, z_near, z_far);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_init_look_at$MH() {
        return RuntimeHelper.requireNonNull(constants$1595.graphene_matrix_init_look_at$MH,"graphene_matrix_init_look_at");
    }
    public static MemoryAddress graphene_matrix_init_look_at ( Addressable m,  Addressable eye,  Addressable center,  Addressable up) {
        var mh$ = graphene_matrix_init_look_at$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(m, eye, center, up);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_init_frustum$MH() {
        return RuntimeHelper.requireNonNull(constants$1595.graphene_matrix_init_frustum$MH,"graphene_matrix_init_frustum");
    }
    public static MemoryAddress graphene_matrix_init_frustum ( Addressable m,  float left,  float right,  float bottom,  float top,  float z_near,  float z_far) {
        var mh$ = graphene_matrix_init_frustum$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(m, left, right, bottom, top, z_near, z_far);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_init_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$1596.graphene_matrix_init_scale$MH,"graphene_matrix_init_scale");
    }
    public static MemoryAddress graphene_matrix_init_scale ( Addressable m,  float x,  float y,  float z) {
        var mh$ = graphene_matrix_init_scale$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(m, x, y, z);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_init_translate$MH() {
        return RuntimeHelper.requireNonNull(constants$1596.graphene_matrix_init_translate$MH,"graphene_matrix_init_translate");
    }
    public static MemoryAddress graphene_matrix_init_translate ( Addressable m,  Addressable p) {
        var mh$ = graphene_matrix_init_translate$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(m, p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_init_rotate$MH() {
        return RuntimeHelper.requireNonNull(constants$1596.graphene_matrix_init_rotate$MH,"graphene_matrix_init_rotate");
    }
    public static MemoryAddress graphene_matrix_init_rotate ( Addressable m,  float angle,  Addressable axis) {
        var mh$ = graphene_matrix_init_rotate$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(m, angle, axis);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_init_skew$MH() {
        return RuntimeHelper.requireNonNull(constants$1596.graphene_matrix_init_skew$MH,"graphene_matrix_init_skew");
    }
    public static MemoryAddress graphene_matrix_init_skew ( Addressable m,  float x_skew,  float y_skew) {
        var mh$ = graphene_matrix_init_skew$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(m, x_skew, y_skew);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_init_from_2d$MH() {
        return RuntimeHelper.requireNonNull(constants$1596.graphene_matrix_init_from_2d$MH,"graphene_matrix_init_from_2d");
    }
    public static MemoryAddress graphene_matrix_init_from_2d ( Addressable m,  double xx,  double yx,  double xy,  double yy,  double x_0,  double y_0) {
        var mh$ = graphene_matrix_init_from_2d$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(m, xx, yx, xy, yy, x_0, y_0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_is_identity$MH() {
        return RuntimeHelper.requireNonNull(constants$1596.graphene_matrix_is_identity$MH,"graphene_matrix_is_identity");
    }
    public static boolean graphene_matrix_is_identity ( Addressable m) {
        var mh$ = graphene_matrix_is_identity$MH();
        try {
            return (boolean)mh$.invokeExact(m);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_is_2d$MH() {
        return RuntimeHelper.requireNonNull(constants$1597.graphene_matrix_is_2d$MH,"graphene_matrix_is_2d");
    }
    public static boolean graphene_matrix_is_2d ( Addressable m) {
        var mh$ = graphene_matrix_is_2d$MH();
        try {
            return (boolean)mh$.invokeExact(m);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_is_backface_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$1597.graphene_matrix_is_backface_visible$MH,"graphene_matrix_is_backface_visible");
    }
    public static boolean graphene_matrix_is_backface_visible ( Addressable m) {
        var mh$ = graphene_matrix_is_backface_visible$MH();
        try {
            return (boolean)mh$.invokeExact(m);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_is_singular$MH() {
        return RuntimeHelper.requireNonNull(constants$1597.graphene_matrix_is_singular$MH,"graphene_matrix_is_singular");
    }
    public static boolean graphene_matrix_is_singular ( Addressable m) {
        var mh$ = graphene_matrix_is_singular$MH();
        try {
            return (boolean)mh$.invokeExact(m);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_to_float$MH() {
        return RuntimeHelper.requireNonNull(constants$1597.graphene_matrix_to_float$MH,"graphene_matrix_to_float");
    }
    public static void graphene_matrix_to_float ( Addressable m,  Addressable v) {
        var mh$ = graphene_matrix_to_float$MH();
        try {
            mh$.invokeExact(m, v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_to_2d$MH() {
        return RuntimeHelper.requireNonNull(constants$1597.graphene_matrix_to_2d$MH,"graphene_matrix_to_2d");
    }
    public static boolean graphene_matrix_to_2d ( Addressable m,  Addressable xx,  Addressable yx,  Addressable xy,  Addressable yy,  Addressable x_0,  Addressable y_0) {
        var mh$ = graphene_matrix_to_2d$MH();
        try {
            return (boolean)mh$.invokeExact(m, xx, yx, xy, yy, x_0, y_0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_get_row$MH() {
        return RuntimeHelper.requireNonNull(constants$1597.graphene_matrix_get_row$MH,"graphene_matrix_get_row");
    }
    public static void graphene_matrix_get_row ( Addressable m,  int index_,  Addressable res) {
        var mh$ = graphene_matrix_get_row$MH();
        try {
            mh$.invokeExact(m, index_, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_get_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1598.graphene_matrix_get_value$MH,"graphene_matrix_get_value");
    }
    public static float graphene_matrix_get_value ( Addressable m,  int row,  int col) {
        var mh$ = graphene_matrix_get_value$MH();
        try {
            return (float)mh$.invokeExact(m, row, col);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_multiply$MH() {
        return RuntimeHelper.requireNonNull(constants$1598.graphene_matrix_multiply$MH,"graphene_matrix_multiply");
    }
    public static void graphene_matrix_multiply ( Addressable a,  Addressable b,  Addressable res) {
        var mh$ = graphene_matrix_multiply$MH();
        try {
            mh$.invokeExact(a, b, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_determinant$MH() {
        return RuntimeHelper.requireNonNull(constants$1598.graphene_matrix_determinant$MH,"graphene_matrix_determinant");
    }
    public static float graphene_matrix_determinant ( Addressable m) {
        var mh$ = graphene_matrix_determinant$MH();
        try {
            return (float)mh$.invokeExact(m);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_transform_vec4$MH() {
        return RuntimeHelper.requireNonNull(constants$1598.graphene_matrix_transform_vec4$MH,"graphene_matrix_transform_vec4");
    }
    public static void graphene_matrix_transform_vec4 ( Addressable m,  Addressable v,  Addressable res) {
        var mh$ = graphene_matrix_transform_vec4$MH();
        try {
            mh$.invokeExact(m, v, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_transform_vec3$MH() {
        return RuntimeHelper.requireNonNull(constants$1598.graphene_matrix_transform_vec3$MH,"graphene_matrix_transform_vec3");
    }
    public static void graphene_matrix_transform_vec3 ( Addressable m,  Addressable v,  Addressable res) {
        var mh$ = graphene_matrix_transform_vec3$MH();
        try {
            mh$.invokeExact(m, v, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_transform_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1598.graphene_matrix_transform_point$MH,"graphene_matrix_transform_point");
    }
    public static void graphene_matrix_transform_point ( Addressable m,  Addressable p,  Addressable res) {
        var mh$ = graphene_matrix_transform_point$MH();
        try {
            mh$.invokeExact(m, p, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_transform_point3d$MH() {
        return RuntimeHelper.requireNonNull(constants$1599.graphene_matrix_transform_point3d$MH,"graphene_matrix_transform_point3d");
    }
    public static void graphene_matrix_transform_point3d ( Addressable m,  Addressable p,  Addressable res) {
        var mh$ = graphene_matrix_transform_point3d$MH();
        try {
            mh$.invokeExact(m, p, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_transform_rect$MH() {
        return RuntimeHelper.requireNonNull(constants$1599.graphene_matrix_transform_rect$MH,"graphene_matrix_transform_rect");
    }
    public static void graphene_matrix_transform_rect ( Addressable m,  Addressable r,  Addressable res) {
        var mh$ = graphene_matrix_transform_rect$MH();
        try {
            mh$.invokeExact(m, r, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_transform_bounds$MH() {
        return RuntimeHelper.requireNonNull(constants$1599.graphene_matrix_transform_bounds$MH,"graphene_matrix_transform_bounds");
    }
    public static void graphene_matrix_transform_bounds ( Addressable m,  Addressable r,  Addressable res) {
        var mh$ = graphene_matrix_transform_bounds$MH();
        try {
            mh$.invokeExact(m, r, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_transform_sphere$MH() {
        return RuntimeHelper.requireNonNull(constants$1599.graphene_matrix_transform_sphere$MH,"graphene_matrix_transform_sphere");
    }
    public static void graphene_matrix_transform_sphere ( Addressable m,  Addressable s,  Addressable res) {
        var mh$ = graphene_matrix_transform_sphere$MH();
        try {
            mh$.invokeExact(m, s, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_transform_box$MH() {
        return RuntimeHelper.requireNonNull(constants$1599.graphene_matrix_transform_box$MH,"graphene_matrix_transform_box");
    }
    public static void graphene_matrix_transform_box ( Addressable m,  Addressable b,  Addressable res) {
        var mh$ = graphene_matrix_transform_box$MH();
        try {
            mh$.invokeExact(m, b, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_transform_ray$MH() {
        return RuntimeHelper.requireNonNull(constants$1599.graphene_matrix_transform_ray$MH,"graphene_matrix_transform_ray");
    }
    public static void graphene_matrix_transform_ray ( Addressable m,  Addressable r,  Addressable res) {
        var mh$ = graphene_matrix_transform_ray$MH();
        try {
            mh$.invokeExact(m, r, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_project_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1600.graphene_matrix_project_point$MH,"graphene_matrix_project_point");
    }
    public static void graphene_matrix_project_point ( Addressable m,  Addressable p,  Addressable res) {
        var mh$ = graphene_matrix_project_point$MH();
        try {
            mh$.invokeExact(m, p, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_project_rect_bounds$MH() {
        return RuntimeHelper.requireNonNull(constants$1600.graphene_matrix_project_rect_bounds$MH,"graphene_matrix_project_rect_bounds");
    }
    public static void graphene_matrix_project_rect_bounds ( Addressable m,  Addressable r,  Addressable res) {
        var mh$ = graphene_matrix_project_rect_bounds$MH();
        try {
            mh$.invokeExact(m, r, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_project_rect$MH() {
        return RuntimeHelper.requireNonNull(constants$1600.graphene_matrix_project_rect$MH,"graphene_matrix_project_rect");
    }
    public static void graphene_matrix_project_rect ( Addressable m,  Addressable r,  Addressable res) {
        var mh$ = graphene_matrix_project_rect$MH();
        try {
            mh$.invokeExact(m, r, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_untransform_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1600.graphene_matrix_untransform_point$MH,"graphene_matrix_untransform_point");
    }
    public static boolean graphene_matrix_untransform_point ( Addressable m,  Addressable p,  Addressable bounds,  Addressable res) {
        var mh$ = graphene_matrix_untransform_point$MH();
        try {
            return (boolean)mh$.invokeExact(m, p, bounds, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_untransform_bounds$MH() {
        return RuntimeHelper.requireNonNull(constants$1600.graphene_matrix_untransform_bounds$MH,"graphene_matrix_untransform_bounds");
    }
    public static void graphene_matrix_untransform_bounds ( Addressable m,  Addressable r,  Addressable bounds,  Addressable res) {
        var mh$ = graphene_matrix_untransform_bounds$MH();
        try {
            mh$.invokeExact(m, r, bounds, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_unproject_point3d$MH() {
        return RuntimeHelper.requireNonNull(constants$1600.graphene_matrix_unproject_point3d$MH,"graphene_matrix_unproject_point3d");
    }
    public static void graphene_matrix_unproject_point3d ( Addressable projection,  Addressable modelview,  Addressable point,  Addressable res) {
        var mh$ = graphene_matrix_unproject_point3d$MH();
        try {
            mh$.invokeExact(projection, modelview, point, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_translate$MH() {
        return RuntimeHelper.requireNonNull(constants$1601.graphene_matrix_translate$MH,"graphene_matrix_translate");
    }
    public static void graphene_matrix_translate ( Addressable m,  Addressable pos) {
        var mh$ = graphene_matrix_translate$MH();
        try {
            mh$.invokeExact(m, pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_rotate$MH() {
        return RuntimeHelper.requireNonNull(constants$1601.graphene_matrix_rotate$MH,"graphene_matrix_rotate");
    }
    public static void graphene_matrix_rotate ( Addressable m,  float angle,  Addressable axis) {
        var mh$ = graphene_matrix_rotate$MH();
        try {
            mh$.invokeExact(m, angle, axis);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_rotate_x$MH() {
        return RuntimeHelper.requireNonNull(constants$1601.graphene_matrix_rotate_x$MH,"graphene_matrix_rotate_x");
    }
    public static void graphene_matrix_rotate_x ( Addressable m,  float angle) {
        var mh$ = graphene_matrix_rotate_x$MH();
        try {
            mh$.invokeExact(m, angle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_rotate_y$MH() {
        return RuntimeHelper.requireNonNull(constants$1601.graphene_matrix_rotate_y$MH,"graphene_matrix_rotate_y");
    }
    public static void graphene_matrix_rotate_y ( Addressable m,  float angle) {
        var mh$ = graphene_matrix_rotate_y$MH();
        try {
            mh$.invokeExact(m, angle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_rotate_z$MH() {
        return RuntimeHelper.requireNonNull(constants$1601.graphene_matrix_rotate_z$MH,"graphene_matrix_rotate_z");
    }
    public static void graphene_matrix_rotate_z ( Addressable m,  float angle) {
        var mh$ = graphene_matrix_rotate_z$MH();
        try {
            mh$.invokeExact(m, angle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_rotate_quaternion$MH() {
        return RuntimeHelper.requireNonNull(constants$1601.graphene_matrix_rotate_quaternion$MH,"graphene_matrix_rotate_quaternion");
    }
    public static void graphene_matrix_rotate_quaternion ( Addressable m,  Addressable q) {
        var mh$ = graphene_matrix_rotate_quaternion$MH();
        try {
            mh$.invokeExact(m, q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_rotate_euler$MH() {
        return RuntimeHelper.requireNonNull(constants$1602.graphene_matrix_rotate_euler$MH,"graphene_matrix_rotate_euler");
    }
    public static void graphene_matrix_rotate_euler ( Addressable m,  Addressable e) {
        var mh$ = graphene_matrix_rotate_euler$MH();
        try {
            mh$.invokeExact(m, e);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$1602.graphene_matrix_scale$MH,"graphene_matrix_scale");
    }
    public static void graphene_matrix_scale ( Addressable m,  float factor_x,  float factor_y,  float factor_z) {
        var mh$ = graphene_matrix_scale$MH();
        try {
            mh$.invokeExact(m, factor_x, factor_y, factor_z);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_skew_xy$MH() {
        return RuntimeHelper.requireNonNull(constants$1602.graphene_matrix_skew_xy$MH,"graphene_matrix_skew_xy");
    }
    public static void graphene_matrix_skew_xy ( Addressable m,  float factor) {
        var mh$ = graphene_matrix_skew_xy$MH();
        try {
            mh$.invokeExact(m, factor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_skew_xz$MH() {
        return RuntimeHelper.requireNonNull(constants$1602.graphene_matrix_skew_xz$MH,"graphene_matrix_skew_xz");
    }
    public static void graphene_matrix_skew_xz ( Addressable m,  float factor) {
        var mh$ = graphene_matrix_skew_xz$MH();
        try {
            mh$.invokeExact(m, factor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_skew_yz$MH() {
        return RuntimeHelper.requireNonNull(constants$1602.graphene_matrix_skew_yz$MH,"graphene_matrix_skew_yz");
    }
    public static void graphene_matrix_skew_yz ( Addressable m,  float factor) {
        var mh$ = graphene_matrix_skew_yz$MH();
        try {
            mh$.invokeExact(m, factor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_transpose$MH() {
        return RuntimeHelper.requireNonNull(constants$1602.graphene_matrix_transpose$MH,"graphene_matrix_transpose");
    }
    public static void graphene_matrix_transpose ( Addressable m,  Addressable res) {
        var mh$ = graphene_matrix_transpose$MH();
        try {
            mh$.invokeExact(m, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_inverse$MH() {
        return RuntimeHelper.requireNonNull(constants$1603.graphene_matrix_inverse$MH,"graphene_matrix_inverse");
    }
    public static boolean graphene_matrix_inverse ( Addressable m,  Addressable res) {
        var mh$ = graphene_matrix_inverse$MH();
        try {
            return (boolean)mh$.invokeExact(m, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_perspective$MH() {
        return RuntimeHelper.requireNonNull(constants$1603.graphene_matrix_perspective$MH,"graphene_matrix_perspective");
    }
    public static void graphene_matrix_perspective ( Addressable m,  float depth,  Addressable res) {
        var mh$ = graphene_matrix_perspective$MH();
        try {
            mh$.invokeExact(m, depth, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_normalize$MH() {
        return RuntimeHelper.requireNonNull(constants$1603.graphene_matrix_normalize$MH,"graphene_matrix_normalize");
    }
    public static void graphene_matrix_normalize ( Addressable m,  Addressable res) {
        var mh$ = graphene_matrix_normalize$MH();
        try {
            mh$.invokeExact(m, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_get_x_translation$MH() {
        return RuntimeHelper.requireNonNull(constants$1603.graphene_matrix_get_x_translation$MH,"graphene_matrix_get_x_translation");
    }
    public static float graphene_matrix_get_x_translation ( Addressable m) {
        var mh$ = graphene_matrix_get_x_translation$MH();
        try {
            return (float)mh$.invokeExact(m);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_get_y_translation$MH() {
        return RuntimeHelper.requireNonNull(constants$1603.graphene_matrix_get_y_translation$MH,"graphene_matrix_get_y_translation");
    }
    public static float graphene_matrix_get_y_translation ( Addressable m) {
        var mh$ = graphene_matrix_get_y_translation$MH();
        try {
            return (float)mh$.invokeExact(m);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_get_z_translation$MH() {
        return RuntimeHelper.requireNonNull(constants$1603.graphene_matrix_get_z_translation$MH,"graphene_matrix_get_z_translation");
    }
    public static float graphene_matrix_get_z_translation ( Addressable m) {
        var mh$ = graphene_matrix_get_z_translation$MH();
        try {
            return (float)mh$.invokeExact(m);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_get_x_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$1604.graphene_matrix_get_x_scale$MH,"graphene_matrix_get_x_scale");
    }
    public static float graphene_matrix_get_x_scale ( Addressable m) {
        var mh$ = graphene_matrix_get_x_scale$MH();
        try {
            return (float)mh$.invokeExact(m);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_get_y_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$1604.graphene_matrix_get_y_scale$MH,"graphene_matrix_get_y_scale");
    }
    public static float graphene_matrix_get_y_scale ( Addressable m) {
        var mh$ = graphene_matrix_get_y_scale$MH();
        try {
            return (float)mh$.invokeExact(m);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_get_z_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$1604.graphene_matrix_get_z_scale$MH,"graphene_matrix_get_z_scale");
    }
    public static float graphene_matrix_get_z_scale ( Addressable m) {
        var mh$ = graphene_matrix_get_z_scale$MH();
        try {
            return (float)mh$.invokeExact(m);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_interpolate$MH() {
        return RuntimeHelper.requireNonNull(constants$1604.graphene_matrix_interpolate$MH,"graphene_matrix_interpolate");
    }
    public static void graphene_matrix_interpolate ( Addressable a,  Addressable b,  double factor,  Addressable res) {
        var mh$ = graphene_matrix_interpolate$MH();
        try {
            mh$.invokeExact(a, b, factor, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_near$MH() {
        return RuntimeHelper.requireNonNull(constants$1604.graphene_matrix_near$MH,"graphene_matrix_near");
    }
    public static boolean graphene_matrix_near ( Addressable a,  Addressable b,  float epsilon) {
        var mh$ = graphene_matrix_near$MH();
        try {
            return (boolean)mh$.invokeExact(a, b, epsilon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$1604.graphene_matrix_equal$MH,"graphene_matrix_equal");
    }
    public static boolean graphene_matrix_equal ( Addressable a,  Addressable b) {
        var mh$ = graphene_matrix_equal$MH();
        try {
            return (boolean)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_equal_fast$MH() {
        return RuntimeHelper.requireNonNull(constants$1605.graphene_matrix_equal_fast$MH,"graphene_matrix_equal_fast");
    }
    public static boolean graphene_matrix_equal_fast ( Addressable a,  Addressable b) {
        var mh$ = graphene_matrix_equal_fast$MH();
        try {
            return (boolean)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_print$MH() {
        return RuntimeHelper.requireNonNull(constants$1605.graphene_matrix_print$MH,"graphene_matrix_print");
    }
    public static void graphene_matrix_print ( Addressable m) {
        var mh$ = graphene_matrix_print$MH();
        try {
            mh$.invokeExact(m);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_matrix_decompose$MH() {
        return RuntimeHelper.requireNonNull(constants$1605.graphene_matrix_decompose$MH,"graphene_matrix_decompose");
    }
    public static boolean graphene_matrix_decompose ( Addressable m,  Addressable translate,  Addressable scale,  Addressable rotate,  Addressable shear,  Addressable perspective) {
        var mh$ = graphene_matrix_decompose$MH();
        try {
            return (boolean)mh$.invokeExact(m, translate, scale, rotate, shear, perspective);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_point_alloc$MH() {
        return RuntimeHelper.requireNonNull(constants$1605.graphene_point_alloc$MH,"graphene_point_alloc");
    }
    public static MemoryAddress graphene_point_alloc () {
        var mh$ = graphene_point_alloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_point_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1605.graphene_point_free$MH,"graphene_point_free");
    }
    public static void graphene_point_free ( Addressable p) {
        var mh$ = graphene_point_free$MH();
        try {
            mh$.invokeExact(p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_point_init$MH() {
        return RuntimeHelper.requireNonNull(constants$1605.graphene_point_init$MH,"graphene_point_init");
    }
    public static MemoryAddress graphene_point_init ( Addressable p,  float x,  float y) {
        var mh$ = graphene_point_init$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(p, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_point_init_from_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1606.graphene_point_init_from_point$MH,"graphene_point_init_from_point");
    }
    public static MemoryAddress graphene_point_init_from_point ( Addressable p,  Addressable src) {
        var mh$ = graphene_point_init_from_point$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(p, src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_point_init_from_vec2$MH() {
        return RuntimeHelper.requireNonNull(constants$1606.graphene_point_init_from_vec2$MH,"graphene_point_init_from_vec2");
    }
    public static MemoryAddress graphene_point_init_from_vec2 ( Addressable p,  Addressable src) {
        var mh$ = graphene_point_init_from_vec2$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(p, src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_point_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$1606.graphene_point_equal$MH,"graphene_point_equal");
    }
    public static boolean graphene_point_equal ( Addressable a,  Addressable b) {
        var mh$ = graphene_point_equal$MH();
        try {
            return (boolean)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_point_distance$MH() {
        return RuntimeHelper.requireNonNull(constants$1606.graphene_point_distance$MH,"graphene_point_distance");
    }
    public static float graphene_point_distance ( Addressable a,  Addressable b,  Addressable d_x,  Addressable d_y) {
        var mh$ = graphene_point_distance$MH();
        try {
            return (float)mh$.invokeExact(a, b, d_x, d_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_point_near$MH() {
        return RuntimeHelper.requireNonNull(constants$1606.graphene_point_near$MH,"graphene_point_near");
    }
    public static boolean graphene_point_near ( Addressable a,  Addressable b,  float epsilon) {
        var mh$ = graphene_point_near$MH();
        try {
            return (boolean)mh$.invokeExact(a, b, epsilon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_point_interpolate$MH() {
        return RuntimeHelper.requireNonNull(constants$1606.graphene_point_interpolate$MH,"graphene_point_interpolate");
    }
    public static void graphene_point_interpolate ( Addressable a,  Addressable b,  double factor,  Addressable res) {
        var mh$ = graphene_point_interpolate$MH();
        try {
            mh$.invokeExact(a, b, factor, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_point_to_vec2$MH() {
        return RuntimeHelper.requireNonNull(constants$1607.graphene_point_to_vec2$MH,"graphene_point_to_vec2");
    }
    public static void graphene_point_to_vec2 ( Addressable p,  Addressable v) {
        var mh$ = graphene_point_to_vec2$MH();
        try {
            mh$.invokeExact(p, v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_point_zero$MH() {
        return RuntimeHelper.requireNonNull(constants$1607.graphene_point_zero$MH,"graphene_point_zero");
    }
    public static MemoryAddress graphene_point_zero () {
        var mh$ = graphene_point_zero$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_size_alloc$MH() {
        return RuntimeHelper.requireNonNull(constants$1607.graphene_size_alloc$MH,"graphene_size_alloc");
    }
    public static MemoryAddress graphene_size_alloc () {
        var mh$ = graphene_size_alloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_size_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1607.graphene_size_free$MH,"graphene_size_free");
    }
    public static void graphene_size_free ( Addressable s) {
        var mh$ = graphene_size_free$MH();
        try {
            mh$.invokeExact(s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_size_init$MH() {
        return RuntimeHelper.requireNonNull(constants$1607.graphene_size_init$MH,"graphene_size_init");
    }
    public static MemoryAddress graphene_size_init ( Addressable s,  float width,  float height) {
        var mh$ = graphene_size_init$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(s, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_size_init_from_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1607.graphene_size_init_from_size$MH,"graphene_size_init_from_size");
    }
    public static MemoryAddress graphene_size_init_from_size ( Addressable s,  Addressable src) {
        var mh$ = graphene_size_init_from_size$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(s, src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_size_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$1608.graphene_size_equal$MH,"graphene_size_equal");
    }
    public static boolean graphene_size_equal ( Addressable a,  Addressable b) {
        var mh$ = graphene_size_equal$MH();
        try {
            return (boolean)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_size_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$1608.graphene_size_scale$MH,"graphene_size_scale");
    }
    public static void graphene_size_scale ( Addressable s,  float factor,  Addressable res) {
        var mh$ = graphene_size_scale$MH();
        try {
            mh$.invokeExact(s, factor, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_size_interpolate$MH() {
        return RuntimeHelper.requireNonNull(constants$1608.graphene_size_interpolate$MH,"graphene_size_interpolate");
    }
    public static void graphene_size_interpolate ( Addressable a,  Addressable b,  double factor,  Addressable res) {
        var mh$ = graphene_size_interpolate$MH();
        try {
            mh$.invokeExact(a, b, factor, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_size_zero$MH() {
        return RuntimeHelper.requireNonNull(constants$1608.graphene_size_zero$MH,"graphene_size_zero");
    }
    public static MemoryAddress graphene_size_zero () {
        var mh$ = graphene_size_zero$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_rect_alloc$MH() {
        return RuntimeHelper.requireNonNull(constants$1608.graphene_rect_alloc$MH,"graphene_rect_alloc");
    }
    public static MemoryAddress graphene_rect_alloc () {
        var mh$ = graphene_rect_alloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_rect_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1608.graphene_rect_free$MH,"graphene_rect_free");
    }
    public static void graphene_rect_free ( Addressable r) {
        var mh$ = graphene_rect_free$MH();
        try {
            mh$.invokeExact(r);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_rect_init$MH() {
        return RuntimeHelper.requireNonNull(constants$1609.graphene_rect_init$MH,"graphene_rect_init");
    }
    public static MemoryAddress graphene_rect_init ( Addressable r,  float x,  float y,  float width,  float height) {
        var mh$ = graphene_rect_init$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(r, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_rect_init_from_rect$MH() {
        return RuntimeHelper.requireNonNull(constants$1609.graphene_rect_init_from_rect$MH,"graphene_rect_init_from_rect");
    }
    public static MemoryAddress graphene_rect_init_from_rect ( Addressable r,  Addressable src) {
        var mh$ = graphene_rect_init_from_rect$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(r, src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_rect_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$1609.graphene_rect_equal$MH,"graphene_rect_equal");
    }
    public static boolean graphene_rect_equal ( Addressable a,  Addressable b) {
        var mh$ = graphene_rect_equal$MH();
        try {
            return (boolean)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_rect_normalize$MH() {
        return RuntimeHelper.requireNonNull(constants$1609.graphene_rect_normalize$MH,"graphene_rect_normalize");
    }
    public static MemoryAddress graphene_rect_normalize ( Addressable r) {
        var mh$ = graphene_rect_normalize$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(r);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_rect_normalize_r$MH() {
        return RuntimeHelper.requireNonNull(constants$1609.graphene_rect_normalize_r$MH,"graphene_rect_normalize_r");
    }
    public static void graphene_rect_normalize_r ( Addressable r,  Addressable res) {
        var mh$ = graphene_rect_normalize_r$MH();
        try {
            mh$.invokeExact(r, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_rect_get_center$MH() {
        return RuntimeHelper.requireNonNull(constants$1609.graphene_rect_get_center$MH,"graphene_rect_get_center");
    }
    public static void graphene_rect_get_center ( Addressable r,  Addressable p) {
        var mh$ = graphene_rect_get_center$MH();
        try {
            mh$.invokeExact(r, p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_rect_get_top_left$MH() {
        return RuntimeHelper.requireNonNull(constants$1610.graphene_rect_get_top_left$MH,"graphene_rect_get_top_left");
    }
    public static void graphene_rect_get_top_left ( Addressable r,  Addressable p) {
        var mh$ = graphene_rect_get_top_left$MH();
        try {
            mh$.invokeExact(r, p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_rect_get_top_right$MH() {
        return RuntimeHelper.requireNonNull(constants$1610.graphene_rect_get_top_right$MH,"graphene_rect_get_top_right");
    }
    public static void graphene_rect_get_top_right ( Addressable r,  Addressable p) {
        var mh$ = graphene_rect_get_top_right$MH();
        try {
            mh$.invokeExact(r, p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_rect_get_bottom_right$MH() {
        return RuntimeHelper.requireNonNull(constants$1610.graphene_rect_get_bottom_right$MH,"graphene_rect_get_bottom_right");
    }
    public static void graphene_rect_get_bottom_right ( Addressable r,  Addressable p) {
        var mh$ = graphene_rect_get_bottom_right$MH();
        try {
            mh$.invokeExact(r, p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_rect_get_bottom_left$MH() {
        return RuntimeHelper.requireNonNull(constants$1610.graphene_rect_get_bottom_left$MH,"graphene_rect_get_bottom_left");
    }
    public static void graphene_rect_get_bottom_left ( Addressable r,  Addressable p) {
        var mh$ = graphene_rect_get_bottom_left$MH();
        try {
            mh$.invokeExact(r, p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_rect_get_vertices$MH() {
        return RuntimeHelper.requireNonNull(constants$1610.graphene_rect_get_vertices$MH,"graphene_rect_get_vertices");
    }
    public static void graphene_rect_get_vertices ( Addressable r,  Addressable vertices) {
        var mh$ = graphene_rect_get_vertices$MH();
        try {
            mh$.invokeExact(r, vertices);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_rect_get_x$MH() {
        return RuntimeHelper.requireNonNull(constants$1610.graphene_rect_get_x$MH,"graphene_rect_get_x");
    }
    public static float graphene_rect_get_x ( Addressable r) {
        var mh$ = graphene_rect_get_x$MH();
        try {
            return (float)mh$.invokeExact(r);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_rect_get_y$MH() {
        return RuntimeHelper.requireNonNull(constants$1611.graphene_rect_get_y$MH,"graphene_rect_get_y");
    }
    public static float graphene_rect_get_y ( Addressable r) {
        var mh$ = graphene_rect_get_y$MH();
        try {
            return (float)mh$.invokeExact(r);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_rect_get_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1611.graphene_rect_get_width$MH,"graphene_rect_get_width");
    }
    public static float graphene_rect_get_width ( Addressable r) {
        var mh$ = graphene_rect_get_width$MH();
        try {
            return (float)mh$.invokeExact(r);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_rect_get_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1611.graphene_rect_get_height$MH,"graphene_rect_get_height");
    }
    public static float graphene_rect_get_height ( Addressable r) {
        var mh$ = graphene_rect_get_height$MH();
        try {
            return (float)mh$.invokeExact(r);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_rect_get_area$MH() {
        return RuntimeHelper.requireNonNull(constants$1611.graphene_rect_get_area$MH,"graphene_rect_get_area");
    }
    public static float graphene_rect_get_area ( Addressable r) {
        var mh$ = graphene_rect_get_area$MH();
        try {
            return (float)mh$.invokeExact(r);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_rect_union$MH() {
        return RuntimeHelper.requireNonNull(constants$1611.graphene_rect_union$MH,"graphene_rect_union");
    }
    public static void graphene_rect_union ( Addressable a,  Addressable b,  Addressable res) {
        var mh$ = graphene_rect_union$MH();
        try {
            mh$.invokeExact(a, b, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_rect_intersection$MH() {
        return RuntimeHelper.requireNonNull(constants$1611.graphene_rect_intersection$MH,"graphene_rect_intersection");
    }
    public static boolean graphene_rect_intersection ( Addressable a,  Addressable b,  Addressable res) {
        var mh$ = graphene_rect_intersection$MH();
        try {
            return (boolean)mh$.invokeExact(a, b, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_rect_contains_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1612.graphene_rect_contains_point$MH,"graphene_rect_contains_point");
    }
    public static boolean graphene_rect_contains_point ( Addressable r,  Addressable p) {
        var mh$ = graphene_rect_contains_point$MH();
        try {
            return (boolean)mh$.invokeExact(r, p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_rect_contains_rect$MH() {
        return RuntimeHelper.requireNonNull(constants$1612.graphene_rect_contains_rect$MH,"graphene_rect_contains_rect");
    }
    public static boolean graphene_rect_contains_rect ( Addressable a,  Addressable b) {
        var mh$ = graphene_rect_contains_rect$MH();
        try {
            return (boolean)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_rect_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1612.graphene_rect_offset$MH,"graphene_rect_offset");
    }
    public static MemoryAddress graphene_rect_offset ( Addressable r,  float d_x,  float d_y) {
        var mh$ = graphene_rect_offset$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(r, d_x, d_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_rect_offset_r$MH() {
        return RuntimeHelper.requireNonNull(constants$1612.graphene_rect_offset_r$MH,"graphene_rect_offset_r");
    }
    public static void graphene_rect_offset_r ( Addressable r,  float d_x,  float d_y,  Addressable res) {
        var mh$ = graphene_rect_offset_r$MH();
        try {
            mh$.invokeExact(r, d_x, d_y, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_rect_inset$MH() {
        return RuntimeHelper.requireNonNull(constants$1612.graphene_rect_inset$MH,"graphene_rect_inset");
    }
    public static MemoryAddress graphene_rect_inset ( Addressable r,  float d_x,  float d_y) {
        var mh$ = graphene_rect_inset$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(r, d_x, d_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_rect_inset_r$MH() {
        return RuntimeHelper.requireNonNull(constants$1612.graphene_rect_inset_r$MH,"graphene_rect_inset_r");
    }
    public static void graphene_rect_inset_r ( Addressable r,  float d_x,  float d_y,  Addressable res) {
        var mh$ = graphene_rect_inset_r$MH();
        try {
            mh$.invokeExact(r, d_x, d_y, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_rect_round_to_pixel$MH() {
        return RuntimeHelper.requireNonNull(constants$1613.graphene_rect_round_to_pixel$MH,"graphene_rect_round_to_pixel");
    }
    public static MemoryAddress graphene_rect_round_to_pixel ( Addressable r) {
        var mh$ = graphene_rect_round_to_pixel$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(r);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_rect_round$MH() {
        return RuntimeHelper.requireNonNull(constants$1613.graphene_rect_round$MH,"graphene_rect_round");
    }
    public static void graphene_rect_round ( Addressable r,  Addressable res) {
        var mh$ = graphene_rect_round$MH();
        try {
            mh$.invokeExact(r, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_rect_round_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1613.graphene_rect_round_extents$MH,"graphene_rect_round_extents");
    }
    public static void graphene_rect_round_extents ( Addressable r,  Addressable res) {
        var mh$ = graphene_rect_round_extents$MH();
        try {
            mh$.invokeExact(r, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_rect_interpolate$MH() {
        return RuntimeHelper.requireNonNull(constants$1613.graphene_rect_interpolate$MH,"graphene_rect_interpolate");
    }
    public static void graphene_rect_interpolate ( Addressable a,  Addressable b,  double factor,  Addressable res) {
        var mh$ = graphene_rect_interpolate$MH();
        try {
            mh$.invokeExact(a, b, factor, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_rect_expand$MH() {
        return RuntimeHelper.requireNonNull(constants$1613.graphene_rect_expand$MH,"graphene_rect_expand");
    }
    public static void graphene_rect_expand ( Addressable r,  Addressable p,  Addressable res) {
        var mh$ = graphene_rect_expand$MH();
        try {
            mh$.invokeExact(r, p, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_rect_zero$MH() {
        return RuntimeHelper.requireNonNull(constants$1613.graphene_rect_zero$MH,"graphene_rect_zero");
    }
    public static MemoryAddress graphene_rect_zero () {
        var mh$ = graphene_rect_zero$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_rect_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$1614.graphene_rect_scale$MH,"graphene_rect_scale");
    }
    public static void graphene_rect_scale ( Addressable r,  float s_h,  float s_v,  Addressable res) {
        var mh$ = graphene_rect_scale$MH();
        try {
            mh$.invokeExact(r, s_h, s_v, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_point3d_alloc$MH() {
        return RuntimeHelper.requireNonNull(constants$1614.graphene_point3d_alloc$MH,"graphene_point3d_alloc");
    }
    public static MemoryAddress graphene_point3d_alloc () {
        var mh$ = graphene_point3d_alloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_point3d_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1614.graphene_point3d_free$MH,"graphene_point3d_free");
    }
    public static void graphene_point3d_free ( Addressable p) {
        var mh$ = graphene_point3d_free$MH();
        try {
            mh$.invokeExact(p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_point3d_init$MH() {
        return RuntimeHelper.requireNonNull(constants$1614.graphene_point3d_init$MH,"graphene_point3d_init");
    }
    public static MemoryAddress graphene_point3d_init ( Addressable p,  float x,  float y,  float z) {
        var mh$ = graphene_point3d_init$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(p, x, y, z);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_point3d_init_from_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1614.graphene_point3d_init_from_point$MH,"graphene_point3d_init_from_point");
    }
    public static MemoryAddress graphene_point3d_init_from_point ( Addressable p,  Addressable src) {
        var mh$ = graphene_point3d_init_from_point$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(p, src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_point3d_init_from_vec3$MH() {
        return RuntimeHelper.requireNonNull(constants$1614.graphene_point3d_init_from_vec3$MH,"graphene_point3d_init_from_vec3");
    }
    public static MemoryAddress graphene_point3d_init_from_vec3 ( Addressable p,  Addressable v) {
        var mh$ = graphene_point3d_init_from_vec3$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(p, v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_point3d_to_vec3$MH() {
        return RuntimeHelper.requireNonNull(constants$1615.graphene_point3d_to_vec3$MH,"graphene_point3d_to_vec3");
    }
    public static void graphene_point3d_to_vec3 ( Addressable p,  Addressable v) {
        var mh$ = graphene_point3d_to_vec3$MH();
        try {
            mh$.invokeExact(p, v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_point3d_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$1615.graphene_point3d_equal$MH,"graphene_point3d_equal");
    }
    public static boolean graphene_point3d_equal ( Addressable a,  Addressable b) {
        var mh$ = graphene_point3d_equal$MH();
        try {
            return (boolean)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_point3d_near$MH() {
        return RuntimeHelper.requireNonNull(constants$1615.graphene_point3d_near$MH,"graphene_point3d_near");
    }
    public static boolean graphene_point3d_near ( Addressable a,  Addressable b,  float epsilon) {
        var mh$ = graphene_point3d_near$MH();
        try {
            return (boolean)mh$.invokeExact(a, b, epsilon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_point3d_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$1615.graphene_point3d_scale$MH,"graphene_point3d_scale");
    }
    public static void graphene_point3d_scale ( Addressable p,  float factor,  Addressable res) {
        var mh$ = graphene_point3d_scale$MH();
        try {
            mh$.invokeExact(p, factor, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_point3d_cross$MH() {
        return RuntimeHelper.requireNonNull(constants$1615.graphene_point3d_cross$MH,"graphene_point3d_cross");
    }
    public static void graphene_point3d_cross ( Addressable a,  Addressable b,  Addressable res) {
        var mh$ = graphene_point3d_cross$MH();
        try {
            mh$.invokeExact(a, b, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_point3d_dot$MH() {
        return RuntimeHelper.requireNonNull(constants$1615.graphene_point3d_dot$MH,"graphene_point3d_dot");
    }
    public static float graphene_point3d_dot ( Addressable a,  Addressable b) {
        var mh$ = graphene_point3d_dot$MH();
        try {
            return (float)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_point3d_length$MH() {
        return RuntimeHelper.requireNonNull(constants$1616.graphene_point3d_length$MH,"graphene_point3d_length");
    }
    public static float graphene_point3d_length ( Addressable p) {
        var mh$ = graphene_point3d_length$MH();
        try {
            return (float)mh$.invokeExact(p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_point3d_normalize$MH() {
        return RuntimeHelper.requireNonNull(constants$1616.graphene_point3d_normalize$MH,"graphene_point3d_normalize");
    }
    public static void graphene_point3d_normalize ( Addressable p,  Addressable res) {
        var mh$ = graphene_point3d_normalize$MH();
        try {
            mh$.invokeExact(p, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_point3d_distance$MH() {
        return RuntimeHelper.requireNonNull(constants$1616.graphene_point3d_distance$MH,"graphene_point3d_distance");
    }
    public static float graphene_point3d_distance ( Addressable a,  Addressable b,  Addressable delta) {
        var mh$ = graphene_point3d_distance$MH();
        try {
            return (float)mh$.invokeExact(a, b, delta);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_point3d_interpolate$MH() {
        return RuntimeHelper.requireNonNull(constants$1616.graphene_point3d_interpolate$MH,"graphene_point3d_interpolate");
    }
    public static void graphene_point3d_interpolate ( Addressable a,  Addressable b,  double factor,  Addressable res) {
        var mh$ = graphene_point3d_interpolate$MH();
        try {
            mh$.invokeExact(a, b, factor, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_point3d_normalize_viewport$MH() {
        return RuntimeHelper.requireNonNull(constants$1616.graphene_point3d_normalize_viewport$MH,"graphene_point3d_normalize_viewport");
    }
    public static void graphene_point3d_normalize_viewport ( Addressable p,  Addressable viewport,  float z_near,  float z_far,  Addressable res) {
        var mh$ = graphene_point3d_normalize_viewport$MH();
        try {
            mh$.invokeExact(p, viewport, z_near, z_far, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_point3d_zero$MH() {
        return RuntimeHelper.requireNonNull(constants$1616.graphene_point3d_zero$MH,"graphene_point3d_zero");
    }
    public static MemoryAddress graphene_point3d_zero () {
        var mh$ = graphene_point3d_zero$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_quad_alloc$MH() {
        return RuntimeHelper.requireNonNull(constants$1617.graphene_quad_alloc$MH,"graphene_quad_alloc");
    }
    public static MemoryAddress graphene_quad_alloc () {
        var mh$ = graphene_quad_alloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_quad_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1617.graphene_quad_free$MH,"graphene_quad_free");
    }
    public static void graphene_quad_free ( Addressable q) {
        var mh$ = graphene_quad_free$MH();
        try {
            mh$.invokeExact(q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_quad_init$MH() {
        return RuntimeHelper.requireNonNull(constants$1617.graphene_quad_init$MH,"graphene_quad_init");
    }
    public static MemoryAddress graphene_quad_init ( Addressable q,  Addressable p1,  Addressable p2,  Addressable p3,  Addressable p4) {
        var mh$ = graphene_quad_init$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(q, p1, p2, p3, p4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_quad_init_from_rect$MH() {
        return RuntimeHelper.requireNonNull(constants$1617.graphene_quad_init_from_rect$MH,"graphene_quad_init_from_rect");
    }
    public static MemoryAddress graphene_quad_init_from_rect ( Addressable q,  Addressable r) {
        var mh$ = graphene_quad_init_from_rect$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(q, r);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_quad_init_from_points$MH() {
        return RuntimeHelper.requireNonNull(constants$1617.graphene_quad_init_from_points$MH,"graphene_quad_init_from_points");
    }
    public static MemoryAddress graphene_quad_init_from_points ( Addressable q,  Addressable points) {
        var mh$ = graphene_quad_init_from_points$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(q, points);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_quad_contains$MH() {
        return RuntimeHelper.requireNonNull(constants$1617.graphene_quad_contains$MH,"graphene_quad_contains");
    }
    public static boolean graphene_quad_contains ( Addressable q,  Addressable p) {
        var mh$ = graphene_quad_contains$MH();
        try {
            return (boolean)mh$.invokeExact(q, p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_quad_bounds$MH() {
        return RuntimeHelper.requireNonNull(constants$1618.graphene_quad_bounds$MH,"graphene_quad_bounds");
    }
    public static void graphene_quad_bounds ( Addressable q,  Addressable r) {
        var mh$ = graphene_quad_bounds$MH();
        try {
            mh$.invokeExact(q, r);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_quad_get_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1618.graphene_quad_get_point$MH,"graphene_quad_get_point");
    }
    public static MemoryAddress graphene_quad_get_point ( Addressable q,  int index_) {
        var mh$ = graphene_quad_get_point$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(q, index_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_quaternion_alloc$MH() {
        return RuntimeHelper.requireNonNull(constants$1618.graphene_quaternion_alloc$MH,"graphene_quaternion_alloc");
    }
    public static MemoryAddress graphene_quaternion_alloc () {
        var mh$ = graphene_quaternion_alloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_quaternion_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1618.graphene_quaternion_free$MH,"graphene_quaternion_free");
    }
    public static void graphene_quaternion_free ( Addressable q) {
        var mh$ = graphene_quaternion_free$MH();
        try {
            mh$.invokeExact(q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_quaternion_init$MH() {
        return RuntimeHelper.requireNonNull(constants$1618.graphene_quaternion_init$MH,"graphene_quaternion_init");
    }
    public static MemoryAddress graphene_quaternion_init ( Addressable q,  float x,  float y,  float z,  float w) {
        var mh$ = graphene_quaternion_init$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(q, x, y, z, w);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_quaternion_init_identity$MH() {
        return RuntimeHelper.requireNonNull(constants$1618.graphene_quaternion_init_identity$MH,"graphene_quaternion_init_identity");
    }
    public static MemoryAddress graphene_quaternion_init_identity ( Addressable q) {
        var mh$ = graphene_quaternion_init_identity$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_quaternion_init_from_quaternion$MH() {
        return RuntimeHelper.requireNonNull(constants$1619.graphene_quaternion_init_from_quaternion$MH,"graphene_quaternion_init_from_quaternion");
    }
    public static MemoryAddress graphene_quaternion_init_from_quaternion ( Addressable q,  Addressable src) {
        var mh$ = graphene_quaternion_init_from_quaternion$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(q, src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_quaternion_init_from_vec4$MH() {
        return RuntimeHelper.requireNonNull(constants$1619.graphene_quaternion_init_from_vec4$MH,"graphene_quaternion_init_from_vec4");
    }
    public static MemoryAddress graphene_quaternion_init_from_vec4 ( Addressable q,  Addressable src) {
        var mh$ = graphene_quaternion_init_from_vec4$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(q, src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_quaternion_init_from_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$1619.graphene_quaternion_init_from_matrix$MH,"graphene_quaternion_init_from_matrix");
    }
    public static MemoryAddress graphene_quaternion_init_from_matrix ( Addressable q,  Addressable m) {
        var mh$ = graphene_quaternion_init_from_matrix$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(q, m);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_quaternion_init_from_angles$MH() {
        return RuntimeHelper.requireNonNull(constants$1619.graphene_quaternion_init_from_angles$MH,"graphene_quaternion_init_from_angles");
    }
    public static MemoryAddress graphene_quaternion_init_from_angles ( Addressable q,  float deg_x,  float deg_y,  float deg_z) {
        var mh$ = graphene_quaternion_init_from_angles$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(q, deg_x, deg_y, deg_z);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_quaternion_init_from_radians$MH() {
        return RuntimeHelper.requireNonNull(constants$1619.graphene_quaternion_init_from_radians$MH,"graphene_quaternion_init_from_radians");
    }
    public static MemoryAddress graphene_quaternion_init_from_radians ( Addressable q,  float rad_x,  float rad_y,  float rad_z) {
        var mh$ = graphene_quaternion_init_from_radians$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(q, rad_x, rad_y, rad_z);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_quaternion_init_from_angle_vec3$MH() {
        return RuntimeHelper.requireNonNull(constants$1619.graphene_quaternion_init_from_angle_vec3$MH,"graphene_quaternion_init_from_angle_vec3");
    }
    public static MemoryAddress graphene_quaternion_init_from_angle_vec3 ( Addressable q,  float angle,  Addressable axis) {
        var mh$ = graphene_quaternion_init_from_angle_vec3$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(q, angle, axis);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_quaternion_init_from_euler$MH() {
        return RuntimeHelper.requireNonNull(constants$1620.graphene_quaternion_init_from_euler$MH,"graphene_quaternion_init_from_euler");
    }
    public static MemoryAddress graphene_quaternion_init_from_euler ( Addressable q,  Addressable e) {
        var mh$ = graphene_quaternion_init_from_euler$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(q, e);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_quaternion_to_vec4$MH() {
        return RuntimeHelper.requireNonNull(constants$1620.graphene_quaternion_to_vec4$MH,"graphene_quaternion_to_vec4");
    }
    public static void graphene_quaternion_to_vec4 ( Addressable q,  Addressable res) {
        var mh$ = graphene_quaternion_to_vec4$MH();
        try {
            mh$.invokeExact(q, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_quaternion_to_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$1620.graphene_quaternion_to_matrix$MH,"graphene_quaternion_to_matrix");
    }
    public static void graphene_quaternion_to_matrix ( Addressable q,  Addressable m) {
        var mh$ = graphene_quaternion_to_matrix$MH();
        try {
            mh$.invokeExact(q, m);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_quaternion_to_angles$MH() {
        return RuntimeHelper.requireNonNull(constants$1620.graphene_quaternion_to_angles$MH,"graphene_quaternion_to_angles");
    }
    public static void graphene_quaternion_to_angles ( Addressable q,  Addressable deg_x,  Addressable deg_y,  Addressable deg_z) {
        var mh$ = graphene_quaternion_to_angles$MH();
        try {
            mh$.invokeExact(q, deg_x, deg_y, deg_z);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_quaternion_to_radians$MH() {
        return RuntimeHelper.requireNonNull(constants$1620.graphene_quaternion_to_radians$MH,"graphene_quaternion_to_radians");
    }
    public static void graphene_quaternion_to_radians ( Addressable q,  Addressable rad_x,  Addressable rad_y,  Addressable rad_z) {
        var mh$ = graphene_quaternion_to_radians$MH();
        try {
            mh$.invokeExact(q, rad_x, rad_y, rad_z);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_quaternion_to_angle_vec3$MH() {
        return RuntimeHelper.requireNonNull(constants$1620.graphene_quaternion_to_angle_vec3$MH,"graphene_quaternion_to_angle_vec3");
    }
    public static void graphene_quaternion_to_angle_vec3 ( Addressable q,  Addressable angle,  Addressable axis) {
        var mh$ = graphene_quaternion_to_angle_vec3$MH();
        try {
            mh$.invokeExact(q, angle, axis);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_quaternion_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$1621.graphene_quaternion_equal$MH,"graphene_quaternion_equal");
    }
    public static boolean graphene_quaternion_equal ( Addressable a,  Addressable b) {
        var mh$ = graphene_quaternion_equal$MH();
        try {
            return (boolean)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_quaternion_dot$MH() {
        return RuntimeHelper.requireNonNull(constants$1621.graphene_quaternion_dot$MH,"graphene_quaternion_dot");
    }
    public static float graphene_quaternion_dot ( Addressable a,  Addressable b) {
        var mh$ = graphene_quaternion_dot$MH();
        try {
            return (float)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_quaternion_invert$MH() {
        return RuntimeHelper.requireNonNull(constants$1621.graphene_quaternion_invert$MH,"graphene_quaternion_invert");
    }
    public static void graphene_quaternion_invert ( Addressable q,  Addressable res) {
        var mh$ = graphene_quaternion_invert$MH();
        try {
            mh$.invokeExact(q, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_quaternion_normalize$MH() {
        return RuntimeHelper.requireNonNull(constants$1621.graphene_quaternion_normalize$MH,"graphene_quaternion_normalize");
    }
    public static void graphene_quaternion_normalize ( Addressable q,  Addressable res) {
        var mh$ = graphene_quaternion_normalize$MH();
        try {
            mh$.invokeExact(q, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_quaternion_slerp$MH() {
        return RuntimeHelper.requireNonNull(constants$1621.graphene_quaternion_slerp$MH,"graphene_quaternion_slerp");
    }
    public static void graphene_quaternion_slerp ( Addressable a,  Addressable b,  float factor,  Addressable res) {
        var mh$ = graphene_quaternion_slerp$MH();
        try {
            mh$.invokeExact(a, b, factor, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_quaternion_multiply$MH() {
        return RuntimeHelper.requireNonNull(constants$1621.graphene_quaternion_multiply$MH,"graphene_quaternion_multiply");
    }
    public static void graphene_quaternion_multiply ( Addressable a,  Addressable b,  Addressable res) {
        var mh$ = graphene_quaternion_multiply$MH();
        try {
            mh$.invokeExact(a, b, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_quaternion_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$1622.graphene_quaternion_scale$MH,"graphene_quaternion_scale");
    }
    public static void graphene_quaternion_scale ( Addressable q,  float factor,  Addressable res) {
        var mh$ = graphene_quaternion_scale$MH();
        try {
            mh$.invokeExact(q, factor, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_quaternion_add$MH() {
        return RuntimeHelper.requireNonNull(constants$1622.graphene_quaternion_add$MH,"graphene_quaternion_add");
    }
    public static void graphene_quaternion_add ( Addressable a,  Addressable b,  Addressable res) {
        var mh$ = graphene_quaternion_add$MH();
        try {
            mh$.invokeExact(a, b, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GRAPHENE_EULER_ORDER_DEFAULT() {
        return (int)-1L;
    }
    public static int GRAPHENE_EULER_ORDER_XYZ() {
        return (int)0L;
    }
    public static int GRAPHENE_EULER_ORDER_YZX() {
        return (int)1L;
    }
    public static int GRAPHENE_EULER_ORDER_ZXY() {
        return (int)2L;
    }
    public static int GRAPHENE_EULER_ORDER_XZY() {
        return (int)3L;
    }
    public static int GRAPHENE_EULER_ORDER_YXZ() {
        return (int)4L;
    }
    public static int GRAPHENE_EULER_ORDER_ZYX() {
        return (int)5L;
    }
    public static int GRAPHENE_EULER_ORDER_SXYZ() {
        return (int)6L;
    }
    public static int GRAPHENE_EULER_ORDER_SXYX() {
        return (int)7L;
    }
    public static int GRAPHENE_EULER_ORDER_SXZY() {
        return (int)8L;
    }
    public static int GRAPHENE_EULER_ORDER_SXZX() {
        return (int)9L;
    }
    public static int GRAPHENE_EULER_ORDER_SYZX() {
        return (int)10L;
    }
    public static int GRAPHENE_EULER_ORDER_SYZY() {
        return (int)11L;
    }
    public static int GRAPHENE_EULER_ORDER_SYXZ() {
        return (int)12L;
    }
    public static int GRAPHENE_EULER_ORDER_SYXY() {
        return (int)13L;
    }
    public static int GRAPHENE_EULER_ORDER_SZXY() {
        return (int)14L;
    }
    public static int GRAPHENE_EULER_ORDER_SZXZ() {
        return (int)15L;
    }
    public static int GRAPHENE_EULER_ORDER_SZYX() {
        return (int)16L;
    }
    public static int GRAPHENE_EULER_ORDER_SZYZ() {
        return (int)17L;
    }
    public static int GRAPHENE_EULER_ORDER_RZYX() {
        return (int)18L;
    }
    public static int GRAPHENE_EULER_ORDER_RXYX() {
        return (int)19L;
    }
    public static int GRAPHENE_EULER_ORDER_RYZX() {
        return (int)20L;
    }
    public static int GRAPHENE_EULER_ORDER_RXZX() {
        return (int)21L;
    }
    public static int GRAPHENE_EULER_ORDER_RXZY() {
        return (int)22L;
    }
    public static int GRAPHENE_EULER_ORDER_RYZY() {
        return (int)23L;
    }
    public static int GRAPHENE_EULER_ORDER_RZXY() {
        return (int)24L;
    }
    public static int GRAPHENE_EULER_ORDER_RYXY() {
        return (int)25L;
    }
    public static int GRAPHENE_EULER_ORDER_RYXZ() {
        return (int)26L;
    }
    public static int GRAPHENE_EULER_ORDER_RZXZ() {
        return (int)27L;
    }
    public static int GRAPHENE_EULER_ORDER_RXYZ() {
        return (int)28L;
    }
    public static int GRAPHENE_EULER_ORDER_RZYZ() {
        return (int)29L;
    }
    public static MethodHandle graphene_euler_alloc$MH() {
        return RuntimeHelper.requireNonNull(constants$1622.graphene_euler_alloc$MH,"graphene_euler_alloc");
    }
    public static MemoryAddress graphene_euler_alloc () {
        var mh$ = graphene_euler_alloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_euler_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1622.graphene_euler_free$MH,"graphene_euler_free");
    }
    public static void graphene_euler_free ( Addressable e) {
        var mh$ = graphene_euler_free$MH();
        try {
            mh$.invokeExact(e);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_euler_init$MH() {
        return RuntimeHelper.requireNonNull(constants$1622.graphene_euler_init$MH,"graphene_euler_init");
    }
    public static MemoryAddress graphene_euler_init ( Addressable e,  float x,  float y,  float z) {
        var mh$ = graphene_euler_init$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(e, x, y, z);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_euler_init_with_order$MH() {
        return RuntimeHelper.requireNonNull(constants$1622.graphene_euler_init_with_order$MH,"graphene_euler_init_with_order");
    }
    public static MemoryAddress graphene_euler_init_with_order ( Addressable e,  float x,  float y,  float z,  int order) {
        var mh$ = graphene_euler_init_with_order$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(e, x, y, z, order);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_euler_init_from_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$1623.graphene_euler_init_from_matrix$MH,"graphene_euler_init_from_matrix");
    }
    public static MemoryAddress graphene_euler_init_from_matrix ( Addressable e,  Addressable m,  int order) {
        var mh$ = graphene_euler_init_from_matrix$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(e, m, order);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_euler_init_from_quaternion$MH() {
        return RuntimeHelper.requireNonNull(constants$1623.graphene_euler_init_from_quaternion$MH,"graphene_euler_init_from_quaternion");
    }
    public static MemoryAddress graphene_euler_init_from_quaternion ( Addressable e,  Addressable q,  int order) {
        var mh$ = graphene_euler_init_from_quaternion$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(e, q, order);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_euler_init_from_vec3$MH() {
        return RuntimeHelper.requireNonNull(constants$1623.graphene_euler_init_from_vec3$MH,"graphene_euler_init_from_vec3");
    }
    public static MemoryAddress graphene_euler_init_from_vec3 ( Addressable e,  Addressable v,  int order) {
        var mh$ = graphene_euler_init_from_vec3$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(e, v, order);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_euler_init_from_euler$MH() {
        return RuntimeHelper.requireNonNull(constants$1623.graphene_euler_init_from_euler$MH,"graphene_euler_init_from_euler");
    }
    public static MemoryAddress graphene_euler_init_from_euler ( Addressable e,  Addressable src) {
        var mh$ = graphene_euler_init_from_euler$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(e, src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_euler_init_from_radians$MH() {
        return RuntimeHelper.requireNonNull(constants$1623.graphene_euler_init_from_radians$MH,"graphene_euler_init_from_radians");
    }
    public static MemoryAddress graphene_euler_init_from_radians ( Addressable e,  float x,  float y,  float z,  int order) {
        var mh$ = graphene_euler_init_from_radians$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(e, x, y, z, order);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_euler_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$1623.graphene_euler_equal$MH,"graphene_euler_equal");
    }
    public static boolean graphene_euler_equal ( Addressable a,  Addressable b) {
        var mh$ = graphene_euler_equal$MH();
        try {
            return (boolean)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_euler_get_x$MH() {
        return RuntimeHelper.requireNonNull(constants$1624.graphene_euler_get_x$MH,"graphene_euler_get_x");
    }
    public static float graphene_euler_get_x ( Addressable e) {
        var mh$ = graphene_euler_get_x$MH();
        try {
            return (float)mh$.invokeExact(e);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_euler_get_y$MH() {
        return RuntimeHelper.requireNonNull(constants$1624.graphene_euler_get_y$MH,"graphene_euler_get_y");
    }
    public static float graphene_euler_get_y ( Addressable e) {
        var mh$ = graphene_euler_get_y$MH();
        try {
            return (float)mh$.invokeExact(e);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_euler_get_z$MH() {
        return RuntimeHelper.requireNonNull(constants$1624.graphene_euler_get_z$MH,"graphene_euler_get_z");
    }
    public static float graphene_euler_get_z ( Addressable e) {
        var mh$ = graphene_euler_get_z$MH();
        try {
            return (float)mh$.invokeExact(e);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_euler_get_order$MH() {
        return RuntimeHelper.requireNonNull(constants$1624.graphene_euler_get_order$MH,"graphene_euler_get_order");
    }
    public static int graphene_euler_get_order ( Addressable e) {
        var mh$ = graphene_euler_get_order$MH();
        try {
            return (int)mh$.invokeExact(e);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_euler_get_alpha$MH() {
        return RuntimeHelper.requireNonNull(constants$1624.graphene_euler_get_alpha$MH,"graphene_euler_get_alpha");
    }
    public static float graphene_euler_get_alpha ( Addressable e) {
        var mh$ = graphene_euler_get_alpha$MH();
        try {
            return (float)mh$.invokeExact(e);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_euler_get_beta$MH() {
        return RuntimeHelper.requireNonNull(constants$1624.graphene_euler_get_beta$MH,"graphene_euler_get_beta");
    }
    public static float graphene_euler_get_beta ( Addressable e) {
        var mh$ = graphene_euler_get_beta$MH();
        try {
            return (float)mh$.invokeExact(e);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_euler_get_gamma$MH() {
        return RuntimeHelper.requireNonNull(constants$1625.graphene_euler_get_gamma$MH,"graphene_euler_get_gamma");
    }
    public static float graphene_euler_get_gamma ( Addressable e) {
        var mh$ = graphene_euler_get_gamma$MH();
        try {
            return (float)mh$.invokeExact(e);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_euler_to_vec3$MH() {
        return RuntimeHelper.requireNonNull(constants$1625.graphene_euler_to_vec3$MH,"graphene_euler_to_vec3");
    }
    public static void graphene_euler_to_vec3 ( Addressable e,  Addressable res) {
        var mh$ = graphene_euler_to_vec3$MH();
        try {
            mh$.invokeExact(e, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_euler_to_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$1625.graphene_euler_to_matrix$MH,"graphene_euler_to_matrix");
    }
    public static void graphene_euler_to_matrix ( Addressable e,  Addressable res) {
        var mh$ = graphene_euler_to_matrix$MH();
        try {
            mh$.invokeExact(e, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_euler_to_quaternion$MH() {
        return RuntimeHelper.requireNonNull(constants$1625.graphene_euler_to_quaternion$MH,"graphene_euler_to_quaternion");
    }
    public static void graphene_euler_to_quaternion ( Addressable e,  Addressable res) {
        var mh$ = graphene_euler_to_quaternion$MH();
        try {
            mh$.invokeExact(e, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_euler_reorder$MH() {
        return RuntimeHelper.requireNonNull(constants$1625.graphene_euler_reorder$MH,"graphene_euler_reorder");
    }
    public static void graphene_euler_reorder ( Addressable e,  int order,  Addressable res) {
        var mh$ = graphene_euler_reorder$MH();
        try {
            mh$.invokeExact(e, order, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_plane_alloc$MH() {
        return RuntimeHelper.requireNonNull(constants$1625.graphene_plane_alloc$MH,"graphene_plane_alloc");
    }
    public static MemoryAddress graphene_plane_alloc () {
        var mh$ = graphene_plane_alloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_plane_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1626.graphene_plane_free$MH,"graphene_plane_free");
    }
    public static void graphene_plane_free ( Addressable p) {
        var mh$ = graphene_plane_free$MH();
        try {
            mh$.invokeExact(p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_plane_init$MH() {
        return RuntimeHelper.requireNonNull(constants$1626.graphene_plane_init$MH,"graphene_plane_init");
    }
    public static MemoryAddress graphene_plane_init ( Addressable p,  Addressable normal,  float constant) {
        var mh$ = graphene_plane_init$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(p, normal, constant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_plane_init_from_vec4$MH() {
        return RuntimeHelper.requireNonNull(constants$1626.graphene_plane_init_from_vec4$MH,"graphene_plane_init_from_vec4");
    }
    public static MemoryAddress graphene_plane_init_from_vec4 ( Addressable p,  Addressable src) {
        var mh$ = graphene_plane_init_from_vec4$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(p, src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_plane_init_from_plane$MH() {
        return RuntimeHelper.requireNonNull(constants$1626.graphene_plane_init_from_plane$MH,"graphene_plane_init_from_plane");
    }
    public static MemoryAddress graphene_plane_init_from_plane ( Addressable p,  Addressable src) {
        var mh$ = graphene_plane_init_from_plane$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(p, src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_plane_init_from_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1626.graphene_plane_init_from_point$MH,"graphene_plane_init_from_point");
    }
    public static MemoryAddress graphene_plane_init_from_point ( Addressable p,  Addressable normal,  Addressable point) {
        var mh$ = graphene_plane_init_from_point$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(p, normal, point);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_plane_init_from_points$MH() {
        return RuntimeHelper.requireNonNull(constants$1626.graphene_plane_init_from_points$MH,"graphene_plane_init_from_points");
    }
    public static MemoryAddress graphene_plane_init_from_points ( Addressable p,  Addressable a,  Addressable b,  Addressable c) {
        var mh$ = graphene_plane_init_from_points$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(p, a, b, c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_plane_normalize$MH() {
        return RuntimeHelper.requireNonNull(constants$1627.graphene_plane_normalize$MH,"graphene_plane_normalize");
    }
    public static void graphene_plane_normalize ( Addressable p,  Addressable res) {
        var mh$ = graphene_plane_normalize$MH();
        try {
            mh$.invokeExact(p, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_plane_negate$MH() {
        return RuntimeHelper.requireNonNull(constants$1627.graphene_plane_negate$MH,"graphene_plane_negate");
    }
    public static void graphene_plane_negate ( Addressable p,  Addressable res) {
        var mh$ = graphene_plane_negate$MH();
        try {
            mh$.invokeExact(p, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_plane_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$1627.graphene_plane_equal$MH,"graphene_plane_equal");
    }
    public static boolean graphene_plane_equal ( Addressable a,  Addressable b) {
        var mh$ = graphene_plane_equal$MH();
        try {
            return (boolean)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_plane_distance$MH() {
        return RuntimeHelper.requireNonNull(constants$1627.graphene_plane_distance$MH,"graphene_plane_distance");
    }
    public static float graphene_plane_distance ( Addressable p,  Addressable point) {
        var mh$ = graphene_plane_distance$MH();
        try {
            return (float)mh$.invokeExact(p, point);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_plane_get_normal$MH() {
        return RuntimeHelper.requireNonNull(constants$1627.graphene_plane_get_normal$MH,"graphene_plane_get_normal");
    }
    public static void graphene_plane_get_normal ( Addressable p,  Addressable normal) {
        var mh$ = graphene_plane_get_normal$MH();
        try {
            mh$.invokeExact(p, normal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_plane_get_constant$MH() {
        return RuntimeHelper.requireNonNull(constants$1627.graphene_plane_get_constant$MH,"graphene_plane_get_constant");
    }
    public static float graphene_plane_get_constant ( Addressable p) {
        var mh$ = graphene_plane_get_constant$MH();
        try {
            return (float)mh$.invokeExact(p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_plane_transform$MH() {
        return RuntimeHelper.requireNonNull(constants$1628.graphene_plane_transform$MH,"graphene_plane_transform");
    }
    public static void graphene_plane_transform ( Addressable p,  Addressable matrix,  Addressable normal_matrix,  Addressable res) {
        var mh$ = graphene_plane_transform$MH();
        try {
            mh$.invokeExact(p, matrix, normal_matrix, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_frustum_alloc$MH() {
        return RuntimeHelper.requireNonNull(constants$1628.graphene_frustum_alloc$MH,"graphene_frustum_alloc");
    }
    public static MemoryAddress graphene_frustum_alloc () {
        var mh$ = graphene_frustum_alloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_frustum_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1628.graphene_frustum_free$MH,"graphene_frustum_free");
    }
    public static void graphene_frustum_free ( Addressable f) {
        var mh$ = graphene_frustum_free$MH();
        try {
            mh$.invokeExact(f);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_frustum_init$MH() {
        return RuntimeHelper.requireNonNull(constants$1628.graphene_frustum_init$MH,"graphene_frustum_init");
    }
    public static MemoryAddress graphene_frustum_init ( Addressable f,  Addressable p0,  Addressable p1,  Addressable p2,  Addressable p3,  Addressable p4,  Addressable p5) {
        var mh$ = graphene_frustum_init$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(f, p0, p1, p2, p3, p4, p5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_frustum_init_from_frustum$MH() {
        return RuntimeHelper.requireNonNull(constants$1628.graphene_frustum_init_from_frustum$MH,"graphene_frustum_init_from_frustum");
    }
    public static MemoryAddress graphene_frustum_init_from_frustum ( Addressable f,  Addressable src) {
        var mh$ = graphene_frustum_init_from_frustum$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(f, src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_frustum_init_from_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$1628.graphene_frustum_init_from_matrix$MH,"graphene_frustum_init_from_matrix");
    }
    public static MemoryAddress graphene_frustum_init_from_matrix ( Addressable f,  Addressable matrix) {
        var mh$ = graphene_frustum_init_from_matrix$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(f, matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_frustum_contains_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1629.graphene_frustum_contains_point$MH,"graphene_frustum_contains_point");
    }
    public static boolean graphene_frustum_contains_point ( Addressable f,  Addressable point) {
        var mh$ = graphene_frustum_contains_point$MH();
        try {
            return (boolean)mh$.invokeExact(f, point);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_frustum_intersects_sphere$MH() {
        return RuntimeHelper.requireNonNull(constants$1629.graphene_frustum_intersects_sphere$MH,"graphene_frustum_intersects_sphere");
    }
    public static boolean graphene_frustum_intersects_sphere ( Addressable f,  Addressable sphere) {
        var mh$ = graphene_frustum_intersects_sphere$MH();
        try {
            return (boolean)mh$.invokeExact(f, sphere);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_frustum_intersects_box$MH() {
        return RuntimeHelper.requireNonNull(constants$1629.graphene_frustum_intersects_box$MH,"graphene_frustum_intersects_box");
    }
    public static boolean graphene_frustum_intersects_box ( Addressable f,  Addressable box) {
        var mh$ = graphene_frustum_intersects_box$MH();
        try {
            return (boolean)mh$.invokeExact(f, box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_frustum_get_planes$MH() {
        return RuntimeHelper.requireNonNull(constants$1629.graphene_frustum_get_planes$MH,"graphene_frustum_get_planes");
    }
    public static void graphene_frustum_get_planes ( Addressable f,  Addressable planes) {
        var mh$ = graphene_frustum_get_planes$MH();
        try {
            mh$.invokeExact(f, planes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_frustum_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$1629.graphene_frustum_equal$MH,"graphene_frustum_equal");
    }
    public static boolean graphene_frustum_equal ( Addressable a,  Addressable b) {
        var mh$ = graphene_frustum_equal$MH();
        try {
            return (boolean)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_sphere_alloc$MH() {
        return RuntimeHelper.requireNonNull(constants$1629.graphene_sphere_alloc$MH,"graphene_sphere_alloc");
    }
    public static MemoryAddress graphene_sphere_alloc () {
        var mh$ = graphene_sphere_alloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_sphere_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1630.graphene_sphere_free$MH,"graphene_sphere_free");
    }
    public static void graphene_sphere_free ( Addressable s) {
        var mh$ = graphene_sphere_free$MH();
        try {
            mh$.invokeExact(s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_sphere_init$MH() {
        return RuntimeHelper.requireNonNull(constants$1630.graphene_sphere_init$MH,"graphene_sphere_init");
    }
    public static MemoryAddress graphene_sphere_init ( Addressable s,  Addressable center,  float radius) {
        var mh$ = graphene_sphere_init$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(s, center, radius);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_sphere_init_from_points$MH() {
        return RuntimeHelper.requireNonNull(constants$1630.graphene_sphere_init_from_points$MH,"graphene_sphere_init_from_points");
    }
    public static MemoryAddress graphene_sphere_init_from_points ( Addressable s,  int n_points,  Addressable points,  Addressable center) {
        var mh$ = graphene_sphere_init_from_points$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(s, n_points, points, center);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_sphere_init_from_vectors$MH() {
        return RuntimeHelper.requireNonNull(constants$1630.graphene_sphere_init_from_vectors$MH,"graphene_sphere_init_from_vectors");
    }
    public static MemoryAddress graphene_sphere_init_from_vectors ( Addressable s,  int n_vectors,  Addressable vectors,  Addressable center) {
        var mh$ = graphene_sphere_init_from_vectors$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(s, n_vectors, vectors, center);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_sphere_get_center$MH() {
        return RuntimeHelper.requireNonNull(constants$1630.graphene_sphere_get_center$MH,"graphene_sphere_get_center");
    }
    public static void graphene_sphere_get_center ( Addressable s,  Addressable center) {
        var mh$ = graphene_sphere_get_center$MH();
        try {
            mh$.invokeExact(s, center);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_sphere_get_radius$MH() {
        return RuntimeHelper.requireNonNull(constants$1630.graphene_sphere_get_radius$MH,"graphene_sphere_get_radius");
    }
    public static float graphene_sphere_get_radius ( Addressable s) {
        var mh$ = graphene_sphere_get_radius$MH();
        try {
            return (float)mh$.invokeExact(s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_sphere_is_empty$MH() {
        return RuntimeHelper.requireNonNull(constants$1631.graphene_sphere_is_empty$MH,"graphene_sphere_is_empty");
    }
    public static boolean graphene_sphere_is_empty ( Addressable s) {
        var mh$ = graphene_sphere_is_empty$MH();
        try {
            return (boolean)mh$.invokeExact(s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


