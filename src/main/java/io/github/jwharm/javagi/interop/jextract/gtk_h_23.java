// Generated by jextract

package io.github.jwharm.javagi.interop.jextract;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
 class gtk_h_23 extends gtk_h_22 {

    public static MethodHandle gtk_text_iter_backward_word_starts$MH() {
        return RuntimeHelper.requireNonNull(constants$2426.gtk_text_iter_backward_word_starts$MH,"gtk_text_iter_backward_word_starts");
    }
    public static int gtk_text_iter_backward_word_starts ( Addressable iter,  int count) {
        var mh$ = gtk_text_iter_backward_word_starts$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_visible_line$MH() {
        return RuntimeHelper.requireNonNull(constants$2426.gtk_text_iter_forward_visible_line$MH,"gtk_text_iter_forward_visible_line");
    }
    public static int gtk_text_iter_forward_visible_line ( Addressable iter) {
        var mh$ = gtk_text_iter_forward_visible_line$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_visible_line$MH() {
        return RuntimeHelper.requireNonNull(constants$2426.gtk_text_iter_backward_visible_line$MH,"gtk_text_iter_backward_visible_line");
    }
    public static int gtk_text_iter_backward_visible_line ( Addressable iter) {
        var mh$ = gtk_text_iter_backward_visible_line$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_visible_lines$MH() {
        return RuntimeHelper.requireNonNull(constants$2427.gtk_text_iter_forward_visible_lines$MH,"gtk_text_iter_forward_visible_lines");
    }
    public static int gtk_text_iter_forward_visible_lines ( Addressable iter,  int count) {
        var mh$ = gtk_text_iter_forward_visible_lines$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_visible_lines$MH() {
        return RuntimeHelper.requireNonNull(constants$2427.gtk_text_iter_backward_visible_lines$MH,"gtk_text_iter_backward_visible_lines");
    }
    public static int gtk_text_iter_backward_visible_lines ( Addressable iter,  int count) {
        var mh$ = gtk_text_iter_backward_visible_lines$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_visible_word_end$MH() {
        return RuntimeHelper.requireNonNull(constants$2427.gtk_text_iter_forward_visible_word_end$MH,"gtk_text_iter_forward_visible_word_end");
    }
    public static int gtk_text_iter_forward_visible_word_end ( Addressable iter) {
        var mh$ = gtk_text_iter_forward_visible_word_end$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_visible_word_start$MH() {
        return RuntimeHelper.requireNonNull(constants$2427.gtk_text_iter_backward_visible_word_start$MH,"gtk_text_iter_backward_visible_word_start");
    }
    public static int gtk_text_iter_backward_visible_word_start ( Addressable iter) {
        var mh$ = gtk_text_iter_backward_visible_word_start$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_visible_word_ends$MH() {
        return RuntimeHelper.requireNonNull(constants$2427.gtk_text_iter_forward_visible_word_ends$MH,"gtk_text_iter_forward_visible_word_ends");
    }
    public static int gtk_text_iter_forward_visible_word_ends ( Addressable iter,  int count) {
        var mh$ = gtk_text_iter_forward_visible_word_ends$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_visible_word_starts$MH() {
        return RuntimeHelper.requireNonNull(constants$2427.gtk_text_iter_backward_visible_word_starts$MH,"gtk_text_iter_backward_visible_word_starts");
    }
    public static int gtk_text_iter_backward_visible_word_starts ( Addressable iter,  int count) {
        var mh$ = gtk_text_iter_backward_visible_word_starts$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_sentence_end$MH() {
        return RuntimeHelper.requireNonNull(constants$2428.gtk_text_iter_forward_sentence_end$MH,"gtk_text_iter_forward_sentence_end");
    }
    public static int gtk_text_iter_forward_sentence_end ( Addressable iter) {
        var mh$ = gtk_text_iter_forward_sentence_end$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_sentence_start$MH() {
        return RuntimeHelper.requireNonNull(constants$2428.gtk_text_iter_backward_sentence_start$MH,"gtk_text_iter_backward_sentence_start");
    }
    public static int gtk_text_iter_backward_sentence_start ( Addressable iter) {
        var mh$ = gtk_text_iter_backward_sentence_start$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_sentence_ends$MH() {
        return RuntimeHelper.requireNonNull(constants$2428.gtk_text_iter_forward_sentence_ends$MH,"gtk_text_iter_forward_sentence_ends");
    }
    public static int gtk_text_iter_forward_sentence_ends ( Addressable iter,  int count) {
        var mh$ = gtk_text_iter_forward_sentence_ends$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_sentence_starts$MH() {
        return RuntimeHelper.requireNonNull(constants$2428.gtk_text_iter_backward_sentence_starts$MH,"gtk_text_iter_backward_sentence_starts");
    }
    public static int gtk_text_iter_backward_sentence_starts ( Addressable iter,  int count) {
        var mh$ = gtk_text_iter_backward_sentence_starts$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_cursor_position$MH() {
        return RuntimeHelper.requireNonNull(constants$2428.gtk_text_iter_forward_cursor_position$MH,"gtk_text_iter_forward_cursor_position");
    }
    public static int gtk_text_iter_forward_cursor_position ( Addressable iter) {
        var mh$ = gtk_text_iter_forward_cursor_position$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_cursor_position$MH() {
        return RuntimeHelper.requireNonNull(constants$2428.gtk_text_iter_backward_cursor_position$MH,"gtk_text_iter_backward_cursor_position");
    }
    public static int gtk_text_iter_backward_cursor_position ( Addressable iter) {
        var mh$ = gtk_text_iter_backward_cursor_position$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_cursor_positions$MH() {
        return RuntimeHelper.requireNonNull(constants$2429.gtk_text_iter_forward_cursor_positions$MH,"gtk_text_iter_forward_cursor_positions");
    }
    public static int gtk_text_iter_forward_cursor_positions ( Addressable iter,  int count) {
        var mh$ = gtk_text_iter_forward_cursor_positions$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_cursor_positions$MH() {
        return RuntimeHelper.requireNonNull(constants$2429.gtk_text_iter_backward_cursor_positions$MH,"gtk_text_iter_backward_cursor_positions");
    }
    public static int gtk_text_iter_backward_cursor_positions ( Addressable iter,  int count) {
        var mh$ = gtk_text_iter_backward_cursor_positions$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_visible_cursor_position$MH() {
        return RuntimeHelper.requireNonNull(constants$2429.gtk_text_iter_forward_visible_cursor_position$MH,"gtk_text_iter_forward_visible_cursor_position");
    }
    public static int gtk_text_iter_forward_visible_cursor_position ( Addressable iter) {
        var mh$ = gtk_text_iter_forward_visible_cursor_position$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_visible_cursor_position$MH() {
        return RuntimeHelper.requireNonNull(constants$2429.gtk_text_iter_backward_visible_cursor_position$MH,"gtk_text_iter_backward_visible_cursor_position");
    }
    public static int gtk_text_iter_backward_visible_cursor_position ( Addressable iter) {
        var mh$ = gtk_text_iter_backward_visible_cursor_position$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_visible_cursor_positions$MH() {
        return RuntimeHelper.requireNonNull(constants$2429.gtk_text_iter_forward_visible_cursor_positions$MH,"gtk_text_iter_forward_visible_cursor_positions");
    }
    public static int gtk_text_iter_forward_visible_cursor_positions ( Addressable iter,  int count) {
        var mh$ = gtk_text_iter_forward_visible_cursor_positions$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_visible_cursor_positions$MH() {
        return RuntimeHelper.requireNonNull(constants$2429.gtk_text_iter_backward_visible_cursor_positions$MH,"gtk_text_iter_backward_visible_cursor_positions");
    }
    public static int gtk_text_iter_backward_visible_cursor_positions ( Addressable iter,  int count) {
        var mh$ = gtk_text_iter_backward_visible_cursor_positions$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_set_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$2430.gtk_text_iter_set_offset$MH,"gtk_text_iter_set_offset");
    }
    public static void gtk_text_iter_set_offset ( Addressable iter,  int char_offset) {
        var mh$ = gtk_text_iter_set_offset$MH();
        try {
            mh$.invokeExact(iter, char_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_set_line$MH() {
        return RuntimeHelper.requireNonNull(constants$2430.gtk_text_iter_set_line$MH,"gtk_text_iter_set_line");
    }
    public static void gtk_text_iter_set_line ( Addressable iter,  int line_number) {
        var mh$ = gtk_text_iter_set_line$MH();
        try {
            mh$.invokeExact(iter, line_number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_set_line_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$2430.gtk_text_iter_set_line_offset$MH,"gtk_text_iter_set_line_offset");
    }
    public static void gtk_text_iter_set_line_offset ( Addressable iter,  int char_on_line) {
        var mh$ = gtk_text_iter_set_line_offset$MH();
        try {
            mh$.invokeExact(iter, char_on_line);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_set_line_index$MH() {
        return RuntimeHelper.requireNonNull(constants$2430.gtk_text_iter_set_line_index$MH,"gtk_text_iter_set_line_index");
    }
    public static void gtk_text_iter_set_line_index ( Addressable iter,  int byte_on_line) {
        var mh$ = gtk_text_iter_set_line_index$MH();
        try {
            mh$.invokeExact(iter, byte_on_line);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_to_end$MH() {
        return RuntimeHelper.requireNonNull(constants$2430.gtk_text_iter_forward_to_end$MH,"gtk_text_iter_forward_to_end");
    }
    public static void gtk_text_iter_forward_to_end ( Addressable iter) {
        var mh$ = gtk_text_iter_forward_to_end$MH();
        try {
            mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_to_line_end$MH() {
        return RuntimeHelper.requireNonNull(constants$2430.gtk_text_iter_forward_to_line_end$MH,"gtk_text_iter_forward_to_line_end");
    }
    public static int gtk_text_iter_forward_to_line_end ( Addressable iter) {
        var mh$ = gtk_text_iter_forward_to_line_end$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_set_visible_line_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$2431.gtk_text_iter_set_visible_line_offset$MH,"gtk_text_iter_set_visible_line_offset");
    }
    public static void gtk_text_iter_set_visible_line_offset ( Addressable iter,  int char_on_line) {
        var mh$ = gtk_text_iter_set_visible_line_offset$MH();
        try {
            mh$.invokeExact(iter, char_on_line);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_set_visible_line_index$MH() {
        return RuntimeHelper.requireNonNull(constants$2431.gtk_text_iter_set_visible_line_index$MH,"gtk_text_iter_set_visible_line_index");
    }
    public static void gtk_text_iter_set_visible_line_index ( Addressable iter,  int byte_on_line) {
        var mh$ = gtk_text_iter_set_visible_line_index$MH();
        try {
            mh$.invokeExact(iter, byte_on_line);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_to_tag_toggle$MH() {
        return RuntimeHelper.requireNonNull(constants$2431.gtk_text_iter_forward_to_tag_toggle$MH,"gtk_text_iter_forward_to_tag_toggle");
    }
    public static int gtk_text_iter_forward_to_tag_toggle ( Addressable iter,  Addressable tag) {
        var mh$ = gtk_text_iter_forward_to_tag_toggle$MH();
        try {
            return (int)mh$.invokeExact(iter, tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_to_tag_toggle$MH() {
        return RuntimeHelper.requireNonNull(constants$2431.gtk_text_iter_backward_to_tag_toggle$MH,"gtk_text_iter_backward_to_tag_toggle");
    }
    public static int gtk_text_iter_backward_to_tag_toggle ( Addressable iter,  Addressable tag) {
        var mh$ = gtk_text_iter_backward_to_tag_toggle$MH();
        try {
            return (int)mh$.invokeExact(iter, tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_find_char$MH() {
        return RuntimeHelper.requireNonNull(constants$2432.gtk_text_iter_forward_find_char$MH,"gtk_text_iter_forward_find_char");
    }
    public static int gtk_text_iter_forward_find_char ( Addressable iter,  Addressable pred,  Addressable user_data,  Addressable limit) {
        var mh$ = gtk_text_iter_forward_find_char$MH();
        try {
            return (int)mh$.invokeExact(iter, pred, user_data, limit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_find_char$MH() {
        return RuntimeHelper.requireNonNull(constants$2432.gtk_text_iter_backward_find_char$MH,"gtk_text_iter_backward_find_char");
    }
    public static int gtk_text_iter_backward_find_char ( Addressable iter,  Addressable pred,  Addressable user_data,  Addressable limit) {
        var mh$ = gtk_text_iter_backward_find_char$MH();
        try {
            return (int)mh$.invokeExact(iter, pred, user_data, limit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_search$MH() {
        return RuntimeHelper.requireNonNull(constants$2432.gtk_text_iter_forward_search$MH,"gtk_text_iter_forward_search");
    }
    public static int gtk_text_iter_forward_search ( Addressable iter,  Addressable str,  int flags,  Addressable match_start,  Addressable match_end,  Addressable limit) {
        var mh$ = gtk_text_iter_forward_search$MH();
        try {
            return (int)mh$.invokeExact(iter, str, flags, match_start, match_end, limit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_search$MH() {
        return RuntimeHelper.requireNonNull(constants$2432.gtk_text_iter_backward_search$MH,"gtk_text_iter_backward_search");
    }
    public static int gtk_text_iter_backward_search ( Addressable iter,  Addressable str,  int flags,  Addressable match_start,  Addressable match_end,  Addressable limit) {
        var mh$ = gtk_text_iter_backward_search$MH();
        try {
            return (int)mh$.invokeExact(iter, str, flags, match_start, match_end, limit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$2432.gtk_text_iter_equal$MH,"gtk_text_iter_equal");
    }
    public static int gtk_text_iter_equal ( Addressable lhs,  Addressable rhs) {
        var mh$ = gtk_text_iter_equal$MH();
        try {
            return (int)mh$.invokeExact(lhs, rhs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_compare$MH() {
        return RuntimeHelper.requireNonNull(constants$2432.gtk_text_iter_compare$MH,"gtk_text_iter_compare");
    }
    public static int gtk_text_iter_compare ( Addressable lhs,  Addressable rhs) {
        var mh$ = gtk_text_iter_compare$MH();
        try {
            return (int)mh$.invokeExact(lhs, rhs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_in_range$MH() {
        return RuntimeHelper.requireNonNull(constants$2433.gtk_text_iter_in_range$MH,"gtk_text_iter_in_range");
    }
    public static int gtk_text_iter_in_range ( Addressable iter,  Addressable start,  Addressable end) {
        var mh$ = gtk_text_iter_in_range$MH();
        try {
            return (int)mh$.invokeExact(iter, start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_order$MH() {
        return RuntimeHelper.requireNonNull(constants$2433.gtk_text_iter_order$MH,"gtk_text_iter_order");
    }
    public static void gtk_text_iter_order ( Addressable first,  Addressable second) {
        var mh$ = gtk_text_iter_order$MH();
        try {
            mh$.invokeExact(first, second);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_mark_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2433.gtk_text_mark_get_type$MH,"gtk_text_mark_get_type");
    }
    public static long gtk_text_mark_get_type () {
        var mh$ = gtk_text_mark_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_mark_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2433.gtk_text_mark_new$MH,"gtk_text_mark_new");
    }
    public static MemoryAddress gtk_text_mark_new ( Addressable name,  int left_gravity) {
        var mh$ = gtk_text_mark_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(name, left_gravity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_mark_set_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$2433.gtk_text_mark_set_visible$MH,"gtk_text_mark_set_visible");
    }
    public static void gtk_text_mark_set_visible ( Addressable mark,  int setting) {
        var mh$ = gtk_text_mark_set_visible$MH();
        try {
            mh$.invokeExact(mark, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_mark_get_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$2433.gtk_text_mark_get_visible$MH,"gtk_text_mark_get_visible");
    }
    public static int gtk_text_mark_get_visible ( Addressable mark) {
        var mh$ = gtk_text_mark_get_visible$MH();
        try {
            return (int)mh$.invokeExact(mark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_mark_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2434.gtk_text_mark_get_name$MH,"gtk_text_mark_get_name");
    }
    public static MemoryAddress gtk_text_mark_get_name ( Addressable mark) {
        var mh$ = gtk_text_mark_get_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(mark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_mark_get_deleted$MH() {
        return RuntimeHelper.requireNonNull(constants$2434.gtk_text_mark_get_deleted$MH,"gtk_text_mark_get_deleted");
    }
    public static int gtk_text_mark_get_deleted ( Addressable mark) {
        var mh$ = gtk_text_mark_get_deleted$MH();
        try {
            return (int)mh$.invokeExact(mark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_mark_get_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2434.gtk_text_mark_get_buffer$MH,"gtk_text_mark_get_buffer");
    }
    public static MemoryAddress gtk_text_mark_get_buffer ( Addressable mark) {
        var mh$ = gtk_text_mark_get_buffer$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(mark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_mark_get_left_gravity$MH() {
        return RuntimeHelper.requireNonNull(constants$2434.gtk_text_mark_get_left_gravity$MH,"gtk_text_mark_get_left_gravity");
    }
    public static int gtk_text_mark_get_left_gravity ( Addressable mark) {
        var mh$ = gtk_text_mark_get_left_gravity$MH();
        try {
            return (int)mh$.invokeExact(mark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2434.gtk_text_buffer_get_type$MH,"gtk_text_buffer_get_type");
    }
    public static long gtk_text_buffer_get_type () {
        var mh$ = gtk_text_buffer_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2434.gtk_text_buffer_new$MH,"gtk_text_buffer_new");
    }
    public static MemoryAddress gtk_text_buffer_new ( Addressable table) {
        var mh$ = gtk_text_buffer_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_line_count$MH() {
        return RuntimeHelper.requireNonNull(constants$2435.gtk_text_buffer_get_line_count$MH,"gtk_text_buffer_get_line_count");
    }
    public static int gtk_text_buffer_get_line_count ( Addressable buffer) {
        var mh$ = gtk_text_buffer_get_line_count$MH();
        try {
            return (int)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_char_count$MH() {
        return RuntimeHelper.requireNonNull(constants$2435.gtk_text_buffer_get_char_count$MH,"gtk_text_buffer_get_char_count");
    }
    public static int gtk_text_buffer_get_char_count ( Addressable buffer) {
        var mh$ = gtk_text_buffer_get_char_count$MH();
        try {
            return (int)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_tag_table$MH() {
        return RuntimeHelper.requireNonNull(constants$2435.gtk_text_buffer_get_tag_table$MH,"gtk_text_buffer_get_tag_table");
    }
    public static MemoryAddress gtk_text_buffer_get_tag_table ( Addressable buffer) {
        var mh$ = gtk_text_buffer_get_tag_table$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_set_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2435.gtk_text_buffer_set_text$MH,"gtk_text_buffer_set_text");
    }
    public static void gtk_text_buffer_set_text ( Addressable buffer,  Addressable text,  int len) {
        var mh$ = gtk_text_buffer_set_text$MH();
        try {
            mh$.invokeExact(buffer, text, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$2435.gtk_text_buffer_insert$MH,"gtk_text_buffer_insert");
    }
    public static void gtk_text_buffer_insert ( Addressable buffer,  Addressable iter,  Addressable text,  int len) {
        var mh$ = gtk_text_buffer_insert$MH();
        try {
            mh$.invokeExact(buffer, iter, text, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_insert_at_cursor$MH() {
        return RuntimeHelper.requireNonNull(constants$2435.gtk_text_buffer_insert_at_cursor$MH,"gtk_text_buffer_insert_at_cursor");
    }
    public static void gtk_text_buffer_insert_at_cursor ( Addressable buffer,  Addressable text,  int len) {
        var mh$ = gtk_text_buffer_insert_at_cursor$MH();
        try {
            mh$.invokeExact(buffer, text, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_insert_interactive$MH() {
        return RuntimeHelper.requireNonNull(constants$2436.gtk_text_buffer_insert_interactive$MH,"gtk_text_buffer_insert_interactive");
    }
    public static int gtk_text_buffer_insert_interactive ( Addressable buffer,  Addressable iter,  Addressable text,  int len,  int default_editable) {
        var mh$ = gtk_text_buffer_insert_interactive$MH();
        try {
            return (int)mh$.invokeExact(buffer, iter, text, len, default_editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_insert_interactive_at_cursor$MH() {
        return RuntimeHelper.requireNonNull(constants$2436.gtk_text_buffer_insert_interactive_at_cursor$MH,"gtk_text_buffer_insert_interactive_at_cursor");
    }
    public static int gtk_text_buffer_insert_interactive_at_cursor ( Addressable buffer,  Addressable text,  int len,  int default_editable) {
        var mh$ = gtk_text_buffer_insert_interactive_at_cursor$MH();
        try {
            return (int)mh$.invokeExact(buffer, text, len, default_editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_insert_range$MH() {
        return RuntimeHelper.requireNonNull(constants$2436.gtk_text_buffer_insert_range$MH,"gtk_text_buffer_insert_range");
    }
    public static void gtk_text_buffer_insert_range ( Addressable buffer,  Addressable iter,  Addressable start,  Addressable end) {
        var mh$ = gtk_text_buffer_insert_range$MH();
        try {
            mh$.invokeExact(buffer, iter, start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_insert_range_interactive$MH() {
        return RuntimeHelper.requireNonNull(constants$2436.gtk_text_buffer_insert_range_interactive$MH,"gtk_text_buffer_insert_range_interactive");
    }
    public static int gtk_text_buffer_insert_range_interactive ( Addressable buffer,  Addressable iter,  Addressable start,  Addressable end,  int default_editable) {
        var mh$ = gtk_text_buffer_insert_range_interactive$MH();
        try {
            return (int)mh$.invokeExact(buffer, iter, start, end, default_editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_insert_with_tags$MH() {
        return RuntimeHelper.requireNonNull(constants$2436.gtk_text_buffer_insert_with_tags$MH,"gtk_text_buffer_insert_with_tags");
    }
    public static void gtk_text_buffer_insert_with_tags ( Addressable buffer,  Addressable iter,  Addressable text,  int len,  Addressable first_tag, Object... x5) {
        var mh$ = gtk_text_buffer_insert_with_tags$MH();
        try {
            mh$.invokeExact(buffer, iter, text, len, first_tag, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_insert_with_tags_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2436.gtk_text_buffer_insert_with_tags_by_name$MH,"gtk_text_buffer_insert_with_tags_by_name");
    }
    public static void gtk_text_buffer_insert_with_tags_by_name ( Addressable buffer,  Addressable iter,  Addressable text,  int len,  Addressable first_tag_name, Object... x5) {
        var mh$ = gtk_text_buffer_insert_with_tags_by_name$MH();
        try {
            mh$.invokeExact(buffer, iter, text, len, first_tag_name, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_insert_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$2437.gtk_text_buffer_insert_markup$MH,"gtk_text_buffer_insert_markup");
    }
    public static void gtk_text_buffer_insert_markup ( Addressable buffer,  Addressable iter,  Addressable markup,  int len) {
        var mh$ = gtk_text_buffer_insert_markup$MH();
        try {
            mh$.invokeExact(buffer, iter, markup, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_delete$MH() {
        return RuntimeHelper.requireNonNull(constants$2437.gtk_text_buffer_delete$MH,"gtk_text_buffer_delete");
    }
    public static void gtk_text_buffer_delete ( Addressable buffer,  Addressable start,  Addressable end) {
        var mh$ = gtk_text_buffer_delete$MH();
        try {
            mh$.invokeExact(buffer, start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_delete_interactive$MH() {
        return RuntimeHelper.requireNonNull(constants$2437.gtk_text_buffer_delete_interactive$MH,"gtk_text_buffer_delete_interactive");
    }
    public static int gtk_text_buffer_delete_interactive ( Addressable buffer,  Addressable start_iter,  Addressable end_iter,  int default_editable) {
        var mh$ = gtk_text_buffer_delete_interactive$MH();
        try {
            return (int)mh$.invokeExact(buffer, start_iter, end_iter, default_editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_backspace$MH() {
        return RuntimeHelper.requireNonNull(constants$2437.gtk_text_buffer_backspace$MH,"gtk_text_buffer_backspace");
    }
    public static int gtk_text_buffer_backspace ( Addressable buffer,  Addressable iter,  int interactive,  int default_editable) {
        var mh$ = gtk_text_buffer_backspace$MH();
        try {
            return (int)mh$.invokeExact(buffer, iter, interactive, default_editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2437.gtk_text_buffer_get_text$MH,"gtk_text_buffer_get_text");
    }
    public static MemoryAddress gtk_text_buffer_get_text ( Addressable buffer,  Addressable start,  Addressable end,  int include_hidden_chars) {
        var mh$ = gtk_text_buffer_get_text$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(buffer, start, end, include_hidden_chars);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_slice$MH() {
        return RuntimeHelper.requireNonNull(constants$2437.gtk_text_buffer_get_slice$MH,"gtk_text_buffer_get_slice");
    }
    public static MemoryAddress gtk_text_buffer_get_slice ( Addressable buffer,  Addressable start,  Addressable end,  int include_hidden_chars) {
        var mh$ = gtk_text_buffer_get_slice$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(buffer, start, end, include_hidden_chars);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_insert_paintable$MH() {
        return RuntimeHelper.requireNonNull(constants$2438.gtk_text_buffer_insert_paintable$MH,"gtk_text_buffer_insert_paintable");
    }
    public static void gtk_text_buffer_insert_paintable ( Addressable buffer,  Addressable iter,  Addressable paintable) {
        var mh$ = gtk_text_buffer_insert_paintable$MH();
        try {
            mh$.invokeExact(buffer, iter, paintable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_insert_child_anchor$MH() {
        return RuntimeHelper.requireNonNull(constants$2438.gtk_text_buffer_insert_child_anchor$MH,"gtk_text_buffer_insert_child_anchor");
    }
    public static void gtk_text_buffer_insert_child_anchor ( Addressable buffer,  Addressable iter,  Addressable anchor) {
        var mh$ = gtk_text_buffer_insert_child_anchor$MH();
        try {
            mh$.invokeExact(buffer, iter, anchor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_create_child_anchor$MH() {
        return RuntimeHelper.requireNonNull(constants$2438.gtk_text_buffer_create_child_anchor$MH,"gtk_text_buffer_create_child_anchor");
    }
    public static MemoryAddress gtk_text_buffer_create_child_anchor ( Addressable buffer,  Addressable iter) {
        var mh$ = gtk_text_buffer_create_child_anchor$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(buffer, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_add_mark$MH() {
        return RuntimeHelper.requireNonNull(constants$2438.gtk_text_buffer_add_mark$MH,"gtk_text_buffer_add_mark");
    }
    public static void gtk_text_buffer_add_mark ( Addressable buffer,  Addressable mark,  Addressable where) {
        var mh$ = gtk_text_buffer_add_mark$MH();
        try {
            mh$.invokeExact(buffer, mark, where);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_create_mark$MH() {
        return RuntimeHelper.requireNonNull(constants$2438.gtk_text_buffer_create_mark$MH,"gtk_text_buffer_create_mark");
    }
    public static MemoryAddress gtk_text_buffer_create_mark ( Addressable buffer,  Addressable mark_name,  Addressable where,  int left_gravity) {
        var mh$ = gtk_text_buffer_create_mark$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(buffer, mark_name, where, left_gravity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_move_mark$MH() {
        return RuntimeHelper.requireNonNull(constants$2438.gtk_text_buffer_move_mark$MH,"gtk_text_buffer_move_mark");
    }
    public static void gtk_text_buffer_move_mark ( Addressable buffer,  Addressable mark,  Addressable where) {
        var mh$ = gtk_text_buffer_move_mark$MH();
        try {
            mh$.invokeExact(buffer, mark, where);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_delete_mark$MH() {
        return RuntimeHelper.requireNonNull(constants$2439.gtk_text_buffer_delete_mark$MH,"gtk_text_buffer_delete_mark");
    }
    public static void gtk_text_buffer_delete_mark ( Addressable buffer,  Addressable mark) {
        var mh$ = gtk_text_buffer_delete_mark$MH();
        try {
            mh$.invokeExact(buffer, mark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_mark$MH() {
        return RuntimeHelper.requireNonNull(constants$2439.gtk_text_buffer_get_mark$MH,"gtk_text_buffer_get_mark");
    }
    public static MemoryAddress gtk_text_buffer_get_mark ( Addressable buffer,  Addressable name) {
        var mh$ = gtk_text_buffer_get_mark$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(buffer, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_move_mark_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2439.gtk_text_buffer_move_mark_by_name$MH,"gtk_text_buffer_move_mark_by_name");
    }
    public static void gtk_text_buffer_move_mark_by_name ( Addressable buffer,  Addressable name,  Addressable where) {
        var mh$ = gtk_text_buffer_move_mark_by_name$MH();
        try {
            mh$.invokeExact(buffer, name, where);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_delete_mark_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2439.gtk_text_buffer_delete_mark_by_name$MH,"gtk_text_buffer_delete_mark_by_name");
    }
    public static void gtk_text_buffer_delete_mark_by_name ( Addressable buffer,  Addressable name) {
        var mh$ = gtk_text_buffer_delete_mark_by_name$MH();
        try {
            mh$.invokeExact(buffer, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$2439.gtk_text_buffer_get_insert$MH,"gtk_text_buffer_get_insert");
    }
    public static MemoryAddress gtk_text_buffer_get_insert ( Addressable buffer) {
        var mh$ = gtk_text_buffer_get_insert$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_selection_bound$MH() {
        return RuntimeHelper.requireNonNull(constants$2439.gtk_text_buffer_get_selection_bound$MH,"gtk_text_buffer_get_selection_bound");
    }
    public static MemoryAddress gtk_text_buffer_get_selection_bound ( Addressable buffer) {
        var mh$ = gtk_text_buffer_get_selection_bound$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_place_cursor$MH() {
        return RuntimeHelper.requireNonNull(constants$2440.gtk_text_buffer_place_cursor$MH,"gtk_text_buffer_place_cursor");
    }
    public static void gtk_text_buffer_place_cursor ( Addressable buffer,  Addressable where) {
        var mh$ = gtk_text_buffer_place_cursor$MH();
        try {
            mh$.invokeExact(buffer, where);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_select_range$MH() {
        return RuntimeHelper.requireNonNull(constants$2440.gtk_text_buffer_select_range$MH,"gtk_text_buffer_select_range");
    }
    public static void gtk_text_buffer_select_range ( Addressable buffer,  Addressable ins,  Addressable bound) {
        var mh$ = gtk_text_buffer_select_range$MH();
        try {
            mh$.invokeExact(buffer, ins, bound);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_apply_tag$MH() {
        return RuntimeHelper.requireNonNull(constants$2440.gtk_text_buffer_apply_tag$MH,"gtk_text_buffer_apply_tag");
    }
    public static void gtk_text_buffer_apply_tag ( Addressable buffer,  Addressable tag,  Addressable start,  Addressable end) {
        var mh$ = gtk_text_buffer_apply_tag$MH();
        try {
            mh$.invokeExact(buffer, tag, start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_remove_tag$MH() {
        return RuntimeHelper.requireNonNull(constants$2440.gtk_text_buffer_remove_tag$MH,"gtk_text_buffer_remove_tag");
    }
    public static void gtk_text_buffer_remove_tag ( Addressable buffer,  Addressable tag,  Addressable start,  Addressable end) {
        var mh$ = gtk_text_buffer_remove_tag$MH();
        try {
            mh$.invokeExact(buffer, tag, start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_apply_tag_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2440.gtk_text_buffer_apply_tag_by_name$MH,"gtk_text_buffer_apply_tag_by_name");
    }
    public static void gtk_text_buffer_apply_tag_by_name ( Addressable buffer,  Addressable name,  Addressable start,  Addressable end) {
        var mh$ = gtk_text_buffer_apply_tag_by_name$MH();
        try {
            mh$.invokeExact(buffer, name, start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_remove_tag_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2440.gtk_text_buffer_remove_tag_by_name$MH,"gtk_text_buffer_remove_tag_by_name");
    }
    public static void gtk_text_buffer_remove_tag_by_name ( Addressable buffer,  Addressable name,  Addressable start,  Addressable end) {
        var mh$ = gtk_text_buffer_remove_tag_by_name$MH();
        try {
            mh$.invokeExact(buffer, name, start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_remove_all_tags$MH() {
        return RuntimeHelper.requireNonNull(constants$2441.gtk_text_buffer_remove_all_tags$MH,"gtk_text_buffer_remove_all_tags");
    }
    public static void gtk_text_buffer_remove_all_tags ( Addressable buffer,  Addressable start,  Addressable end) {
        var mh$ = gtk_text_buffer_remove_all_tags$MH();
        try {
            mh$.invokeExact(buffer, start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_create_tag$MH() {
        return RuntimeHelper.requireNonNull(constants$2441.gtk_text_buffer_create_tag$MH,"gtk_text_buffer_create_tag");
    }
    public static MemoryAddress gtk_text_buffer_create_tag ( Addressable buffer,  Addressable tag_name,  Addressable first_property_name, Object... x3) {
        var mh$ = gtk_text_buffer_create_tag$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(buffer, tag_name, first_property_name, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_iter_at_line_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$2441.gtk_text_buffer_get_iter_at_line_offset$MH,"gtk_text_buffer_get_iter_at_line_offset");
    }
    public static int gtk_text_buffer_get_iter_at_line_offset ( Addressable buffer,  Addressable iter,  int line_number,  int char_offset) {
        var mh$ = gtk_text_buffer_get_iter_at_line_offset$MH();
        try {
            return (int)mh$.invokeExact(buffer, iter, line_number, char_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_iter_at_line_index$MH() {
        return RuntimeHelper.requireNonNull(constants$2441.gtk_text_buffer_get_iter_at_line_index$MH,"gtk_text_buffer_get_iter_at_line_index");
    }
    public static int gtk_text_buffer_get_iter_at_line_index ( Addressable buffer,  Addressable iter,  int line_number,  int byte_index) {
        var mh$ = gtk_text_buffer_get_iter_at_line_index$MH();
        try {
            return (int)mh$.invokeExact(buffer, iter, line_number, byte_index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_iter_at_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$2441.gtk_text_buffer_get_iter_at_offset$MH,"gtk_text_buffer_get_iter_at_offset");
    }
    public static void gtk_text_buffer_get_iter_at_offset ( Addressable buffer,  Addressable iter,  int char_offset) {
        var mh$ = gtk_text_buffer_get_iter_at_offset$MH();
        try {
            mh$.invokeExact(buffer, iter, char_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_iter_at_line$MH() {
        return RuntimeHelper.requireNonNull(constants$2441.gtk_text_buffer_get_iter_at_line$MH,"gtk_text_buffer_get_iter_at_line");
    }
    public static int gtk_text_buffer_get_iter_at_line ( Addressable buffer,  Addressable iter,  int line_number) {
        var mh$ = gtk_text_buffer_get_iter_at_line$MH();
        try {
            return (int)mh$.invokeExact(buffer, iter, line_number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_start_iter$MH() {
        return RuntimeHelper.requireNonNull(constants$2442.gtk_text_buffer_get_start_iter$MH,"gtk_text_buffer_get_start_iter");
    }
    public static void gtk_text_buffer_get_start_iter ( Addressable buffer,  Addressable iter) {
        var mh$ = gtk_text_buffer_get_start_iter$MH();
        try {
            mh$.invokeExact(buffer, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_end_iter$MH() {
        return RuntimeHelper.requireNonNull(constants$2442.gtk_text_buffer_get_end_iter$MH,"gtk_text_buffer_get_end_iter");
    }
    public static void gtk_text_buffer_get_end_iter ( Addressable buffer,  Addressable iter) {
        var mh$ = gtk_text_buffer_get_end_iter$MH();
        try {
            mh$.invokeExact(buffer, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_bounds$MH() {
        return RuntimeHelper.requireNonNull(constants$2442.gtk_text_buffer_get_bounds$MH,"gtk_text_buffer_get_bounds");
    }
    public static void gtk_text_buffer_get_bounds ( Addressable buffer,  Addressable start,  Addressable end) {
        var mh$ = gtk_text_buffer_get_bounds$MH();
        try {
            mh$.invokeExact(buffer, start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_iter_at_mark$MH() {
        return RuntimeHelper.requireNonNull(constants$2442.gtk_text_buffer_get_iter_at_mark$MH,"gtk_text_buffer_get_iter_at_mark");
    }
    public static void gtk_text_buffer_get_iter_at_mark ( Addressable buffer,  Addressable iter,  Addressable mark) {
        var mh$ = gtk_text_buffer_get_iter_at_mark$MH();
        try {
            mh$.invokeExact(buffer, iter, mark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_iter_at_child_anchor$MH() {
        return RuntimeHelper.requireNonNull(constants$2442.gtk_text_buffer_get_iter_at_child_anchor$MH,"gtk_text_buffer_get_iter_at_child_anchor");
    }
    public static void gtk_text_buffer_get_iter_at_child_anchor ( Addressable buffer,  Addressable iter,  Addressable anchor) {
        var mh$ = gtk_text_buffer_get_iter_at_child_anchor$MH();
        try {
            mh$.invokeExact(buffer, iter, anchor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_modified$MH() {
        return RuntimeHelper.requireNonNull(constants$2442.gtk_text_buffer_get_modified$MH,"gtk_text_buffer_get_modified");
    }
    public static int gtk_text_buffer_get_modified ( Addressable buffer) {
        var mh$ = gtk_text_buffer_get_modified$MH();
        try {
            return (int)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_set_modified$MH() {
        return RuntimeHelper.requireNonNull(constants$2443.gtk_text_buffer_set_modified$MH,"gtk_text_buffer_set_modified");
    }
    public static void gtk_text_buffer_set_modified ( Addressable buffer,  int setting) {
        var mh$ = gtk_text_buffer_set_modified$MH();
        try {
            mh$.invokeExact(buffer, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_has_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$2443.gtk_text_buffer_get_has_selection$MH,"gtk_text_buffer_get_has_selection");
    }
    public static int gtk_text_buffer_get_has_selection ( Addressable buffer) {
        var mh$ = gtk_text_buffer_get_has_selection$MH();
        try {
            return (int)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_add_selection_clipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$2443.gtk_text_buffer_add_selection_clipboard$MH,"gtk_text_buffer_add_selection_clipboard");
    }
    public static void gtk_text_buffer_add_selection_clipboard ( Addressable buffer,  Addressable clipboard) {
        var mh$ = gtk_text_buffer_add_selection_clipboard$MH();
        try {
            mh$.invokeExact(buffer, clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_remove_selection_clipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$2443.gtk_text_buffer_remove_selection_clipboard$MH,"gtk_text_buffer_remove_selection_clipboard");
    }
    public static void gtk_text_buffer_remove_selection_clipboard ( Addressable buffer,  Addressable clipboard) {
        var mh$ = gtk_text_buffer_remove_selection_clipboard$MH();
        try {
            mh$.invokeExact(buffer, clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_cut_clipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$2443.gtk_text_buffer_cut_clipboard$MH,"gtk_text_buffer_cut_clipboard");
    }
    public static void gtk_text_buffer_cut_clipboard ( Addressable buffer,  Addressable clipboard,  int default_editable) {
        var mh$ = gtk_text_buffer_cut_clipboard$MH();
        try {
            mh$.invokeExact(buffer, clipboard, default_editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_copy_clipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$2443.gtk_text_buffer_copy_clipboard$MH,"gtk_text_buffer_copy_clipboard");
    }
    public static void gtk_text_buffer_copy_clipboard ( Addressable buffer,  Addressable clipboard) {
        var mh$ = gtk_text_buffer_copy_clipboard$MH();
        try {
            mh$.invokeExact(buffer, clipboard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_paste_clipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$2444.gtk_text_buffer_paste_clipboard$MH,"gtk_text_buffer_paste_clipboard");
    }
    public static void gtk_text_buffer_paste_clipboard ( Addressable buffer,  Addressable clipboard,  Addressable override_location,  int default_editable) {
        var mh$ = gtk_text_buffer_paste_clipboard$MH();
        try {
            mh$.invokeExact(buffer, clipboard, override_location, default_editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_selection_bounds$MH() {
        return RuntimeHelper.requireNonNull(constants$2444.gtk_text_buffer_get_selection_bounds$MH,"gtk_text_buffer_get_selection_bounds");
    }
    public static int gtk_text_buffer_get_selection_bounds ( Addressable buffer,  Addressable start,  Addressable end) {
        var mh$ = gtk_text_buffer_get_selection_bounds$MH();
        try {
            return (int)mh$.invokeExact(buffer, start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_delete_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$2444.gtk_text_buffer_delete_selection$MH,"gtk_text_buffer_delete_selection");
    }
    public static int gtk_text_buffer_delete_selection ( Addressable buffer,  int interactive,  int default_editable) {
        var mh$ = gtk_text_buffer_delete_selection$MH();
        try {
            return (int)mh$.invokeExact(buffer, interactive, default_editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_selection_content$MH() {
        return RuntimeHelper.requireNonNull(constants$2444.gtk_text_buffer_get_selection_content$MH,"gtk_text_buffer_get_selection_content");
    }
    public static MemoryAddress gtk_text_buffer_get_selection_content ( Addressable buffer) {
        var mh$ = gtk_text_buffer_get_selection_content$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_can_undo$MH() {
        return RuntimeHelper.requireNonNull(constants$2444.gtk_text_buffer_get_can_undo$MH,"gtk_text_buffer_get_can_undo");
    }
    public static int gtk_text_buffer_get_can_undo ( Addressable buffer) {
        var mh$ = gtk_text_buffer_get_can_undo$MH();
        try {
            return (int)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_can_redo$MH() {
        return RuntimeHelper.requireNonNull(constants$2444.gtk_text_buffer_get_can_redo$MH,"gtk_text_buffer_get_can_redo");
    }
    public static int gtk_text_buffer_get_can_redo ( Addressable buffer) {
        var mh$ = gtk_text_buffer_get_can_redo$MH();
        try {
            return (int)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_enable_undo$MH() {
        return RuntimeHelper.requireNonNull(constants$2445.gtk_text_buffer_get_enable_undo$MH,"gtk_text_buffer_get_enable_undo");
    }
    public static int gtk_text_buffer_get_enable_undo ( Addressable buffer) {
        var mh$ = gtk_text_buffer_get_enable_undo$MH();
        try {
            return (int)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_set_enable_undo$MH() {
        return RuntimeHelper.requireNonNull(constants$2445.gtk_text_buffer_set_enable_undo$MH,"gtk_text_buffer_set_enable_undo");
    }
    public static void gtk_text_buffer_set_enable_undo ( Addressable buffer,  int enable_undo) {
        var mh$ = gtk_text_buffer_set_enable_undo$MH();
        try {
            mh$.invokeExact(buffer, enable_undo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_get_max_undo_levels$MH() {
        return RuntimeHelper.requireNonNull(constants$2445.gtk_text_buffer_get_max_undo_levels$MH,"gtk_text_buffer_get_max_undo_levels");
    }
    public static int gtk_text_buffer_get_max_undo_levels ( Addressable buffer) {
        var mh$ = gtk_text_buffer_get_max_undo_levels$MH();
        try {
            return (int)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_set_max_undo_levels$MH() {
        return RuntimeHelper.requireNonNull(constants$2445.gtk_text_buffer_set_max_undo_levels$MH,"gtk_text_buffer_set_max_undo_levels");
    }
    public static void gtk_text_buffer_set_max_undo_levels ( Addressable buffer,  int max_undo_levels) {
        var mh$ = gtk_text_buffer_set_max_undo_levels$MH();
        try {
            mh$.invokeExact(buffer, max_undo_levels);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_undo$MH() {
        return RuntimeHelper.requireNonNull(constants$2445.gtk_text_buffer_undo$MH,"gtk_text_buffer_undo");
    }
    public static void gtk_text_buffer_undo ( Addressable buffer) {
        var mh$ = gtk_text_buffer_undo$MH();
        try {
            mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_redo$MH() {
        return RuntimeHelper.requireNonNull(constants$2445.gtk_text_buffer_redo$MH,"gtk_text_buffer_redo");
    }
    public static void gtk_text_buffer_redo ( Addressable buffer) {
        var mh$ = gtk_text_buffer_redo$MH();
        try {
            mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_begin_irreversible_action$MH() {
        return RuntimeHelper.requireNonNull(constants$2446.gtk_text_buffer_begin_irreversible_action$MH,"gtk_text_buffer_begin_irreversible_action");
    }
    public static void gtk_text_buffer_begin_irreversible_action ( Addressable buffer) {
        var mh$ = gtk_text_buffer_begin_irreversible_action$MH();
        try {
            mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_end_irreversible_action$MH() {
        return RuntimeHelper.requireNonNull(constants$2446.gtk_text_buffer_end_irreversible_action$MH,"gtk_text_buffer_end_irreversible_action");
    }
    public static void gtk_text_buffer_end_irreversible_action ( Addressable buffer) {
        var mh$ = gtk_text_buffer_end_irreversible_action$MH();
        try {
            mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_begin_user_action$MH() {
        return RuntimeHelper.requireNonNull(constants$2446.gtk_text_buffer_begin_user_action$MH,"gtk_text_buffer_begin_user_action");
    }
    public static void gtk_text_buffer_begin_user_action ( Addressable buffer) {
        var mh$ = gtk_text_buffer_begin_user_action$MH();
        try {
            mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_buffer_end_user_action$MH() {
        return RuntimeHelper.requireNonNull(constants$2446.gtk_text_buffer_end_user_action$MH,"gtk_text_buffer_end_user_action");
    }
    public static void gtk_text_buffer_end_user_action ( Addressable buffer) {
        var mh$ = gtk_text_buffer_end_user_action$MH();
        try {
            mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GTK_TEXT_WINDOW_WIDGET() {
        return (int)1L;
    }
    public static int GTK_TEXT_WINDOW_TEXT() {
        return (int)2L;
    }
    public static int GTK_TEXT_WINDOW_LEFT() {
        return (int)3L;
    }
    public static int GTK_TEXT_WINDOW_RIGHT() {
        return (int)4L;
    }
    public static int GTK_TEXT_WINDOW_TOP() {
        return (int)5L;
    }
    public static int GTK_TEXT_WINDOW_BOTTOM() {
        return (int)6L;
    }
    public static int GTK_TEXT_VIEW_LAYER_BELOW_TEXT() {
        return (int)0L;
    }
    public static int GTK_TEXT_VIEW_LAYER_ABOVE_TEXT() {
        return (int)1L;
    }
    public static int GTK_TEXT_EXTEND_SELECTION_WORD() {
        return (int)0L;
    }
    public static int GTK_TEXT_EXTEND_SELECTION_LINE() {
        return (int)1L;
    }
    public static MethodHandle gtk_text_view_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2446.gtk_text_view_get_type$MH,"gtk_text_view_get_type");
    }
    public static long gtk_text_view_get_type () {
        var mh$ = gtk_text_view_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2446.gtk_text_view_new$MH,"gtk_text_view_new");
    }
    public static MemoryAddress gtk_text_view_new () {
        var mh$ = gtk_text_view_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_new_with_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2447.gtk_text_view_new_with_buffer$MH,"gtk_text_view_new_with_buffer");
    }
    public static MemoryAddress gtk_text_view_new_with_buffer ( Addressable buffer) {
        var mh$ = gtk_text_view_new_with_buffer$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_set_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2447.gtk_text_view_set_buffer$MH,"gtk_text_view_set_buffer");
    }
    public static void gtk_text_view_set_buffer ( Addressable text_view,  Addressable buffer) {
        var mh$ = gtk_text_view_set_buffer$MH();
        try {
            mh$.invokeExact(text_view, buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2447.gtk_text_view_get_buffer$MH,"gtk_text_view_get_buffer");
    }
    public static MemoryAddress gtk_text_view_get_buffer ( Addressable text_view) {
        var mh$ = gtk_text_view_get_buffer$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_scroll_to_iter$MH() {
        return RuntimeHelper.requireNonNull(constants$2447.gtk_text_view_scroll_to_iter$MH,"gtk_text_view_scroll_to_iter");
    }
    public static int gtk_text_view_scroll_to_iter ( Addressable text_view,  Addressable iter,  double within_margin,  int use_align,  double xalign,  double yalign) {
        var mh$ = gtk_text_view_scroll_to_iter$MH();
        try {
            return (int)mh$.invokeExact(text_view, iter, within_margin, use_align, xalign, yalign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_scroll_to_mark$MH() {
        return RuntimeHelper.requireNonNull(constants$2447.gtk_text_view_scroll_to_mark$MH,"gtk_text_view_scroll_to_mark");
    }
    public static void gtk_text_view_scroll_to_mark ( Addressable text_view,  Addressable mark,  double within_margin,  int use_align,  double xalign,  double yalign) {
        var mh$ = gtk_text_view_scroll_to_mark$MH();
        try {
            mh$.invokeExact(text_view, mark, within_margin, use_align, xalign, yalign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_scroll_mark_onscreen$MH() {
        return RuntimeHelper.requireNonNull(constants$2447.gtk_text_view_scroll_mark_onscreen$MH,"gtk_text_view_scroll_mark_onscreen");
    }
    public static void gtk_text_view_scroll_mark_onscreen ( Addressable text_view,  Addressable mark) {
        var mh$ = gtk_text_view_scroll_mark_onscreen$MH();
        try {
            mh$.invokeExact(text_view, mark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_move_mark_onscreen$MH() {
        return RuntimeHelper.requireNonNull(constants$2448.gtk_text_view_move_mark_onscreen$MH,"gtk_text_view_move_mark_onscreen");
    }
    public static int gtk_text_view_move_mark_onscreen ( Addressable text_view,  Addressable mark) {
        var mh$ = gtk_text_view_move_mark_onscreen$MH();
        try {
            return (int)mh$.invokeExact(text_view, mark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_place_cursor_onscreen$MH() {
        return RuntimeHelper.requireNonNull(constants$2448.gtk_text_view_place_cursor_onscreen$MH,"gtk_text_view_place_cursor_onscreen");
    }
    public static int gtk_text_view_place_cursor_onscreen ( Addressable text_view) {
        var mh$ = gtk_text_view_place_cursor_onscreen$MH();
        try {
            return (int)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_visible_rect$MH() {
        return RuntimeHelper.requireNonNull(constants$2448.gtk_text_view_get_visible_rect$MH,"gtk_text_view_get_visible_rect");
    }
    public static void gtk_text_view_get_visible_rect ( Addressable text_view,  Addressable visible_rect) {
        var mh$ = gtk_text_view_get_visible_rect$MH();
        try {
            mh$.invokeExact(text_view, visible_rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_set_cursor_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$2448.gtk_text_view_set_cursor_visible$MH,"gtk_text_view_set_cursor_visible");
    }
    public static void gtk_text_view_set_cursor_visible ( Addressable text_view,  int setting) {
        var mh$ = gtk_text_view_set_cursor_visible$MH();
        try {
            mh$.invokeExact(text_view, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_cursor_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$2448.gtk_text_view_get_cursor_visible$MH,"gtk_text_view_get_cursor_visible");
    }
    public static int gtk_text_view_get_cursor_visible ( Addressable text_view) {
        var mh$ = gtk_text_view_get_cursor_visible$MH();
        try {
            return (int)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_reset_cursor_blink$MH() {
        return RuntimeHelper.requireNonNull(constants$2448.gtk_text_view_reset_cursor_blink$MH,"gtk_text_view_reset_cursor_blink");
    }
    public static void gtk_text_view_reset_cursor_blink ( Addressable text_view) {
        var mh$ = gtk_text_view_reset_cursor_blink$MH();
        try {
            mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_cursor_locations$MH() {
        return RuntimeHelper.requireNonNull(constants$2449.gtk_text_view_get_cursor_locations$MH,"gtk_text_view_get_cursor_locations");
    }
    public static void gtk_text_view_get_cursor_locations ( Addressable text_view,  Addressable iter,  Addressable strong,  Addressable weak) {
        var mh$ = gtk_text_view_get_cursor_locations$MH();
        try {
            mh$.invokeExact(text_view, iter, strong, weak);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_iter_location$MH() {
        return RuntimeHelper.requireNonNull(constants$2449.gtk_text_view_get_iter_location$MH,"gtk_text_view_get_iter_location");
    }
    public static void gtk_text_view_get_iter_location ( Addressable text_view,  Addressable iter,  Addressable location) {
        var mh$ = gtk_text_view_get_iter_location$MH();
        try {
            mh$.invokeExact(text_view, iter, location);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_iter_at_location$MH() {
        return RuntimeHelper.requireNonNull(constants$2449.gtk_text_view_get_iter_at_location$MH,"gtk_text_view_get_iter_at_location");
    }
    public static int gtk_text_view_get_iter_at_location ( Addressable text_view,  Addressable iter,  int x,  int y) {
        var mh$ = gtk_text_view_get_iter_at_location$MH();
        try {
            return (int)mh$.invokeExact(text_view, iter, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_iter_at_position$MH() {
        return RuntimeHelper.requireNonNull(constants$2449.gtk_text_view_get_iter_at_position$MH,"gtk_text_view_get_iter_at_position");
    }
    public static int gtk_text_view_get_iter_at_position ( Addressable text_view,  Addressable iter,  Addressable trailing,  int x,  int y) {
        var mh$ = gtk_text_view_get_iter_at_position$MH();
        try {
            return (int)mh$.invokeExact(text_view, iter, trailing, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_line_yrange$MH() {
        return RuntimeHelper.requireNonNull(constants$2449.gtk_text_view_get_line_yrange$MH,"gtk_text_view_get_line_yrange");
    }
    public static void gtk_text_view_get_line_yrange ( Addressable text_view,  Addressable iter,  Addressable y,  Addressable height) {
        var mh$ = gtk_text_view_get_line_yrange$MH();
        try {
            mh$.invokeExact(text_view, iter, y, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_line_at_y$MH() {
        return RuntimeHelper.requireNonNull(constants$2449.gtk_text_view_get_line_at_y$MH,"gtk_text_view_get_line_at_y");
    }
    public static void gtk_text_view_get_line_at_y ( Addressable text_view,  Addressable target_iter,  int y,  Addressable line_top) {
        var mh$ = gtk_text_view_get_line_at_y$MH();
        try {
            mh$.invokeExact(text_view, target_iter, y, line_top);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_buffer_to_window_coords$MH() {
        return RuntimeHelper.requireNonNull(constants$2450.gtk_text_view_buffer_to_window_coords$MH,"gtk_text_view_buffer_to_window_coords");
    }
    public static void gtk_text_view_buffer_to_window_coords ( Addressable text_view,  int win,  int buffer_x,  int buffer_y,  Addressable window_x,  Addressable window_y) {
        var mh$ = gtk_text_view_buffer_to_window_coords$MH();
        try {
            mh$.invokeExact(text_view, win, buffer_x, buffer_y, window_x, window_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_window_to_buffer_coords$MH() {
        return RuntimeHelper.requireNonNull(constants$2450.gtk_text_view_window_to_buffer_coords$MH,"gtk_text_view_window_to_buffer_coords");
    }
    public static void gtk_text_view_window_to_buffer_coords ( Addressable text_view,  int win,  int window_x,  int window_y,  Addressable buffer_x,  Addressable buffer_y) {
        var mh$ = gtk_text_view_window_to_buffer_coords$MH();
        try {
            mh$.invokeExact(text_view, win, window_x, window_y, buffer_x, buffer_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_forward_display_line$MH() {
        return RuntimeHelper.requireNonNull(constants$2450.gtk_text_view_forward_display_line$MH,"gtk_text_view_forward_display_line");
    }
    public static int gtk_text_view_forward_display_line ( Addressable text_view,  Addressable iter) {
        var mh$ = gtk_text_view_forward_display_line$MH();
        try {
            return (int)mh$.invokeExact(text_view, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_backward_display_line$MH() {
        return RuntimeHelper.requireNonNull(constants$2450.gtk_text_view_backward_display_line$MH,"gtk_text_view_backward_display_line");
    }
    public static int gtk_text_view_backward_display_line ( Addressable text_view,  Addressable iter) {
        var mh$ = gtk_text_view_backward_display_line$MH();
        try {
            return (int)mh$.invokeExact(text_view, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_forward_display_line_end$MH() {
        return RuntimeHelper.requireNonNull(constants$2450.gtk_text_view_forward_display_line_end$MH,"gtk_text_view_forward_display_line_end");
    }
    public static int gtk_text_view_forward_display_line_end ( Addressable text_view,  Addressable iter) {
        var mh$ = gtk_text_view_forward_display_line_end$MH();
        try {
            return (int)mh$.invokeExact(text_view, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_backward_display_line_start$MH() {
        return RuntimeHelper.requireNonNull(constants$2450.gtk_text_view_backward_display_line_start$MH,"gtk_text_view_backward_display_line_start");
    }
    public static int gtk_text_view_backward_display_line_start ( Addressable text_view,  Addressable iter) {
        var mh$ = gtk_text_view_backward_display_line_start$MH();
        try {
            return (int)mh$.invokeExact(text_view, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_starts_display_line$MH() {
        return RuntimeHelper.requireNonNull(constants$2451.gtk_text_view_starts_display_line$MH,"gtk_text_view_starts_display_line");
    }
    public static int gtk_text_view_starts_display_line ( Addressable text_view,  Addressable iter) {
        var mh$ = gtk_text_view_starts_display_line$MH();
        try {
            return (int)mh$.invokeExact(text_view, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_move_visually$MH() {
        return RuntimeHelper.requireNonNull(constants$2451.gtk_text_view_move_visually$MH,"gtk_text_view_move_visually");
    }
    public static int gtk_text_view_move_visually ( Addressable text_view,  Addressable iter,  int count) {
        var mh$ = gtk_text_view_move_visually$MH();
        try {
            return (int)mh$.invokeExact(text_view, iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_im_context_filter_keypress$MH() {
        return RuntimeHelper.requireNonNull(constants$2451.gtk_text_view_im_context_filter_keypress$MH,"gtk_text_view_im_context_filter_keypress");
    }
    public static int gtk_text_view_im_context_filter_keypress ( Addressable text_view,  Addressable event) {
        var mh$ = gtk_text_view_im_context_filter_keypress$MH();
        try {
            return (int)mh$.invokeExact(text_view, event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_reset_im_context$MH() {
        return RuntimeHelper.requireNonNull(constants$2451.gtk_text_view_reset_im_context$MH,"gtk_text_view_reset_im_context");
    }
    public static void gtk_text_view_reset_im_context ( Addressable text_view) {
        var mh$ = gtk_text_view_reset_im_context$MH();
        try {
            mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_gutter$MH() {
        return RuntimeHelper.requireNonNull(constants$2451.gtk_text_view_get_gutter$MH,"gtk_text_view_get_gutter");
    }
    public static MemoryAddress gtk_text_view_get_gutter ( Addressable text_view,  int win) {
        var mh$ = gtk_text_view_get_gutter$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(text_view, win);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_set_gutter$MH() {
        return RuntimeHelper.requireNonNull(constants$2451.gtk_text_view_set_gutter$MH,"gtk_text_view_set_gutter");
    }
    public static void gtk_text_view_set_gutter ( Addressable text_view,  int win,  Addressable widget) {
        var mh$ = gtk_text_view_set_gutter$MH();
        try {
            mh$.invokeExact(text_view, win, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_add_child_at_anchor$MH() {
        return RuntimeHelper.requireNonNull(constants$2452.gtk_text_view_add_child_at_anchor$MH,"gtk_text_view_add_child_at_anchor");
    }
    public static void gtk_text_view_add_child_at_anchor ( Addressable text_view,  Addressable child,  Addressable anchor) {
        var mh$ = gtk_text_view_add_child_at_anchor$MH();
        try {
            mh$.invokeExact(text_view, child, anchor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_add_overlay$MH() {
        return RuntimeHelper.requireNonNull(constants$2452.gtk_text_view_add_overlay$MH,"gtk_text_view_add_overlay");
    }
    public static void gtk_text_view_add_overlay ( Addressable text_view,  Addressable child,  int xpos,  int ypos) {
        var mh$ = gtk_text_view_add_overlay$MH();
        try {
            mh$.invokeExact(text_view, child, xpos, ypos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_move_overlay$MH() {
        return RuntimeHelper.requireNonNull(constants$2452.gtk_text_view_move_overlay$MH,"gtk_text_view_move_overlay");
    }
    public static void gtk_text_view_move_overlay ( Addressable text_view,  Addressable child,  int xpos,  int ypos) {
        var mh$ = gtk_text_view_move_overlay$MH();
        try {
            mh$.invokeExact(text_view, child, xpos, ypos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$2452.gtk_text_view_remove$MH,"gtk_text_view_remove");
    }
    public static void gtk_text_view_remove ( Addressable text_view,  Addressable child) {
        var mh$ = gtk_text_view_remove$MH();
        try {
            mh$.invokeExact(text_view, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_set_wrap_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2452.gtk_text_view_set_wrap_mode$MH,"gtk_text_view_set_wrap_mode");
    }
    public static void gtk_text_view_set_wrap_mode ( Addressable text_view,  int wrap_mode) {
        var mh$ = gtk_text_view_set_wrap_mode$MH();
        try {
            mh$.invokeExact(text_view, wrap_mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_wrap_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2452.gtk_text_view_get_wrap_mode$MH,"gtk_text_view_get_wrap_mode");
    }
    public static int gtk_text_view_get_wrap_mode ( Addressable text_view) {
        var mh$ = gtk_text_view_get_wrap_mode$MH();
        try {
            return (int)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_set_editable$MH() {
        return RuntimeHelper.requireNonNull(constants$2453.gtk_text_view_set_editable$MH,"gtk_text_view_set_editable");
    }
    public static void gtk_text_view_set_editable ( Addressable text_view,  int setting) {
        var mh$ = gtk_text_view_set_editable$MH();
        try {
            mh$.invokeExact(text_view, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_editable$MH() {
        return RuntimeHelper.requireNonNull(constants$2453.gtk_text_view_get_editable$MH,"gtk_text_view_get_editable");
    }
    public static int gtk_text_view_get_editable ( Addressable text_view) {
        var mh$ = gtk_text_view_get_editable$MH();
        try {
            return (int)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_set_overwrite$MH() {
        return RuntimeHelper.requireNonNull(constants$2453.gtk_text_view_set_overwrite$MH,"gtk_text_view_set_overwrite");
    }
    public static void gtk_text_view_set_overwrite ( Addressable text_view,  int overwrite) {
        var mh$ = gtk_text_view_set_overwrite$MH();
        try {
            mh$.invokeExact(text_view, overwrite);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_overwrite$MH() {
        return RuntimeHelper.requireNonNull(constants$2453.gtk_text_view_get_overwrite$MH,"gtk_text_view_get_overwrite");
    }
    public static int gtk_text_view_get_overwrite ( Addressable text_view) {
        var mh$ = gtk_text_view_get_overwrite$MH();
        try {
            return (int)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_set_accepts_tab$MH() {
        return RuntimeHelper.requireNonNull(constants$2453.gtk_text_view_set_accepts_tab$MH,"gtk_text_view_set_accepts_tab");
    }
    public static void gtk_text_view_set_accepts_tab ( Addressable text_view,  int accepts_tab) {
        var mh$ = gtk_text_view_set_accepts_tab$MH();
        try {
            mh$.invokeExact(text_view, accepts_tab);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_accepts_tab$MH() {
        return RuntimeHelper.requireNonNull(constants$2453.gtk_text_view_get_accepts_tab$MH,"gtk_text_view_get_accepts_tab");
    }
    public static int gtk_text_view_get_accepts_tab ( Addressable text_view) {
        var mh$ = gtk_text_view_get_accepts_tab$MH();
        try {
            return (int)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_set_pixels_above_lines$MH() {
        return RuntimeHelper.requireNonNull(constants$2454.gtk_text_view_set_pixels_above_lines$MH,"gtk_text_view_set_pixels_above_lines");
    }
    public static void gtk_text_view_set_pixels_above_lines ( Addressable text_view,  int pixels_above_lines) {
        var mh$ = gtk_text_view_set_pixels_above_lines$MH();
        try {
            mh$.invokeExact(text_view, pixels_above_lines);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_pixels_above_lines$MH() {
        return RuntimeHelper.requireNonNull(constants$2454.gtk_text_view_get_pixels_above_lines$MH,"gtk_text_view_get_pixels_above_lines");
    }
    public static int gtk_text_view_get_pixels_above_lines ( Addressable text_view) {
        var mh$ = gtk_text_view_get_pixels_above_lines$MH();
        try {
            return (int)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_set_pixels_below_lines$MH() {
        return RuntimeHelper.requireNonNull(constants$2454.gtk_text_view_set_pixels_below_lines$MH,"gtk_text_view_set_pixels_below_lines");
    }
    public static void gtk_text_view_set_pixels_below_lines ( Addressable text_view,  int pixels_below_lines) {
        var mh$ = gtk_text_view_set_pixels_below_lines$MH();
        try {
            mh$.invokeExact(text_view, pixels_below_lines);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_pixels_below_lines$MH() {
        return RuntimeHelper.requireNonNull(constants$2454.gtk_text_view_get_pixels_below_lines$MH,"gtk_text_view_get_pixels_below_lines");
    }
    public static int gtk_text_view_get_pixels_below_lines ( Addressable text_view) {
        var mh$ = gtk_text_view_get_pixels_below_lines$MH();
        try {
            return (int)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_set_pixels_inside_wrap$MH() {
        return RuntimeHelper.requireNonNull(constants$2454.gtk_text_view_set_pixels_inside_wrap$MH,"gtk_text_view_set_pixels_inside_wrap");
    }
    public static void gtk_text_view_set_pixels_inside_wrap ( Addressable text_view,  int pixels_inside_wrap) {
        var mh$ = gtk_text_view_set_pixels_inside_wrap$MH();
        try {
            mh$.invokeExact(text_view, pixels_inside_wrap);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_pixels_inside_wrap$MH() {
        return RuntimeHelper.requireNonNull(constants$2454.gtk_text_view_get_pixels_inside_wrap$MH,"gtk_text_view_get_pixels_inside_wrap");
    }
    public static int gtk_text_view_get_pixels_inside_wrap ( Addressable text_view) {
        var mh$ = gtk_text_view_get_pixels_inside_wrap$MH();
        try {
            return (int)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_set_justification$MH() {
        return RuntimeHelper.requireNonNull(constants$2455.gtk_text_view_set_justification$MH,"gtk_text_view_set_justification");
    }
    public static void gtk_text_view_set_justification ( Addressable text_view,  int justification) {
        var mh$ = gtk_text_view_set_justification$MH();
        try {
            mh$.invokeExact(text_view, justification);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_justification$MH() {
        return RuntimeHelper.requireNonNull(constants$2455.gtk_text_view_get_justification$MH,"gtk_text_view_get_justification");
    }
    public static int gtk_text_view_get_justification ( Addressable text_view) {
        var mh$ = gtk_text_view_get_justification$MH();
        try {
            return (int)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_set_left_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$2455.gtk_text_view_set_left_margin$MH,"gtk_text_view_set_left_margin");
    }
    public static void gtk_text_view_set_left_margin ( Addressable text_view,  int left_margin) {
        var mh$ = gtk_text_view_set_left_margin$MH();
        try {
            mh$.invokeExact(text_view, left_margin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_left_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$2455.gtk_text_view_get_left_margin$MH,"gtk_text_view_get_left_margin");
    }
    public static int gtk_text_view_get_left_margin ( Addressable text_view) {
        var mh$ = gtk_text_view_get_left_margin$MH();
        try {
            return (int)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_set_right_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$2455.gtk_text_view_set_right_margin$MH,"gtk_text_view_set_right_margin");
    }
    public static void gtk_text_view_set_right_margin ( Addressable text_view,  int right_margin) {
        var mh$ = gtk_text_view_set_right_margin$MH();
        try {
            mh$.invokeExact(text_view, right_margin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_right_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$2455.gtk_text_view_get_right_margin$MH,"gtk_text_view_get_right_margin");
    }
    public static int gtk_text_view_get_right_margin ( Addressable text_view) {
        var mh$ = gtk_text_view_get_right_margin$MH();
        try {
            return (int)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_set_top_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$2456.gtk_text_view_set_top_margin$MH,"gtk_text_view_set_top_margin");
    }
    public static void gtk_text_view_set_top_margin ( Addressable text_view,  int top_margin) {
        var mh$ = gtk_text_view_set_top_margin$MH();
        try {
            mh$.invokeExact(text_view, top_margin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_top_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$2456.gtk_text_view_get_top_margin$MH,"gtk_text_view_get_top_margin");
    }
    public static int gtk_text_view_get_top_margin ( Addressable text_view) {
        var mh$ = gtk_text_view_get_top_margin$MH();
        try {
            return (int)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_set_bottom_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$2456.gtk_text_view_set_bottom_margin$MH,"gtk_text_view_set_bottom_margin");
    }
    public static void gtk_text_view_set_bottom_margin ( Addressable text_view,  int bottom_margin) {
        var mh$ = gtk_text_view_set_bottom_margin$MH();
        try {
            mh$.invokeExact(text_view, bottom_margin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_bottom_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$2456.gtk_text_view_get_bottom_margin$MH,"gtk_text_view_get_bottom_margin");
    }
    public static int gtk_text_view_get_bottom_margin ( Addressable text_view) {
        var mh$ = gtk_text_view_get_bottom_margin$MH();
        try {
            return (int)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_set_indent$MH() {
        return RuntimeHelper.requireNonNull(constants$2456.gtk_text_view_set_indent$MH,"gtk_text_view_set_indent");
    }
    public static void gtk_text_view_set_indent ( Addressable text_view,  int indent) {
        var mh$ = gtk_text_view_set_indent$MH();
        try {
            mh$.invokeExact(text_view, indent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_indent$MH() {
        return RuntimeHelper.requireNonNull(constants$2456.gtk_text_view_get_indent$MH,"gtk_text_view_get_indent");
    }
    public static int gtk_text_view_get_indent ( Addressable text_view) {
        var mh$ = gtk_text_view_get_indent$MH();
        try {
            return (int)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_set_tabs$MH() {
        return RuntimeHelper.requireNonNull(constants$2457.gtk_text_view_set_tabs$MH,"gtk_text_view_set_tabs");
    }
    public static void gtk_text_view_set_tabs ( Addressable text_view,  Addressable tabs) {
        var mh$ = gtk_text_view_set_tabs$MH();
        try {
            mh$.invokeExact(text_view, tabs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_tabs$MH() {
        return RuntimeHelper.requireNonNull(constants$2457.gtk_text_view_get_tabs$MH,"gtk_text_view_get_tabs");
    }
    public static MemoryAddress gtk_text_view_get_tabs ( Addressable text_view) {
        var mh$ = gtk_text_view_get_tabs$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_set_input_purpose$MH() {
        return RuntimeHelper.requireNonNull(constants$2457.gtk_text_view_set_input_purpose$MH,"gtk_text_view_set_input_purpose");
    }
    public static void gtk_text_view_set_input_purpose ( Addressable text_view,  int purpose) {
        var mh$ = gtk_text_view_set_input_purpose$MH();
        try {
            mh$.invokeExact(text_view, purpose);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_input_purpose$MH() {
        return RuntimeHelper.requireNonNull(constants$2457.gtk_text_view_get_input_purpose$MH,"gtk_text_view_get_input_purpose");
    }
    public static int gtk_text_view_get_input_purpose ( Addressable text_view) {
        var mh$ = gtk_text_view_get_input_purpose$MH();
        try {
            return (int)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_set_input_hints$MH() {
        return RuntimeHelper.requireNonNull(constants$2457.gtk_text_view_set_input_hints$MH,"gtk_text_view_set_input_hints");
    }
    public static void gtk_text_view_set_input_hints ( Addressable text_view,  int hints) {
        var mh$ = gtk_text_view_set_input_hints$MH();
        try {
            mh$.invokeExact(text_view, hints);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_input_hints$MH() {
        return RuntimeHelper.requireNonNull(constants$2457.gtk_text_view_get_input_hints$MH,"gtk_text_view_get_input_hints");
    }
    public static int gtk_text_view_get_input_hints ( Addressable text_view) {
        var mh$ = gtk_text_view_get_input_hints$MH();
        try {
            return (int)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_set_monospace$MH() {
        return RuntimeHelper.requireNonNull(constants$2458.gtk_text_view_set_monospace$MH,"gtk_text_view_set_monospace");
    }
    public static void gtk_text_view_set_monospace ( Addressable text_view,  int monospace) {
        var mh$ = gtk_text_view_set_monospace$MH();
        try {
            mh$.invokeExact(text_view, monospace);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_monospace$MH() {
        return RuntimeHelper.requireNonNull(constants$2458.gtk_text_view_get_monospace$MH,"gtk_text_view_get_monospace");
    }
    public static int gtk_text_view_get_monospace ( Addressable text_view) {
        var mh$ = gtk_text_view_get_monospace$MH();
        try {
            return (int)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_set_extra_menu$MH() {
        return RuntimeHelper.requireNonNull(constants$2458.gtk_text_view_set_extra_menu$MH,"gtk_text_view_set_extra_menu");
    }
    public static void gtk_text_view_set_extra_menu ( Addressable text_view,  Addressable model) {
        var mh$ = gtk_text_view_set_extra_menu$MH();
        try {
            mh$.invokeExact(text_view, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_extra_menu$MH() {
        return RuntimeHelper.requireNonNull(constants$2458.gtk_text_view_get_extra_menu$MH,"gtk_text_view_get_extra_menu");
    }
    public static MemoryAddress gtk_text_view_get_extra_menu ( Addressable text_view) {
        var mh$ = gtk_text_view_get_extra_menu$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_rtl_context$MH() {
        return RuntimeHelper.requireNonNull(constants$2458.gtk_text_view_get_rtl_context$MH,"gtk_text_view_get_rtl_context");
    }
    public static MemoryAddress gtk_text_view_get_rtl_context ( Addressable text_view) {
        var mh$ = gtk_text_view_get_rtl_context$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_get_ltr_context$MH() {
        return RuntimeHelper.requireNonNull(constants$2458.gtk_text_view_get_ltr_context$MH,"gtk_text_view_get_ltr_context");
    }
    public static MemoryAddress gtk_text_view_get_ltr_context ( Addressable text_view) {
        var mh$ = gtk_text_view_get_ltr_context$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(text_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_test_accessible_has_role$MH() {
        return RuntimeHelper.requireNonNull(constants$2459.gtk_test_accessible_has_role$MH,"gtk_test_accessible_has_role");
    }
    public static int gtk_test_accessible_has_role ( Addressable accessible,  int role) {
        var mh$ = gtk_test_accessible_has_role$MH();
        try {
            return (int)mh$.invokeExact(accessible, role);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_test_accessible_has_property$MH() {
        return RuntimeHelper.requireNonNull(constants$2459.gtk_test_accessible_has_property$MH,"gtk_test_accessible_has_property");
    }
    public static int gtk_test_accessible_has_property ( Addressable accessible,  int property) {
        var mh$ = gtk_test_accessible_has_property$MH();
        try {
            return (int)mh$.invokeExact(accessible, property);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_test_accessible_has_relation$MH() {
        return RuntimeHelper.requireNonNull(constants$2459.gtk_test_accessible_has_relation$MH,"gtk_test_accessible_has_relation");
    }
    public static int gtk_test_accessible_has_relation ( Addressable accessible,  int relation) {
        var mh$ = gtk_test_accessible_has_relation$MH();
        try {
            return (int)mh$.invokeExact(accessible, relation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_test_accessible_has_state$MH() {
        return RuntimeHelper.requireNonNull(constants$2459.gtk_test_accessible_has_state$MH,"gtk_test_accessible_has_state");
    }
    public static int gtk_test_accessible_has_state ( Addressable accessible,  int state) {
        var mh$ = gtk_test_accessible_has_state$MH();
        try {
            return (int)mh$.invokeExact(accessible, state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_test_accessible_check_property$MH() {
        return RuntimeHelper.requireNonNull(constants$2459.gtk_test_accessible_check_property$MH,"gtk_test_accessible_check_property");
    }
    public static MemoryAddress gtk_test_accessible_check_property ( Addressable accessible,  int property, Object... x2) {
        var mh$ = gtk_test_accessible_check_property$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(accessible, property, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_test_accessible_check_relation$MH() {
        return RuntimeHelper.requireNonNull(constants$2459.gtk_test_accessible_check_relation$MH,"gtk_test_accessible_check_relation");
    }
    public static MemoryAddress gtk_test_accessible_check_relation ( Addressable accessible,  int relation, Object... x2) {
        var mh$ = gtk_test_accessible_check_relation$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(accessible, relation, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_test_accessible_check_state$MH() {
        return RuntimeHelper.requireNonNull(constants$2460.gtk_test_accessible_check_state$MH,"gtk_test_accessible_check_state");
    }
    public static MemoryAddress gtk_test_accessible_check_state ( Addressable accessible,  int state, Object... x2) {
        var mh$ = gtk_test_accessible_check_state$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(accessible, state, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_test_accessible_assertion_message_role$MH() {
        return RuntimeHelper.requireNonNull(constants$2460.gtk_test_accessible_assertion_message_role$MH,"gtk_test_accessible_assertion_message_role");
    }
    public static void gtk_test_accessible_assertion_message_role ( Addressable domain,  Addressable file,  int line,  Addressable func,  Addressable expr,  Addressable accessible,  int expected_role,  int actual_role) {
        var mh$ = gtk_test_accessible_assertion_message_role$MH();
        try {
            mh$.invokeExact(domain, file, line, func, expr, accessible, expected_role, actual_role);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_test_init$MH() {
        return RuntimeHelper.requireNonNull(constants$2460.gtk_test_init$MH,"gtk_test_init");
    }
    public static void gtk_test_init ( Addressable argcp,  Addressable argvp, Object... x2) {
        var mh$ = gtk_test_init$MH();
        try {
            mh$.invokeExact(argcp, argvp, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_test_register_all_types$MH() {
        return RuntimeHelper.requireNonNull(constants$2460.gtk_test_register_all_types$MH,"gtk_test_register_all_types");
    }
    public static void gtk_test_register_all_types () {
        var mh$ = gtk_test_register_all_types$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_test_list_all_types$MH() {
        return RuntimeHelper.requireNonNull(constants$2460.gtk_test_list_all_types$MH,"gtk_test_list_all_types");
    }
    public static MemoryAddress gtk_test_list_all_types ( Addressable n_types) {
        var mh$ = gtk_test_list_all_types$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(n_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_test_widget_wait_for_draw$MH() {
        return RuntimeHelper.requireNonNull(constants$2460.gtk_test_widget_wait_for_draw$MH,"gtk_test_widget_wait_for_draw");
    }
    public static void gtk_test_widget_wait_for_draw ( Addressable widget) {
        var mh$ = gtk_test_widget_wait_for_draw$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_row_data_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2461.gtk_tree_row_data_get_type$MH,"gtk_tree_row_data_get_type");
    }
    public static long gtk_tree_row_data_get_type () {
        var mh$ = gtk_tree_row_data_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_drag_source_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2461.gtk_tree_drag_source_get_type$MH,"gtk_tree_drag_source_get_type");
    }
    public static long gtk_tree_drag_source_get_type () {
        var mh$ = gtk_tree_drag_source_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_drag_source_row_draggable$MH() {
        return RuntimeHelper.requireNonNull(constants$2461.gtk_tree_drag_source_row_draggable$MH,"gtk_tree_drag_source_row_draggable");
    }
    public static int gtk_tree_drag_source_row_draggable ( Addressable drag_source,  Addressable path) {
        var mh$ = gtk_tree_drag_source_row_draggable$MH();
        try {
            return (int)mh$.invokeExact(drag_source, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_drag_source_drag_data_delete$MH() {
        return RuntimeHelper.requireNonNull(constants$2461.gtk_tree_drag_source_drag_data_delete$MH,"gtk_tree_drag_source_drag_data_delete");
    }
    public static int gtk_tree_drag_source_drag_data_delete ( Addressable drag_source,  Addressable path) {
        var mh$ = gtk_tree_drag_source_drag_data_delete$MH();
        try {
            return (int)mh$.invokeExact(drag_source, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_drag_source_drag_data_get$MH() {
        return RuntimeHelper.requireNonNull(constants$2461.gtk_tree_drag_source_drag_data_get$MH,"gtk_tree_drag_source_drag_data_get");
    }
    public static MemoryAddress gtk_tree_drag_source_drag_data_get ( Addressable drag_source,  Addressable path) {
        var mh$ = gtk_tree_drag_source_drag_data_get$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(drag_source, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_drag_dest_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2461.gtk_tree_drag_dest_get_type$MH,"gtk_tree_drag_dest_get_type");
    }
    public static long gtk_tree_drag_dest_get_type () {
        var mh$ = gtk_tree_drag_dest_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_drag_dest_drag_data_received$MH() {
        return RuntimeHelper.requireNonNull(constants$2462.gtk_tree_drag_dest_drag_data_received$MH,"gtk_tree_drag_dest_drag_data_received");
    }
    public static int gtk_tree_drag_dest_drag_data_received ( Addressable drag_dest,  Addressable dest,  Addressable value) {
        var mh$ = gtk_tree_drag_dest_drag_data_received$MH();
        try {
            return (int)mh$.invokeExact(drag_dest, dest, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_drag_dest_row_drop_possible$MH() {
        return RuntimeHelper.requireNonNull(constants$2462.gtk_tree_drag_dest_row_drop_possible$MH,"gtk_tree_drag_dest_row_drop_possible");
    }
    public static int gtk_tree_drag_dest_row_drop_possible ( Addressable drag_dest,  Addressable dest_path,  Addressable value) {
        var mh$ = gtk_tree_drag_dest_row_drop_possible$MH();
        try {
            return (int)mh$.invokeExact(drag_dest, dest_path, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_create_row_drag_content$MH() {
        return RuntimeHelper.requireNonNull(constants$2462.gtk_tree_create_row_drag_content$MH,"gtk_tree_create_row_drag_content");
    }
    public static MemoryAddress gtk_tree_create_row_drag_content ( Addressable tree_model,  Addressable path) {
        var mh$ = gtk_tree_create_row_drag_content$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(tree_model, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_get_row_drag_data$MH() {
        return RuntimeHelper.requireNonNull(constants$2462.gtk_tree_get_row_drag_data$MH,"gtk_tree_get_row_drag_data");
    }
    public static int gtk_tree_get_row_drag_data ( Addressable value,  Addressable tree_model,  Addressable path) {
        var mh$ = gtk_tree_get_row_drag_data$MH();
        try {
            return (int)mh$.invokeExact(value, tree_model, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_list_model_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2462.gtk_tree_list_model_get_type$MH,"gtk_tree_list_model_get_type");
    }
    public static long gtk_tree_list_model_get_type () {
        var mh$ = gtk_tree_list_model_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeListModel_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeListModel_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeListModel_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeListModel_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeListModel$MH() {
        return RuntimeHelper.requireNonNull(constants$2462.glib_autoptr_clear_GtkTreeListModel$MH,"glib_autoptr_clear_GtkTreeListModel");
    }
    public static void glib_autoptr_clear_GtkTreeListModel ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTreeListModel$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeListModel$MH() {
        return RuntimeHelper.requireNonNull(constants$2463.glib_autoptr_cleanup_GtkTreeListModel$MH,"glib_autoptr_cleanup_GtkTreeListModel");
    }
    public static void glib_autoptr_cleanup_GtkTreeListModel ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTreeListModel$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeListModel$MH() {
        return RuntimeHelper.requireNonNull(constants$2463.glib_listautoptr_cleanup_GtkTreeListModel$MH,"glib_listautoptr_cleanup_GtkTreeListModel");
    }
    public static void glib_listautoptr_cleanup_GtkTreeListModel ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTreeListModel$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeListModel$MH() {
        return RuntimeHelper.requireNonNull(constants$2463.glib_slistautoptr_cleanup_GtkTreeListModel$MH,"glib_slistautoptr_cleanup_GtkTreeListModel");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeListModel ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTreeListModel$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeListModel$MH() {
        return RuntimeHelper.requireNonNull(constants$2463.glib_queueautoptr_cleanup_GtkTreeListModel$MH,"glib_queueautoptr_cleanup_GtkTreeListModel");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeListModel ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTreeListModel$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeListModelClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeListModelClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeListModelClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeListModelClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeListModelClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2463.glib_autoptr_clear_GtkTreeListModelClass$MH,"glib_autoptr_clear_GtkTreeListModelClass");
    }
    public static void glib_autoptr_clear_GtkTreeListModelClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTreeListModelClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeListModelClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2463.glib_autoptr_cleanup_GtkTreeListModelClass$MH,"glib_autoptr_cleanup_GtkTreeListModelClass");
    }
    public static void glib_autoptr_cleanup_GtkTreeListModelClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTreeListModelClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeListModelClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2464.glib_listautoptr_cleanup_GtkTreeListModelClass$MH,"glib_listautoptr_cleanup_GtkTreeListModelClass");
    }
    public static void glib_listautoptr_cleanup_GtkTreeListModelClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTreeListModelClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeListModelClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2464.glib_slistautoptr_cleanup_GtkTreeListModelClass$MH,"glib_slistautoptr_cleanup_GtkTreeListModelClass");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeListModelClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTreeListModelClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeListModelClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2464.glib_queueautoptr_cleanup_GtkTreeListModelClass$MH,"glib_queueautoptr_cleanup_GtkTreeListModelClass");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeListModelClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTreeListModelClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_TREE_LIST_MODEL$MH() {
        return RuntimeHelper.requireNonNull(constants$2464.GTK_TREE_LIST_MODEL$MH,"GTK_TREE_LIST_MODEL");
    }
    public static MemoryAddress GTK_TREE_LIST_MODEL ( Addressable ptr) {
        var mh$ = GTK_TREE_LIST_MODEL$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_TREE_LIST_MODEL$MH() {
        return RuntimeHelper.requireNonNull(constants$2464.GTK_IS_TREE_LIST_MODEL$MH,"GTK_IS_TREE_LIST_MODEL");
    }
    public static int GTK_IS_TREE_LIST_MODEL ( Addressable ptr) {
        var mh$ = GTK_IS_TREE_LIST_MODEL$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_list_row_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2464.gtk_tree_list_row_get_type$MH,"gtk_tree_list_row_get_type");
    }
    public static long gtk_tree_list_row_get_type () {
        var mh$ = gtk_tree_list_row_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeListRow_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeListRow_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeListRow_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeListRow_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeListRow$MH() {
        return RuntimeHelper.requireNonNull(constants$2465.glib_autoptr_clear_GtkTreeListRow$MH,"glib_autoptr_clear_GtkTreeListRow");
    }
    public static void glib_autoptr_clear_GtkTreeListRow ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTreeListRow$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeListRow$MH() {
        return RuntimeHelper.requireNonNull(constants$2465.glib_autoptr_cleanup_GtkTreeListRow$MH,"glib_autoptr_cleanup_GtkTreeListRow");
    }
    public static void glib_autoptr_cleanup_GtkTreeListRow ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTreeListRow$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeListRow$MH() {
        return RuntimeHelper.requireNonNull(constants$2465.glib_listautoptr_cleanup_GtkTreeListRow$MH,"glib_listautoptr_cleanup_GtkTreeListRow");
    }
    public static void glib_listautoptr_cleanup_GtkTreeListRow ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTreeListRow$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeListRow$MH() {
        return RuntimeHelper.requireNonNull(constants$2465.glib_slistautoptr_cleanup_GtkTreeListRow$MH,"glib_slistautoptr_cleanup_GtkTreeListRow");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeListRow ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTreeListRow$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeListRow$MH() {
        return RuntimeHelper.requireNonNull(constants$2465.glib_queueautoptr_cleanup_GtkTreeListRow$MH,"glib_queueautoptr_cleanup_GtkTreeListRow");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeListRow ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTreeListRow$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeListRowClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeListRowClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeListRowClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeListRowClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeListRowClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2465.glib_autoptr_clear_GtkTreeListRowClass$MH,"glib_autoptr_clear_GtkTreeListRowClass");
    }
    public static void glib_autoptr_clear_GtkTreeListRowClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTreeListRowClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeListRowClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2466.glib_autoptr_cleanup_GtkTreeListRowClass$MH,"glib_autoptr_cleanup_GtkTreeListRowClass");
    }
    public static void glib_autoptr_cleanup_GtkTreeListRowClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTreeListRowClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeListRowClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2466.glib_listautoptr_cleanup_GtkTreeListRowClass$MH,"glib_listautoptr_cleanup_GtkTreeListRowClass");
    }
    public static void glib_listautoptr_cleanup_GtkTreeListRowClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTreeListRowClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeListRowClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2466.glib_slistautoptr_cleanup_GtkTreeListRowClass$MH,"glib_slistautoptr_cleanup_GtkTreeListRowClass");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeListRowClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTreeListRowClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeListRowClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2466.glib_queueautoptr_cleanup_GtkTreeListRowClass$MH,"glib_queueautoptr_cleanup_GtkTreeListRowClass");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeListRowClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTreeListRowClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_TREE_LIST_ROW$MH() {
        return RuntimeHelper.requireNonNull(constants$2466.GTK_TREE_LIST_ROW$MH,"GTK_TREE_LIST_ROW");
    }
    public static MemoryAddress GTK_TREE_LIST_ROW ( Addressable ptr) {
        var mh$ = GTK_TREE_LIST_ROW$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_TREE_LIST_ROW$MH() {
        return RuntimeHelper.requireNonNull(constants$2466.GTK_IS_TREE_LIST_ROW$MH,"GTK_IS_TREE_LIST_ROW");
    }
    public static int GTK_IS_TREE_LIST_ROW ( Addressable ptr) {
        var mh$ = GTK_IS_TREE_LIST_ROW$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_list_model_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2467.gtk_tree_list_model_new$MH,"gtk_tree_list_model_new");
    }
    public static MemoryAddress gtk_tree_list_model_new ( Addressable root,  int passthrough,  int autoexpand,  Addressable create_func,  Addressable user_data,  Addressable user_destroy) {
        var mh$ = gtk_tree_list_model_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(root, passthrough, autoexpand, create_func, user_data, user_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_list_model_get_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2467.gtk_tree_list_model_get_model$MH,"gtk_tree_list_model_get_model");
    }
    public static MemoryAddress gtk_tree_list_model_get_model ( Addressable self) {
        var mh$ = gtk_tree_list_model_get_model$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_list_model_get_passthrough$MH() {
        return RuntimeHelper.requireNonNull(constants$2467.gtk_tree_list_model_get_passthrough$MH,"gtk_tree_list_model_get_passthrough");
    }
    public static int gtk_tree_list_model_get_passthrough ( Addressable self) {
        var mh$ = gtk_tree_list_model_get_passthrough$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_list_model_set_autoexpand$MH() {
        return RuntimeHelper.requireNonNull(constants$2467.gtk_tree_list_model_set_autoexpand$MH,"gtk_tree_list_model_set_autoexpand");
    }
    public static void gtk_tree_list_model_set_autoexpand ( Addressable self,  int autoexpand) {
        var mh$ = gtk_tree_list_model_set_autoexpand$MH();
        try {
            mh$.invokeExact(self, autoexpand);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_list_model_get_autoexpand$MH() {
        return RuntimeHelper.requireNonNull(constants$2468.gtk_tree_list_model_get_autoexpand$MH,"gtk_tree_list_model_get_autoexpand");
    }
    public static int gtk_tree_list_model_get_autoexpand ( Addressable self) {
        var mh$ = gtk_tree_list_model_get_autoexpand$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_list_model_get_child_row$MH() {
        return RuntimeHelper.requireNonNull(constants$2468.gtk_tree_list_model_get_child_row$MH,"gtk_tree_list_model_get_child_row");
    }
    public static MemoryAddress gtk_tree_list_model_get_child_row ( Addressable self,  int position) {
        var mh$ = gtk_tree_list_model_get_child_row$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_list_model_get_row$MH() {
        return RuntimeHelper.requireNonNull(constants$2468.gtk_tree_list_model_get_row$MH,"gtk_tree_list_model_get_row");
    }
    public static MemoryAddress gtk_tree_list_model_get_row ( Addressable self,  int position) {
        var mh$ = gtk_tree_list_model_get_row$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_list_row_get_item$MH() {
        return RuntimeHelper.requireNonNull(constants$2468.gtk_tree_list_row_get_item$MH,"gtk_tree_list_row_get_item");
    }
    public static MemoryAddress gtk_tree_list_row_get_item ( Addressable self) {
        var mh$ = gtk_tree_list_row_get_item$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_list_row_set_expanded$MH() {
        return RuntimeHelper.requireNonNull(constants$2468.gtk_tree_list_row_set_expanded$MH,"gtk_tree_list_row_set_expanded");
    }
    public static void gtk_tree_list_row_set_expanded ( Addressable self,  int expanded) {
        var mh$ = gtk_tree_list_row_set_expanded$MH();
        try {
            mh$.invokeExact(self, expanded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_list_row_get_expanded$MH() {
        return RuntimeHelper.requireNonNull(constants$2468.gtk_tree_list_row_get_expanded$MH,"gtk_tree_list_row_get_expanded");
    }
    public static int gtk_tree_list_row_get_expanded ( Addressable self) {
        var mh$ = gtk_tree_list_row_get_expanded$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_list_row_is_expandable$MH() {
        return RuntimeHelper.requireNonNull(constants$2469.gtk_tree_list_row_is_expandable$MH,"gtk_tree_list_row_is_expandable");
    }
    public static int gtk_tree_list_row_is_expandable ( Addressable self) {
        var mh$ = gtk_tree_list_row_is_expandable$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_list_row_get_position$MH() {
        return RuntimeHelper.requireNonNull(constants$2469.gtk_tree_list_row_get_position$MH,"gtk_tree_list_row_get_position");
    }
    public static int gtk_tree_list_row_get_position ( Addressable self) {
        var mh$ = gtk_tree_list_row_get_position$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_list_row_get_depth$MH() {
        return RuntimeHelper.requireNonNull(constants$2469.gtk_tree_list_row_get_depth$MH,"gtk_tree_list_row_get_depth");
    }
    public static int gtk_tree_list_row_get_depth ( Addressable self) {
        var mh$ = gtk_tree_list_row_get_depth$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_list_row_get_children$MH() {
        return RuntimeHelper.requireNonNull(constants$2469.gtk_tree_list_row_get_children$MH,"gtk_tree_list_row_get_children");
    }
    public static MemoryAddress gtk_tree_list_row_get_children ( Addressable self) {
        var mh$ = gtk_tree_list_row_get_children$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_list_row_get_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$2469.gtk_tree_list_row_get_parent$MH,"gtk_tree_list_row_get_parent");
    }
    public static MemoryAddress gtk_tree_list_row_get_parent ( Addressable self) {
        var mh$ = gtk_tree_list_row_get_parent$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_list_row_get_child_row$MH() {
        return RuntimeHelper.requireNonNull(constants$2469.gtk_tree_list_row_get_child_row$MH,"gtk_tree_list_row_get_child_row");
    }
    public static MemoryAddress gtk_tree_list_row_get_child_row ( Addressable self,  int position) {
        var mh$ = gtk_tree_list_row_get_child_row$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_expander_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2470.gtk_tree_expander_get_type$MH,"gtk_tree_expander_get_type");
    }
    public static long gtk_tree_expander_get_type () {
        var mh$ = gtk_tree_expander_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeExpander_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeExpander_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeExpander_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeExpander_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeExpander$MH() {
        return RuntimeHelper.requireNonNull(constants$2470.glib_autoptr_clear_GtkTreeExpander$MH,"glib_autoptr_clear_GtkTreeExpander");
    }
    public static void glib_autoptr_clear_GtkTreeExpander ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTreeExpander$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeExpander$MH() {
        return RuntimeHelper.requireNonNull(constants$2470.glib_autoptr_cleanup_GtkTreeExpander$MH,"glib_autoptr_cleanup_GtkTreeExpander");
    }
    public static void glib_autoptr_cleanup_GtkTreeExpander ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTreeExpander$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeExpander$MH() {
        return RuntimeHelper.requireNonNull(constants$2470.glib_listautoptr_cleanup_GtkTreeExpander$MH,"glib_listautoptr_cleanup_GtkTreeExpander");
    }
    public static void glib_listautoptr_cleanup_GtkTreeExpander ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTreeExpander$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeExpander$MH() {
        return RuntimeHelper.requireNonNull(constants$2470.glib_slistautoptr_cleanup_GtkTreeExpander$MH,"glib_slistautoptr_cleanup_GtkTreeExpander");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeExpander ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTreeExpander$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeExpander$MH() {
        return RuntimeHelper.requireNonNull(constants$2470.glib_queueautoptr_cleanup_GtkTreeExpander$MH,"glib_queueautoptr_cleanup_GtkTreeExpander");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeExpander ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTreeExpander$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeExpanderClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeExpanderClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeExpanderClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeExpanderClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeExpanderClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2471.glib_autoptr_clear_GtkTreeExpanderClass$MH,"glib_autoptr_clear_GtkTreeExpanderClass");
    }
    public static void glib_autoptr_clear_GtkTreeExpanderClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTreeExpanderClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeExpanderClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2471.glib_autoptr_cleanup_GtkTreeExpanderClass$MH,"glib_autoptr_cleanup_GtkTreeExpanderClass");
    }
    public static void glib_autoptr_cleanup_GtkTreeExpanderClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTreeExpanderClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeExpanderClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2471.glib_listautoptr_cleanup_GtkTreeExpanderClass$MH,"glib_listautoptr_cleanup_GtkTreeExpanderClass");
    }
    public static void glib_listautoptr_cleanup_GtkTreeExpanderClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTreeExpanderClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeExpanderClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2471.glib_slistautoptr_cleanup_GtkTreeExpanderClass$MH,"glib_slistautoptr_cleanup_GtkTreeExpanderClass");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeExpanderClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTreeExpanderClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeExpanderClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2471.glib_queueautoptr_cleanup_GtkTreeExpanderClass$MH,"glib_queueautoptr_cleanup_GtkTreeExpanderClass");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeExpanderClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTreeExpanderClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_TREE_EXPANDER$MH() {
        return RuntimeHelper.requireNonNull(constants$2471.GTK_TREE_EXPANDER$MH,"GTK_TREE_EXPANDER");
    }
    public static MemoryAddress GTK_TREE_EXPANDER ( Addressable ptr) {
        var mh$ = GTK_TREE_EXPANDER$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_TREE_EXPANDER$MH() {
        return RuntimeHelper.requireNonNull(constants$2472.GTK_IS_TREE_EXPANDER$MH,"GTK_IS_TREE_EXPANDER");
    }
    public static int GTK_IS_TREE_EXPANDER ( Addressable ptr) {
        var mh$ = GTK_IS_TREE_EXPANDER$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_expander_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2472.gtk_tree_expander_new$MH,"gtk_tree_expander_new");
    }
    public static MemoryAddress gtk_tree_expander_new () {
        var mh$ = gtk_tree_expander_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_expander_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2472.gtk_tree_expander_get_child$MH,"gtk_tree_expander_get_child");
    }
    public static MemoryAddress gtk_tree_expander_get_child ( Addressable self) {
        var mh$ = gtk_tree_expander_get_child$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_expander_set_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2472.gtk_tree_expander_set_child$MH,"gtk_tree_expander_set_child");
    }
    public static void gtk_tree_expander_set_child ( Addressable self,  Addressable child) {
        var mh$ = gtk_tree_expander_set_child$MH();
        try {
            mh$.invokeExact(self, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_expander_get_item$MH() {
        return RuntimeHelper.requireNonNull(constants$2472.gtk_tree_expander_get_item$MH,"gtk_tree_expander_get_item");
    }
    public static MemoryAddress gtk_tree_expander_get_item ( Addressable self) {
        var mh$ = gtk_tree_expander_get_item$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_expander_get_list_row$MH() {
        return RuntimeHelper.requireNonNull(constants$2472.gtk_tree_expander_get_list_row$MH,"gtk_tree_expander_get_list_row");
    }
    public static MemoryAddress gtk_tree_expander_get_list_row ( Addressable self) {
        var mh$ = gtk_tree_expander_get_list_row$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_expander_set_list_row$MH() {
        return RuntimeHelper.requireNonNull(constants$2473.gtk_tree_expander_set_list_row$MH,"gtk_tree_expander_set_list_row");
    }
    public static void gtk_tree_expander_set_list_row ( Addressable self,  Addressable list_row) {
        var mh$ = gtk_tree_expander_set_list_row$MH();
        try {
            mh$.invokeExact(self, list_row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_expander_get_indent_for_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$2473.gtk_tree_expander_get_indent_for_icon$MH,"gtk_tree_expander_get_indent_for_icon");
    }
    public static int gtk_tree_expander_get_indent_for_icon ( Addressable self) {
        var mh$ = gtk_tree_expander_get_indent_for_icon$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_expander_set_indent_for_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$2473.gtk_tree_expander_set_indent_for_icon$MH,"gtk_tree_expander_set_indent_for_icon");
    }
    public static void gtk_tree_expander_set_indent_for_icon ( Addressable self,  int indent_for_icon) {
        var mh$ = gtk_tree_expander_set_indent_for_icon$MH();
        try {
            mh$.invokeExact(self, indent_for_icon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_list_row_sorter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2473.gtk_tree_list_row_sorter_get_type$MH,"gtk_tree_list_row_sorter_get_type");
    }
    public static long gtk_tree_list_row_sorter_get_type () {
        var mh$ = gtk_tree_list_row_sorter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeListRowSorter_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeListRowSorter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeListRowSorter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeListRowSorter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeListRowSorter$MH() {
        return RuntimeHelper.requireNonNull(constants$2473.glib_autoptr_clear_GtkTreeListRowSorter$MH,"glib_autoptr_clear_GtkTreeListRowSorter");
    }
    public static void glib_autoptr_clear_GtkTreeListRowSorter ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTreeListRowSorter$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeListRowSorter$MH() {
        return RuntimeHelper.requireNonNull(constants$2473.glib_autoptr_cleanup_GtkTreeListRowSorter$MH,"glib_autoptr_cleanup_GtkTreeListRowSorter");
    }
    public static void glib_autoptr_cleanup_GtkTreeListRowSorter ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTreeListRowSorter$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeListRowSorter$MH() {
        return RuntimeHelper.requireNonNull(constants$2474.glib_listautoptr_cleanup_GtkTreeListRowSorter$MH,"glib_listautoptr_cleanup_GtkTreeListRowSorter");
    }
    public static void glib_listautoptr_cleanup_GtkTreeListRowSorter ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTreeListRowSorter$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeListRowSorter$MH() {
        return RuntimeHelper.requireNonNull(constants$2474.glib_slistautoptr_cleanup_GtkTreeListRowSorter$MH,"glib_slistautoptr_cleanup_GtkTreeListRowSorter");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeListRowSorter ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTreeListRowSorter$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeListRowSorter$MH() {
        return RuntimeHelper.requireNonNull(constants$2474.glib_queueautoptr_cleanup_GtkTreeListRowSorter$MH,"glib_queueautoptr_cleanup_GtkTreeListRowSorter");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeListRowSorter ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTreeListRowSorter$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeListRowSorterClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeListRowSorterClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeListRowSorterClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeListRowSorterClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeListRowSorterClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2474.glib_autoptr_clear_GtkTreeListRowSorterClass$MH,"glib_autoptr_clear_GtkTreeListRowSorterClass");
    }
    public static void glib_autoptr_clear_GtkTreeListRowSorterClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTreeListRowSorterClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeListRowSorterClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2474.glib_autoptr_cleanup_GtkTreeListRowSorterClass$MH,"glib_autoptr_cleanup_GtkTreeListRowSorterClass");
    }
    public static void glib_autoptr_cleanup_GtkTreeListRowSorterClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTreeListRowSorterClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeListRowSorterClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2474.glib_listautoptr_cleanup_GtkTreeListRowSorterClass$MH,"glib_listautoptr_cleanup_GtkTreeListRowSorterClass");
    }
    public static void glib_listautoptr_cleanup_GtkTreeListRowSorterClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTreeListRowSorterClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeListRowSorterClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2475.glib_slistautoptr_cleanup_GtkTreeListRowSorterClass$MH,"glib_slistautoptr_cleanup_GtkTreeListRowSorterClass");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeListRowSorterClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTreeListRowSorterClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeListRowSorterClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2475.glib_queueautoptr_cleanup_GtkTreeListRowSorterClass$MH,"glib_queueautoptr_cleanup_GtkTreeListRowSorterClass");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeListRowSorterClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTreeListRowSorterClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_TREE_LIST_ROW_SORTER$MH() {
        return RuntimeHelper.requireNonNull(constants$2475.GTK_TREE_LIST_ROW_SORTER$MH,"GTK_TREE_LIST_ROW_SORTER");
    }
    public static MemoryAddress GTK_TREE_LIST_ROW_SORTER ( Addressable ptr) {
        var mh$ = GTK_TREE_LIST_ROW_SORTER$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_TREE_LIST_ROW_SORTER$MH() {
        return RuntimeHelper.requireNonNull(constants$2475.GTK_IS_TREE_LIST_ROW_SORTER$MH,"GTK_IS_TREE_LIST_ROW_SORTER");
    }
    public static int GTK_IS_TREE_LIST_ROW_SORTER ( Addressable ptr) {
        var mh$ = GTK_IS_TREE_LIST_ROW_SORTER$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_list_row_sorter_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2475.gtk_tree_list_row_sorter_new$MH,"gtk_tree_list_row_sorter_new");
    }
    public static MemoryAddress gtk_tree_list_row_sorter_new ( Addressable sorter) {
        var mh$ = gtk_tree_list_row_sorter_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(sorter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_list_row_sorter_get_sorter$MH() {
        return RuntimeHelper.requireNonNull(constants$2475.gtk_tree_list_row_sorter_get_sorter$MH,"gtk_tree_list_row_sorter_get_sorter");
    }
    public static MemoryAddress gtk_tree_list_row_sorter_get_sorter ( Addressable self) {
        var mh$ = gtk_tree_list_row_sorter_get_sorter$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_list_row_sorter_set_sorter$MH() {
        return RuntimeHelper.requireNonNull(constants$2476.gtk_tree_list_row_sorter_set_sorter$MH,"gtk_tree_list_row_sorter_set_sorter");
    }
    public static void gtk_tree_list_row_sorter_set_sorter ( Addressable self,  Addressable sorter) {
        var mh$ = gtk_tree_list_row_sorter_set_sorter$MH();
        try {
            mh$.invokeExact(self, sorter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_sort_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2476.gtk_tree_model_sort_get_type$MH,"gtk_tree_model_sort_get_type");
    }
    public static long gtk_tree_model_sort_get_type () {
        var mh$ = gtk_tree_model_sort_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_sort_new_with_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2476.gtk_tree_model_sort_new_with_model$MH,"gtk_tree_model_sort_new_with_model");
    }
    public static MemoryAddress gtk_tree_model_sort_new_with_model ( Addressable child_model) {
        var mh$ = gtk_tree_model_sort_new_with_model$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(child_model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_sort_get_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2476.gtk_tree_model_sort_get_model$MH,"gtk_tree_model_sort_get_model");
    }
    public static MemoryAddress gtk_tree_model_sort_get_model ( Addressable tree_model) {
        var mh$ = gtk_tree_model_sort_get_model$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(tree_model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_sort_convert_child_path_to_path$MH() {
        return RuntimeHelper.requireNonNull(constants$2476.gtk_tree_model_sort_convert_child_path_to_path$MH,"gtk_tree_model_sort_convert_child_path_to_path");
    }
    public static MemoryAddress gtk_tree_model_sort_convert_child_path_to_path ( Addressable tree_model_sort,  Addressable child_path) {
        var mh$ = gtk_tree_model_sort_convert_child_path_to_path$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(tree_model_sort, child_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_sort_convert_child_iter_to_iter$MH() {
        return RuntimeHelper.requireNonNull(constants$2476.gtk_tree_model_sort_convert_child_iter_to_iter$MH,"gtk_tree_model_sort_convert_child_iter_to_iter");
    }
    public static int gtk_tree_model_sort_convert_child_iter_to_iter ( Addressable tree_model_sort,  Addressable sort_iter,  Addressable child_iter) {
        var mh$ = gtk_tree_model_sort_convert_child_iter_to_iter$MH();
        try {
            return (int)mh$.invokeExact(tree_model_sort, sort_iter, child_iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_sort_convert_path_to_child_path$MH() {
        return RuntimeHelper.requireNonNull(constants$2477.gtk_tree_model_sort_convert_path_to_child_path$MH,"gtk_tree_model_sort_convert_path_to_child_path");
    }
    public static MemoryAddress gtk_tree_model_sort_convert_path_to_child_path ( Addressable tree_model_sort,  Addressable sorted_path) {
        var mh$ = gtk_tree_model_sort_convert_path_to_child_path$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(tree_model_sort, sorted_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_sort_convert_iter_to_child_iter$MH() {
        return RuntimeHelper.requireNonNull(constants$2477.gtk_tree_model_sort_convert_iter_to_child_iter$MH,"gtk_tree_model_sort_convert_iter_to_child_iter");
    }
    public static void gtk_tree_model_sort_convert_iter_to_child_iter ( Addressable tree_model_sort,  Addressable child_iter,  Addressable sorted_iter) {
        var mh$ = gtk_tree_model_sort_convert_iter_to_child_iter$MH();
        try {
            mh$.invokeExact(tree_model_sort, child_iter, sorted_iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_sort_reset_default_sort_func$MH() {
        return RuntimeHelper.requireNonNull(constants$2477.gtk_tree_model_sort_reset_default_sort_func$MH,"gtk_tree_model_sort_reset_default_sort_func");
    }
    public static void gtk_tree_model_sort_reset_default_sort_func ( Addressable tree_model_sort) {
        var mh$ = gtk_tree_model_sort_reset_default_sort_func$MH();
        try {
            mh$.invokeExact(tree_model_sort);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_sort_clear_cache$MH() {
        return RuntimeHelper.requireNonNull(constants$2477.gtk_tree_model_sort_clear_cache$MH,"gtk_tree_model_sort_clear_cache");
    }
    public static void gtk_tree_model_sort_clear_cache ( Addressable tree_model_sort) {
        var mh$ = gtk_tree_model_sort_clear_cache$MH();
        try {
            mh$.invokeExact(tree_model_sort);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_sort_iter_is_valid$MH() {
        return RuntimeHelper.requireNonNull(constants$2477.gtk_tree_model_sort_iter_is_valid$MH,"gtk_tree_model_sort_iter_is_valid");
    }
    public static int gtk_tree_model_sort_iter_is_valid ( Addressable tree_model_sort,  Addressable iter) {
        var mh$ = gtk_tree_model_sort_iter_is_valid$MH();
        try {
            return (int)mh$.invokeExact(tree_model_sort, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2478.gtk_tree_selection_get_type$MH,"gtk_tree_selection_get_type");
    }
    public static long gtk_tree_selection_get_type () {
        var mh$ = gtk_tree_selection_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_set_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2478.gtk_tree_selection_set_mode$MH,"gtk_tree_selection_set_mode");
    }
    public static void gtk_tree_selection_set_mode ( Addressable selection,  int type) {
        var mh$ = gtk_tree_selection_set_mode$MH();
        try {
            mh$.invokeExact(selection, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_get_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2478.gtk_tree_selection_get_mode$MH,"gtk_tree_selection_get_mode");
    }
    public static int gtk_tree_selection_get_mode ( Addressable selection) {
        var mh$ = gtk_tree_selection_get_mode$MH();
        try {
            return (int)mh$.invokeExact(selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_set_select_function$MH() {
        return RuntimeHelper.requireNonNull(constants$2479.gtk_tree_selection_set_select_function$MH,"gtk_tree_selection_set_select_function");
    }
    public static void gtk_tree_selection_set_select_function ( Addressable selection,  Addressable func,  Addressable data,  Addressable destroy) {
        var mh$ = gtk_tree_selection_set_select_function$MH();
        try {
            mh$.invokeExact(selection, func, data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_get_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$2479.gtk_tree_selection_get_user_data$MH,"gtk_tree_selection_get_user_data");
    }
    public static MemoryAddress gtk_tree_selection_get_user_data ( Addressable selection) {
        var mh$ = gtk_tree_selection_get_user_data$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_get_tree_view$MH() {
        return RuntimeHelper.requireNonNull(constants$2479.gtk_tree_selection_get_tree_view$MH,"gtk_tree_selection_get_tree_view");
    }
    public static MemoryAddress gtk_tree_selection_get_tree_view ( Addressable selection) {
        var mh$ = gtk_tree_selection_get_tree_view$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_get_select_function$MH() {
        return RuntimeHelper.requireNonNull(constants$2479.gtk_tree_selection_get_select_function$MH,"gtk_tree_selection_get_select_function");
    }
    public static MemoryAddress gtk_tree_selection_get_select_function ( Addressable selection) {
        var mh$ = gtk_tree_selection_get_select_function$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_get_selected$MH() {
        return RuntimeHelper.requireNonNull(constants$2479.gtk_tree_selection_get_selected$MH,"gtk_tree_selection_get_selected");
    }
    public static int gtk_tree_selection_get_selected ( Addressable selection,  Addressable model,  Addressable iter) {
        var mh$ = gtk_tree_selection_get_selected$MH();
        try {
            return (int)mh$.invokeExact(selection, model, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_get_selected_rows$MH() {
        return RuntimeHelper.requireNonNull(constants$2479.gtk_tree_selection_get_selected_rows$MH,"gtk_tree_selection_get_selected_rows");
    }
    public static MemoryAddress gtk_tree_selection_get_selected_rows ( Addressable selection,  Addressable model) {
        var mh$ = gtk_tree_selection_get_selected_rows$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(selection, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_count_selected_rows$MH() {
        return RuntimeHelper.requireNonNull(constants$2480.gtk_tree_selection_count_selected_rows$MH,"gtk_tree_selection_count_selected_rows");
    }
    public static int gtk_tree_selection_count_selected_rows ( Addressable selection) {
        var mh$ = gtk_tree_selection_count_selected_rows$MH();
        try {
            return (int)mh$.invokeExact(selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_selected_foreach$MH() {
        return RuntimeHelper.requireNonNull(constants$2480.gtk_tree_selection_selected_foreach$MH,"gtk_tree_selection_selected_foreach");
    }
    public static void gtk_tree_selection_selected_foreach ( Addressable selection,  Addressable func,  Addressable data) {
        var mh$ = gtk_tree_selection_selected_foreach$MH();
        try {
            mh$.invokeExact(selection, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_select_path$MH() {
        return RuntimeHelper.requireNonNull(constants$2480.gtk_tree_selection_select_path$MH,"gtk_tree_selection_select_path");
    }
    public static void gtk_tree_selection_select_path ( Addressable selection,  Addressable path) {
        var mh$ = gtk_tree_selection_select_path$MH();
        try {
            mh$.invokeExact(selection, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_unselect_path$MH() {
        return RuntimeHelper.requireNonNull(constants$2480.gtk_tree_selection_unselect_path$MH,"gtk_tree_selection_unselect_path");
    }
    public static void gtk_tree_selection_unselect_path ( Addressable selection,  Addressable path) {
        var mh$ = gtk_tree_selection_unselect_path$MH();
        try {
            mh$.invokeExact(selection, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_select_iter$MH() {
        return RuntimeHelper.requireNonNull(constants$2480.gtk_tree_selection_select_iter$MH,"gtk_tree_selection_select_iter");
    }
    public static void gtk_tree_selection_select_iter ( Addressable selection,  Addressable iter) {
        var mh$ = gtk_tree_selection_select_iter$MH();
        try {
            mh$.invokeExact(selection, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_unselect_iter$MH() {
        return RuntimeHelper.requireNonNull(constants$2480.gtk_tree_selection_unselect_iter$MH,"gtk_tree_selection_unselect_iter");
    }
    public static void gtk_tree_selection_unselect_iter ( Addressable selection,  Addressable iter) {
        var mh$ = gtk_tree_selection_unselect_iter$MH();
        try {
            mh$.invokeExact(selection, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_path_is_selected$MH() {
        return RuntimeHelper.requireNonNull(constants$2481.gtk_tree_selection_path_is_selected$MH,"gtk_tree_selection_path_is_selected");
    }
    public static int gtk_tree_selection_path_is_selected ( Addressable selection,  Addressable path) {
        var mh$ = gtk_tree_selection_path_is_selected$MH();
        try {
            return (int)mh$.invokeExact(selection, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_iter_is_selected$MH() {
        return RuntimeHelper.requireNonNull(constants$2481.gtk_tree_selection_iter_is_selected$MH,"gtk_tree_selection_iter_is_selected");
    }
    public static int gtk_tree_selection_iter_is_selected ( Addressable selection,  Addressable iter) {
        var mh$ = gtk_tree_selection_iter_is_selected$MH();
        try {
            return (int)mh$.invokeExact(selection, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_select_all$MH() {
        return RuntimeHelper.requireNonNull(constants$2481.gtk_tree_selection_select_all$MH,"gtk_tree_selection_select_all");
    }
    public static void gtk_tree_selection_select_all ( Addressable selection) {
        var mh$ = gtk_tree_selection_select_all$MH();
        try {
            mh$.invokeExact(selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_unselect_all$MH() {
        return RuntimeHelper.requireNonNull(constants$2481.gtk_tree_selection_unselect_all$MH,"gtk_tree_selection_unselect_all");
    }
    public static void gtk_tree_selection_unselect_all ( Addressable selection) {
        var mh$ = gtk_tree_selection_unselect_all$MH();
        try {
            mh$.invokeExact(selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_select_range$MH() {
        return RuntimeHelper.requireNonNull(constants$2481.gtk_tree_selection_select_range$MH,"gtk_tree_selection_select_range");
    }
    public static void gtk_tree_selection_select_range ( Addressable selection,  Addressable start_path,  Addressable end_path) {
        var mh$ = gtk_tree_selection_select_range$MH();
        try {
            mh$.invokeExact(selection, start_path, end_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_selection_unselect_range$MH() {
        return RuntimeHelper.requireNonNull(constants$2481.gtk_tree_selection_unselect_range$MH,"gtk_tree_selection_unselect_range");
    }
    public static void gtk_tree_selection_unselect_range ( Addressable selection,  Addressable start_path,  Addressable end_path) {
        var mh$ = gtk_tree_selection_unselect_range$MH();
        try {
            mh$.invokeExact(selection, start_path, end_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2482.gtk_tree_store_get_type$MH,"gtk_tree_store_get_type");
    }
    public static long gtk_tree_store_get_type () {
        var mh$ = gtk_tree_store_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2482.gtk_tree_store_new$MH,"gtk_tree_store_new");
    }
    public static MemoryAddress gtk_tree_store_new ( int n_columns, Object... x1) {
        var mh$ = gtk_tree_store_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(n_columns, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_newv$MH() {
        return RuntimeHelper.requireNonNull(constants$2482.gtk_tree_store_newv$MH,"gtk_tree_store_newv");
    }
    public static MemoryAddress gtk_tree_store_newv ( int n_columns,  Addressable types) {
        var mh$ = gtk_tree_store_newv$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(n_columns, types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_set_column_types$MH() {
        return RuntimeHelper.requireNonNull(constants$2482.gtk_tree_store_set_column_types$MH,"gtk_tree_store_set_column_types");
    }
    public static void gtk_tree_store_set_column_types ( Addressable tree_store,  int n_columns,  Addressable types) {
        var mh$ = gtk_tree_store_set_column_types$MH();
        try {
            mh$.invokeExact(tree_store, n_columns, types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_set_value$MH() {
        return RuntimeHelper.requireNonNull(constants$2482.gtk_tree_store_set_value$MH,"gtk_tree_store_set_value");
    }
    public static void gtk_tree_store_set_value ( Addressable tree_store,  Addressable iter,  int column,  Addressable value) {
        var mh$ = gtk_tree_store_set_value$MH();
        try {
            mh$.invokeExact(tree_store, iter, column, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_set$MH() {
        return RuntimeHelper.requireNonNull(constants$2482.gtk_tree_store_set$MH,"gtk_tree_store_set");
    }
    public static void gtk_tree_store_set ( Addressable tree_store,  Addressable iter, Object... x2) {
        var mh$ = gtk_tree_store_set$MH();
        try {
            mh$.invokeExact(tree_store, iter, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_set_valuesv$MH() {
        return RuntimeHelper.requireNonNull(constants$2483.gtk_tree_store_set_valuesv$MH,"gtk_tree_store_set_valuesv");
    }
    public static void gtk_tree_store_set_valuesv ( Addressable tree_store,  Addressable iter,  Addressable columns,  Addressable values,  int n_values) {
        var mh$ = gtk_tree_store_set_valuesv$MH();
        try {
            mh$.invokeExact(tree_store, iter, columns, values, n_values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_set_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$2483.gtk_tree_store_set_valist$MH,"gtk_tree_store_set_valist");
    }
    public static void gtk_tree_store_set_valist ( Addressable tree_store,  Addressable iter,  Addressable var_args) {
        var mh$ = gtk_tree_store_set_valist$MH();
        try {
            mh$.invokeExact(tree_store, iter, var_args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$2483.gtk_tree_store_remove$MH,"gtk_tree_store_remove");
    }
    public static int gtk_tree_store_remove ( Addressable tree_store,  Addressable iter) {
        var mh$ = gtk_tree_store_remove$MH();
        try {
            return (int)mh$.invokeExact(tree_store, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$2483.gtk_tree_store_insert$MH,"gtk_tree_store_insert");
    }
    public static void gtk_tree_store_insert ( Addressable tree_store,  Addressable iter,  Addressable parent,  int position) {
        var mh$ = gtk_tree_store_insert$MH();
        try {
            mh$.invokeExact(tree_store, iter, parent, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_insert_before$MH() {
        return RuntimeHelper.requireNonNull(constants$2483.gtk_tree_store_insert_before$MH,"gtk_tree_store_insert_before");
    }
    public static void gtk_tree_store_insert_before ( Addressable tree_store,  Addressable iter,  Addressable parent,  Addressable sibling) {
        var mh$ = gtk_tree_store_insert_before$MH();
        try {
            mh$.invokeExact(tree_store, iter, parent, sibling);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_insert_after$MH() {
        return RuntimeHelper.requireNonNull(constants$2483.gtk_tree_store_insert_after$MH,"gtk_tree_store_insert_after");
    }
    public static void gtk_tree_store_insert_after ( Addressable tree_store,  Addressable iter,  Addressable parent,  Addressable sibling) {
        var mh$ = gtk_tree_store_insert_after$MH();
        try {
            mh$.invokeExact(tree_store, iter, parent, sibling);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_insert_with_values$MH() {
        return RuntimeHelper.requireNonNull(constants$2484.gtk_tree_store_insert_with_values$MH,"gtk_tree_store_insert_with_values");
    }
    public static void gtk_tree_store_insert_with_values ( Addressable tree_store,  Addressable iter,  Addressable parent,  int position, Object... x4) {
        var mh$ = gtk_tree_store_insert_with_values$MH();
        try {
            mh$.invokeExact(tree_store, iter, parent, position, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_insert_with_valuesv$MH() {
        return RuntimeHelper.requireNonNull(constants$2484.gtk_tree_store_insert_with_valuesv$MH,"gtk_tree_store_insert_with_valuesv");
    }
    public static void gtk_tree_store_insert_with_valuesv ( Addressable tree_store,  Addressable iter,  Addressable parent,  int position,  Addressable columns,  Addressable values,  int n_values) {
        var mh$ = gtk_tree_store_insert_with_valuesv$MH();
        try {
            mh$.invokeExact(tree_store, iter, parent, position, columns, values, n_values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_prepend$MH() {
        return RuntimeHelper.requireNonNull(constants$2484.gtk_tree_store_prepend$MH,"gtk_tree_store_prepend");
    }
    public static void gtk_tree_store_prepend ( Addressable tree_store,  Addressable iter,  Addressable parent) {
        var mh$ = gtk_tree_store_prepend$MH();
        try {
            mh$.invokeExact(tree_store, iter, parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_append$MH() {
        return RuntimeHelper.requireNonNull(constants$2484.gtk_tree_store_append$MH,"gtk_tree_store_append");
    }
    public static void gtk_tree_store_append ( Addressable tree_store,  Addressable iter,  Addressable parent) {
        var mh$ = gtk_tree_store_append$MH();
        try {
            mh$.invokeExact(tree_store, iter, parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_is_ancestor$MH() {
        return RuntimeHelper.requireNonNull(constants$2484.gtk_tree_store_is_ancestor$MH,"gtk_tree_store_is_ancestor");
    }
    public static int gtk_tree_store_is_ancestor ( Addressable tree_store,  Addressable iter,  Addressable descendant) {
        var mh$ = gtk_tree_store_is_ancestor$MH();
        try {
            return (int)mh$.invokeExact(tree_store, iter, descendant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_iter_depth$MH() {
        return RuntimeHelper.requireNonNull(constants$2484.gtk_tree_store_iter_depth$MH,"gtk_tree_store_iter_depth");
    }
    public static int gtk_tree_store_iter_depth ( Addressable tree_store,  Addressable iter) {
        var mh$ = gtk_tree_store_iter_depth$MH();
        try {
            return (int)mh$.invokeExact(tree_store, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_clear$MH() {
        return RuntimeHelper.requireNonNull(constants$2485.gtk_tree_store_clear$MH,"gtk_tree_store_clear");
    }
    public static void gtk_tree_store_clear ( Addressable tree_store) {
        var mh$ = gtk_tree_store_clear$MH();
        try {
            mh$.invokeExact(tree_store);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_iter_is_valid$MH() {
        return RuntimeHelper.requireNonNull(constants$2485.gtk_tree_store_iter_is_valid$MH,"gtk_tree_store_iter_is_valid");
    }
    public static int gtk_tree_store_iter_is_valid ( Addressable tree_store,  Addressable iter) {
        var mh$ = gtk_tree_store_iter_is_valid$MH();
        try {
            return (int)mh$.invokeExact(tree_store, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_reorder$MH() {
        return RuntimeHelper.requireNonNull(constants$2485.gtk_tree_store_reorder$MH,"gtk_tree_store_reorder");
    }
    public static void gtk_tree_store_reorder ( Addressable tree_store,  Addressable parent,  Addressable new_order) {
        var mh$ = gtk_tree_store_reorder$MH();
        try {
            mh$.invokeExact(tree_store, parent, new_order);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_swap$MH() {
        return RuntimeHelper.requireNonNull(constants$2485.gtk_tree_store_swap$MH,"gtk_tree_store_swap");
    }
    public static void gtk_tree_store_swap ( Addressable tree_store,  Addressable a,  Addressable b) {
        var mh$ = gtk_tree_store_swap$MH();
        try {
            mh$.invokeExact(tree_store, a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_move_before$MH() {
        return RuntimeHelper.requireNonNull(constants$2485.gtk_tree_store_move_before$MH,"gtk_tree_store_move_before");
    }
    public static void gtk_tree_store_move_before ( Addressable tree_store,  Addressable iter,  Addressable position) {
        var mh$ = gtk_tree_store_move_before$MH();
        try {
            mh$.invokeExact(tree_store, iter, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_store_move_after$MH() {
        return RuntimeHelper.requireNonNull(constants$2485.gtk_tree_store_move_after$MH,"gtk_tree_store_move_after");
    }
    public static void gtk_tree_store_move_after ( Addressable tree_store,  Addressable iter,  Addressable position) {
        var mh$ = gtk_tree_store_move_after$MH();
        try {
            mh$.invokeExact(tree_store, iter, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_get_major_version$MH() {
        return RuntimeHelper.requireNonNull(constants$2486.gtk_get_major_version$MH,"gtk_get_major_version");
    }
    public static int gtk_get_major_version () {
        var mh$ = gtk_get_major_version$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_get_minor_version$MH() {
        return RuntimeHelper.requireNonNull(constants$2486.gtk_get_minor_version$MH,"gtk_get_minor_version");
    }
    public static int gtk_get_minor_version () {
        var mh$ = gtk_get_minor_version$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_get_micro_version$MH() {
        return RuntimeHelper.requireNonNull(constants$2486.gtk_get_micro_version$MH,"gtk_get_micro_version");
    }
    public static int gtk_get_micro_version () {
        var mh$ = gtk_get_micro_version$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_get_binary_age$MH() {
        return RuntimeHelper.requireNonNull(constants$2486.gtk_get_binary_age$MH,"gtk_get_binary_age");
    }
    public static int gtk_get_binary_age () {
        var mh$ = gtk_get_binary_age$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_get_interface_age$MH() {
        return RuntimeHelper.requireNonNull(constants$2486.gtk_get_interface_age$MH,"gtk_get_interface_age");
    }
    public static int gtk_get_interface_age () {
        var mh$ = gtk_get_interface_age$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_version$MH() {
        return RuntimeHelper.requireNonNull(constants$2486.gtk_check_version$MH,"gtk_check_version");
    }
    public static MemoryAddress gtk_check_version ( int required_major,  int required_minor,  int required_micro) {
        var mh$ = gtk_check_version$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(required_major, required_minor, required_micro);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_video_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2487.gtk_video_get_type$MH,"gtk_video_get_type");
    }
    public static long gtk_video_get_type () {
        var mh$ = gtk_video_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkVideo_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkVideo_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkVideo_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkVideo_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkVideo$MH() {
        return RuntimeHelper.requireNonNull(constants$2487.glib_autoptr_clear_GtkVideo$MH,"glib_autoptr_clear_GtkVideo");
    }
    public static void glib_autoptr_clear_GtkVideo ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkVideo$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkVideo$MH() {
        return RuntimeHelper.requireNonNull(constants$2487.glib_autoptr_cleanup_GtkVideo$MH,"glib_autoptr_cleanup_GtkVideo");
    }
    public static void glib_autoptr_cleanup_GtkVideo ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkVideo$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkVideo$MH() {
        return RuntimeHelper.requireNonNull(constants$2487.glib_listautoptr_cleanup_GtkVideo$MH,"glib_listautoptr_cleanup_GtkVideo");
    }
    public static void glib_listautoptr_cleanup_GtkVideo ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkVideo$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkVideo$MH() {
        return RuntimeHelper.requireNonNull(constants$2487.glib_slistautoptr_cleanup_GtkVideo$MH,"glib_slistautoptr_cleanup_GtkVideo");
    }
    public static void glib_slistautoptr_cleanup_GtkVideo ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkVideo$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkVideo$MH() {
        return RuntimeHelper.requireNonNull(constants$2487.glib_queueautoptr_cleanup_GtkVideo$MH,"glib_queueautoptr_cleanup_GtkVideo");
    }
    public static void glib_queueautoptr_cleanup_GtkVideo ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkVideo$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkVideoClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkVideoClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkVideoClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkVideoClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkVideoClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2488.glib_autoptr_clear_GtkVideoClass$MH,"glib_autoptr_clear_GtkVideoClass");
    }
    public static void glib_autoptr_clear_GtkVideoClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkVideoClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkVideoClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2488.glib_autoptr_cleanup_GtkVideoClass$MH,"glib_autoptr_cleanup_GtkVideoClass");
    }
    public static void glib_autoptr_cleanup_GtkVideoClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkVideoClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkVideoClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2488.glib_listautoptr_cleanup_GtkVideoClass$MH,"glib_listautoptr_cleanup_GtkVideoClass");
    }
    public static void glib_listautoptr_cleanup_GtkVideoClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkVideoClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkVideoClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2488.glib_slistautoptr_cleanup_GtkVideoClass$MH,"glib_slistautoptr_cleanup_GtkVideoClass");
    }
    public static void glib_slistautoptr_cleanup_GtkVideoClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkVideoClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkVideoClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2488.glib_queueautoptr_cleanup_GtkVideoClass$MH,"glib_queueautoptr_cleanup_GtkVideoClass");
    }
    public static void glib_queueautoptr_cleanup_GtkVideoClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkVideoClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_VIDEO$MH() {
        return RuntimeHelper.requireNonNull(constants$2488.GTK_VIDEO$MH,"GTK_VIDEO");
    }
    public static MemoryAddress GTK_VIDEO ( Addressable ptr) {
        var mh$ = GTK_VIDEO$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_VIDEO$MH() {
        return RuntimeHelper.requireNonNull(constants$2489.GTK_IS_VIDEO$MH,"GTK_IS_VIDEO");
    }
    public static int GTK_IS_VIDEO ( Addressable ptr) {
        var mh$ = GTK_IS_VIDEO$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_video_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2489.gtk_video_new$MH,"gtk_video_new");
    }
    public static MemoryAddress gtk_video_new () {
        var mh$ = gtk_video_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_video_new_for_media_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$2489.gtk_video_new_for_media_stream$MH,"gtk_video_new_for_media_stream");
    }
    public static MemoryAddress gtk_video_new_for_media_stream ( Addressable stream) {
        var mh$ = gtk_video_new_for_media_stream$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_video_new_for_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2489.gtk_video_new_for_file$MH,"gtk_video_new_for_file");
    }
    public static MemoryAddress gtk_video_new_for_file ( Addressable file) {
        var mh$ = gtk_video_new_for_file$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_video_new_for_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$2489.gtk_video_new_for_filename$MH,"gtk_video_new_for_filename");
    }
    public static MemoryAddress gtk_video_new_for_filename ( Addressable filename) {
        var mh$ = gtk_video_new_for_filename$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_video_new_for_resource$MH() {
        return RuntimeHelper.requireNonNull(constants$2489.gtk_video_new_for_resource$MH,"gtk_video_new_for_resource");
    }
    public static MemoryAddress gtk_video_new_for_resource ( Addressable resource_path) {
        var mh$ = gtk_video_new_for_resource$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(resource_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_video_get_media_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$2490.gtk_video_get_media_stream$MH,"gtk_video_get_media_stream");
    }
    public static MemoryAddress gtk_video_get_media_stream ( Addressable self) {
        var mh$ = gtk_video_get_media_stream$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_video_set_media_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$2490.gtk_video_set_media_stream$MH,"gtk_video_set_media_stream");
    }
    public static void gtk_video_set_media_stream ( Addressable self,  Addressable stream) {
        var mh$ = gtk_video_set_media_stream$MH();
        try {
            mh$.invokeExact(self, stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_video_get_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2490.gtk_video_get_file$MH,"gtk_video_get_file");
    }
    public static MemoryAddress gtk_video_get_file ( Addressable self) {
        var mh$ = gtk_video_get_file$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_video_set_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2490.gtk_video_set_file$MH,"gtk_video_set_file");
    }
    public static void gtk_video_set_file ( Addressable self,  Addressable file) {
        var mh$ = gtk_video_set_file$MH();
        try {
            mh$.invokeExact(self, file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_video_set_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$2490.gtk_video_set_filename$MH,"gtk_video_set_filename");
    }
    public static void gtk_video_set_filename ( Addressable self,  Addressable filename) {
        var mh$ = gtk_video_set_filename$MH();
        try {
            mh$.invokeExact(self, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_video_set_resource$MH() {
        return RuntimeHelper.requireNonNull(constants$2490.gtk_video_set_resource$MH,"gtk_video_set_resource");
    }
    public static void gtk_video_set_resource ( Addressable self,  Addressable resource_path) {
        var mh$ = gtk_video_set_resource$MH();
        try {
            mh$.invokeExact(self, resource_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_video_get_autoplay$MH() {
        return RuntimeHelper.requireNonNull(constants$2491.gtk_video_get_autoplay$MH,"gtk_video_get_autoplay");
    }
    public static int gtk_video_get_autoplay ( Addressable self) {
        var mh$ = gtk_video_get_autoplay$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_video_set_autoplay$MH() {
        return RuntimeHelper.requireNonNull(constants$2491.gtk_video_set_autoplay$MH,"gtk_video_set_autoplay");
    }
    public static void gtk_video_set_autoplay ( Addressable self,  int autoplay) {
        var mh$ = gtk_video_set_autoplay$MH();
        try {
            mh$.invokeExact(self, autoplay);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_video_get_loop$MH() {
        return RuntimeHelper.requireNonNull(constants$2491.gtk_video_get_loop$MH,"gtk_video_get_loop");
    }
    public static int gtk_video_get_loop ( Addressable self) {
        var mh$ = gtk_video_get_loop$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_video_set_loop$MH() {
        return RuntimeHelper.requireNonNull(constants$2491.gtk_video_set_loop$MH,"gtk_video_set_loop");
    }
    public static void gtk_video_set_loop ( Addressable self,  int loop) {
        var mh$ = gtk_video_set_loop$MH();
        try {
            mh$.invokeExact(self, loop);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_viewport_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2491.gtk_viewport_get_type$MH,"gtk_viewport_get_type");
    }
    public static long gtk_viewport_get_type () {
        var mh$ = gtk_viewport_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_viewport_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2491.gtk_viewport_new$MH,"gtk_viewport_new");
    }
    public static MemoryAddress gtk_viewport_new ( Addressable hadjustment,  Addressable vadjustment) {
        var mh$ = gtk_viewport_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(hadjustment, vadjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_viewport_get_scroll_to_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$2492.gtk_viewport_get_scroll_to_focus$MH,"gtk_viewport_get_scroll_to_focus");
    }
    public static int gtk_viewport_get_scroll_to_focus ( Addressable viewport) {
        var mh$ = gtk_viewport_get_scroll_to_focus$MH();
        try {
            return (int)mh$.invokeExact(viewport);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_viewport_set_scroll_to_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$2492.gtk_viewport_set_scroll_to_focus$MH,"gtk_viewport_set_scroll_to_focus");
    }
    public static void gtk_viewport_set_scroll_to_focus ( Addressable viewport,  int scroll_to_focus) {
        var mh$ = gtk_viewport_set_scroll_to_focus$MH();
        try {
            mh$.invokeExact(viewport, scroll_to_focus);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_viewport_set_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2492.gtk_viewport_set_child$MH,"gtk_viewport_set_child");
    }
    public static void gtk_viewport_set_child ( Addressable viewport,  Addressable child) {
        var mh$ = gtk_viewport_set_child$MH();
        try {
            mh$.invokeExact(viewport, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_viewport_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2492.gtk_viewport_get_child$MH,"gtk_viewport_get_child");
    }
    public static MemoryAddress gtk_viewport_get_child ( Addressable viewport) {
        var mh$ = gtk_viewport_get_child$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(viewport);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_volume_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2492.gtk_volume_button_get_type$MH,"gtk_volume_button_get_type");
    }
    public static long gtk_volume_button_get_type () {
        var mh$ = gtk_volume_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_volume_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2492.gtk_volume_button_new$MH,"gtk_volume_button_new");
    }
    public static MemoryAddress gtk_volume_button_new () {
        var mh$ = gtk_volume_button_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_paintable_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2493.gtk_widget_paintable_get_type$MH,"gtk_widget_paintable_get_type");
    }
    public static long gtk_widget_paintable_get_type () {
        var mh$ = gtk_widget_paintable_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkWidgetPaintable_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkWidgetPaintable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkWidgetPaintable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkWidgetPaintable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkWidgetPaintable$MH() {
        return RuntimeHelper.requireNonNull(constants$2493.glib_autoptr_clear_GtkWidgetPaintable$MH,"glib_autoptr_clear_GtkWidgetPaintable");
    }
    public static void glib_autoptr_clear_GtkWidgetPaintable ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkWidgetPaintable$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkWidgetPaintable$MH() {
        return RuntimeHelper.requireNonNull(constants$2493.glib_autoptr_cleanup_GtkWidgetPaintable$MH,"glib_autoptr_cleanup_GtkWidgetPaintable");
    }
    public static void glib_autoptr_cleanup_GtkWidgetPaintable ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkWidgetPaintable$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkWidgetPaintable$MH() {
        return RuntimeHelper.requireNonNull(constants$2493.glib_listautoptr_cleanup_GtkWidgetPaintable$MH,"glib_listautoptr_cleanup_GtkWidgetPaintable");
    }
    public static void glib_listautoptr_cleanup_GtkWidgetPaintable ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkWidgetPaintable$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkWidgetPaintable$MH() {
        return RuntimeHelper.requireNonNull(constants$2493.glib_slistautoptr_cleanup_GtkWidgetPaintable$MH,"glib_slistautoptr_cleanup_GtkWidgetPaintable");
    }
    public static void glib_slistautoptr_cleanup_GtkWidgetPaintable ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkWidgetPaintable$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkWidgetPaintable$MH() {
        return RuntimeHelper.requireNonNull(constants$2493.glib_queueautoptr_cleanup_GtkWidgetPaintable$MH,"glib_queueautoptr_cleanup_GtkWidgetPaintable");
    }
    public static void glib_queueautoptr_cleanup_GtkWidgetPaintable ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkWidgetPaintable$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkWidgetPaintableClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkWidgetPaintableClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkWidgetPaintableClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkWidgetPaintableClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkWidgetPaintableClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2494.glib_autoptr_clear_GtkWidgetPaintableClass$MH,"glib_autoptr_clear_GtkWidgetPaintableClass");
    }
    public static void glib_autoptr_clear_GtkWidgetPaintableClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkWidgetPaintableClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkWidgetPaintableClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2494.glib_autoptr_cleanup_GtkWidgetPaintableClass$MH,"glib_autoptr_cleanup_GtkWidgetPaintableClass");
    }
    public static void glib_autoptr_cleanup_GtkWidgetPaintableClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkWidgetPaintableClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkWidgetPaintableClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2494.glib_listautoptr_cleanup_GtkWidgetPaintableClass$MH,"glib_listautoptr_cleanup_GtkWidgetPaintableClass");
    }
    public static void glib_listautoptr_cleanup_GtkWidgetPaintableClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkWidgetPaintableClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkWidgetPaintableClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2494.glib_slistautoptr_cleanup_GtkWidgetPaintableClass$MH,"glib_slistautoptr_cleanup_GtkWidgetPaintableClass");
    }
    public static void glib_slistautoptr_cleanup_GtkWidgetPaintableClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkWidgetPaintableClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkWidgetPaintableClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2494.glib_queueautoptr_cleanup_GtkWidgetPaintableClass$MH,"glib_queueautoptr_cleanup_GtkWidgetPaintableClass");
    }
    public static void glib_queueautoptr_cleanup_GtkWidgetPaintableClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkWidgetPaintableClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_WIDGET_PAINTABLE$MH() {
        return RuntimeHelper.requireNonNull(constants$2494.GTK_WIDGET_PAINTABLE$MH,"GTK_WIDGET_PAINTABLE");
    }
    public static MemoryAddress GTK_WIDGET_PAINTABLE ( Addressable ptr) {
        var mh$ = GTK_WIDGET_PAINTABLE$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_WIDGET_PAINTABLE$MH() {
        return RuntimeHelper.requireNonNull(constants$2495.GTK_IS_WIDGET_PAINTABLE$MH,"GTK_IS_WIDGET_PAINTABLE");
    }
    public static int GTK_IS_WIDGET_PAINTABLE ( Addressable ptr) {
        var mh$ = GTK_IS_WIDGET_PAINTABLE$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_paintable_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2495.gtk_widget_paintable_new$MH,"gtk_widget_paintable_new");
    }
    public static MemoryAddress gtk_widget_paintable_new ( Addressable widget) {
        var mh$ = gtk_widget_paintable_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_paintable_get_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2495.gtk_widget_paintable_get_widget$MH,"gtk_widget_paintable_get_widget");
    }
    public static MemoryAddress gtk_widget_paintable_get_widget ( Addressable self) {
        var mh$ = gtk_widget_paintable_get_widget$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_paintable_set_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2495.gtk_widget_paintable_set_widget$MH,"gtk_widget_paintable_set_widget");
    }
    public static void gtk_widget_paintable_set_widget ( Addressable self,  Addressable widget) {
        var mh$ = gtk_widget_paintable_set_widget$MH();
        try {
            mh$.invokeExact(self, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_controls_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2495.gtk_window_controls_get_type$MH,"gtk_window_controls_get_type");
    }
    public static long gtk_window_controls_get_type () {
        var mh$ = gtk_window_controls_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkWindowControls_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkWindowControls_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkWindowControls_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkWindowControls_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkWindowControls$MH() {
        return RuntimeHelper.requireNonNull(constants$2495.glib_autoptr_clear_GtkWindowControls$MH,"glib_autoptr_clear_GtkWindowControls");
    }
    public static void glib_autoptr_clear_GtkWindowControls ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkWindowControls$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkWindowControls$MH() {
        return RuntimeHelper.requireNonNull(constants$2496.glib_autoptr_cleanup_GtkWindowControls$MH,"glib_autoptr_cleanup_GtkWindowControls");
    }
    public static void glib_autoptr_cleanup_GtkWindowControls ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkWindowControls$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkWindowControls$MH() {
        return RuntimeHelper.requireNonNull(constants$2496.glib_listautoptr_cleanup_GtkWindowControls$MH,"glib_listautoptr_cleanup_GtkWindowControls");
    }
    public static void glib_listautoptr_cleanup_GtkWindowControls ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkWindowControls$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkWindowControls$MH() {
        return RuntimeHelper.requireNonNull(constants$2496.glib_slistautoptr_cleanup_GtkWindowControls$MH,"glib_slistautoptr_cleanup_GtkWindowControls");
    }
    public static void glib_slistautoptr_cleanup_GtkWindowControls ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkWindowControls$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkWindowControls$MH() {
        return RuntimeHelper.requireNonNull(constants$2496.glib_queueautoptr_cleanup_GtkWindowControls$MH,"glib_queueautoptr_cleanup_GtkWindowControls");
    }
    public static void glib_queueautoptr_cleanup_GtkWindowControls ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkWindowControls$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkWindowControlsClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkWindowControlsClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkWindowControlsClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkWindowControlsClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkWindowControlsClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2496.glib_autoptr_clear_GtkWindowControlsClass$MH,"glib_autoptr_clear_GtkWindowControlsClass");
    }
    public static void glib_autoptr_clear_GtkWindowControlsClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkWindowControlsClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkWindowControlsClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2496.glib_autoptr_cleanup_GtkWindowControlsClass$MH,"glib_autoptr_cleanup_GtkWindowControlsClass");
    }
    public static void glib_autoptr_cleanup_GtkWindowControlsClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkWindowControlsClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkWindowControlsClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2497.glib_listautoptr_cleanup_GtkWindowControlsClass$MH,"glib_listautoptr_cleanup_GtkWindowControlsClass");
    }
    public static void glib_listautoptr_cleanup_GtkWindowControlsClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkWindowControlsClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkWindowControlsClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2497.glib_slistautoptr_cleanup_GtkWindowControlsClass$MH,"glib_slistautoptr_cleanup_GtkWindowControlsClass");
    }
    public static void glib_slistautoptr_cleanup_GtkWindowControlsClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkWindowControlsClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkWindowControlsClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2497.glib_queueautoptr_cleanup_GtkWindowControlsClass$MH,"glib_queueautoptr_cleanup_GtkWindowControlsClass");
    }
    public static void glib_queueautoptr_cleanup_GtkWindowControlsClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkWindowControlsClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_WINDOW_CONTROLS$MH() {
        return RuntimeHelper.requireNonNull(constants$2497.GTK_WINDOW_CONTROLS$MH,"GTK_WINDOW_CONTROLS");
    }
    public static MemoryAddress GTK_WINDOW_CONTROLS ( Addressable ptr) {
        var mh$ = GTK_WINDOW_CONTROLS$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_WINDOW_CONTROLS$MH() {
        return RuntimeHelper.requireNonNull(constants$2497.GTK_IS_WINDOW_CONTROLS$MH,"GTK_IS_WINDOW_CONTROLS");
    }
    public static int GTK_IS_WINDOW_CONTROLS ( Addressable ptr) {
        var mh$ = GTK_IS_WINDOW_CONTROLS$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_controls_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2497.gtk_window_controls_new$MH,"gtk_window_controls_new");
    }
    public static MemoryAddress gtk_window_controls_new ( int side) {
        var mh$ = gtk_window_controls_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(side);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_controls_get_side$MH() {
        return RuntimeHelper.requireNonNull(constants$2498.gtk_window_controls_get_side$MH,"gtk_window_controls_get_side");
    }
    public static int gtk_window_controls_get_side ( Addressable self) {
        var mh$ = gtk_window_controls_get_side$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_controls_set_side$MH() {
        return RuntimeHelper.requireNonNull(constants$2498.gtk_window_controls_set_side$MH,"gtk_window_controls_set_side");
    }
    public static void gtk_window_controls_set_side ( Addressable self,  int side) {
        var mh$ = gtk_window_controls_set_side$MH();
        try {
            mh$.invokeExact(self, side);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_controls_get_decoration_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$2498.gtk_window_controls_get_decoration_layout$MH,"gtk_window_controls_get_decoration_layout");
    }
    public static MemoryAddress gtk_window_controls_get_decoration_layout ( Addressable self) {
        var mh$ = gtk_window_controls_get_decoration_layout$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_controls_set_decoration_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$2498.gtk_window_controls_set_decoration_layout$MH,"gtk_window_controls_set_decoration_layout");
    }
    public static void gtk_window_controls_set_decoration_layout ( Addressable self,  Addressable layout) {
        var mh$ = gtk_window_controls_set_decoration_layout$MH();
        try {
            mh$.invokeExact(self, layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_controls_get_empty$MH() {
        return RuntimeHelper.requireNonNull(constants$2498.gtk_window_controls_get_empty$MH,"gtk_window_controls_get_empty");
    }
    public static int gtk_window_controls_get_empty ( Addressable self) {
        var mh$ = gtk_window_controls_get_empty$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_group_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2498.gtk_window_group_get_type$MH,"gtk_window_group_get_type");
    }
    public static long gtk_window_group_get_type () {
        var mh$ = gtk_window_group_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_group_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2499.gtk_window_group_new$MH,"gtk_window_group_new");
    }
    public static MemoryAddress gtk_window_group_new () {
        var mh$ = gtk_window_group_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_group_add_window$MH() {
        return RuntimeHelper.requireNonNull(constants$2499.gtk_window_group_add_window$MH,"gtk_window_group_add_window");
    }
    public static void gtk_window_group_add_window ( Addressable window_group,  Addressable window) {
        var mh$ = gtk_window_group_add_window$MH();
        try {
            mh$.invokeExact(window_group, window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_group_remove_window$MH() {
        return RuntimeHelper.requireNonNull(constants$2499.gtk_window_group_remove_window$MH,"gtk_window_group_remove_window");
    }
    public static void gtk_window_group_remove_window ( Addressable window_group,  Addressable window) {
        var mh$ = gtk_window_group_remove_window$MH();
        try {
            mh$.invokeExact(window_group, window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_group_list_windows$MH() {
        return RuntimeHelper.requireNonNull(constants$2499.gtk_window_group_list_windows$MH,"gtk_window_group_list_windows");
    }
    public static MemoryAddress gtk_window_group_list_windows ( Addressable window_group) {
        var mh$ = gtk_window_group_list_windows$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(window_group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_handle_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2499.gtk_window_handle_get_type$MH,"gtk_window_handle_get_type");
    }
    public static long gtk_window_handle_get_type () {
        var mh$ = gtk_window_handle_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkWindowHandle_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkWindowHandle_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkWindowHandle_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkWindowHandle_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkWindowHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$2499.glib_autoptr_clear_GtkWindowHandle$MH,"glib_autoptr_clear_GtkWindowHandle");
    }
    public static void glib_autoptr_clear_GtkWindowHandle ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkWindowHandle$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkWindowHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$2500.glib_autoptr_cleanup_GtkWindowHandle$MH,"glib_autoptr_cleanup_GtkWindowHandle");
    }
    public static void glib_autoptr_cleanup_GtkWindowHandle ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkWindowHandle$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkWindowHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$2500.glib_listautoptr_cleanup_GtkWindowHandle$MH,"glib_listautoptr_cleanup_GtkWindowHandle");
    }
    public static void glib_listautoptr_cleanup_GtkWindowHandle ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkWindowHandle$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkWindowHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$2500.glib_slistautoptr_cleanup_GtkWindowHandle$MH,"glib_slistautoptr_cleanup_GtkWindowHandle");
    }
    public static void glib_slistautoptr_cleanup_GtkWindowHandle ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkWindowHandle$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkWindowHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$2500.glib_queueautoptr_cleanup_GtkWindowHandle$MH,"glib_queueautoptr_cleanup_GtkWindowHandle");
    }
    public static void glib_queueautoptr_cleanup_GtkWindowHandle ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkWindowHandle$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkWindowHandleClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkWindowHandleClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkWindowHandleClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkWindowHandleClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkWindowHandleClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2500.glib_autoptr_clear_GtkWindowHandleClass$MH,"glib_autoptr_clear_GtkWindowHandleClass");
    }
    public static void glib_autoptr_clear_GtkWindowHandleClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkWindowHandleClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkWindowHandleClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2500.glib_autoptr_cleanup_GtkWindowHandleClass$MH,"glib_autoptr_cleanup_GtkWindowHandleClass");
    }
    public static void glib_autoptr_cleanup_GtkWindowHandleClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkWindowHandleClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkWindowHandleClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2501.glib_listautoptr_cleanup_GtkWindowHandleClass$MH,"glib_listautoptr_cleanup_GtkWindowHandleClass");
    }
    public static void glib_listautoptr_cleanup_GtkWindowHandleClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkWindowHandleClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkWindowHandleClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2501.glib_slistautoptr_cleanup_GtkWindowHandleClass$MH,"glib_slistautoptr_cleanup_GtkWindowHandleClass");
    }
    public static void glib_slistautoptr_cleanup_GtkWindowHandleClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkWindowHandleClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkWindowHandleClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2501.glib_queueautoptr_cleanup_GtkWindowHandleClass$MH,"glib_queueautoptr_cleanup_GtkWindowHandleClass");
    }
    public static void glib_queueautoptr_cleanup_GtkWindowHandleClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkWindowHandleClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_WINDOW_HANDLE$MH() {
        return RuntimeHelper.requireNonNull(constants$2501.GTK_WINDOW_HANDLE$MH,"GTK_WINDOW_HANDLE");
    }
    public static MemoryAddress GTK_WINDOW_HANDLE ( Addressable ptr) {
        var mh$ = GTK_WINDOW_HANDLE$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_WINDOW_HANDLE$MH() {
        return RuntimeHelper.requireNonNull(constants$2501.GTK_IS_WINDOW_HANDLE$MH,"GTK_IS_WINDOW_HANDLE");
    }
    public static int GTK_IS_WINDOW_HANDLE ( Addressable ptr) {
        var mh$ = GTK_IS_WINDOW_HANDLE$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_handle_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2501.gtk_window_handle_new$MH,"gtk_window_handle_new");
    }
    public static MemoryAddress gtk_window_handle_new () {
        var mh$ = gtk_window_handle_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_handle_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2502.gtk_window_handle_get_child$MH,"gtk_window_handle_get_child");
    }
    public static MemoryAddress gtk_window_handle_get_child ( Addressable self) {
        var mh$ = gtk_window_handle_get_child$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_handle_set_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2502.gtk_window_handle_set_child$MH,"gtk_window_handle_set_child");
    }
    public static void gtk_window_handle_set_child ( Addressable self,  Addressable child) {
        var mh$ = gtk_window_handle_set_child$MH();
        try {
            mh$.invokeExact(self, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkActionBar_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkActionBar_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkActionBar_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkActionBar_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkActionBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2502.glib_autoptr_clear_GtkActionBar$MH,"glib_autoptr_clear_GtkActionBar");
    }
    public static void glib_autoptr_clear_GtkActionBar ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkActionBar$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkActionBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2502.glib_autoptr_cleanup_GtkActionBar$MH,"glib_autoptr_cleanup_GtkActionBar");
    }
    public static void glib_autoptr_cleanup_GtkActionBar ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkActionBar$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkActionBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2502.glib_listautoptr_cleanup_GtkActionBar$MH,"glib_listautoptr_cleanup_GtkActionBar");
    }
    public static void glib_listautoptr_cleanup_GtkActionBar ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkActionBar$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkActionBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2502.glib_slistautoptr_cleanup_GtkActionBar$MH,"glib_slistautoptr_cleanup_GtkActionBar");
    }
    public static void glib_slistautoptr_cleanup_GtkActionBar ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkActionBar$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkActionBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2503.glib_queueautoptr_cleanup_GtkActionBar$MH,"glib_queueautoptr_cleanup_GtkActionBar");
    }
    public static void glib_queueautoptr_cleanup_GtkActionBar ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkActionBar$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkActionable_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkActionable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkActionable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkActionable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkActionable$MH() {
        return RuntimeHelper.requireNonNull(constants$2503.glib_autoptr_clear_GtkActionable$MH,"glib_autoptr_clear_GtkActionable");
    }
    public static void glib_autoptr_clear_GtkActionable ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkActionable$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkActionable$MH() {
        return RuntimeHelper.requireNonNull(constants$2503.glib_autoptr_cleanup_GtkActionable$MH,"glib_autoptr_cleanup_GtkActionable");
    }
    public static void glib_autoptr_cleanup_GtkActionable ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkActionable$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkActionable$MH() {
        return RuntimeHelper.requireNonNull(constants$2503.glib_listautoptr_cleanup_GtkActionable$MH,"glib_listautoptr_cleanup_GtkActionable");
    }
    public static void glib_listautoptr_cleanup_GtkActionable ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkActionable$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkActionable$MH() {
        return RuntimeHelper.requireNonNull(constants$2503.glib_slistautoptr_cleanup_GtkActionable$MH,"glib_slistautoptr_cleanup_GtkActionable");
    }
    public static void glib_slistautoptr_cleanup_GtkActionable ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkActionable$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkActionable$MH() {
        return RuntimeHelper.requireNonNull(constants$2503.glib_queueautoptr_cleanup_GtkActionable$MH,"glib_queueautoptr_cleanup_GtkActionable");
    }
    public static void glib_queueautoptr_cleanup_GtkActionable ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkActionable$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkAdjustment_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkAdjustment_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkAdjustment_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkAdjustment_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkAdjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$2504.glib_autoptr_clear_GtkAdjustment$MH,"glib_autoptr_clear_GtkAdjustment");
    }
    public static void glib_autoptr_clear_GtkAdjustment ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkAdjustment$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkAdjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$2504.glib_autoptr_cleanup_GtkAdjustment$MH,"glib_autoptr_cleanup_GtkAdjustment");
    }
    public static void glib_autoptr_cleanup_GtkAdjustment ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkAdjustment$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkAdjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$2504.glib_listautoptr_cleanup_GtkAdjustment$MH,"glib_listautoptr_cleanup_GtkAdjustment");
    }
    public static void glib_listautoptr_cleanup_GtkAdjustment ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkAdjustment$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkAdjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$2504.glib_slistautoptr_cleanup_GtkAdjustment$MH,"glib_slistautoptr_cleanup_GtkAdjustment");
    }
    public static void glib_slistautoptr_cleanup_GtkAdjustment ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkAdjustment$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkAdjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$2504.glib_queueautoptr_cleanup_GtkAdjustment$MH,"glib_queueautoptr_cleanup_GtkAdjustment");
    }
    public static void glib_queueautoptr_cleanup_GtkAdjustment ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkAdjustment$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkAppChooser_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkAppChooser_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkAppChooser_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkAppChooser_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkAppChooser$MH() {
        return RuntimeHelper.requireNonNull(constants$2504.glib_autoptr_clear_GtkAppChooser$MH,"glib_autoptr_clear_GtkAppChooser");
    }
    public static void glib_autoptr_clear_GtkAppChooser ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkAppChooser$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkAppChooser$MH() {
        return RuntimeHelper.requireNonNull(constants$2505.glib_autoptr_cleanup_GtkAppChooser$MH,"glib_autoptr_cleanup_GtkAppChooser");
    }
    public static void glib_autoptr_cleanup_GtkAppChooser ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkAppChooser$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkAppChooser$MH() {
        return RuntimeHelper.requireNonNull(constants$2505.glib_listautoptr_cleanup_GtkAppChooser$MH,"glib_listautoptr_cleanup_GtkAppChooser");
    }
    public static void glib_listautoptr_cleanup_GtkAppChooser ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkAppChooser$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkAppChooser$MH() {
        return RuntimeHelper.requireNonNull(constants$2505.glib_slistautoptr_cleanup_GtkAppChooser$MH,"glib_slistautoptr_cleanup_GtkAppChooser");
    }
    public static void glib_slistautoptr_cleanup_GtkAppChooser ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkAppChooser$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkAppChooser$MH() {
        return RuntimeHelper.requireNonNull(constants$2505.glib_queueautoptr_cleanup_GtkAppChooser$MH,"glib_queueautoptr_cleanup_GtkAppChooser");
    }
    public static void glib_queueautoptr_cleanup_GtkAppChooser ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkAppChooser$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkAppChooserButton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkAppChooserButton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkAppChooserButton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkAppChooserButton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkAppChooserButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2505.glib_autoptr_clear_GtkAppChooserButton$MH,"glib_autoptr_clear_GtkAppChooserButton");
    }
    public static void glib_autoptr_clear_GtkAppChooserButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkAppChooserButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkAppChooserButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2505.glib_autoptr_cleanup_GtkAppChooserButton$MH,"glib_autoptr_cleanup_GtkAppChooserButton");
    }
    public static void glib_autoptr_cleanup_GtkAppChooserButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkAppChooserButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkAppChooserButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2506.glib_listautoptr_cleanup_GtkAppChooserButton$MH,"glib_listautoptr_cleanup_GtkAppChooserButton");
    }
    public static void glib_listautoptr_cleanup_GtkAppChooserButton ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkAppChooserButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkAppChooserButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2506.glib_slistautoptr_cleanup_GtkAppChooserButton$MH,"glib_slistautoptr_cleanup_GtkAppChooserButton");
    }
    public static void glib_slistautoptr_cleanup_GtkAppChooserButton ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkAppChooserButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkAppChooserButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2506.glib_queueautoptr_cleanup_GtkAppChooserButton$MH,"glib_queueautoptr_cleanup_GtkAppChooserButton");
    }
    public static void glib_queueautoptr_cleanup_GtkAppChooserButton ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkAppChooserButton$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkAppChooserDialog_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkAppChooserDialog_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkAppChooserDialog_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkAppChooserDialog_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkAppChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2506.glib_autoptr_clear_GtkAppChooserDialog$MH,"glib_autoptr_clear_GtkAppChooserDialog");
    }
    public static void glib_autoptr_clear_GtkAppChooserDialog ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkAppChooserDialog$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkAppChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2506.glib_autoptr_cleanup_GtkAppChooserDialog$MH,"glib_autoptr_cleanup_GtkAppChooserDialog");
    }
    public static void glib_autoptr_cleanup_GtkAppChooserDialog ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkAppChooserDialog$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkAppChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2506.glib_listautoptr_cleanup_GtkAppChooserDialog$MH,"glib_listautoptr_cleanup_GtkAppChooserDialog");
    }
    public static void glib_listautoptr_cleanup_GtkAppChooserDialog ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkAppChooserDialog$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkAppChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2507.glib_slistautoptr_cleanup_GtkAppChooserDialog$MH,"glib_slistautoptr_cleanup_GtkAppChooserDialog");
    }
    public static void glib_slistautoptr_cleanup_GtkAppChooserDialog ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkAppChooserDialog$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkAppChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2507.glib_queueautoptr_cleanup_GtkAppChooserDialog$MH,"glib_queueautoptr_cleanup_GtkAppChooserDialog");
    }
    public static void glib_queueautoptr_cleanup_GtkAppChooserDialog ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkAppChooserDialog$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkAppChooserWidget_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkAppChooserWidget_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkAppChooserWidget_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkAppChooserWidget_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkAppChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2507.glib_autoptr_clear_GtkAppChooserWidget$MH,"glib_autoptr_clear_GtkAppChooserWidget");
    }
    public static void glib_autoptr_clear_GtkAppChooserWidget ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkAppChooserWidget$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkAppChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2507.glib_autoptr_cleanup_GtkAppChooserWidget$MH,"glib_autoptr_cleanup_GtkAppChooserWidget");
    }
    public static void glib_autoptr_cleanup_GtkAppChooserWidget ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkAppChooserWidget$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkAppChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2507.glib_listautoptr_cleanup_GtkAppChooserWidget$MH,"glib_listautoptr_cleanup_GtkAppChooserWidget");
    }
    public static void glib_listautoptr_cleanup_GtkAppChooserWidget ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkAppChooserWidget$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkAppChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2507.glib_slistautoptr_cleanup_GtkAppChooserWidget$MH,"glib_slistautoptr_cleanup_GtkAppChooserWidget");
    }
    public static void glib_slistautoptr_cleanup_GtkAppChooserWidget ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkAppChooserWidget$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkAppChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2508.glib_queueautoptr_cleanup_GtkAppChooserWidget$MH,"glib_queueautoptr_cleanup_GtkAppChooserWidget");
    }
    public static void glib_queueautoptr_cleanup_GtkAppChooserWidget ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkAppChooserWidget$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkApplicationWindow_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkApplicationWindow_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkApplicationWindow_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkApplicationWindow_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkApplicationWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$2508.glib_autoptr_clear_GtkApplicationWindow$MH,"glib_autoptr_clear_GtkApplicationWindow");
    }
    public static void glib_autoptr_clear_GtkApplicationWindow ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkApplicationWindow$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkApplicationWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$2508.glib_autoptr_cleanup_GtkApplicationWindow$MH,"glib_autoptr_cleanup_GtkApplicationWindow");
    }
    public static void glib_autoptr_cleanup_GtkApplicationWindow ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkApplicationWindow$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkApplicationWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$2508.glib_listautoptr_cleanup_GtkApplicationWindow$MH,"glib_listautoptr_cleanup_GtkApplicationWindow");
    }
    public static void glib_listautoptr_cleanup_GtkApplicationWindow ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkApplicationWindow$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkApplicationWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$2508.glib_slistautoptr_cleanup_GtkApplicationWindow$MH,"glib_slistautoptr_cleanup_GtkApplicationWindow");
    }
    public static void glib_slistautoptr_cleanup_GtkApplicationWindow ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkApplicationWindow$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkApplicationWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$2508.glib_queueautoptr_cleanup_GtkApplicationWindow$MH,"glib_queueautoptr_cleanup_GtkApplicationWindow");
    }
    public static void glib_queueautoptr_cleanup_GtkApplicationWindow ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkApplicationWindow$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkAspectFrame_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkAspectFrame_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkAspectFrame_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkAspectFrame_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkAspectFrame$MH() {
        return RuntimeHelper.requireNonNull(constants$2509.glib_autoptr_clear_GtkAspectFrame$MH,"glib_autoptr_clear_GtkAspectFrame");
    }
    public static void glib_autoptr_clear_GtkAspectFrame ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkAspectFrame$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkAspectFrame$MH() {
        return RuntimeHelper.requireNonNull(constants$2509.glib_autoptr_cleanup_GtkAspectFrame$MH,"glib_autoptr_cleanup_GtkAspectFrame");
    }
    public static void glib_autoptr_cleanup_GtkAspectFrame ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkAspectFrame$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkAspectFrame$MH() {
        return RuntimeHelper.requireNonNull(constants$2509.glib_listautoptr_cleanup_GtkAspectFrame$MH,"glib_listautoptr_cleanup_GtkAspectFrame");
    }
    public static void glib_listautoptr_cleanup_GtkAspectFrame ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkAspectFrame$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkAspectFrame$MH() {
        return RuntimeHelper.requireNonNull(constants$2509.glib_slistautoptr_cleanup_GtkAspectFrame$MH,"glib_slistautoptr_cleanup_GtkAspectFrame");
    }
    public static void glib_slistautoptr_cleanup_GtkAspectFrame ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkAspectFrame$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkAspectFrame$MH() {
        return RuntimeHelper.requireNonNull(constants$2509.glib_queueautoptr_cleanup_GtkAspectFrame$MH,"glib_queueautoptr_cleanup_GtkAspectFrame");
    }
    public static void glib_queueautoptr_cleanup_GtkAspectFrame ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkAspectFrame$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkAssistant_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkAssistant_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkAssistant_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkAssistant_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkAssistant$MH() {
        return RuntimeHelper.requireNonNull(constants$2509.glib_autoptr_clear_GtkAssistant$MH,"glib_autoptr_clear_GtkAssistant");
    }
    public static void glib_autoptr_clear_GtkAssistant ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkAssistant$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkAssistant$MH() {
        return RuntimeHelper.requireNonNull(constants$2510.glib_autoptr_cleanup_GtkAssistant$MH,"glib_autoptr_cleanup_GtkAssistant");
    }
    public static void glib_autoptr_cleanup_GtkAssistant ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkAssistant$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkAssistant$MH() {
        return RuntimeHelper.requireNonNull(constants$2510.glib_listautoptr_cleanup_GtkAssistant$MH,"glib_listautoptr_cleanup_GtkAssistant");
    }
    public static void glib_listautoptr_cleanup_GtkAssistant ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkAssistant$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkAssistant$MH() {
        return RuntimeHelper.requireNonNull(constants$2510.glib_slistautoptr_cleanup_GtkAssistant$MH,"glib_slistautoptr_cleanup_GtkAssistant");
    }
    public static void glib_slistautoptr_cleanup_GtkAssistant ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkAssistant$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkAssistant$MH() {
        return RuntimeHelper.requireNonNull(constants$2510.glib_queueautoptr_cleanup_GtkAssistant$MH,"glib_queueautoptr_cleanup_GtkAssistant");
    }
    public static void glib_queueautoptr_cleanup_GtkAssistant ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkAssistant$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkBox_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkBox_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkBox_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkBox_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2510.glib_autoptr_clear_GtkBox$MH,"glib_autoptr_clear_GtkBox");
    }
    public static void glib_autoptr_clear_GtkBox ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkBox$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2510.glib_autoptr_cleanup_GtkBox$MH,"glib_autoptr_cleanup_GtkBox");
    }
    public static void glib_autoptr_cleanup_GtkBox ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkBox$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2511.glib_listautoptr_cleanup_GtkBox$MH,"glib_listautoptr_cleanup_GtkBox");
    }
    public static void glib_listautoptr_cleanup_GtkBox ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkBox$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2511.glib_slistautoptr_cleanup_GtkBox$MH,"glib_slistautoptr_cleanup_GtkBox");
    }
    public static void glib_slistautoptr_cleanup_GtkBox ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkBox$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2511.glib_queueautoptr_cleanup_GtkBox$MH,"glib_queueautoptr_cleanup_GtkBox");
    }
    public static void glib_queueautoptr_cleanup_GtkBox ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkBox$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkBuildable_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkBuildable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkBuildable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkBuildable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkBuildable$MH() {
        return RuntimeHelper.requireNonNull(constants$2511.glib_autoptr_clear_GtkBuildable$MH,"glib_autoptr_clear_GtkBuildable");
    }
    public static void glib_autoptr_clear_GtkBuildable ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkBuildable$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkBuildable$MH() {
        return RuntimeHelper.requireNonNull(constants$2511.glib_autoptr_cleanup_GtkBuildable$MH,"glib_autoptr_cleanup_GtkBuildable");
    }
    public static void glib_autoptr_cleanup_GtkBuildable ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkBuildable$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkBuildable$MH() {
        return RuntimeHelper.requireNonNull(constants$2511.glib_listautoptr_cleanup_GtkBuildable$MH,"glib_listautoptr_cleanup_GtkBuildable");
    }
    public static void glib_listautoptr_cleanup_GtkBuildable ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkBuildable$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkBuildable$MH() {
        return RuntimeHelper.requireNonNull(constants$2512.glib_slistautoptr_cleanup_GtkBuildable$MH,"glib_slistautoptr_cleanup_GtkBuildable");
    }
    public static void glib_slistautoptr_cleanup_GtkBuildable ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkBuildable$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkBuildable$MH() {
        return RuntimeHelper.requireNonNull(constants$2512.glib_queueautoptr_cleanup_GtkBuildable$MH,"glib_queueautoptr_cleanup_GtkBuildable");
    }
    public static void glib_queueautoptr_cleanup_GtkBuildable ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkBuildable$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkBuilder_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkBuilder_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkBuilder_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkBuilder_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkBuilder$MH() {
        return RuntimeHelper.requireNonNull(constants$2512.glib_autoptr_clear_GtkBuilder$MH,"glib_autoptr_clear_GtkBuilder");
    }
    public static void glib_autoptr_clear_GtkBuilder ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkBuilder$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkBuilder$MH() {
        return RuntimeHelper.requireNonNull(constants$2512.glib_autoptr_cleanup_GtkBuilder$MH,"glib_autoptr_cleanup_GtkBuilder");
    }
    public static void glib_autoptr_cleanup_GtkBuilder ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkBuilder$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkBuilder$MH() {
        return RuntimeHelper.requireNonNull(constants$2512.glib_listautoptr_cleanup_GtkBuilder$MH,"glib_listautoptr_cleanup_GtkBuilder");
    }
    public static void glib_listautoptr_cleanup_GtkBuilder ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkBuilder$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkBuilder$MH() {
        return RuntimeHelper.requireNonNull(constants$2512.glib_slistautoptr_cleanup_GtkBuilder$MH,"glib_slistautoptr_cleanup_GtkBuilder");
    }
    public static void glib_slistautoptr_cleanup_GtkBuilder ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkBuilder$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkBuilder$MH() {
        return RuntimeHelper.requireNonNull(constants$2513.glib_queueautoptr_cleanup_GtkBuilder$MH,"glib_queueautoptr_cleanup_GtkBuilder");
    }
    public static void glib_queueautoptr_cleanup_GtkBuilder ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkBuilder$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkButton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkButton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkButton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkButton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2513.glib_autoptr_clear_GtkButton$MH,"glib_autoptr_clear_GtkButton");
    }
    public static void glib_autoptr_clear_GtkButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2513.glib_autoptr_cleanup_GtkButton$MH,"glib_autoptr_cleanup_GtkButton");
    }
    public static void glib_autoptr_cleanup_GtkButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2513.glib_listautoptr_cleanup_GtkButton$MH,"glib_listautoptr_cleanup_GtkButton");
    }
    public static void glib_listautoptr_cleanup_GtkButton ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2513.glib_slistautoptr_cleanup_GtkButton$MH,"glib_slistautoptr_cleanup_GtkButton");
    }
    public static void glib_slistautoptr_cleanup_GtkButton ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2513.glib_queueautoptr_cleanup_GtkButton$MH,"glib_queueautoptr_cleanup_GtkButton");
    }
    public static void glib_queueautoptr_cleanup_GtkButton ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkButton$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCalendar_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCalendar_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCalendar_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCalendar_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCalendar$MH() {
        return RuntimeHelper.requireNonNull(constants$2514.glib_autoptr_clear_GtkCalendar$MH,"glib_autoptr_clear_GtkCalendar");
    }
    public static void glib_autoptr_clear_GtkCalendar ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkCalendar$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCalendar$MH() {
        return RuntimeHelper.requireNonNull(constants$2514.glib_autoptr_cleanup_GtkCalendar$MH,"glib_autoptr_cleanup_GtkCalendar");
    }
    public static void glib_autoptr_cleanup_GtkCalendar ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkCalendar$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCalendar$MH() {
        return RuntimeHelper.requireNonNull(constants$2514.glib_listautoptr_cleanup_GtkCalendar$MH,"glib_listautoptr_cleanup_GtkCalendar");
    }
    public static void glib_listautoptr_cleanup_GtkCalendar ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkCalendar$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCalendar$MH() {
        return RuntimeHelper.requireNonNull(constants$2514.glib_slistautoptr_cleanup_GtkCalendar$MH,"glib_slistautoptr_cleanup_GtkCalendar");
    }
    public static void glib_slistautoptr_cleanup_GtkCalendar ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkCalendar$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCalendar$MH() {
        return RuntimeHelper.requireNonNull(constants$2514.glib_queueautoptr_cleanup_GtkCalendar$MH,"glib_queueautoptr_cleanup_GtkCalendar");
    }
    public static void glib_queueautoptr_cleanup_GtkCalendar ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkCalendar$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCellArea_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellArea_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellArea_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellArea_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCellArea$MH() {
        return RuntimeHelper.requireNonNull(constants$2514.glib_autoptr_clear_GtkCellArea$MH,"glib_autoptr_clear_GtkCellArea");
    }
    public static void glib_autoptr_clear_GtkCellArea ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkCellArea$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCellArea$MH() {
        return RuntimeHelper.requireNonNull(constants$2515.glib_autoptr_cleanup_GtkCellArea$MH,"glib_autoptr_cleanup_GtkCellArea");
    }
    public static void glib_autoptr_cleanup_GtkCellArea ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkCellArea$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCellArea$MH() {
        return RuntimeHelper.requireNonNull(constants$2515.glib_listautoptr_cleanup_GtkCellArea$MH,"glib_listautoptr_cleanup_GtkCellArea");
    }
    public static void glib_listautoptr_cleanup_GtkCellArea ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkCellArea$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCellArea$MH() {
        return RuntimeHelper.requireNonNull(constants$2515.glib_slistautoptr_cleanup_GtkCellArea$MH,"glib_slistautoptr_cleanup_GtkCellArea");
    }
    public static void glib_slistautoptr_cleanup_GtkCellArea ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkCellArea$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCellArea$MH() {
        return RuntimeHelper.requireNonNull(constants$2515.glib_queueautoptr_cleanup_GtkCellArea$MH,"glib_queueautoptr_cleanup_GtkCellArea");
    }
    public static void glib_queueautoptr_cleanup_GtkCellArea ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkCellArea$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCellAreaBox_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellAreaBox_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellAreaBox_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellAreaBox_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCellAreaBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2515.glib_autoptr_clear_GtkCellAreaBox$MH,"glib_autoptr_clear_GtkCellAreaBox");
    }
    public static void glib_autoptr_clear_GtkCellAreaBox ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkCellAreaBox$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCellAreaBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2515.glib_autoptr_cleanup_GtkCellAreaBox$MH,"glib_autoptr_cleanup_GtkCellAreaBox");
    }
    public static void glib_autoptr_cleanup_GtkCellAreaBox ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkCellAreaBox$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCellAreaBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2516.glib_listautoptr_cleanup_GtkCellAreaBox$MH,"glib_listautoptr_cleanup_GtkCellAreaBox");
    }
    public static void glib_listautoptr_cleanup_GtkCellAreaBox ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkCellAreaBox$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCellAreaBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2516.glib_slistautoptr_cleanup_GtkCellAreaBox$MH,"glib_slistautoptr_cleanup_GtkCellAreaBox");
    }
    public static void glib_slistautoptr_cleanup_GtkCellAreaBox ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkCellAreaBox$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCellAreaBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2516.glib_queueautoptr_cleanup_GtkCellAreaBox$MH,"glib_queueautoptr_cleanup_GtkCellAreaBox");
    }
    public static void glib_queueautoptr_cleanup_GtkCellAreaBox ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkCellAreaBox$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCellAreaContext_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellAreaContext_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellAreaContext_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellAreaContext_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCellAreaContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2516.glib_autoptr_clear_GtkCellAreaContext$MH,"glib_autoptr_clear_GtkCellAreaContext");
    }
    public static void glib_autoptr_clear_GtkCellAreaContext ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkCellAreaContext$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCellAreaContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2516.glib_autoptr_cleanup_GtkCellAreaContext$MH,"glib_autoptr_cleanup_GtkCellAreaContext");
    }
    public static void glib_autoptr_cleanup_GtkCellAreaContext ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkCellAreaContext$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCellAreaContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2516.glib_listautoptr_cleanup_GtkCellAreaContext$MH,"glib_listautoptr_cleanup_GtkCellAreaContext");
    }
    public static void glib_listautoptr_cleanup_GtkCellAreaContext ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkCellAreaContext$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCellAreaContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2517.glib_slistautoptr_cleanup_GtkCellAreaContext$MH,"glib_slistautoptr_cleanup_GtkCellAreaContext");
    }
    public static void glib_slistautoptr_cleanup_GtkCellAreaContext ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkCellAreaContext$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCellAreaContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2517.glib_queueautoptr_cleanup_GtkCellAreaContext$MH,"glib_queueautoptr_cleanup_GtkCellAreaContext");
    }
    public static void glib_queueautoptr_cleanup_GtkCellAreaContext ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkCellAreaContext$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCellEditable_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellEditable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellEditable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellEditable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCellEditable$MH() {
        return RuntimeHelper.requireNonNull(constants$2517.glib_autoptr_clear_GtkCellEditable$MH,"glib_autoptr_clear_GtkCellEditable");
    }
    public static void glib_autoptr_clear_GtkCellEditable ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkCellEditable$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCellEditable$MH() {
        return RuntimeHelper.requireNonNull(constants$2517.glib_autoptr_cleanup_GtkCellEditable$MH,"glib_autoptr_cleanup_GtkCellEditable");
    }
    public static void glib_autoptr_cleanup_GtkCellEditable ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkCellEditable$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCellEditable$MH() {
        return RuntimeHelper.requireNonNull(constants$2517.glib_listautoptr_cleanup_GtkCellEditable$MH,"glib_listautoptr_cleanup_GtkCellEditable");
    }
    public static void glib_listautoptr_cleanup_GtkCellEditable ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkCellEditable$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCellEditable$MH() {
        return RuntimeHelper.requireNonNull(constants$2517.glib_slistautoptr_cleanup_GtkCellEditable$MH,"glib_slistautoptr_cleanup_GtkCellEditable");
    }
    public static void glib_slistautoptr_cleanup_GtkCellEditable ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkCellEditable$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCellEditable$MH() {
        return RuntimeHelper.requireNonNull(constants$2518.glib_queueautoptr_cleanup_GtkCellEditable$MH,"glib_queueautoptr_cleanup_GtkCellEditable");
    }
    public static void glib_queueautoptr_cleanup_GtkCellEditable ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkCellEditable$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCellLayout_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellLayout_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellLayout_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellLayout_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCellLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$2518.glib_autoptr_clear_GtkCellLayout$MH,"glib_autoptr_clear_GtkCellLayout");
    }
    public static void glib_autoptr_clear_GtkCellLayout ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkCellLayout$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCellLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$2518.glib_autoptr_cleanup_GtkCellLayout$MH,"glib_autoptr_cleanup_GtkCellLayout");
    }
    public static void glib_autoptr_cleanup_GtkCellLayout ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkCellLayout$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCellLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$2518.glib_listautoptr_cleanup_GtkCellLayout$MH,"glib_listautoptr_cleanup_GtkCellLayout");
    }
    public static void glib_listautoptr_cleanup_GtkCellLayout ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkCellLayout$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCellLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$2518.glib_slistautoptr_cleanup_GtkCellLayout$MH,"glib_slistautoptr_cleanup_GtkCellLayout");
    }
    public static void glib_slistautoptr_cleanup_GtkCellLayout ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkCellLayout$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCellLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$2518.glib_queueautoptr_cleanup_GtkCellLayout$MH,"glib_queueautoptr_cleanup_GtkCellLayout");
    }
    public static void glib_queueautoptr_cleanup_GtkCellLayout ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkCellLayout$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCellRenderer_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRenderer_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRenderer_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRenderer_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCellRenderer$MH() {
        return RuntimeHelper.requireNonNull(constants$2519.glib_autoptr_clear_GtkCellRenderer$MH,"glib_autoptr_clear_GtkCellRenderer");
    }
    public static void glib_autoptr_clear_GtkCellRenderer ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkCellRenderer$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCellRenderer$MH() {
        return RuntimeHelper.requireNonNull(constants$2519.glib_autoptr_cleanup_GtkCellRenderer$MH,"glib_autoptr_cleanup_GtkCellRenderer");
    }
    public static void glib_autoptr_cleanup_GtkCellRenderer ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkCellRenderer$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCellRenderer$MH() {
        return RuntimeHelper.requireNonNull(constants$2519.glib_listautoptr_cleanup_GtkCellRenderer$MH,"glib_listautoptr_cleanup_GtkCellRenderer");
    }
    public static void glib_listautoptr_cleanup_GtkCellRenderer ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkCellRenderer$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCellRenderer$MH() {
        return RuntimeHelper.requireNonNull(constants$2519.glib_slistautoptr_cleanup_GtkCellRenderer$MH,"glib_slistautoptr_cleanup_GtkCellRenderer");
    }
    public static void glib_slistautoptr_cleanup_GtkCellRenderer ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkCellRenderer$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCellRenderer$MH() {
        return RuntimeHelper.requireNonNull(constants$2519.glib_queueautoptr_cleanup_GtkCellRenderer$MH,"glib_queueautoptr_cleanup_GtkCellRenderer");
    }
    public static void glib_queueautoptr_cleanup_GtkCellRenderer ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkCellRenderer$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCellRendererAccel_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererAccel_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererAccel_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererAccel_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCellRendererAccel$MH() {
        return RuntimeHelper.requireNonNull(constants$2519.glib_autoptr_clear_GtkCellRendererAccel$MH,"glib_autoptr_clear_GtkCellRendererAccel");
    }
    public static void glib_autoptr_clear_GtkCellRendererAccel ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkCellRendererAccel$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCellRendererAccel$MH() {
        return RuntimeHelper.requireNonNull(constants$2520.glib_autoptr_cleanup_GtkCellRendererAccel$MH,"glib_autoptr_cleanup_GtkCellRendererAccel");
    }
    public static void glib_autoptr_cleanup_GtkCellRendererAccel ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkCellRendererAccel$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCellRendererAccel$MH() {
        return RuntimeHelper.requireNonNull(constants$2520.glib_listautoptr_cleanup_GtkCellRendererAccel$MH,"glib_listautoptr_cleanup_GtkCellRendererAccel");
    }
    public static void glib_listautoptr_cleanup_GtkCellRendererAccel ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkCellRendererAccel$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCellRendererAccel$MH() {
        return RuntimeHelper.requireNonNull(constants$2520.glib_slistautoptr_cleanup_GtkCellRendererAccel$MH,"glib_slistautoptr_cleanup_GtkCellRendererAccel");
    }
    public static void glib_slistautoptr_cleanup_GtkCellRendererAccel ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkCellRendererAccel$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCellRendererAccel$MH() {
        return RuntimeHelper.requireNonNull(constants$2520.glib_queueautoptr_cleanup_GtkCellRendererAccel$MH,"glib_queueautoptr_cleanup_GtkCellRendererAccel");
    }
    public static void glib_queueautoptr_cleanup_GtkCellRendererAccel ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkCellRendererAccel$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCellRendererCombo_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererCombo_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererCombo_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererCombo_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCellRendererCombo$MH() {
        return RuntimeHelper.requireNonNull(constants$2520.glib_autoptr_clear_GtkCellRendererCombo$MH,"glib_autoptr_clear_GtkCellRendererCombo");
    }
    public static void glib_autoptr_clear_GtkCellRendererCombo ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkCellRendererCombo$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCellRendererCombo$MH() {
        return RuntimeHelper.requireNonNull(constants$2520.glib_autoptr_cleanup_GtkCellRendererCombo$MH,"glib_autoptr_cleanup_GtkCellRendererCombo");
    }
    public static void glib_autoptr_cleanup_GtkCellRendererCombo ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkCellRendererCombo$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCellRendererCombo$MH() {
        return RuntimeHelper.requireNonNull(constants$2521.glib_listautoptr_cleanup_GtkCellRendererCombo$MH,"glib_listautoptr_cleanup_GtkCellRendererCombo");
    }
    public static void glib_listautoptr_cleanup_GtkCellRendererCombo ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkCellRendererCombo$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCellRendererCombo$MH() {
        return RuntimeHelper.requireNonNull(constants$2521.glib_slistautoptr_cleanup_GtkCellRendererCombo$MH,"glib_slistautoptr_cleanup_GtkCellRendererCombo");
    }
    public static void glib_slistautoptr_cleanup_GtkCellRendererCombo ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkCellRendererCombo$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCellRendererCombo$MH() {
        return RuntimeHelper.requireNonNull(constants$2521.glib_queueautoptr_cleanup_GtkCellRendererCombo$MH,"glib_queueautoptr_cleanup_GtkCellRendererCombo");
    }
    public static void glib_queueautoptr_cleanup_GtkCellRendererCombo ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkCellRendererCombo$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCellRendererPixbuf_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererPixbuf_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererPixbuf_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererPixbuf_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCellRendererPixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$2521.glib_autoptr_clear_GtkCellRendererPixbuf$MH,"glib_autoptr_clear_GtkCellRendererPixbuf");
    }
    public static void glib_autoptr_clear_GtkCellRendererPixbuf ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkCellRendererPixbuf$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCellRendererPixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$2521.glib_autoptr_cleanup_GtkCellRendererPixbuf$MH,"glib_autoptr_cleanup_GtkCellRendererPixbuf");
    }
    public static void glib_autoptr_cleanup_GtkCellRendererPixbuf ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkCellRendererPixbuf$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCellRendererPixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$2521.glib_listautoptr_cleanup_GtkCellRendererPixbuf$MH,"glib_listautoptr_cleanup_GtkCellRendererPixbuf");
    }
    public static void glib_listautoptr_cleanup_GtkCellRendererPixbuf ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkCellRendererPixbuf$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCellRendererPixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$2522.glib_slistautoptr_cleanup_GtkCellRendererPixbuf$MH,"glib_slistautoptr_cleanup_GtkCellRendererPixbuf");
    }
    public static void glib_slistautoptr_cleanup_GtkCellRendererPixbuf ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkCellRendererPixbuf$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCellRendererPixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$2522.glib_queueautoptr_cleanup_GtkCellRendererPixbuf$MH,"glib_queueautoptr_cleanup_GtkCellRendererPixbuf");
    }
    public static void glib_queueautoptr_cleanup_GtkCellRendererPixbuf ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkCellRendererPixbuf$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCellRendererProgress_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererProgress_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererProgress_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererProgress_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCellRendererProgress$MH() {
        return RuntimeHelper.requireNonNull(constants$2522.glib_autoptr_clear_GtkCellRendererProgress$MH,"glib_autoptr_clear_GtkCellRendererProgress");
    }
    public static void glib_autoptr_clear_GtkCellRendererProgress ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkCellRendererProgress$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCellRendererProgress$MH() {
        return RuntimeHelper.requireNonNull(constants$2522.glib_autoptr_cleanup_GtkCellRendererProgress$MH,"glib_autoptr_cleanup_GtkCellRendererProgress");
    }
    public static void glib_autoptr_cleanup_GtkCellRendererProgress ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkCellRendererProgress$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCellRendererProgress$MH() {
        return RuntimeHelper.requireNonNull(constants$2522.glib_listautoptr_cleanup_GtkCellRendererProgress$MH,"glib_listautoptr_cleanup_GtkCellRendererProgress");
    }
    public static void glib_listautoptr_cleanup_GtkCellRendererProgress ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkCellRendererProgress$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCellRendererProgress$MH() {
        return RuntimeHelper.requireNonNull(constants$2522.glib_slistautoptr_cleanup_GtkCellRendererProgress$MH,"glib_slistautoptr_cleanup_GtkCellRendererProgress");
    }
    public static void glib_slistautoptr_cleanup_GtkCellRendererProgress ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkCellRendererProgress$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCellRendererProgress$MH() {
        return RuntimeHelper.requireNonNull(constants$2523.glib_queueautoptr_cleanup_GtkCellRendererProgress$MH,"glib_queueautoptr_cleanup_GtkCellRendererProgress");
    }
    public static void glib_queueautoptr_cleanup_GtkCellRendererProgress ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkCellRendererProgress$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCellRendererSpin_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererSpin_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererSpin_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererSpin_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCellRendererSpin$MH() {
        return RuntimeHelper.requireNonNull(constants$2523.glib_autoptr_clear_GtkCellRendererSpin$MH,"glib_autoptr_clear_GtkCellRendererSpin");
    }
    public static void glib_autoptr_clear_GtkCellRendererSpin ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkCellRendererSpin$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCellRendererSpin$MH() {
        return RuntimeHelper.requireNonNull(constants$2523.glib_autoptr_cleanup_GtkCellRendererSpin$MH,"glib_autoptr_cleanup_GtkCellRendererSpin");
    }
    public static void glib_autoptr_cleanup_GtkCellRendererSpin ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkCellRendererSpin$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCellRendererSpin$MH() {
        return RuntimeHelper.requireNonNull(constants$2523.glib_listautoptr_cleanup_GtkCellRendererSpin$MH,"glib_listautoptr_cleanup_GtkCellRendererSpin");
    }
    public static void glib_listautoptr_cleanup_GtkCellRendererSpin ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkCellRendererSpin$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCellRendererSpin$MH() {
        return RuntimeHelper.requireNonNull(constants$2523.glib_slistautoptr_cleanup_GtkCellRendererSpin$MH,"glib_slistautoptr_cleanup_GtkCellRendererSpin");
    }
    public static void glib_slistautoptr_cleanup_GtkCellRendererSpin ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkCellRendererSpin$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCellRendererSpin$MH() {
        return RuntimeHelper.requireNonNull(constants$2523.glib_queueautoptr_cleanup_GtkCellRendererSpin$MH,"glib_queueautoptr_cleanup_GtkCellRendererSpin");
    }
    public static void glib_queueautoptr_cleanup_GtkCellRendererSpin ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkCellRendererSpin$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCellRendererSpinner_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererSpinner_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererSpinner_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererSpinner_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCellRendererSpinner$MH() {
        return RuntimeHelper.requireNonNull(constants$2524.glib_autoptr_clear_GtkCellRendererSpinner$MH,"glib_autoptr_clear_GtkCellRendererSpinner");
    }
    public static void glib_autoptr_clear_GtkCellRendererSpinner ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkCellRendererSpinner$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCellRendererSpinner$MH() {
        return RuntimeHelper.requireNonNull(constants$2524.glib_autoptr_cleanup_GtkCellRendererSpinner$MH,"glib_autoptr_cleanup_GtkCellRendererSpinner");
    }
    public static void glib_autoptr_cleanup_GtkCellRendererSpinner ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkCellRendererSpinner$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCellRendererSpinner$MH() {
        return RuntimeHelper.requireNonNull(constants$2524.glib_listautoptr_cleanup_GtkCellRendererSpinner$MH,"glib_listautoptr_cleanup_GtkCellRendererSpinner");
    }
    public static void glib_listautoptr_cleanup_GtkCellRendererSpinner ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkCellRendererSpinner$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCellRendererSpinner$MH() {
        return RuntimeHelper.requireNonNull(constants$2524.glib_slistautoptr_cleanup_GtkCellRendererSpinner$MH,"glib_slistautoptr_cleanup_GtkCellRendererSpinner");
    }
    public static void glib_slistautoptr_cleanup_GtkCellRendererSpinner ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkCellRendererSpinner$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCellRendererSpinner$MH() {
        return RuntimeHelper.requireNonNull(constants$2524.glib_queueautoptr_cleanup_GtkCellRendererSpinner$MH,"glib_queueautoptr_cleanup_GtkCellRendererSpinner");
    }
    public static void glib_queueautoptr_cleanup_GtkCellRendererSpinner ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkCellRendererSpinner$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCellRendererText_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererText_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererText_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererText_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCellRendererText$MH() {
        return RuntimeHelper.requireNonNull(constants$2524.glib_autoptr_clear_GtkCellRendererText$MH,"glib_autoptr_clear_GtkCellRendererText");
    }
    public static void glib_autoptr_clear_GtkCellRendererText ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkCellRendererText$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCellRendererText$MH() {
        return RuntimeHelper.requireNonNull(constants$2525.glib_autoptr_cleanup_GtkCellRendererText$MH,"glib_autoptr_cleanup_GtkCellRendererText");
    }
    public static void glib_autoptr_cleanup_GtkCellRendererText ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkCellRendererText$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCellRendererText$MH() {
        return RuntimeHelper.requireNonNull(constants$2525.glib_listautoptr_cleanup_GtkCellRendererText$MH,"glib_listautoptr_cleanup_GtkCellRendererText");
    }
    public static void glib_listautoptr_cleanup_GtkCellRendererText ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkCellRendererText$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCellRendererText$MH() {
        return RuntimeHelper.requireNonNull(constants$2525.glib_slistautoptr_cleanup_GtkCellRendererText$MH,"glib_slistautoptr_cleanup_GtkCellRendererText");
    }
    public static void glib_slistautoptr_cleanup_GtkCellRendererText ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkCellRendererText$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCellRendererText$MH() {
        return RuntimeHelper.requireNonNull(constants$2525.glib_queueautoptr_cleanup_GtkCellRendererText$MH,"glib_queueautoptr_cleanup_GtkCellRendererText");
    }
    public static void glib_queueautoptr_cleanup_GtkCellRendererText ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkCellRendererText$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCellRendererToggle_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererToggle_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererToggle_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellRendererToggle_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCellRendererToggle$MH() {
        return RuntimeHelper.requireNonNull(constants$2525.glib_autoptr_clear_GtkCellRendererToggle$MH,"glib_autoptr_clear_GtkCellRendererToggle");
    }
    public static void glib_autoptr_clear_GtkCellRendererToggle ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkCellRendererToggle$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCellRendererToggle$MH() {
        return RuntimeHelper.requireNonNull(constants$2525.glib_autoptr_cleanup_GtkCellRendererToggle$MH,"glib_autoptr_cleanup_GtkCellRendererToggle");
    }
    public static void glib_autoptr_cleanup_GtkCellRendererToggle ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkCellRendererToggle$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCellRendererToggle$MH() {
        return RuntimeHelper.requireNonNull(constants$2526.glib_listautoptr_cleanup_GtkCellRendererToggle$MH,"glib_listautoptr_cleanup_GtkCellRendererToggle");
    }
    public static void glib_listautoptr_cleanup_GtkCellRendererToggle ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkCellRendererToggle$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCellRendererToggle$MH() {
        return RuntimeHelper.requireNonNull(constants$2526.glib_slistautoptr_cleanup_GtkCellRendererToggle$MH,"glib_slistautoptr_cleanup_GtkCellRendererToggle");
    }
    public static void glib_slistautoptr_cleanup_GtkCellRendererToggle ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkCellRendererToggle$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCellRendererToggle$MH() {
        return RuntimeHelper.requireNonNull(constants$2526.glib_queueautoptr_cleanup_GtkCellRendererToggle$MH,"glib_queueautoptr_cleanup_GtkCellRendererToggle");
    }
    public static void glib_queueautoptr_cleanup_GtkCellRendererToggle ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkCellRendererToggle$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCellView_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellView_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellView_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCellView_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCellView$MH() {
        return RuntimeHelper.requireNonNull(constants$2526.glib_autoptr_clear_GtkCellView$MH,"glib_autoptr_clear_GtkCellView");
    }
    public static void glib_autoptr_clear_GtkCellView ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkCellView$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCellView$MH() {
        return RuntimeHelper.requireNonNull(constants$2526.glib_autoptr_cleanup_GtkCellView$MH,"glib_autoptr_cleanup_GtkCellView");
    }
    public static void glib_autoptr_cleanup_GtkCellView ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkCellView$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCellView$MH() {
        return RuntimeHelper.requireNonNull(constants$2526.glib_listautoptr_cleanup_GtkCellView$MH,"glib_listautoptr_cleanup_GtkCellView");
    }
    public static void glib_listautoptr_cleanup_GtkCellView ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkCellView$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCellView$MH() {
        return RuntimeHelper.requireNonNull(constants$2527.glib_slistautoptr_cleanup_GtkCellView$MH,"glib_slistautoptr_cleanup_GtkCellView");
    }
    public static void glib_slistautoptr_cleanup_GtkCellView ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkCellView$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCellView$MH() {
        return RuntimeHelper.requireNonNull(constants$2527.glib_queueautoptr_cleanup_GtkCellView$MH,"glib_queueautoptr_cleanup_GtkCellView");
    }
    public static void glib_queueautoptr_cleanup_GtkCellView ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkCellView$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCheckButton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCheckButton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCheckButton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCheckButton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCheckButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2527.glib_autoptr_clear_GtkCheckButton$MH,"glib_autoptr_clear_GtkCheckButton");
    }
    public static void glib_autoptr_clear_GtkCheckButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkCheckButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCheckButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2527.glib_autoptr_cleanup_GtkCheckButton$MH,"glib_autoptr_cleanup_GtkCheckButton");
    }
    public static void glib_autoptr_cleanup_GtkCheckButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkCheckButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCheckButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2527.glib_listautoptr_cleanup_GtkCheckButton$MH,"glib_listautoptr_cleanup_GtkCheckButton");
    }
    public static void glib_listautoptr_cleanup_GtkCheckButton ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkCheckButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCheckButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2527.glib_slistautoptr_cleanup_GtkCheckButton$MH,"glib_slistautoptr_cleanup_GtkCheckButton");
    }
    public static void glib_slistautoptr_cleanup_GtkCheckButton ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkCheckButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCheckButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2528.glib_queueautoptr_cleanup_GtkCheckButton$MH,"glib_queueautoptr_cleanup_GtkCheckButton");
    }
    public static void glib_queueautoptr_cleanup_GtkCheckButton ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkCheckButton$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkColorButton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkColorButton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkColorButton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkColorButton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkColorButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2528.glib_autoptr_clear_GtkColorButton$MH,"glib_autoptr_clear_GtkColorButton");
    }
    public static void glib_autoptr_clear_GtkColorButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkColorButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkColorButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2528.glib_autoptr_cleanup_GtkColorButton$MH,"glib_autoptr_cleanup_GtkColorButton");
    }
    public static void glib_autoptr_cleanup_GtkColorButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkColorButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkColorButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2528.glib_listautoptr_cleanup_GtkColorButton$MH,"glib_listautoptr_cleanup_GtkColorButton");
    }
    public static void glib_listautoptr_cleanup_GtkColorButton ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkColorButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkColorButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2528.glib_slistautoptr_cleanup_GtkColorButton$MH,"glib_slistautoptr_cleanup_GtkColorButton");
    }
    public static void glib_slistautoptr_cleanup_GtkColorButton ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkColorButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkColorButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2528.glib_queueautoptr_cleanup_GtkColorButton$MH,"glib_queueautoptr_cleanup_GtkColorButton");
    }
    public static void glib_queueautoptr_cleanup_GtkColorButton ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkColorButton$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkColorChooser_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkColorChooser_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkColorChooser_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkColorChooser_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkColorChooser$MH() {
        return RuntimeHelper.requireNonNull(constants$2529.glib_autoptr_clear_GtkColorChooser$MH,"glib_autoptr_clear_GtkColorChooser");
    }
    public static void glib_autoptr_clear_GtkColorChooser ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkColorChooser$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkColorChooser$MH() {
        return RuntimeHelper.requireNonNull(constants$2529.glib_autoptr_cleanup_GtkColorChooser$MH,"glib_autoptr_cleanup_GtkColorChooser");
    }
    public static void glib_autoptr_cleanup_GtkColorChooser ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkColorChooser$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkColorChooser$MH() {
        return RuntimeHelper.requireNonNull(constants$2529.glib_listautoptr_cleanup_GtkColorChooser$MH,"glib_listautoptr_cleanup_GtkColorChooser");
    }
    public static void glib_listautoptr_cleanup_GtkColorChooser ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkColorChooser$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkColorChooser$MH() {
        return RuntimeHelper.requireNonNull(constants$2529.glib_slistautoptr_cleanup_GtkColorChooser$MH,"glib_slistautoptr_cleanup_GtkColorChooser");
    }
    public static void glib_slistautoptr_cleanup_GtkColorChooser ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkColorChooser$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkColorChooser$MH() {
        return RuntimeHelper.requireNonNull(constants$2529.glib_queueautoptr_cleanup_GtkColorChooser$MH,"glib_queueautoptr_cleanup_GtkColorChooser");
    }
    public static void glib_queueautoptr_cleanup_GtkColorChooser ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkColorChooser$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkColorChooserDialog_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkColorChooserDialog_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkColorChooserDialog_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkColorChooserDialog_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkColorChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2529.glib_autoptr_clear_GtkColorChooserDialog$MH,"glib_autoptr_clear_GtkColorChooserDialog");
    }
    public static void glib_autoptr_clear_GtkColorChooserDialog ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkColorChooserDialog$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkColorChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2530.glib_autoptr_cleanup_GtkColorChooserDialog$MH,"glib_autoptr_cleanup_GtkColorChooserDialog");
    }
    public static void glib_autoptr_cleanup_GtkColorChooserDialog ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkColorChooserDialog$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkColorChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2530.glib_listautoptr_cleanup_GtkColorChooserDialog$MH,"glib_listautoptr_cleanup_GtkColorChooserDialog");
    }
    public static void glib_listautoptr_cleanup_GtkColorChooserDialog ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkColorChooserDialog$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkColorChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2530.glib_slistautoptr_cleanup_GtkColorChooserDialog$MH,"glib_slistautoptr_cleanup_GtkColorChooserDialog");
    }
    public static void glib_slistautoptr_cleanup_GtkColorChooserDialog ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkColorChooserDialog$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkColorChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2530.glib_queueautoptr_cleanup_GtkColorChooserDialog$MH,"glib_queueautoptr_cleanup_GtkColorChooserDialog");
    }
    public static void glib_queueautoptr_cleanup_GtkColorChooserDialog ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkColorChooserDialog$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkColorChooserWidget_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkColorChooserWidget_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkColorChooserWidget_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkColorChooserWidget_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkColorChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2530.glib_autoptr_clear_GtkColorChooserWidget$MH,"glib_autoptr_clear_GtkColorChooserWidget");
    }
    public static void glib_autoptr_clear_GtkColorChooserWidget ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkColorChooserWidget$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkColorChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2530.glib_autoptr_cleanup_GtkColorChooserWidget$MH,"glib_autoptr_cleanup_GtkColorChooserWidget");
    }
    public static void glib_autoptr_cleanup_GtkColorChooserWidget ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkColorChooserWidget$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkColorChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2531.glib_listautoptr_cleanup_GtkColorChooserWidget$MH,"glib_listautoptr_cleanup_GtkColorChooserWidget");
    }
    public static void glib_listautoptr_cleanup_GtkColorChooserWidget ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkColorChooserWidget$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkColorChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2531.glib_slistautoptr_cleanup_GtkColorChooserWidget$MH,"glib_slistautoptr_cleanup_GtkColorChooserWidget");
    }
    public static void glib_slistautoptr_cleanup_GtkColorChooserWidget ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkColorChooserWidget$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkColorChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2531.glib_queueautoptr_cleanup_GtkColorChooserWidget$MH,"glib_queueautoptr_cleanup_GtkColorChooserWidget");
    }
    public static void glib_queueautoptr_cleanup_GtkColorChooserWidget ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkColorChooserWidget$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkComboBox_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkComboBox_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkComboBox_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkComboBox_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkComboBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2531.glib_autoptr_clear_GtkComboBox$MH,"glib_autoptr_clear_GtkComboBox");
    }
    public static void glib_autoptr_clear_GtkComboBox ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkComboBox$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkComboBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2531.glib_autoptr_cleanup_GtkComboBox$MH,"glib_autoptr_cleanup_GtkComboBox");
    }
    public static void glib_autoptr_cleanup_GtkComboBox ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkComboBox$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkComboBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2531.glib_listautoptr_cleanup_GtkComboBox$MH,"glib_listautoptr_cleanup_GtkComboBox");
    }
    public static void glib_listautoptr_cleanup_GtkComboBox ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkComboBox$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkComboBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2532.glib_slistautoptr_cleanup_GtkComboBox$MH,"glib_slistautoptr_cleanup_GtkComboBox");
    }
    public static void glib_slistautoptr_cleanup_GtkComboBox ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkComboBox$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkComboBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2532.glib_queueautoptr_cleanup_GtkComboBox$MH,"glib_queueautoptr_cleanup_GtkComboBox");
    }
    public static void glib_queueautoptr_cleanup_GtkComboBox ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkComboBox$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkComboBoxText_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkComboBoxText_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkComboBoxText_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkComboBoxText_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkComboBoxText$MH() {
        return RuntimeHelper.requireNonNull(constants$2532.glib_autoptr_clear_GtkComboBoxText$MH,"glib_autoptr_clear_GtkComboBoxText");
    }
    public static void glib_autoptr_clear_GtkComboBoxText ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkComboBoxText$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkComboBoxText$MH() {
        return RuntimeHelper.requireNonNull(constants$2532.glib_autoptr_cleanup_GtkComboBoxText$MH,"glib_autoptr_cleanup_GtkComboBoxText");
    }
    public static void glib_autoptr_cleanup_GtkComboBoxText ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkComboBoxText$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkComboBoxText$MH() {
        return RuntimeHelper.requireNonNull(constants$2532.glib_listautoptr_cleanup_GtkComboBoxText$MH,"glib_listautoptr_cleanup_GtkComboBoxText");
    }
    public static void glib_listautoptr_cleanup_GtkComboBoxText ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkComboBoxText$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkComboBoxText$MH() {
        return RuntimeHelper.requireNonNull(constants$2532.glib_slistautoptr_cleanup_GtkComboBoxText$MH,"glib_slistautoptr_cleanup_GtkComboBoxText");
    }
    public static void glib_slistautoptr_cleanup_GtkComboBoxText ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkComboBoxText$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkComboBoxText$MH() {
        return RuntimeHelper.requireNonNull(constants$2533.glib_queueautoptr_cleanup_GtkComboBoxText$MH,"glib_queueautoptr_cleanup_GtkComboBoxText");
    }
    public static void glib_queueautoptr_cleanup_GtkComboBoxText ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkComboBoxText$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCssProvider_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCssProvider_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCssProvider_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCssProvider_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCssProvider$MH() {
        return RuntimeHelper.requireNonNull(constants$2533.glib_autoptr_clear_GtkCssProvider$MH,"glib_autoptr_clear_GtkCssProvider");
    }
    public static void glib_autoptr_clear_GtkCssProvider ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkCssProvider$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCssProvider$MH() {
        return RuntimeHelper.requireNonNull(constants$2533.glib_autoptr_cleanup_GtkCssProvider$MH,"glib_autoptr_cleanup_GtkCssProvider");
    }
    public static void glib_autoptr_cleanup_GtkCssProvider ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkCssProvider$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCssProvider$MH() {
        return RuntimeHelper.requireNonNull(constants$2533.glib_listautoptr_cleanup_GtkCssProvider$MH,"glib_listautoptr_cleanup_GtkCssProvider");
    }
    public static void glib_listautoptr_cleanup_GtkCssProvider ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkCssProvider$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCssProvider$MH() {
        return RuntimeHelper.requireNonNull(constants$2533.glib_slistautoptr_cleanup_GtkCssProvider$MH,"glib_slistautoptr_cleanup_GtkCssProvider");
    }
    public static void glib_slistautoptr_cleanup_GtkCssProvider ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkCssProvider$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCssProvider$MH() {
        return RuntimeHelper.requireNonNull(constants$2533.glib_queueautoptr_cleanup_GtkCssProvider$MH,"glib_queueautoptr_cleanup_GtkCssProvider");
    }
    public static void glib_queueautoptr_cleanup_GtkCssProvider ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkCssProvider$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkDrawingArea_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkDrawingArea_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkDrawingArea_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkDrawingArea_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkDrawingArea$MH() {
        return RuntimeHelper.requireNonNull(constants$2534.glib_autoptr_clear_GtkDrawingArea$MH,"glib_autoptr_clear_GtkDrawingArea");
    }
    public static void glib_autoptr_clear_GtkDrawingArea ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkDrawingArea$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkDrawingArea$MH() {
        return RuntimeHelper.requireNonNull(constants$2534.glib_autoptr_cleanup_GtkDrawingArea$MH,"glib_autoptr_cleanup_GtkDrawingArea");
    }
    public static void glib_autoptr_cleanup_GtkDrawingArea ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkDrawingArea$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkDrawingArea$MH() {
        return RuntimeHelper.requireNonNull(constants$2534.glib_listautoptr_cleanup_GtkDrawingArea$MH,"glib_listautoptr_cleanup_GtkDrawingArea");
    }
    public static void glib_listautoptr_cleanup_GtkDrawingArea ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkDrawingArea$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkDrawingArea$MH() {
        return RuntimeHelper.requireNonNull(constants$2534.glib_slistautoptr_cleanup_GtkDrawingArea$MH,"glib_slistautoptr_cleanup_GtkDrawingArea");
    }
    public static void glib_slistautoptr_cleanup_GtkDrawingArea ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkDrawingArea$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkDrawingArea$MH() {
        return RuntimeHelper.requireNonNull(constants$2534.glib_queueautoptr_cleanup_GtkDrawingArea$MH,"glib_queueautoptr_cleanup_GtkDrawingArea");
    }
    public static void glib_queueautoptr_cleanup_GtkDrawingArea ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkDrawingArea$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkEditable_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkEditable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkEditable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkEditable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkEditable$MH() {
        return RuntimeHelper.requireNonNull(constants$2534.glib_autoptr_clear_GtkEditable$MH,"glib_autoptr_clear_GtkEditable");
    }
    public static void glib_autoptr_clear_GtkEditable ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkEditable$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkEditable$MH() {
        return RuntimeHelper.requireNonNull(constants$2535.glib_autoptr_cleanup_GtkEditable$MH,"glib_autoptr_cleanup_GtkEditable");
    }
    public static void glib_autoptr_cleanup_GtkEditable ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkEditable$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkEditable$MH() {
        return RuntimeHelper.requireNonNull(constants$2535.glib_listautoptr_cleanup_GtkEditable$MH,"glib_listautoptr_cleanup_GtkEditable");
    }
    public static void glib_listautoptr_cleanup_GtkEditable ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkEditable$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkEditable$MH() {
        return RuntimeHelper.requireNonNull(constants$2535.glib_slistautoptr_cleanup_GtkEditable$MH,"glib_slistautoptr_cleanup_GtkEditable");
    }
    public static void glib_slistautoptr_cleanup_GtkEditable ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkEditable$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkEditable$MH() {
        return RuntimeHelper.requireNonNull(constants$2535.glib_queueautoptr_cleanup_GtkEditable$MH,"glib_queueautoptr_cleanup_GtkEditable");
    }
    public static void glib_queueautoptr_cleanup_GtkEditable ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkEditable$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkEntry_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkEntry_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkEntry_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkEntry_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkEntry$MH() {
        return RuntimeHelper.requireNonNull(constants$2535.glib_autoptr_clear_GtkEntry$MH,"glib_autoptr_clear_GtkEntry");
    }
    public static void glib_autoptr_clear_GtkEntry ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkEntry$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkEntry$MH() {
        return RuntimeHelper.requireNonNull(constants$2535.glib_autoptr_cleanup_GtkEntry$MH,"glib_autoptr_cleanup_GtkEntry");
    }
    public static void glib_autoptr_cleanup_GtkEntry ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkEntry$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkEntry$MH() {
        return RuntimeHelper.requireNonNull(constants$2536.glib_listautoptr_cleanup_GtkEntry$MH,"glib_listautoptr_cleanup_GtkEntry");
    }
    public static void glib_listautoptr_cleanup_GtkEntry ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkEntry$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkEntry$MH() {
        return RuntimeHelper.requireNonNull(constants$2536.glib_slistautoptr_cleanup_GtkEntry$MH,"glib_slistautoptr_cleanup_GtkEntry");
    }
    public static void glib_slistautoptr_cleanup_GtkEntry ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkEntry$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkEntry$MH() {
        return RuntimeHelper.requireNonNull(constants$2536.glib_queueautoptr_cleanup_GtkEntry$MH,"glib_queueautoptr_cleanup_GtkEntry");
    }
    public static void glib_queueautoptr_cleanup_GtkEntry ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkEntry$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkEntryCompletion_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkEntryCompletion_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkEntryCompletion_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkEntryCompletion_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkEntryCompletion$MH() {
        return RuntimeHelper.requireNonNull(constants$2536.glib_autoptr_clear_GtkEntryCompletion$MH,"glib_autoptr_clear_GtkEntryCompletion");
    }
    public static void glib_autoptr_clear_GtkEntryCompletion ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkEntryCompletion$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkEntryCompletion$MH() {
        return RuntimeHelper.requireNonNull(constants$2536.glib_autoptr_cleanup_GtkEntryCompletion$MH,"glib_autoptr_cleanup_GtkEntryCompletion");
    }
    public static void glib_autoptr_cleanup_GtkEntryCompletion ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkEntryCompletion$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkEntryCompletion$MH() {
        return RuntimeHelper.requireNonNull(constants$2536.glib_listautoptr_cleanup_GtkEntryCompletion$MH,"glib_listautoptr_cleanup_GtkEntryCompletion");
    }
    public static void glib_listautoptr_cleanup_GtkEntryCompletion ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkEntryCompletion$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkEntryCompletion$MH() {
        return RuntimeHelper.requireNonNull(constants$2537.glib_slistautoptr_cleanup_GtkEntryCompletion$MH,"glib_slistautoptr_cleanup_GtkEntryCompletion");
    }
    public static void glib_slistautoptr_cleanup_GtkEntryCompletion ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkEntryCompletion$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkEntryCompletion$MH() {
        return RuntimeHelper.requireNonNull(constants$2537.glib_queueautoptr_cleanup_GtkEntryCompletion$MH,"glib_queueautoptr_cleanup_GtkEntryCompletion");
    }
    public static void glib_queueautoptr_cleanup_GtkEntryCompletion ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkEntryCompletion$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkEventController_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkEventController_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkEventController_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkEventController_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkEventController$MH() {
        return RuntimeHelper.requireNonNull(constants$2537.glib_autoptr_clear_GtkEventController$MH,"glib_autoptr_clear_GtkEventController");
    }
    public static void glib_autoptr_clear_GtkEventController ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkEventController$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkEventController$MH() {
        return RuntimeHelper.requireNonNull(constants$2537.glib_autoptr_cleanup_GtkEventController$MH,"glib_autoptr_cleanup_GtkEventController");
    }
    public static void glib_autoptr_cleanup_GtkEventController ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkEventController$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkEventController$MH() {
        return RuntimeHelper.requireNonNull(constants$2537.glib_listautoptr_cleanup_GtkEventController$MH,"glib_listautoptr_cleanup_GtkEventController");
    }
    public static void glib_listautoptr_cleanup_GtkEventController ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkEventController$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkEventController$MH() {
        return RuntimeHelper.requireNonNull(constants$2537.glib_slistautoptr_cleanup_GtkEventController$MH,"glib_slistautoptr_cleanup_GtkEventController");
    }
    public static void glib_slistautoptr_cleanup_GtkEventController ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkEventController$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkEventController$MH() {
        return RuntimeHelper.requireNonNull(constants$2538.glib_queueautoptr_cleanup_GtkEventController$MH,"glib_queueautoptr_cleanup_GtkEventController");
    }
    public static void glib_queueautoptr_cleanup_GtkEventController ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkEventController$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkExpander_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkExpander_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkExpander_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkExpander_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkExpander$MH() {
        return RuntimeHelper.requireNonNull(constants$2538.glib_autoptr_clear_GtkExpander$MH,"glib_autoptr_clear_GtkExpander");
    }
    public static void glib_autoptr_clear_GtkExpander ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkExpander$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkExpander$MH() {
        return RuntimeHelper.requireNonNull(constants$2538.glib_autoptr_cleanup_GtkExpander$MH,"glib_autoptr_cleanup_GtkExpander");
    }
    public static void glib_autoptr_cleanup_GtkExpander ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkExpander$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkExpander$MH() {
        return RuntimeHelper.requireNonNull(constants$2538.glib_listautoptr_cleanup_GtkExpander$MH,"glib_listautoptr_cleanup_GtkExpander");
    }
    public static void glib_listautoptr_cleanup_GtkExpander ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkExpander$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkExpander$MH() {
        return RuntimeHelper.requireNonNull(constants$2538.glib_slistautoptr_cleanup_GtkExpander$MH,"glib_slistautoptr_cleanup_GtkExpander");
    }
    public static void glib_slistautoptr_cleanup_GtkExpander ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkExpander$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkExpander$MH() {
        return RuntimeHelper.requireNonNull(constants$2538.glib_queueautoptr_cleanup_GtkExpander$MH,"glib_queueautoptr_cleanup_GtkExpander");
    }
    public static void glib_queueautoptr_cleanup_GtkExpander ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkExpander$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkFileChooserDialog_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFileChooserDialog_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFileChooserDialog_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFileChooserDialog_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkFileChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2539.glib_autoptr_clear_GtkFileChooserDialog$MH,"glib_autoptr_clear_GtkFileChooserDialog");
    }
    public static void glib_autoptr_clear_GtkFileChooserDialog ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkFileChooserDialog$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkFileChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2539.glib_autoptr_cleanup_GtkFileChooserDialog$MH,"glib_autoptr_cleanup_GtkFileChooserDialog");
    }
    public static void glib_autoptr_cleanup_GtkFileChooserDialog ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkFileChooserDialog$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkFileChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2539.glib_listautoptr_cleanup_GtkFileChooserDialog$MH,"glib_listautoptr_cleanup_GtkFileChooserDialog");
    }
    public static void glib_listautoptr_cleanup_GtkFileChooserDialog ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkFileChooserDialog$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkFileChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2539.glib_slistautoptr_cleanup_GtkFileChooserDialog$MH,"glib_slistautoptr_cleanup_GtkFileChooserDialog");
    }
    public static void glib_slistautoptr_cleanup_GtkFileChooserDialog ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkFileChooserDialog$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkFileChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2539.glib_queueautoptr_cleanup_GtkFileChooserDialog$MH,"glib_queueautoptr_cleanup_GtkFileChooserDialog");
    }
    public static void glib_queueautoptr_cleanup_GtkFileChooserDialog ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkFileChooserDialog$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkFileChooserWidget_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFileChooserWidget_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFileChooserWidget_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFileChooserWidget_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkFileChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2539.glib_autoptr_clear_GtkFileChooserWidget$MH,"glib_autoptr_clear_GtkFileChooserWidget");
    }
    public static void glib_autoptr_clear_GtkFileChooserWidget ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkFileChooserWidget$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkFileChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2540.glib_autoptr_cleanup_GtkFileChooserWidget$MH,"glib_autoptr_cleanup_GtkFileChooserWidget");
    }
    public static void glib_autoptr_cleanup_GtkFileChooserWidget ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkFileChooserWidget$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkFileChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2540.glib_listautoptr_cleanup_GtkFileChooserWidget$MH,"glib_listautoptr_cleanup_GtkFileChooserWidget");
    }
    public static void glib_listautoptr_cleanup_GtkFileChooserWidget ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkFileChooserWidget$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkFileChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2540.glib_slistautoptr_cleanup_GtkFileChooserWidget$MH,"glib_slistautoptr_cleanup_GtkFileChooserWidget");
    }
    public static void glib_slistautoptr_cleanup_GtkFileChooserWidget ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkFileChooserWidget$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkFileChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2540.glib_queueautoptr_cleanup_GtkFileChooserWidget$MH,"glib_queueautoptr_cleanup_GtkFileChooserWidget");
    }
    public static void glib_queueautoptr_cleanup_GtkFileChooserWidget ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkFileChooserWidget$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkFileFilter_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFileFilter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFileFilter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFileFilter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkFileFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2540.glib_autoptr_clear_GtkFileFilter$MH,"glib_autoptr_clear_GtkFileFilter");
    }
    public static void glib_autoptr_clear_GtkFileFilter ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkFileFilter$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkFileFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2540.glib_autoptr_cleanup_GtkFileFilter$MH,"glib_autoptr_cleanup_GtkFileFilter");
    }
    public static void glib_autoptr_cleanup_GtkFileFilter ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkFileFilter$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkFileFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2541.glib_listautoptr_cleanup_GtkFileFilter$MH,"glib_listautoptr_cleanup_GtkFileFilter");
    }
    public static void glib_listautoptr_cleanup_GtkFileFilter ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkFileFilter$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkFileFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2541.glib_slistautoptr_cleanup_GtkFileFilter$MH,"glib_slistautoptr_cleanup_GtkFileFilter");
    }
    public static void glib_slistautoptr_cleanup_GtkFileFilter ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkFileFilter$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkFileFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2541.glib_queueautoptr_cleanup_GtkFileFilter$MH,"glib_queueautoptr_cleanup_GtkFileFilter");
    }
    public static void glib_queueautoptr_cleanup_GtkFileFilter ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkFileFilter$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkFixed_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFixed_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFixed_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFixed_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkFixed$MH() {
        return RuntimeHelper.requireNonNull(constants$2541.glib_autoptr_clear_GtkFixed$MH,"glib_autoptr_clear_GtkFixed");
    }
    public static void glib_autoptr_clear_GtkFixed ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkFixed$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkFixed$MH() {
        return RuntimeHelper.requireNonNull(constants$2541.glib_autoptr_cleanup_GtkFixed$MH,"glib_autoptr_cleanup_GtkFixed");
    }
    public static void glib_autoptr_cleanup_GtkFixed ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkFixed$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkFixed$MH() {
        return RuntimeHelper.requireNonNull(constants$2541.glib_listautoptr_cleanup_GtkFixed$MH,"glib_listautoptr_cleanup_GtkFixed");
    }
    public static void glib_listautoptr_cleanup_GtkFixed ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkFixed$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkFixed$MH() {
        return RuntimeHelper.requireNonNull(constants$2542.glib_slistautoptr_cleanup_GtkFixed$MH,"glib_slistautoptr_cleanup_GtkFixed");
    }
    public static void glib_slistautoptr_cleanup_GtkFixed ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkFixed$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkFixed$MH() {
        return RuntimeHelper.requireNonNull(constants$2542.glib_queueautoptr_cleanup_GtkFixed$MH,"glib_queueautoptr_cleanup_GtkFixed");
    }
    public static void glib_queueautoptr_cleanup_GtkFixed ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkFixed$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkFlowBox_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFlowBox_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFlowBox_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFlowBox_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkFlowBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2542.glib_autoptr_clear_GtkFlowBox$MH,"glib_autoptr_clear_GtkFlowBox");
    }
    public static void glib_autoptr_clear_GtkFlowBox ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkFlowBox$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkFlowBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2542.glib_autoptr_cleanup_GtkFlowBox$MH,"glib_autoptr_cleanup_GtkFlowBox");
    }
    public static void glib_autoptr_cleanup_GtkFlowBox ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkFlowBox$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkFlowBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2542.glib_listautoptr_cleanup_GtkFlowBox$MH,"glib_listautoptr_cleanup_GtkFlowBox");
    }
    public static void glib_listautoptr_cleanup_GtkFlowBox ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkFlowBox$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkFlowBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2542.glib_slistautoptr_cleanup_GtkFlowBox$MH,"glib_slistautoptr_cleanup_GtkFlowBox");
    }
    public static void glib_slistautoptr_cleanup_GtkFlowBox ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkFlowBox$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkFlowBox$MH() {
        return RuntimeHelper.requireNonNull(constants$2543.glib_queueautoptr_cleanup_GtkFlowBox$MH,"glib_queueautoptr_cleanup_GtkFlowBox");
    }
    public static void glib_queueautoptr_cleanup_GtkFlowBox ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkFlowBox$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkFlowBoxChild_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFlowBoxChild_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFlowBoxChild_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFlowBoxChild_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkFlowBoxChild$MH() {
        return RuntimeHelper.requireNonNull(constants$2543.glib_autoptr_clear_GtkFlowBoxChild$MH,"glib_autoptr_clear_GtkFlowBoxChild");
    }
    public static void glib_autoptr_clear_GtkFlowBoxChild ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkFlowBoxChild$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkFlowBoxChild$MH() {
        return RuntimeHelper.requireNonNull(constants$2543.glib_autoptr_cleanup_GtkFlowBoxChild$MH,"glib_autoptr_cleanup_GtkFlowBoxChild");
    }
    public static void glib_autoptr_cleanup_GtkFlowBoxChild ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkFlowBoxChild$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkFlowBoxChild$MH() {
        return RuntimeHelper.requireNonNull(constants$2543.glib_listautoptr_cleanup_GtkFlowBoxChild$MH,"glib_listautoptr_cleanup_GtkFlowBoxChild");
    }
    public static void glib_listautoptr_cleanup_GtkFlowBoxChild ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkFlowBoxChild$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkFlowBoxChild$MH() {
        return RuntimeHelper.requireNonNull(constants$2543.glib_slistautoptr_cleanup_GtkFlowBoxChild$MH,"glib_slistautoptr_cleanup_GtkFlowBoxChild");
    }
    public static void glib_slistautoptr_cleanup_GtkFlowBoxChild ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkFlowBoxChild$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkFlowBoxChild$MH() {
        return RuntimeHelper.requireNonNull(constants$2543.glib_queueautoptr_cleanup_GtkFlowBoxChild$MH,"glib_queueautoptr_cleanup_GtkFlowBoxChild");
    }
    public static void glib_queueautoptr_cleanup_GtkFlowBoxChild ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkFlowBoxChild$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkFontButton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFontButton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFontButton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFontButton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkFontButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2544.glib_autoptr_clear_GtkFontButton$MH,"glib_autoptr_clear_GtkFontButton");
    }
    public static void glib_autoptr_clear_GtkFontButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkFontButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkFontButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2544.glib_autoptr_cleanup_GtkFontButton$MH,"glib_autoptr_cleanup_GtkFontButton");
    }
    public static void glib_autoptr_cleanup_GtkFontButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkFontButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkFontButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2544.glib_listautoptr_cleanup_GtkFontButton$MH,"glib_listautoptr_cleanup_GtkFontButton");
    }
    public static void glib_listautoptr_cleanup_GtkFontButton ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkFontButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkFontButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2544.glib_slistautoptr_cleanup_GtkFontButton$MH,"glib_slistautoptr_cleanup_GtkFontButton");
    }
    public static void glib_slistautoptr_cleanup_GtkFontButton ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkFontButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkFontButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2544.glib_queueautoptr_cleanup_GtkFontButton$MH,"glib_queueautoptr_cleanup_GtkFontButton");
    }
    public static void glib_queueautoptr_cleanup_GtkFontButton ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkFontButton$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkFontChooser_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFontChooser_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFontChooser_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFontChooser_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkFontChooser$MH() {
        return RuntimeHelper.requireNonNull(constants$2544.glib_autoptr_clear_GtkFontChooser$MH,"glib_autoptr_clear_GtkFontChooser");
    }
    public static void glib_autoptr_clear_GtkFontChooser ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkFontChooser$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkFontChooser$MH() {
        return RuntimeHelper.requireNonNull(constants$2545.glib_autoptr_cleanup_GtkFontChooser$MH,"glib_autoptr_cleanup_GtkFontChooser");
    }
    public static void glib_autoptr_cleanup_GtkFontChooser ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkFontChooser$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkFontChooser$MH() {
        return RuntimeHelper.requireNonNull(constants$2545.glib_listautoptr_cleanup_GtkFontChooser$MH,"glib_listautoptr_cleanup_GtkFontChooser");
    }
    public static void glib_listautoptr_cleanup_GtkFontChooser ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkFontChooser$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkFontChooser$MH() {
        return RuntimeHelper.requireNonNull(constants$2545.glib_slistautoptr_cleanup_GtkFontChooser$MH,"glib_slistautoptr_cleanup_GtkFontChooser");
    }
    public static void glib_slistautoptr_cleanup_GtkFontChooser ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkFontChooser$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkFontChooser$MH() {
        return RuntimeHelper.requireNonNull(constants$2545.glib_queueautoptr_cleanup_GtkFontChooser$MH,"glib_queueautoptr_cleanup_GtkFontChooser");
    }
    public static void glib_queueautoptr_cleanup_GtkFontChooser ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkFontChooser$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkFontChooserDialog_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFontChooserDialog_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFontChooserDialog_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFontChooserDialog_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkFontChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2545.glib_autoptr_clear_GtkFontChooserDialog$MH,"glib_autoptr_clear_GtkFontChooserDialog");
    }
    public static void glib_autoptr_clear_GtkFontChooserDialog ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkFontChooserDialog$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkFontChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2545.glib_autoptr_cleanup_GtkFontChooserDialog$MH,"glib_autoptr_cleanup_GtkFontChooserDialog");
    }
    public static void glib_autoptr_cleanup_GtkFontChooserDialog ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkFontChooserDialog$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkFontChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2546.glib_listautoptr_cleanup_GtkFontChooserDialog$MH,"glib_listautoptr_cleanup_GtkFontChooserDialog");
    }
    public static void glib_listautoptr_cleanup_GtkFontChooserDialog ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkFontChooserDialog$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkFontChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2546.glib_slistautoptr_cleanup_GtkFontChooserDialog$MH,"glib_slistautoptr_cleanup_GtkFontChooserDialog");
    }
    public static void glib_slistautoptr_cleanup_GtkFontChooserDialog ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkFontChooserDialog$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkFontChooserDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2546.glib_queueautoptr_cleanup_GtkFontChooserDialog$MH,"glib_queueautoptr_cleanup_GtkFontChooserDialog");
    }
    public static void glib_queueautoptr_cleanup_GtkFontChooserDialog ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkFontChooserDialog$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkFontChooserWidget_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFontChooserWidget_listautoptr = Constants$root.C_POINTER$LAYOUT;
}


