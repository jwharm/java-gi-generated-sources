// Generated by jextract

package io.github.jwharm.javagi.interop.jextract;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
 class gtk_h_11 extends gtk_h_10 {

    public static MethodHandle glib_listautoptr_cleanup_GIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$930.glib_listautoptr_cleanup_GIOStream$MH,"glib_listautoptr_cleanup_GIOStream");
    }
    public static void glib_listautoptr_cleanup_GIOStream ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GIOStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$930.glib_slistautoptr_cleanup_GIOStream$MH,"glib_slistautoptr_cleanup_GIOStream");
    }
    public static void glib_slistautoptr_cleanup_GIOStream ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GIOStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$930.glib_queueautoptr_cleanup_GIOStream$MH,"glib_queueautoptr_cleanup_GIOStream");
    }
    public static void glib_queueautoptr_cleanup_GIOStream ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GIOStream$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GLoadableIcon_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GLoadableIcon_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GLoadableIcon_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GLoadableIcon_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GLoadableIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$930.glib_autoptr_clear_GLoadableIcon$MH,"glib_autoptr_clear_GLoadableIcon");
    }
    public static void glib_autoptr_clear_GLoadableIcon ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GLoadableIcon$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GLoadableIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$930.glib_autoptr_cleanup_GLoadableIcon$MH,"glib_autoptr_cleanup_GLoadableIcon");
    }
    public static void glib_autoptr_cleanup_GLoadableIcon ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GLoadableIcon$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GLoadableIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$930.glib_listautoptr_cleanup_GLoadableIcon$MH,"glib_listautoptr_cleanup_GLoadableIcon");
    }
    public static void glib_listautoptr_cleanup_GLoadableIcon ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GLoadableIcon$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GLoadableIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$931.glib_slistautoptr_cleanup_GLoadableIcon$MH,"glib_slistautoptr_cleanup_GLoadableIcon");
    }
    public static void glib_slistautoptr_cleanup_GLoadableIcon ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GLoadableIcon$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GLoadableIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$931.glib_queueautoptr_cleanup_GLoadableIcon$MH,"glib_queueautoptr_cleanup_GLoadableIcon");
    }
    public static void glib_queueautoptr_cleanup_GLoadableIcon ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GLoadableIcon$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMemoryInputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMemoryInputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMemoryInputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMemoryInputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMemoryInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$931.glib_autoptr_clear_GMemoryInputStream$MH,"glib_autoptr_clear_GMemoryInputStream");
    }
    public static void glib_autoptr_clear_GMemoryInputStream ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GMemoryInputStream$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMemoryInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$931.glib_autoptr_cleanup_GMemoryInputStream$MH,"glib_autoptr_cleanup_GMemoryInputStream");
    }
    public static void glib_autoptr_cleanup_GMemoryInputStream ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GMemoryInputStream$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMemoryInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$931.glib_listautoptr_cleanup_GMemoryInputStream$MH,"glib_listautoptr_cleanup_GMemoryInputStream");
    }
    public static void glib_listautoptr_cleanup_GMemoryInputStream ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GMemoryInputStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMemoryInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$931.glib_slistautoptr_cleanup_GMemoryInputStream$MH,"glib_slistautoptr_cleanup_GMemoryInputStream");
    }
    public static void glib_slistautoptr_cleanup_GMemoryInputStream ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GMemoryInputStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMemoryInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$932.glib_queueautoptr_cleanup_GMemoryInputStream$MH,"glib_queueautoptr_cleanup_GMemoryInputStream");
    }
    public static void glib_queueautoptr_cleanup_GMemoryInputStream ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GMemoryInputStream$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMemoryOutputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMemoryOutputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMemoryOutputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMemoryOutputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMemoryOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$932.glib_autoptr_clear_GMemoryOutputStream$MH,"glib_autoptr_clear_GMemoryOutputStream");
    }
    public static void glib_autoptr_clear_GMemoryOutputStream ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GMemoryOutputStream$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMemoryOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$932.glib_autoptr_cleanup_GMemoryOutputStream$MH,"glib_autoptr_cleanup_GMemoryOutputStream");
    }
    public static void glib_autoptr_cleanup_GMemoryOutputStream ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GMemoryOutputStream$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMemoryOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$932.glib_listautoptr_cleanup_GMemoryOutputStream$MH,"glib_listautoptr_cleanup_GMemoryOutputStream");
    }
    public static void glib_listautoptr_cleanup_GMemoryOutputStream ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GMemoryOutputStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMemoryOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$932.glib_slistautoptr_cleanup_GMemoryOutputStream$MH,"glib_slistautoptr_cleanup_GMemoryOutputStream");
    }
    public static void glib_slistautoptr_cleanup_GMemoryOutputStream ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GMemoryOutputStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMemoryOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$932.glib_queueautoptr_cleanup_GMemoryOutputStream$MH,"glib_queueautoptr_cleanup_GMemoryOutputStream");
    }
    public static void glib_queueautoptr_cleanup_GMemoryOutputStream ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GMemoryOutputStream$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMenu_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenu_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenu_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenu_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$933.glib_autoptr_clear_GMenu$MH,"glib_autoptr_clear_GMenu");
    }
    public static void glib_autoptr_clear_GMenu ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GMenu$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$933.glib_autoptr_cleanup_GMenu$MH,"glib_autoptr_cleanup_GMenu");
    }
    public static void glib_autoptr_cleanup_GMenu ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GMenu$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$933.glib_listautoptr_cleanup_GMenu$MH,"glib_listautoptr_cleanup_GMenu");
    }
    public static void glib_listautoptr_cleanup_GMenu ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GMenu$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$933.glib_slistautoptr_cleanup_GMenu$MH,"glib_slistautoptr_cleanup_GMenu");
    }
    public static void glib_slistautoptr_cleanup_GMenu ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GMenu$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$933.glib_queueautoptr_cleanup_GMenu$MH,"glib_queueautoptr_cleanup_GMenu");
    }
    public static void glib_queueautoptr_cleanup_GMenu ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GMenu$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMenuItem_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuItem_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuItem_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuItem_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$933.glib_autoptr_clear_GMenuItem$MH,"glib_autoptr_clear_GMenuItem");
    }
    public static void glib_autoptr_clear_GMenuItem ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GMenuItem$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$934.glib_autoptr_cleanup_GMenuItem$MH,"glib_autoptr_cleanup_GMenuItem");
    }
    public static void glib_autoptr_cleanup_GMenuItem ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GMenuItem$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$934.glib_listautoptr_cleanup_GMenuItem$MH,"glib_listautoptr_cleanup_GMenuItem");
    }
    public static void glib_listautoptr_cleanup_GMenuItem ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GMenuItem$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$934.glib_slistautoptr_cleanup_GMenuItem$MH,"glib_slistautoptr_cleanup_GMenuItem");
    }
    public static void glib_slistautoptr_cleanup_GMenuItem ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GMenuItem$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$934.glib_queueautoptr_cleanup_GMenuItem$MH,"glib_queueautoptr_cleanup_GMenuItem");
    }
    public static void glib_queueautoptr_cleanup_GMenuItem ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GMenuItem$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMenuModel_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuModel_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuModel_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuModel_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMenuModel$MH() {
        return RuntimeHelper.requireNonNull(constants$934.glib_autoptr_clear_GMenuModel$MH,"glib_autoptr_clear_GMenuModel");
    }
    public static void glib_autoptr_clear_GMenuModel ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GMenuModel$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMenuModel$MH() {
        return RuntimeHelper.requireNonNull(constants$934.glib_autoptr_cleanup_GMenuModel$MH,"glib_autoptr_cleanup_GMenuModel");
    }
    public static void glib_autoptr_cleanup_GMenuModel ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GMenuModel$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMenuModel$MH() {
        return RuntimeHelper.requireNonNull(constants$935.glib_listautoptr_cleanup_GMenuModel$MH,"glib_listautoptr_cleanup_GMenuModel");
    }
    public static void glib_listautoptr_cleanup_GMenuModel ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GMenuModel$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMenuModel$MH() {
        return RuntimeHelper.requireNonNull(constants$935.glib_slistautoptr_cleanup_GMenuModel$MH,"glib_slistautoptr_cleanup_GMenuModel");
    }
    public static void glib_slistautoptr_cleanup_GMenuModel ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GMenuModel$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMenuModel$MH() {
        return RuntimeHelper.requireNonNull(constants$935.glib_queueautoptr_cleanup_GMenuModel$MH,"glib_queueautoptr_cleanup_GMenuModel");
    }
    public static void glib_queueautoptr_cleanup_GMenuModel ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GMenuModel$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMenuAttributeIter_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuAttributeIter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuAttributeIter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuAttributeIter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMenuAttributeIter$MH() {
        return RuntimeHelper.requireNonNull(constants$935.glib_autoptr_clear_GMenuAttributeIter$MH,"glib_autoptr_clear_GMenuAttributeIter");
    }
    public static void glib_autoptr_clear_GMenuAttributeIter ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GMenuAttributeIter$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMenuAttributeIter$MH() {
        return RuntimeHelper.requireNonNull(constants$935.glib_autoptr_cleanup_GMenuAttributeIter$MH,"glib_autoptr_cleanup_GMenuAttributeIter");
    }
    public static void glib_autoptr_cleanup_GMenuAttributeIter ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GMenuAttributeIter$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMenuAttributeIter$MH() {
        return RuntimeHelper.requireNonNull(constants$935.glib_listautoptr_cleanup_GMenuAttributeIter$MH,"glib_listautoptr_cleanup_GMenuAttributeIter");
    }
    public static void glib_listautoptr_cleanup_GMenuAttributeIter ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GMenuAttributeIter$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMenuAttributeIter$MH() {
        return RuntimeHelper.requireNonNull(constants$936.glib_slistautoptr_cleanup_GMenuAttributeIter$MH,"glib_slistautoptr_cleanup_GMenuAttributeIter");
    }
    public static void glib_slistautoptr_cleanup_GMenuAttributeIter ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GMenuAttributeIter$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMenuAttributeIter$MH() {
        return RuntimeHelper.requireNonNull(constants$936.glib_queueautoptr_cleanup_GMenuAttributeIter$MH,"glib_queueautoptr_cleanup_GMenuAttributeIter");
    }
    public static void glib_queueautoptr_cleanup_GMenuAttributeIter ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GMenuAttributeIter$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMenuLinkIter_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuLinkIter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuLinkIter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuLinkIter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMenuLinkIter$MH() {
        return RuntimeHelper.requireNonNull(constants$936.glib_autoptr_clear_GMenuLinkIter$MH,"glib_autoptr_clear_GMenuLinkIter");
    }
    public static void glib_autoptr_clear_GMenuLinkIter ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GMenuLinkIter$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMenuLinkIter$MH() {
        return RuntimeHelper.requireNonNull(constants$936.glib_autoptr_cleanup_GMenuLinkIter$MH,"glib_autoptr_cleanup_GMenuLinkIter");
    }
    public static void glib_autoptr_cleanup_GMenuLinkIter ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GMenuLinkIter$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMenuLinkIter$MH() {
        return RuntimeHelper.requireNonNull(constants$936.glib_listautoptr_cleanup_GMenuLinkIter$MH,"glib_listautoptr_cleanup_GMenuLinkIter");
    }
    public static void glib_listautoptr_cleanup_GMenuLinkIter ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GMenuLinkIter$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMenuLinkIter$MH() {
        return RuntimeHelper.requireNonNull(constants$936.glib_slistautoptr_cleanup_GMenuLinkIter$MH,"glib_slistautoptr_cleanup_GMenuLinkIter");
    }
    public static void glib_slistautoptr_cleanup_GMenuLinkIter ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GMenuLinkIter$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMenuLinkIter$MH() {
        return RuntimeHelper.requireNonNull(constants$937.glib_queueautoptr_cleanup_GMenuLinkIter$MH,"glib_queueautoptr_cleanup_GMenuLinkIter");
    }
    public static void glib_queueautoptr_cleanup_GMenuLinkIter ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GMenuLinkIter$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMount_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMount_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMount_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMount_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMount$MH() {
        return RuntimeHelper.requireNonNull(constants$937.glib_autoptr_clear_GMount$MH,"glib_autoptr_clear_GMount");
    }
    public static void glib_autoptr_clear_GMount ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GMount$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMount$MH() {
        return RuntimeHelper.requireNonNull(constants$937.glib_autoptr_cleanup_GMount$MH,"glib_autoptr_cleanup_GMount");
    }
    public static void glib_autoptr_cleanup_GMount ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GMount$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMount$MH() {
        return RuntimeHelper.requireNonNull(constants$937.glib_listautoptr_cleanup_GMount$MH,"glib_listautoptr_cleanup_GMount");
    }
    public static void glib_listautoptr_cleanup_GMount ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GMount$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMount$MH() {
        return RuntimeHelper.requireNonNull(constants$937.glib_slistautoptr_cleanup_GMount$MH,"glib_slistautoptr_cleanup_GMount");
    }
    public static void glib_slistautoptr_cleanup_GMount ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GMount$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMount$MH() {
        return RuntimeHelper.requireNonNull(constants$937.glib_queueautoptr_cleanup_GMount$MH,"glib_queueautoptr_cleanup_GMount");
    }
    public static void glib_queueautoptr_cleanup_GMount ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GMount$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMountOperation_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMountOperation_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMountOperation_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMountOperation_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMountOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$938.glib_autoptr_clear_GMountOperation$MH,"glib_autoptr_clear_GMountOperation");
    }
    public static void glib_autoptr_clear_GMountOperation ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GMountOperation$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMountOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$938.glib_autoptr_cleanup_GMountOperation$MH,"glib_autoptr_cleanup_GMountOperation");
    }
    public static void glib_autoptr_cleanup_GMountOperation ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GMountOperation$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMountOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$938.glib_listautoptr_cleanup_GMountOperation$MH,"glib_listautoptr_cleanup_GMountOperation");
    }
    public static void glib_listautoptr_cleanup_GMountOperation ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GMountOperation$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMountOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$938.glib_slistautoptr_cleanup_GMountOperation$MH,"glib_slistautoptr_cleanup_GMountOperation");
    }
    public static void glib_slistautoptr_cleanup_GMountOperation ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GMountOperation$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMountOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$938.glib_queueautoptr_cleanup_GMountOperation$MH,"glib_queueautoptr_cleanup_GMountOperation");
    }
    public static void glib_queueautoptr_cleanup_GMountOperation ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GMountOperation$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GNativeVolumeMonitor_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNativeVolumeMonitor_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNativeVolumeMonitor_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNativeVolumeMonitor_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GNativeVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$938.glib_autoptr_clear_GNativeVolumeMonitor$MH,"glib_autoptr_clear_GNativeVolumeMonitor");
    }
    public static void glib_autoptr_clear_GNativeVolumeMonitor ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GNativeVolumeMonitor$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GNativeVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$939.glib_autoptr_cleanup_GNativeVolumeMonitor$MH,"glib_autoptr_cleanup_GNativeVolumeMonitor");
    }
    public static void glib_autoptr_cleanup_GNativeVolumeMonitor ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GNativeVolumeMonitor$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GNativeVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$939.glib_listautoptr_cleanup_GNativeVolumeMonitor$MH,"glib_listautoptr_cleanup_GNativeVolumeMonitor");
    }
    public static void glib_listautoptr_cleanup_GNativeVolumeMonitor ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GNativeVolumeMonitor$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GNativeVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$939.glib_slistautoptr_cleanup_GNativeVolumeMonitor$MH,"glib_slistautoptr_cleanup_GNativeVolumeMonitor");
    }
    public static void glib_slistautoptr_cleanup_GNativeVolumeMonitor ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GNativeVolumeMonitor$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GNativeVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$939.glib_queueautoptr_cleanup_GNativeVolumeMonitor$MH,"glib_queueautoptr_cleanup_GNativeVolumeMonitor");
    }
    public static void glib_queueautoptr_cleanup_GNativeVolumeMonitor ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GNativeVolumeMonitor$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GNetworkAddress_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkAddress_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkAddress_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkAddress_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GNetworkAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$939.glib_autoptr_clear_GNetworkAddress$MH,"glib_autoptr_clear_GNetworkAddress");
    }
    public static void glib_autoptr_clear_GNetworkAddress ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GNetworkAddress$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GNetworkAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$939.glib_autoptr_cleanup_GNetworkAddress$MH,"glib_autoptr_cleanup_GNetworkAddress");
    }
    public static void glib_autoptr_cleanup_GNetworkAddress ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GNetworkAddress$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GNetworkAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$940.glib_listautoptr_cleanup_GNetworkAddress$MH,"glib_listautoptr_cleanup_GNetworkAddress");
    }
    public static void glib_listautoptr_cleanup_GNetworkAddress ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GNetworkAddress$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GNetworkAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$940.glib_slistautoptr_cleanup_GNetworkAddress$MH,"glib_slistautoptr_cleanup_GNetworkAddress");
    }
    public static void glib_slistautoptr_cleanup_GNetworkAddress ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GNetworkAddress$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GNetworkAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$940.glib_queueautoptr_cleanup_GNetworkAddress$MH,"glib_queueautoptr_cleanup_GNetworkAddress");
    }
    public static void glib_queueautoptr_cleanup_GNetworkAddress ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GNetworkAddress$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GNetworkMonitor_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkMonitor_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkMonitor_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkMonitor_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GNetworkMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$940.glib_autoptr_clear_GNetworkMonitor$MH,"glib_autoptr_clear_GNetworkMonitor");
    }
    public static void glib_autoptr_clear_GNetworkMonitor ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GNetworkMonitor$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GNetworkMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$940.glib_autoptr_cleanup_GNetworkMonitor$MH,"glib_autoptr_cleanup_GNetworkMonitor");
    }
    public static void glib_autoptr_cleanup_GNetworkMonitor ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GNetworkMonitor$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GNetworkMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$940.glib_listautoptr_cleanup_GNetworkMonitor$MH,"glib_listautoptr_cleanup_GNetworkMonitor");
    }
    public static void glib_listautoptr_cleanup_GNetworkMonitor ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GNetworkMonitor$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GNetworkMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$941.glib_slistautoptr_cleanup_GNetworkMonitor$MH,"glib_slistautoptr_cleanup_GNetworkMonitor");
    }
    public static void glib_slistautoptr_cleanup_GNetworkMonitor ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GNetworkMonitor$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GNetworkMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$941.glib_queueautoptr_cleanup_GNetworkMonitor$MH,"glib_queueautoptr_cleanup_GNetworkMonitor");
    }
    public static void glib_queueautoptr_cleanup_GNetworkMonitor ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GNetworkMonitor$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GNetworkService_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkService_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkService_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkService_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GNetworkService$MH() {
        return RuntimeHelper.requireNonNull(constants$941.glib_autoptr_clear_GNetworkService$MH,"glib_autoptr_clear_GNetworkService");
    }
    public static void glib_autoptr_clear_GNetworkService ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GNetworkService$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GNetworkService$MH() {
        return RuntimeHelper.requireNonNull(constants$941.glib_autoptr_cleanup_GNetworkService$MH,"glib_autoptr_cleanup_GNetworkService");
    }
    public static void glib_autoptr_cleanup_GNetworkService ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GNetworkService$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GNetworkService$MH() {
        return RuntimeHelper.requireNonNull(constants$941.glib_listautoptr_cleanup_GNetworkService$MH,"glib_listautoptr_cleanup_GNetworkService");
    }
    public static void glib_listautoptr_cleanup_GNetworkService ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GNetworkService$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GNetworkService$MH() {
        return RuntimeHelper.requireNonNull(constants$941.glib_slistautoptr_cleanup_GNetworkService$MH,"glib_slistautoptr_cleanup_GNetworkService");
    }
    public static void glib_slistautoptr_cleanup_GNetworkService ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GNetworkService$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GNetworkService$MH() {
        return RuntimeHelper.requireNonNull(constants$942.glib_queueautoptr_cleanup_GNetworkService$MH,"glib_queueautoptr_cleanup_GNetworkService");
    }
    public static void glib_queueautoptr_cleanup_GNetworkService ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GNetworkService$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GNotification_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNotification_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNotification_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNotification_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$942.glib_autoptr_clear_GNotification$MH,"glib_autoptr_clear_GNotification");
    }
    public static void glib_autoptr_clear_GNotification ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GNotification$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$942.glib_autoptr_cleanup_GNotification$MH,"glib_autoptr_cleanup_GNotification");
    }
    public static void glib_autoptr_cleanup_GNotification ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GNotification$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$942.glib_listautoptr_cleanup_GNotification$MH,"glib_listautoptr_cleanup_GNotification");
    }
    public static void glib_listautoptr_cleanup_GNotification ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GNotification$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$942.glib_slistautoptr_cleanup_GNotification$MH,"glib_slistautoptr_cleanup_GNotification");
    }
    public static void glib_slistautoptr_cleanup_GNotification ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GNotification$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$942.glib_queueautoptr_cleanup_GNotification$MH,"glib_queueautoptr_cleanup_GNotification");
    }
    public static void glib_queueautoptr_cleanup_GNotification ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GNotification$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GOutputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GOutputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GOutputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GOutputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$943.glib_autoptr_clear_GOutputStream$MH,"glib_autoptr_clear_GOutputStream");
    }
    public static void glib_autoptr_clear_GOutputStream ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GOutputStream$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$943.glib_autoptr_cleanup_GOutputStream$MH,"glib_autoptr_cleanup_GOutputStream");
    }
    public static void glib_autoptr_cleanup_GOutputStream ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GOutputStream$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$943.glib_listautoptr_cleanup_GOutputStream$MH,"glib_listautoptr_cleanup_GOutputStream");
    }
    public static void glib_listautoptr_cleanup_GOutputStream ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GOutputStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$943.glib_slistautoptr_cleanup_GOutputStream$MH,"glib_slistautoptr_cleanup_GOutputStream");
    }
    public static void glib_slistautoptr_cleanup_GOutputStream ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GOutputStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$943.glib_queueautoptr_cleanup_GOutputStream$MH,"glib_queueautoptr_cleanup_GOutputStream");
    }
    public static void glib_queueautoptr_cleanup_GOutputStream ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GOutputStream$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GPermission_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPermission_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPermission_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPermission_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GPermission$MH() {
        return RuntimeHelper.requireNonNull(constants$943.glib_autoptr_clear_GPermission$MH,"glib_autoptr_clear_GPermission");
    }
    public static void glib_autoptr_clear_GPermission ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GPermission$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GPermission$MH() {
        return RuntimeHelper.requireNonNull(constants$944.glib_autoptr_cleanup_GPermission$MH,"glib_autoptr_cleanup_GPermission");
    }
    public static void glib_autoptr_cleanup_GPermission ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GPermission$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GPermission$MH() {
        return RuntimeHelper.requireNonNull(constants$944.glib_listautoptr_cleanup_GPermission$MH,"glib_listautoptr_cleanup_GPermission");
    }
    public static void glib_listautoptr_cleanup_GPermission ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GPermission$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GPermission$MH() {
        return RuntimeHelper.requireNonNull(constants$944.glib_slistautoptr_cleanup_GPermission$MH,"glib_slistautoptr_cleanup_GPermission");
    }
    public static void glib_slistautoptr_cleanup_GPermission ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GPermission$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GPermission$MH() {
        return RuntimeHelper.requireNonNull(constants$944.glib_queueautoptr_cleanup_GPermission$MH,"glib_queueautoptr_cleanup_GPermission");
    }
    public static void glib_queueautoptr_cleanup_GPermission ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GPermission$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GPollableInputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPollableInputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPollableInputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPollableInputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GPollableInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$944.glib_autoptr_clear_GPollableInputStream$MH,"glib_autoptr_clear_GPollableInputStream");
    }
    public static void glib_autoptr_clear_GPollableInputStream ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GPollableInputStream$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GPollableInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$944.glib_autoptr_cleanup_GPollableInputStream$MH,"glib_autoptr_cleanup_GPollableInputStream");
    }
    public static void glib_autoptr_cleanup_GPollableInputStream ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GPollableInputStream$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GPollableInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$945.glib_listautoptr_cleanup_GPollableInputStream$MH,"glib_listautoptr_cleanup_GPollableInputStream");
    }
    public static void glib_listautoptr_cleanup_GPollableInputStream ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GPollableInputStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GPollableInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$945.glib_slistautoptr_cleanup_GPollableInputStream$MH,"glib_slistautoptr_cleanup_GPollableInputStream");
    }
    public static void glib_slistautoptr_cleanup_GPollableInputStream ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GPollableInputStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GPollableInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$945.glib_queueautoptr_cleanup_GPollableInputStream$MH,"glib_queueautoptr_cleanup_GPollableInputStream");
    }
    public static void glib_queueautoptr_cleanup_GPollableInputStream ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GPollableInputStream$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GPollableOutputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPollableOutputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPollableOutputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPollableOutputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GPollableOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$945.glib_autoptr_clear_GPollableOutputStream$MH,"glib_autoptr_clear_GPollableOutputStream");
    }
    public static void glib_autoptr_clear_GPollableOutputStream ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GPollableOutputStream$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GPollableOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$945.glib_autoptr_cleanup_GPollableOutputStream$MH,"glib_autoptr_cleanup_GPollableOutputStream");
    }
    public static void glib_autoptr_cleanup_GPollableOutputStream ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GPollableOutputStream$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GPollableOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$945.glib_listautoptr_cleanup_GPollableOutputStream$MH,"glib_listautoptr_cleanup_GPollableOutputStream");
    }
    public static void glib_listautoptr_cleanup_GPollableOutputStream ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GPollableOutputStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GPollableOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$946.glib_slistautoptr_cleanup_GPollableOutputStream$MH,"glib_slistautoptr_cleanup_GPollableOutputStream");
    }
    public static void glib_slistautoptr_cleanup_GPollableOutputStream ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GPollableOutputStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GPollableOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$946.glib_queueautoptr_cleanup_GPollableOutputStream$MH,"glib_queueautoptr_cleanup_GPollableOutputStream");
    }
    public static void glib_queueautoptr_cleanup_GPollableOutputStream ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GPollableOutputStream$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GPropertyAction_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPropertyAction_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPropertyAction_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPropertyAction_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GPropertyAction$MH() {
        return RuntimeHelper.requireNonNull(constants$946.glib_autoptr_clear_GPropertyAction$MH,"glib_autoptr_clear_GPropertyAction");
    }
    public static void glib_autoptr_clear_GPropertyAction ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GPropertyAction$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GPropertyAction$MH() {
        return RuntimeHelper.requireNonNull(constants$946.glib_autoptr_cleanup_GPropertyAction$MH,"glib_autoptr_cleanup_GPropertyAction");
    }
    public static void glib_autoptr_cleanup_GPropertyAction ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GPropertyAction$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GPropertyAction$MH() {
        return RuntimeHelper.requireNonNull(constants$946.glib_listautoptr_cleanup_GPropertyAction$MH,"glib_listautoptr_cleanup_GPropertyAction");
    }
    public static void glib_listautoptr_cleanup_GPropertyAction ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GPropertyAction$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GPropertyAction$MH() {
        return RuntimeHelper.requireNonNull(constants$946.glib_slistautoptr_cleanup_GPropertyAction$MH,"glib_slistautoptr_cleanup_GPropertyAction");
    }
    public static void glib_slistautoptr_cleanup_GPropertyAction ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GPropertyAction$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GPropertyAction$MH() {
        return RuntimeHelper.requireNonNull(constants$947.glib_queueautoptr_cleanup_GPropertyAction$MH,"glib_queueautoptr_cleanup_GPropertyAction");
    }
    public static void glib_queueautoptr_cleanup_GPropertyAction ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GPropertyAction$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GProxyAddressEnumerator_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyAddressEnumerator_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyAddressEnumerator_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyAddressEnumerator_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GProxyAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$947.glib_autoptr_clear_GProxyAddressEnumerator$MH,"glib_autoptr_clear_GProxyAddressEnumerator");
    }
    public static void glib_autoptr_clear_GProxyAddressEnumerator ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GProxyAddressEnumerator$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GProxyAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$947.glib_autoptr_cleanup_GProxyAddressEnumerator$MH,"glib_autoptr_cleanup_GProxyAddressEnumerator");
    }
    public static void glib_autoptr_cleanup_GProxyAddressEnumerator ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GProxyAddressEnumerator$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GProxyAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$947.glib_listautoptr_cleanup_GProxyAddressEnumerator$MH,"glib_listautoptr_cleanup_GProxyAddressEnumerator");
    }
    public static void glib_listautoptr_cleanup_GProxyAddressEnumerator ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GProxyAddressEnumerator$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GProxyAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$947.glib_slistautoptr_cleanup_GProxyAddressEnumerator$MH,"glib_slistautoptr_cleanup_GProxyAddressEnumerator");
    }
    public static void glib_slistautoptr_cleanup_GProxyAddressEnumerator ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GProxyAddressEnumerator$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GProxyAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$947.glib_queueautoptr_cleanup_GProxyAddressEnumerator$MH,"glib_queueautoptr_cleanup_GProxyAddressEnumerator");
    }
    public static void glib_queueautoptr_cleanup_GProxyAddressEnumerator ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GProxyAddressEnumerator$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GProxyAddress_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyAddress_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyAddress_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyAddress_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GProxyAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$948.glib_autoptr_clear_GProxyAddress$MH,"glib_autoptr_clear_GProxyAddress");
    }
    public static void glib_autoptr_clear_GProxyAddress ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GProxyAddress$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GProxyAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$948.glib_autoptr_cleanup_GProxyAddress$MH,"glib_autoptr_cleanup_GProxyAddress");
    }
    public static void glib_autoptr_cleanup_GProxyAddress ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GProxyAddress$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GProxyAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$948.glib_listautoptr_cleanup_GProxyAddress$MH,"glib_listautoptr_cleanup_GProxyAddress");
    }
    public static void glib_listautoptr_cleanup_GProxyAddress ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GProxyAddress$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GProxyAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$948.glib_slistautoptr_cleanup_GProxyAddress$MH,"glib_slistautoptr_cleanup_GProxyAddress");
    }
    public static void glib_slistautoptr_cleanup_GProxyAddress ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GProxyAddress$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GProxyAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$948.glib_queueautoptr_cleanup_GProxyAddress$MH,"glib_queueautoptr_cleanup_GProxyAddress");
    }
    public static void glib_queueautoptr_cleanup_GProxyAddress ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GProxyAddress$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GProxy_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxy_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxy_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxy_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$948.glib_autoptr_clear_GProxy$MH,"glib_autoptr_clear_GProxy");
    }
    public static void glib_autoptr_clear_GProxy ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GProxy$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$949.glib_autoptr_cleanup_GProxy$MH,"glib_autoptr_cleanup_GProxy");
    }
    public static void glib_autoptr_cleanup_GProxy ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GProxy$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$949.glib_listautoptr_cleanup_GProxy$MH,"glib_listautoptr_cleanup_GProxy");
    }
    public static void glib_listautoptr_cleanup_GProxy ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GProxy$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$949.glib_slistautoptr_cleanup_GProxy$MH,"glib_slistautoptr_cleanup_GProxy");
    }
    public static void glib_slistautoptr_cleanup_GProxy ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GProxy$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$949.glib_queueautoptr_cleanup_GProxy$MH,"glib_queueautoptr_cleanup_GProxy");
    }
    public static void glib_queueautoptr_cleanup_GProxy ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GProxy$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GProxyResolver_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyResolver_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyResolver_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyResolver_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$949.glib_autoptr_clear_GProxyResolver$MH,"glib_autoptr_clear_GProxyResolver");
    }
    public static void glib_autoptr_clear_GProxyResolver ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GProxyResolver$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$949.glib_autoptr_cleanup_GProxyResolver$MH,"glib_autoptr_cleanup_GProxyResolver");
    }
    public static void glib_autoptr_cleanup_GProxyResolver ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GProxyResolver$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$950.glib_listautoptr_cleanup_GProxyResolver$MH,"glib_listautoptr_cleanup_GProxyResolver");
    }
    public static void glib_listautoptr_cleanup_GProxyResolver ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GProxyResolver$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$950.glib_slistautoptr_cleanup_GProxyResolver$MH,"glib_slistautoptr_cleanup_GProxyResolver");
    }
    public static void glib_slistautoptr_cleanup_GProxyResolver ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GProxyResolver$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$950.glib_queueautoptr_cleanup_GProxyResolver$MH,"glib_queueautoptr_cleanup_GProxyResolver");
    }
    public static void glib_queueautoptr_cleanup_GProxyResolver ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GProxyResolver$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GRemoteActionGroup_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GRemoteActionGroup_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GRemoteActionGroup_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GRemoteActionGroup_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GRemoteActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$950.glib_autoptr_clear_GRemoteActionGroup$MH,"glib_autoptr_clear_GRemoteActionGroup");
    }
    public static void glib_autoptr_clear_GRemoteActionGroup ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GRemoteActionGroup$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GRemoteActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$950.glib_autoptr_cleanup_GRemoteActionGroup$MH,"glib_autoptr_cleanup_GRemoteActionGroup");
    }
    public static void glib_autoptr_cleanup_GRemoteActionGroup ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GRemoteActionGroup$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GRemoteActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$950.glib_listautoptr_cleanup_GRemoteActionGroup$MH,"glib_listautoptr_cleanup_GRemoteActionGroup");
    }
    public static void glib_listautoptr_cleanup_GRemoteActionGroup ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GRemoteActionGroup$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GRemoteActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$951.glib_slistautoptr_cleanup_GRemoteActionGroup$MH,"glib_slistautoptr_cleanup_GRemoteActionGroup");
    }
    public static void glib_slistautoptr_cleanup_GRemoteActionGroup ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GRemoteActionGroup$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GRemoteActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$951.glib_queueautoptr_cleanup_GRemoteActionGroup$MH,"glib_queueautoptr_cleanup_GRemoteActionGroup");
    }
    public static void glib_queueautoptr_cleanup_GRemoteActionGroup ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GRemoteActionGroup$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GResolver_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GResolver_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GResolver_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GResolver_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$951.glib_autoptr_clear_GResolver$MH,"glib_autoptr_clear_GResolver");
    }
    public static void glib_autoptr_clear_GResolver ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GResolver$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$951.glib_autoptr_cleanup_GResolver$MH,"glib_autoptr_cleanup_GResolver");
    }
    public static void glib_autoptr_cleanup_GResolver ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GResolver$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$951.glib_listautoptr_cleanup_GResolver$MH,"glib_listautoptr_cleanup_GResolver");
    }
    public static void glib_listautoptr_cleanup_GResolver ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GResolver$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$951.glib_slistautoptr_cleanup_GResolver$MH,"glib_slistautoptr_cleanup_GResolver");
    }
    public static void glib_slistautoptr_cleanup_GResolver ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GResolver$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$952.glib_queueautoptr_cleanup_GResolver$MH,"glib_queueautoptr_cleanup_GResolver");
    }
    public static void glib_queueautoptr_cleanup_GResolver ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GResolver$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GResource_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GResource_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GResource_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GResource_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GResource$MH() {
        return RuntimeHelper.requireNonNull(constants$952.glib_autoptr_clear_GResource$MH,"glib_autoptr_clear_GResource");
    }
    public static void glib_autoptr_clear_GResource ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GResource$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GResource$MH() {
        return RuntimeHelper.requireNonNull(constants$952.glib_autoptr_cleanup_GResource$MH,"glib_autoptr_cleanup_GResource");
    }
    public static void glib_autoptr_cleanup_GResource ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GResource$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GResource$MH() {
        return RuntimeHelper.requireNonNull(constants$952.glib_listautoptr_cleanup_GResource$MH,"glib_listautoptr_cleanup_GResource");
    }
    public static void glib_listautoptr_cleanup_GResource ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GResource$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GResource$MH() {
        return RuntimeHelper.requireNonNull(constants$952.glib_slistautoptr_cleanup_GResource$MH,"glib_slistautoptr_cleanup_GResource");
    }
    public static void glib_slistautoptr_cleanup_GResource ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GResource$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GResource$MH() {
        return RuntimeHelper.requireNonNull(constants$952.glib_queueautoptr_cleanup_GResource$MH,"glib_queueautoptr_cleanup_GResource");
    }
    public static void glib_queueautoptr_cleanup_GResource ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GResource$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSeekable_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSeekable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSeekable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSeekable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSeekable$MH() {
        return RuntimeHelper.requireNonNull(constants$953.glib_autoptr_clear_GSeekable$MH,"glib_autoptr_clear_GSeekable");
    }
    public static void glib_autoptr_clear_GSeekable ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSeekable$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSeekable$MH() {
        return RuntimeHelper.requireNonNull(constants$953.glib_autoptr_cleanup_GSeekable$MH,"glib_autoptr_cleanup_GSeekable");
    }
    public static void glib_autoptr_cleanup_GSeekable ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSeekable$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSeekable$MH() {
        return RuntimeHelper.requireNonNull(constants$953.glib_listautoptr_cleanup_GSeekable$MH,"glib_listautoptr_cleanup_GSeekable");
    }
    public static void glib_listautoptr_cleanup_GSeekable ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSeekable$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSeekable$MH() {
        return RuntimeHelper.requireNonNull(constants$953.glib_slistautoptr_cleanup_GSeekable$MH,"glib_slistautoptr_cleanup_GSeekable");
    }
    public static void glib_slistautoptr_cleanup_GSeekable ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSeekable$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSeekable$MH() {
        return RuntimeHelper.requireNonNull(constants$953.glib_queueautoptr_cleanup_GSeekable$MH,"glib_queueautoptr_cleanup_GSeekable");
    }
    public static void glib_queueautoptr_cleanup_GSeekable ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSeekable$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSettingsBackend_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsBackend_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsBackend_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsBackend_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSettingsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$953.glib_autoptr_clear_GSettingsBackend$MH,"glib_autoptr_clear_GSettingsBackend");
    }
    public static void glib_autoptr_clear_GSettingsBackend ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSettingsBackend$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSettingsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$954.glib_autoptr_cleanup_GSettingsBackend$MH,"glib_autoptr_cleanup_GSettingsBackend");
    }
    public static void glib_autoptr_cleanup_GSettingsBackend ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSettingsBackend$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSettingsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$954.glib_listautoptr_cleanup_GSettingsBackend$MH,"glib_listautoptr_cleanup_GSettingsBackend");
    }
    public static void glib_listautoptr_cleanup_GSettingsBackend ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSettingsBackend$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSettingsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$954.glib_slistautoptr_cleanup_GSettingsBackend$MH,"glib_slistautoptr_cleanup_GSettingsBackend");
    }
    public static void glib_slistautoptr_cleanup_GSettingsBackend ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSettingsBackend$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSettingsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$954.glib_queueautoptr_cleanup_GSettingsBackend$MH,"glib_queueautoptr_cleanup_GSettingsBackend");
    }
    public static void glib_queueautoptr_cleanup_GSettingsBackend ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSettingsBackend$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSettingsSchema_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchema_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchema_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchema_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSettingsSchema$MH() {
        return RuntimeHelper.requireNonNull(constants$954.glib_autoptr_clear_GSettingsSchema$MH,"glib_autoptr_clear_GSettingsSchema");
    }
    public static void glib_autoptr_clear_GSettingsSchema ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSettingsSchema$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSettingsSchema$MH() {
        return RuntimeHelper.requireNonNull(constants$954.glib_autoptr_cleanup_GSettingsSchema$MH,"glib_autoptr_cleanup_GSettingsSchema");
    }
    public static void glib_autoptr_cleanup_GSettingsSchema ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSettingsSchema$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSettingsSchema$MH() {
        return RuntimeHelper.requireNonNull(constants$955.glib_listautoptr_cleanup_GSettingsSchema$MH,"glib_listautoptr_cleanup_GSettingsSchema");
    }
    public static void glib_listautoptr_cleanup_GSettingsSchema ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSettingsSchema$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSettingsSchema$MH() {
        return RuntimeHelper.requireNonNull(constants$955.glib_slistautoptr_cleanup_GSettingsSchema$MH,"glib_slistautoptr_cleanup_GSettingsSchema");
    }
    public static void glib_slistautoptr_cleanup_GSettingsSchema ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSettingsSchema$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSettingsSchema$MH() {
        return RuntimeHelper.requireNonNull(constants$955.glib_queueautoptr_cleanup_GSettingsSchema$MH,"glib_queueautoptr_cleanup_GSettingsSchema");
    }
    public static void glib_queueautoptr_cleanup_GSettingsSchema ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSettingsSchema$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSettingsSchemaKey_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchemaKey_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchemaKey_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchemaKey_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSettingsSchemaKey$MH() {
        return RuntimeHelper.requireNonNull(constants$955.glib_autoptr_clear_GSettingsSchemaKey$MH,"glib_autoptr_clear_GSettingsSchemaKey");
    }
    public static void glib_autoptr_clear_GSettingsSchemaKey ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSettingsSchemaKey$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSettingsSchemaKey$MH() {
        return RuntimeHelper.requireNonNull(constants$955.glib_autoptr_cleanup_GSettingsSchemaKey$MH,"glib_autoptr_cleanup_GSettingsSchemaKey");
    }
    public static void glib_autoptr_cleanup_GSettingsSchemaKey ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSettingsSchemaKey$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSettingsSchemaKey$MH() {
        return RuntimeHelper.requireNonNull(constants$955.glib_listautoptr_cleanup_GSettingsSchemaKey$MH,"glib_listautoptr_cleanup_GSettingsSchemaKey");
    }
    public static void glib_listautoptr_cleanup_GSettingsSchemaKey ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSettingsSchemaKey$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSettingsSchemaKey$MH() {
        return RuntimeHelper.requireNonNull(constants$956.glib_slistautoptr_cleanup_GSettingsSchemaKey$MH,"glib_slistautoptr_cleanup_GSettingsSchemaKey");
    }
    public static void glib_slistautoptr_cleanup_GSettingsSchemaKey ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSettingsSchemaKey$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSettingsSchemaKey$MH() {
        return RuntimeHelper.requireNonNull(constants$956.glib_queueautoptr_cleanup_GSettingsSchemaKey$MH,"glib_queueautoptr_cleanup_GSettingsSchemaKey");
    }
    public static void glib_queueautoptr_cleanup_GSettingsSchemaKey ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSettingsSchemaKey$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSettingsSchemaSource_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchemaSource_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchemaSource_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchemaSource_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSettingsSchemaSource$MH() {
        return RuntimeHelper.requireNonNull(constants$956.glib_autoptr_clear_GSettingsSchemaSource$MH,"glib_autoptr_clear_GSettingsSchemaSource");
    }
    public static void glib_autoptr_clear_GSettingsSchemaSource ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSettingsSchemaSource$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSettingsSchemaSource$MH() {
        return RuntimeHelper.requireNonNull(constants$956.glib_autoptr_cleanup_GSettingsSchemaSource$MH,"glib_autoptr_cleanup_GSettingsSchemaSource");
    }
    public static void glib_autoptr_cleanup_GSettingsSchemaSource ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSettingsSchemaSource$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSettingsSchemaSource$MH() {
        return RuntimeHelper.requireNonNull(constants$956.glib_listautoptr_cleanup_GSettingsSchemaSource$MH,"glib_listautoptr_cleanup_GSettingsSchemaSource");
    }
    public static void glib_listautoptr_cleanup_GSettingsSchemaSource ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSettingsSchemaSource$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSettingsSchemaSource$MH() {
        return RuntimeHelper.requireNonNull(constants$956.glib_slistautoptr_cleanup_GSettingsSchemaSource$MH,"glib_slistautoptr_cleanup_GSettingsSchemaSource");
    }
    public static void glib_slistautoptr_cleanup_GSettingsSchemaSource ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSettingsSchemaSource$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSettingsSchemaSource$MH() {
        return RuntimeHelper.requireNonNull(constants$957.glib_queueautoptr_cleanup_GSettingsSchemaSource$MH,"glib_queueautoptr_cleanup_GSettingsSchemaSource");
    }
    public static void glib_queueautoptr_cleanup_GSettingsSchemaSource ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSettingsSchemaSource$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSettings_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettings_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettings_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettings_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$957.glib_autoptr_clear_GSettings$MH,"glib_autoptr_clear_GSettings");
    }
    public static void glib_autoptr_clear_GSettings ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSettings$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$957.glib_autoptr_cleanup_GSettings$MH,"glib_autoptr_cleanup_GSettings");
    }
    public static void glib_autoptr_cleanup_GSettings ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSettings$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$957.glib_listautoptr_cleanup_GSettings$MH,"glib_listautoptr_cleanup_GSettings");
    }
    public static void glib_listautoptr_cleanup_GSettings ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSettings$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$957.glib_slistautoptr_cleanup_GSettings$MH,"glib_slistautoptr_cleanup_GSettings");
    }
    public static void glib_slistautoptr_cleanup_GSettings ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSettings$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$957.glib_queueautoptr_cleanup_GSettings$MH,"glib_queueautoptr_cleanup_GSettings");
    }
    public static void glib_queueautoptr_cleanup_GSettings ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSettings$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSimpleActionGroup_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleActionGroup_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleActionGroup_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleActionGroup_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSimpleActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$958.glib_autoptr_clear_GSimpleActionGroup$MH,"glib_autoptr_clear_GSimpleActionGroup");
    }
    public static void glib_autoptr_clear_GSimpleActionGroup ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSimpleActionGroup$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSimpleActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$958.glib_autoptr_cleanup_GSimpleActionGroup$MH,"glib_autoptr_cleanup_GSimpleActionGroup");
    }
    public static void glib_autoptr_cleanup_GSimpleActionGroup ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSimpleActionGroup$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSimpleActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$958.glib_listautoptr_cleanup_GSimpleActionGroup$MH,"glib_listautoptr_cleanup_GSimpleActionGroup");
    }
    public static void glib_listautoptr_cleanup_GSimpleActionGroup ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSimpleActionGroup$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSimpleActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$958.glib_slistautoptr_cleanup_GSimpleActionGroup$MH,"glib_slistautoptr_cleanup_GSimpleActionGroup");
    }
    public static void glib_slistautoptr_cleanup_GSimpleActionGroup ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSimpleActionGroup$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSimpleActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$958.glib_queueautoptr_cleanup_GSimpleActionGroup$MH,"glib_queueautoptr_cleanup_GSimpleActionGroup");
    }
    public static void glib_queueautoptr_cleanup_GSimpleActionGroup ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSimpleActionGroup$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSimpleAction_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleAction_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleAction_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleAction_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSimpleAction$MH() {
        return RuntimeHelper.requireNonNull(constants$958.glib_autoptr_clear_GSimpleAction$MH,"glib_autoptr_clear_GSimpleAction");
    }
    public static void glib_autoptr_clear_GSimpleAction ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSimpleAction$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSimpleAction$MH() {
        return RuntimeHelper.requireNonNull(constants$959.glib_autoptr_cleanup_GSimpleAction$MH,"glib_autoptr_cleanup_GSimpleAction");
    }
    public static void glib_autoptr_cleanup_GSimpleAction ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSimpleAction$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSimpleAction$MH() {
        return RuntimeHelper.requireNonNull(constants$959.glib_listautoptr_cleanup_GSimpleAction$MH,"glib_listautoptr_cleanup_GSimpleAction");
    }
    public static void glib_listautoptr_cleanup_GSimpleAction ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSimpleAction$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSimpleAction$MH() {
        return RuntimeHelper.requireNonNull(constants$959.glib_slistautoptr_cleanup_GSimpleAction$MH,"glib_slistautoptr_cleanup_GSimpleAction");
    }
    public static void glib_slistautoptr_cleanup_GSimpleAction ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSimpleAction$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSimpleAction$MH() {
        return RuntimeHelper.requireNonNull(constants$959.glib_queueautoptr_cleanup_GSimpleAction$MH,"glib_queueautoptr_cleanup_GSimpleAction");
    }
    public static void glib_queueautoptr_cleanup_GSimpleAction ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSimpleAction$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSimpleAsyncResult_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleAsyncResult_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleAsyncResult_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleAsyncResult_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSimpleAsyncResult$MH() {
        return RuntimeHelper.requireNonNull(constants$959.glib_autoptr_clear_GSimpleAsyncResult$MH,"glib_autoptr_clear_GSimpleAsyncResult");
    }
    public static void glib_autoptr_clear_GSimpleAsyncResult ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSimpleAsyncResult$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSimpleAsyncResult$MH() {
        return RuntimeHelper.requireNonNull(constants$959.glib_autoptr_cleanup_GSimpleAsyncResult$MH,"glib_autoptr_cleanup_GSimpleAsyncResult");
    }
    public static void glib_autoptr_cleanup_GSimpleAsyncResult ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSimpleAsyncResult$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSimpleAsyncResult$MH() {
        return RuntimeHelper.requireNonNull(constants$960.glib_listautoptr_cleanup_GSimpleAsyncResult$MH,"glib_listautoptr_cleanup_GSimpleAsyncResult");
    }
    public static void glib_listautoptr_cleanup_GSimpleAsyncResult ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSimpleAsyncResult$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSimpleAsyncResult$MH() {
        return RuntimeHelper.requireNonNull(constants$960.glib_slistautoptr_cleanup_GSimpleAsyncResult$MH,"glib_slistautoptr_cleanup_GSimpleAsyncResult");
    }
    public static void glib_slistautoptr_cleanup_GSimpleAsyncResult ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSimpleAsyncResult$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSimpleAsyncResult$MH() {
        return RuntimeHelper.requireNonNull(constants$960.glib_queueautoptr_cleanup_GSimpleAsyncResult$MH,"glib_queueautoptr_cleanup_GSimpleAsyncResult");
    }
    public static void glib_queueautoptr_cleanup_GSimpleAsyncResult ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSimpleAsyncResult$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSimplePermission_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimplePermission_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimplePermission_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimplePermission_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSimplePermission$MH() {
        return RuntimeHelper.requireNonNull(constants$960.glib_autoptr_clear_GSimplePermission$MH,"glib_autoptr_clear_GSimplePermission");
    }
    public static void glib_autoptr_clear_GSimplePermission ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSimplePermission$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSimplePermission$MH() {
        return RuntimeHelper.requireNonNull(constants$960.glib_autoptr_cleanup_GSimplePermission$MH,"glib_autoptr_cleanup_GSimplePermission");
    }
    public static void glib_autoptr_cleanup_GSimplePermission ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSimplePermission$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSimplePermission$MH() {
        return RuntimeHelper.requireNonNull(constants$960.glib_listautoptr_cleanup_GSimplePermission$MH,"glib_listautoptr_cleanup_GSimplePermission");
    }
    public static void glib_listautoptr_cleanup_GSimplePermission ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSimplePermission$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSimplePermission$MH() {
        return RuntimeHelper.requireNonNull(constants$961.glib_slistautoptr_cleanup_GSimplePermission$MH,"glib_slistautoptr_cleanup_GSimplePermission");
    }
    public static void glib_slistautoptr_cleanup_GSimplePermission ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSimplePermission$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSimplePermission$MH() {
        return RuntimeHelper.requireNonNull(constants$961.glib_queueautoptr_cleanup_GSimplePermission$MH,"glib_queueautoptr_cleanup_GSimplePermission");
    }
    public static void glib_queueautoptr_cleanup_GSimplePermission ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSimplePermission$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSimpleProxyResolver_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleProxyResolver_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleProxyResolver_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleProxyResolver_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSimpleProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$961.glib_autoptr_clear_GSimpleProxyResolver$MH,"glib_autoptr_clear_GSimpleProxyResolver");
    }
    public static void glib_autoptr_clear_GSimpleProxyResolver ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSimpleProxyResolver$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSimpleProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$961.glib_autoptr_cleanup_GSimpleProxyResolver$MH,"glib_autoptr_cleanup_GSimpleProxyResolver");
    }
    public static void glib_autoptr_cleanup_GSimpleProxyResolver ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSimpleProxyResolver$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSimpleProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$961.glib_listautoptr_cleanup_GSimpleProxyResolver$MH,"glib_listautoptr_cleanup_GSimpleProxyResolver");
    }
    public static void glib_listautoptr_cleanup_GSimpleProxyResolver ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSimpleProxyResolver$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSimpleProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$961.glib_slistautoptr_cleanup_GSimpleProxyResolver$MH,"glib_slistautoptr_cleanup_GSimpleProxyResolver");
    }
    public static void glib_slistautoptr_cleanup_GSimpleProxyResolver ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSimpleProxyResolver$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSimpleProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$962.glib_queueautoptr_cleanup_GSimpleProxyResolver$MH,"glib_queueautoptr_cleanup_GSimpleProxyResolver");
    }
    public static void glib_queueautoptr_cleanup_GSimpleProxyResolver ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSimpleProxyResolver$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocketAddressEnumerator_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketAddressEnumerator_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketAddressEnumerator_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketAddressEnumerator_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocketAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$962.glib_autoptr_clear_GSocketAddressEnumerator$MH,"glib_autoptr_clear_GSocketAddressEnumerator");
    }
    public static void glib_autoptr_clear_GSocketAddressEnumerator ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSocketAddressEnumerator$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocketAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$962.glib_autoptr_cleanup_GSocketAddressEnumerator$MH,"glib_autoptr_cleanup_GSocketAddressEnumerator");
    }
    public static void glib_autoptr_cleanup_GSocketAddressEnumerator ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSocketAddressEnumerator$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocketAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$962.glib_listautoptr_cleanup_GSocketAddressEnumerator$MH,"glib_listautoptr_cleanup_GSocketAddressEnumerator");
    }
    public static void glib_listautoptr_cleanup_GSocketAddressEnumerator ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSocketAddressEnumerator$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocketAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$962.glib_slistautoptr_cleanup_GSocketAddressEnumerator$MH,"glib_slistautoptr_cleanup_GSocketAddressEnumerator");
    }
    public static void glib_slistautoptr_cleanup_GSocketAddressEnumerator ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSocketAddressEnumerator$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocketAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$962.glib_queueautoptr_cleanup_GSocketAddressEnumerator$MH,"glib_queueautoptr_cleanup_GSocketAddressEnumerator");
    }
    public static void glib_queueautoptr_cleanup_GSocketAddressEnumerator ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSocketAddressEnumerator$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocketAddress_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketAddress_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketAddress_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketAddress_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$963.glib_autoptr_clear_GSocketAddress$MH,"glib_autoptr_clear_GSocketAddress");
    }
    public static void glib_autoptr_clear_GSocketAddress ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSocketAddress$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$963.glib_autoptr_cleanup_GSocketAddress$MH,"glib_autoptr_cleanup_GSocketAddress");
    }
    public static void glib_autoptr_cleanup_GSocketAddress ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSocketAddress$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$963.glib_listautoptr_cleanup_GSocketAddress$MH,"glib_listautoptr_cleanup_GSocketAddress");
    }
    public static void glib_listautoptr_cleanup_GSocketAddress ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSocketAddress$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$963.glib_slistautoptr_cleanup_GSocketAddress$MH,"glib_slistautoptr_cleanup_GSocketAddress");
    }
    public static void glib_slistautoptr_cleanup_GSocketAddress ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSocketAddress$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$963.glib_queueautoptr_cleanup_GSocketAddress$MH,"glib_queueautoptr_cleanup_GSocketAddress");
    }
    public static void glib_queueautoptr_cleanup_GSocketAddress ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSocketAddress$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocketClient_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketClient_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketClient_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketClient_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocketClient$MH() {
        return RuntimeHelper.requireNonNull(constants$963.glib_autoptr_clear_GSocketClient$MH,"glib_autoptr_clear_GSocketClient");
    }
    public static void glib_autoptr_clear_GSocketClient ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSocketClient$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocketClient$MH() {
        return RuntimeHelper.requireNonNull(constants$964.glib_autoptr_cleanup_GSocketClient$MH,"glib_autoptr_cleanup_GSocketClient");
    }
    public static void glib_autoptr_cleanup_GSocketClient ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSocketClient$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocketClient$MH() {
        return RuntimeHelper.requireNonNull(constants$964.glib_listautoptr_cleanup_GSocketClient$MH,"glib_listautoptr_cleanup_GSocketClient");
    }
    public static void glib_listautoptr_cleanup_GSocketClient ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSocketClient$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocketClient$MH() {
        return RuntimeHelper.requireNonNull(constants$964.glib_slistautoptr_cleanup_GSocketClient$MH,"glib_slistautoptr_cleanup_GSocketClient");
    }
    public static void glib_slistautoptr_cleanup_GSocketClient ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSocketClient$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocketClient$MH() {
        return RuntimeHelper.requireNonNull(constants$964.glib_queueautoptr_cleanup_GSocketClient$MH,"glib_queueautoptr_cleanup_GSocketClient");
    }
    public static void glib_queueautoptr_cleanup_GSocketClient ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSocketClient$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocketConnectable_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketConnectable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketConnectable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketConnectable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocketConnectable$MH() {
        return RuntimeHelper.requireNonNull(constants$964.glib_autoptr_clear_GSocketConnectable$MH,"glib_autoptr_clear_GSocketConnectable");
    }
    public static void glib_autoptr_clear_GSocketConnectable ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSocketConnectable$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocketConnectable$MH() {
        return RuntimeHelper.requireNonNull(constants$964.glib_autoptr_cleanup_GSocketConnectable$MH,"glib_autoptr_cleanup_GSocketConnectable");
    }
    public static void glib_autoptr_cleanup_GSocketConnectable ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSocketConnectable$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocketConnectable$MH() {
        return RuntimeHelper.requireNonNull(constants$965.glib_listautoptr_cleanup_GSocketConnectable$MH,"glib_listautoptr_cleanup_GSocketConnectable");
    }
    public static void glib_listautoptr_cleanup_GSocketConnectable ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSocketConnectable$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocketConnectable$MH() {
        return RuntimeHelper.requireNonNull(constants$965.glib_slistautoptr_cleanup_GSocketConnectable$MH,"glib_slistautoptr_cleanup_GSocketConnectable");
    }
    public static void glib_slistautoptr_cleanup_GSocketConnectable ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSocketConnectable$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocketConnectable$MH() {
        return RuntimeHelper.requireNonNull(constants$965.glib_queueautoptr_cleanup_GSocketConnectable$MH,"glib_queueautoptr_cleanup_GSocketConnectable");
    }
    public static void glib_queueautoptr_cleanup_GSocketConnectable ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSocketConnectable$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocketConnection_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketConnection_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketConnection_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketConnection_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocketConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$965.glib_autoptr_clear_GSocketConnection$MH,"glib_autoptr_clear_GSocketConnection");
    }
    public static void glib_autoptr_clear_GSocketConnection ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSocketConnection$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocketConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$965.glib_autoptr_cleanup_GSocketConnection$MH,"glib_autoptr_cleanup_GSocketConnection");
    }
    public static void glib_autoptr_cleanup_GSocketConnection ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSocketConnection$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocketConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$965.glib_listautoptr_cleanup_GSocketConnection$MH,"glib_listautoptr_cleanup_GSocketConnection");
    }
    public static void glib_listautoptr_cleanup_GSocketConnection ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSocketConnection$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocketConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$966.glib_slistautoptr_cleanup_GSocketConnection$MH,"glib_slistautoptr_cleanup_GSocketConnection");
    }
    public static void glib_slistautoptr_cleanup_GSocketConnection ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSocketConnection$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocketConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$966.glib_queueautoptr_cleanup_GSocketConnection$MH,"glib_queueautoptr_cleanup_GSocketConnection");
    }
    public static void glib_queueautoptr_cleanup_GSocketConnection ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSocketConnection$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocketControlMessage_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketControlMessage_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketControlMessage_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketControlMessage_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocketControlMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$966.glib_autoptr_clear_GSocketControlMessage$MH,"glib_autoptr_clear_GSocketControlMessage");
    }
    public static void glib_autoptr_clear_GSocketControlMessage ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSocketControlMessage$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocketControlMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$966.glib_autoptr_cleanup_GSocketControlMessage$MH,"glib_autoptr_cleanup_GSocketControlMessage");
    }
    public static void glib_autoptr_cleanup_GSocketControlMessage ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSocketControlMessage$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocketControlMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$966.glib_listautoptr_cleanup_GSocketControlMessage$MH,"glib_listautoptr_cleanup_GSocketControlMessage");
    }
    public static void glib_listautoptr_cleanup_GSocketControlMessage ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSocketControlMessage$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocketControlMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$966.glib_slistautoptr_cleanup_GSocketControlMessage$MH,"glib_slistautoptr_cleanup_GSocketControlMessage");
    }
    public static void glib_slistautoptr_cleanup_GSocketControlMessage ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSocketControlMessage$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocketControlMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$967.glib_queueautoptr_cleanup_GSocketControlMessage$MH,"glib_queueautoptr_cleanup_GSocketControlMessage");
    }
    public static void glib_queueautoptr_cleanup_GSocketControlMessage ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSocketControlMessage$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocket_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocket_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocket_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocket_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocket$MH() {
        return RuntimeHelper.requireNonNull(constants$967.glib_autoptr_clear_GSocket$MH,"glib_autoptr_clear_GSocket");
    }
    public static void glib_autoptr_clear_GSocket ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSocket$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocket$MH() {
        return RuntimeHelper.requireNonNull(constants$967.glib_autoptr_cleanup_GSocket$MH,"glib_autoptr_cleanup_GSocket");
    }
    public static void glib_autoptr_cleanup_GSocket ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSocket$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocket$MH() {
        return RuntimeHelper.requireNonNull(constants$967.glib_listautoptr_cleanup_GSocket$MH,"glib_listautoptr_cleanup_GSocket");
    }
    public static void glib_listautoptr_cleanup_GSocket ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSocket$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocket$MH() {
        return RuntimeHelper.requireNonNull(constants$967.glib_slistautoptr_cleanup_GSocket$MH,"glib_slistautoptr_cleanup_GSocket");
    }
    public static void glib_slistautoptr_cleanup_GSocket ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSocket$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocket$MH() {
        return RuntimeHelper.requireNonNull(constants$967.glib_queueautoptr_cleanup_GSocket$MH,"glib_queueautoptr_cleanup_GSocket");
    }
    public static void glib_queueautoptr_cleanup_GSocket ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSocket$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocketListener_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketListener_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketListener_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketListener_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocketListener$MH() {
        return RuntimeHelper.requireNonNull(constants$968.glib_autoptr_clear_GSocketListener$MH,"glib_autoptr_clear_GSocketListener");
    }
    public static void glib_autoptr_clear_GSocketListener ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSocketListener$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocketListener$MH() {
        return RuntimeHelper.requireNonNull(constants$968.glib_autoptr_cleanup_GSocketListener$MH,"glib_autoptr_cleanup_GSocketListener");
    }
    public static void glib_autoptr_cleanup_GSocketListener ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSocketListener$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocketListener$MH() {
        return RuntimeHelper.requireNonNull(constants$968.glib_listautoptr_cleanup_GSocketListener$MH,"glib_listautoptr_cleanup_GSocketListener");
    }
    public static void glib_listautoptr_cleanup_GSocketListener ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSocketListener$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocketListener$MH() {
        return RuntimeHelper.requireNonNull(constants$968.glib_slistautoptr_cleanup_GSocketListener$MH,"glib_slistautoptr_cleanup_GSocketListener");
    }
    public static void glib_slistautoptr_cleanup_GSocketListener ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSocketListener$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocketListener$MH() {
        return RuntimeHelper.requireNonNull(constants$968.glib_queueautoptr_cleanup_GSocketListener$MH,"glib_queueautoptr_cleanup_GSocketListener");
    }
    public static void glib_queueautoptr_cleanup_GSocketListener ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSocketListener$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocketService_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketService_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketService_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketService_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocketService$MH() {
        return RuntimeHelper.requireNonNull(constants$968.glib_autoptr_clear_GSocketService$MH,"glib_autoptr_clear_GSocketService");
    }
    public static void glib_autoptr_clear_GSocketService ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSocketService$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocketService$MH() {
        return RuntimeHelper.requireNonNull(constants$969.glib_autoptr_cleanup_GSocketService$MH,"glib_autoptr_cleanup_GSocketService");
    }
    public static void glib_autoptr_cleanup_GSocketService ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSocketService$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocketService$MH() {
        return RuntimeHelper.requireNonNull(constants$969.glib_listautoptr_cleanup_GSocketService$MH,"glib_listautoptr_cleanup_GSocketService");
    }
    public static void glib_listautoptr_cleanup_GSocketService ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSocketService$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocketService$MH() {
        return RuntimeHelper.requireNonNull(constants$969.glib_slistautoptr_cleanup_GSocketService$MH,"glib_slistautoptr_cleanup_GSocketService");
    }
    public static void glib_slistautoptr_cleanup_GSocketService ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSocketService$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocketService$MH() {
        return RuntimeHelper.requireNonNull(constants$969.glib_queueautoptr_cleanup_GSocketService$MH,"glib_queueautoptr_cleanup_GSocketService");
    }
    public static void glib_queueautoptr_cleanup_GSocketService ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSocketService$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSubprocess_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSubprocess_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSubprocess_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSubprocess_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSubprocess$MH() {
        return RuntimeHelper.requireNonNull(constants$969.glib_autoptr_clear_GSubprocess$MH,"glib_autoptr_clear_GSubprocess");
    }
    public static void glib_autoptr_clear_GSubprocess ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSubprocess$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSubprocess$MH() {
        return RuntimeHelper.requireNonNull(constants$969.glib_autoptr_cleanup_GSubprocess$MH,"glib_autoptr_cleanup_GSubprocess");
    }
    public static void glib_autoptr_cleanup_GSubprocess ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSubprocess$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSubprocess$MH() {
        return RuntimeHelper.requireNonNull(constants$970.glib_listautoptr_cleanup_GSubprocess$MH,"glib_listautoptr_cleanup_GSubprocess");
    }
    public static void glib_listautoptr_cleanup_GSubprocess ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSubprocess$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSubprocess$MH() {
        return RuntimeHelper.requireNonNull(constants$970.glib_slistautoptr_cleanup_GSubprocess$MH,"glib_slistautoptr_cleanup_GSubprocess");
    }
    public static void glib_slistautoptr_cleanup_GSubprocess ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSubprocess$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSubprocess$MH() {
        return RuntimeHelper.requireNonNull(constants$970.glib_queueautoptr_cleanup_GSubprocess$MH,"glib_queueautoptr_cleanup_GSubprocess");
    }
    public static void glib_queueautoptr_cleanup_GSubprocess ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSubprocess$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSubprocessLauncher_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSubprocessLauncher_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSubprocessLauncher_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSubprocessLauncher_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSubprocessLauncher$MH() {
        return RuntimeHelper.requireNonNull(constants$970.glib_autoptr_clear_GSubprocessLauncher$MH,"glib_autoptr_clear_GSubprocessLauncher");
    }
    public static void glib_autoptr_clear_GSubprocessLauncher ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GSubprocessLauncher$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSubprocessLauncher$MH() {
        return RuntimeHelper.requireNonNull(constants$970.glib_autoptr_cleanup_GSubprocessLauncher$MH,"glib_autoptr_cleanup_GSubprocessLauncher");
    }
    public static void glib_autoptr_cleanup_GSubprocessLauncher ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GSubprocessLauncher$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSubprocessLauncher$MH() {
        return RuntimeHelper.requireNonNull(constants$970.glib_listautoptr_cleanup_GSubprocessLauncher$MH,"glib_listautoptr_cleanup_GSubprocessLauncher");
    }
    public static void glib_listautoptr_cleanup_GSubprocessLauncher ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GSubprocessLauncher$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSubprocessLauncher$MH() {
        return RuntimeHelper.requireNonNull(constants$971.glib_slistautoptr_cleanup_GSubprocessLauncher$MH,"glib_slistautoptr_cleanup_GSubprocessLauncher");
    }
    public static void glib_slistautoptr_cleanup_GSubprocessLauncher ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GSubprocessLauncher$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSubprocessLauncher$MH() {
        return RuntimeHelper.requireNonNull(constants$971.glib_queueautoptr_cleanup_GSubprocessLauncher$MH,"glib_queueautoptr_cleanup_GSubprocessLauncher");
    }
    public static void glib_queueautoptr_cleanup_GSubprocessLauncher ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GSubprocessLauncher$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTask_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTask_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTask_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTask_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTask$MH() {
        return RuntimeHelper.requireNonNull(constants$971.glib_autoptr_clear_GTask$MH,"glib_autoptr_clear_GTask");
    }
    public static void glib_autoptr_clear_GTask ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GTask$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTask$MH() {
        return RuntimeHelper.requireNonNull(constants$971.glib_autoptr_cleanup_GTask$MH,"glib_autoptr_cleanup_GTask");
    }
    public static void glib_autoptr_cleanup_GTask ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GTask$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTask$MH() {
        return RuntimeHelper.requireNonNull(constants$971.glib_listautoptr_cleanup_GTask$MH,"glib_listautoptr_cleanup_GTask");
    }
    public static void glib_listautoptr_cleanup_GTask ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GTask$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTask$MH() {
        return RuntimeHelper.requireNonNull(constants$971.glib_slistautoptr_cleanup_GTask$MH,"glib_slistautoptr_cleanup_GTask");
    }
    public static void glib_slistautoptr_cleanup_GTask ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GTask$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTask$MH() {
        return RuntimeHelper.requireNonNull(constants$972.glib_queueautoptr_cleanup_GTask$MH,"glib_queueautoptr_cleanup_GTask");
    }
    public static void glib_queueautoptr_cleanup_GTask ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GTask$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTcpConnection_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTcpConnection_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTcpConnection_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTcpConnection_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTcpConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$972.glib_autoptr_clear_GTcpConnection$MH,"glib_autoptr_clear_GTcpConnection");
    }
    public static void glib_autoptr_clear_GTcpConnection ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GTcpConnection$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTcpConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$972.glib_autoptr_cleanup_GTcpConnection$MH,"glib_autoptr_cleanup_GTcpConnection");
    }
    public static void glib_autoptr_cleanup_GTcpConnection ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GTcpConnection$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTcpConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$972.glib_listautoptr_cleanup_GTcpConnection$MH,"glib_listautoptr_cleanup_GTcpConnection");
    }
    public static void glib_listautoptr_cleanup_GTcpConnection ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GTcpConnection$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTcpConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$972.glib_slistautoptr_cleanup_GTcpConnection$MH,"glib_slistautoptr_cleanup_GTcpConnection");
    }
    public static void glib_slistautoptr_cleanup_GTcpConnection ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GTcpConnection$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTcpConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$972.glib_queueautoptr_cleanup_GTcpConnection$MH,"glib_queueautoptr_cleanup_GTcpConnection");
    }
    public static void glib_queueautoptr_cleanup_GTcpConnection ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GTcpConnection$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTcpWrapperConnection_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTcpWrapperConnection_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTcpWrapperConnection_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTcpWrapperConnection_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTcpWrapperConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$973.glib_autoptr_clear_GTcpWrapperConnection$MH,"glib_autoptr_clear_GTcpWrapperConnection");
    }
    public static void glib_autoptr_clear_GTcpWrapperConnection ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GTcpWrapperConnection$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTcpWrapperConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$973.glib_autoptr_cleanup_GTcpWrapperConnection$MH,"glib_autoptr_cleanup_GTcpWrapperConnection");
    }
    public static void glib_autoptr_cleanup_GTcpWrapperConnection ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GTcpWrapperConnection$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTcpWrapperConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$973.glib_listautoptr_cleanup_GTcpWrapperConnection$MH,"glib_listautoptr_cleanup_GTcpWrapperConnection");
    }
    public static void glib_listautoptr_cleanup_GTcpWrapperConnection ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GTcpWrapperConnection$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTcpWrapperConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$973.glib_slistautoptr_cleanup_GTcpWrapperConnection$MH,"glib_slistautoptr_cleanup_GTcpWrapperConnection");
    }
    public static void glib_slistautoptr_cleanup_GTcpWrapperConnection ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GTcpWrapperConnection$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTcpWrapperConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$973.glib_queueautoptr_cleanup_GTcpWrapperConnection$MH,"glib_queueautoptr_cleanup_GTcpWrapperConnection");
    }
    public static void glib_queueautoptr_cleanup_GTcpWrapperConnection ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GTcpWrapperConnection$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTestDBus_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTestDBus_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTestDBus_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTestDBus_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTestDBus$MH() {
        return RuntimeHelper.requireNonNull(constants$973.glib_autoptr_clear_GTestDBus$MH,"glib_autoptr_clear_GTestDBus");
    }
    public static void glib_autoptr_clear_GTestDBus ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GTestDBus$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTestDBus$MH() {
        return RuntimeHelper.requireNonNull(constants$974.glib_autoptr_cleanup_GTestDBus$MH,"glib_autoptr_cleanup_GTestDBus");
    }
    public static void glib_autoptr_cleanup_GTestDBus ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GTestDBus$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTestDBus$MH() {
        return RuntimeHelper.requireNonNull(constants$974.glib_listautoptr_cleanup_GTestDBus$MH,"glib_listautoptr_cleanup_GTestDBus");
    }
    public static void glib_listautoptr_cleanup_GTestDBus ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GTestDBus$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTestDBus$MH() {
        return RuntimeHelper.requireNonNull(constants$974.glib_slistautoptr_cleanup_GTestDBus$MH,"glib_slistautoptr_cleanup_GTestDBus");
    }
    public static void glib_slistautoptr_cleanup_GTestDBus ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GTestDBus$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTestDBus$MH() {
        return RuntimeHelper.requireNonNull(constants$974.glib_queueautoptr_cleanup_GTestDBus$MH,"glib_queueautoptr_cleanup_GTestDBus");
    }
    public static void glib_queueautoptr_cleanup_GTestDBus ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GTestDBus$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GThemedIcon_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GThemedIcon_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GThemedIcon_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GThemedIcon_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GThemedIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$974.glib_autoptr_clear_GThemedIcon$MH,"glib_autoptr_clear_GThemedIcon");
    }
    public static void glib_autoptr_clear_GThemedIcon ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GThemedIcon$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GThemedIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$974.glib_autoptr_cleanup_GThemedIcon$MH,"glib_autoptr_cleanup_GThemedIcon");
    }
    public static void glib_autoptr_cleanup_GThemedIcon ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GThemedIcon$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GThemedIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$975.glib_listautoptr_cleanup_GThemedIcon$MH,"glib_listautoptr_cleanup_GThemedIcon");
    }
    public static void glib_listautoptr_cleanup_GThemedIcon ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GThemedIcon$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GThemedIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$975.glib_slistautoptr_cleanup_GThemedIcon$MH,"glib_slistautoptr_cleanup_GThemedIcon");
    }
    public static void glib_slistautoptr_cleanup_GThemedIcon ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GThemedIcon$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GThemedIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$975.glib_queueautoptr_cleanup_GThemedIcon$MH,"glib_queueautoptr_cleanup_GThemedIcon");
    }
    public static void glib_queueautoptr_cleanup_GThemedIcon ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GThemedIcon$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GThreadedSocketService_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GThreadedSocketService_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GThreadedSocketService_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GThreadedSocketService_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GThreadedSocketService$MH() {
        return RuntimeHelper.requireNonNull(constants$975.glib_autoptr_clear_GThreadedSocketService$MH,"glib_autoptr_clear_GThreadedSocketService");
    }
    public static void glib_autoptr_clear_GThreadedSocketService ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GThreadedSocketService$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GThreadedSocketService$MH() {
        return RuntimeHelper.requireNonNull(constants$975.glib_autoptr_cleanup_GThreadedSocketService$MH,"glib_autoptr_cleanup_GThreadedSocketService");
    }
    public static void glib_autoptr_cleanup_GThreadedSocketService ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GThreadedSocketService$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GThreadedSocketService$MH() {
        return RuntimeHelper.requireNonNull(constants$975.glib_listautoptr_cleanup_GThreadedSocketService$MH,"glib_listautoptr_cleanup_GThreadedSocketService");
    }
    public static void glib_listautoptr_cleanup_GThreadedSocketService ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GThreadedSocketService$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GThreadedSocketService$MH() {
        return RuntimeHelper.requireNonNull(constants$976.glib_slistautoptr_cleanup_GThreadedSocketService$MH,"glib_slistautoptr_cleanup_GThreadedSocketService");
    }
    public static void glib_slistautoptr_cleanup_GThreadedSocketService ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GThreadedSocketService$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GThreadedSocketService$MH() {
        return RuntimeHelper.requireNonNull(constants$976.glib_queueautoptr_cleanup_GThreadedSocketService$MH,"glib_queueautoptr_cleanup_GThreadedSocketService");
    }
    public static void glib_queueautoptr_cleanup_GThreadedSocketService ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GThreadedSocketService$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTlsBackend_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsBackend_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsBackend_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsBackend_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTlsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$976.glib_autoptr_clear_GTlsBackend$MH,"glib_autoptr_clear_GTlsBackend");
    }
    public static void glib_autoptr_clear_GTlsBackend ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GTlsBackend$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTlsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$976.glib_autoptr_cleanup_GTlsBackend$MH,"glib_autoptr_cleanup_GTlsBackend");
    }
    public static void glib_autoptr_cleanup_GTlsBackend ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GTlsBackend$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTlsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$976.glib_listautoptr_cleanup_GTlsBackend$MH,"glib_listautoptr_cleanup_GTlsBackend");
    }
    public static void glib_listautoptr_cleanup_GTlsBackend ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GTlsBackend$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTlsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$976.glib_slistautoptr_cleanup_GTlsBackend$MH,"glib_slistautoptr_cleanup_GTlsBackend");
    }
    public static void glib_slistautoptr_cleanup_GTlsBackend ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GTlsBackend$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTlsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$977.glib_queueautoptr_cleanup_GTlsBackend$MH,"glib_queueautoptr_cleanup_GTlsBackend");
    }
    public static void glib_queueautoptr_cleanup_GTlsBackend ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GTlsBackend$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTlsCertificate_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsCertificate_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsCertificate_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsCertificate_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTlsCertificate$MH() {
        return RuntimeHelper.requireNonNull(constants$977.glib_autoptr_clear_GTlsCertificate$MH,"glib_autoptr_clear_GTlsCertificate");
    }
    public static void glib_autoptr_clear_GTlsCertificate ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GTlsCertificate$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTlsCertificate$MH() {
        return RuntimeHelper.requireNonNull(constants$977.glib_autoptr_cleanup_GTlsCertificate$MH,"glib_autoptr_cleanup_GTlsCertificate");
    }
    public static void glib_autoptr_cleanup_GTlsCertificate ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GTlsCertificate$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTlsCertificate$MH() {
        return RuntimeHelper.requireNonNull(constants$977.glib_listautoptr_cleanup_GTlsCertificate$MH,"glib_listautoptr_cleanup_GTlsCertificate");
    }
    public static void glib_listautoptr_cleanup_GTlsCertificate ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GTlsCertificate$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTlsCertificate$MH() {
        return RuntimeHelper.requireNonNull(constants$977.glib_slistautoptr_cleanup_GTlsCertificate$MH,"glib_slistautoptr_cleanup_GTlsCertificate");
    }
    public static void glib_slistautoptr_cleanup_GTlsCertificate ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GTlsCertificate$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTlsCertificate$MH() {
        return RuntimeHelper.requireNonNull(constants$977.glib_queueautoptr_cleanup_GTlsCertificate$MH,"glib_queueautoptr_cleanup_GTlsCertificate");
    }
    public static void glib_queueautoptr_cleanup_GTlsCertificate ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GTlsCertificate$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTlsClientConnection_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsClientConnection_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsClientConnection_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsClientConnection_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTlsClientConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$978.glib_autoptr_clear_GTlsClientConnection$MH,"glib_autoptr_clear_GTlsClientConnection");
    }
    public static void glib_autoptr_clear_GTlsClientConnection ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GTlsClientConnection$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTlsClientConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$978.glib_autoptr_cleanup_GTlsClientConnection$MH,"glib_autoptr_cleanup_GTlsClientConnection");
    }
    public static void glib_autoptr_cleanup_GTlsClientConnection ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GTlsClientConnection$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTlsClientConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$978.glib_listautoptr_cleanup_GTlsClientConnection$MH,"glib_listautoptr_cleanup_GTlsClientConnection");
    }
    public static void glib_listautoptr_cleanup_GTlsClientConnection ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GTlsClientConnection$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTlsClientConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$978.glib_slistautoptr_cleanup_GTlsClientConnection$MH,"glib_slistautoptr_cleanup_GTlsClientConnection");
    }
    public static void glib_slistautoptr_cleanup_GTlsClientConnection ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GTlsClientConnection$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTlsClientConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$978.glib_queueautoptr_cleanup_GTlsClientConnection$MH,"glib_queueautoptr_cleanup_GTlsClientConnection");
    }
    public static void glib_queueautoptr_cleanup_GTlsClientConnection ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GTlsClientConnection$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTlsConnection_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsConnection_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsConnection_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsConnection_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTlsConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$978.glib_autoptr_clear_GTlsConnection$MH,"glib_autoptr_clear_GTlsConnection");
    }
    public static void glib_autoptr_clear_GTlsConnection ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GTlsConnection$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTlsConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$979.glib_autoptr_cleanup_GTlsConnection$MH,"glib_autoptr_cleanup_GTlsConnection");
    }
    public static void glib_autoptr_cleanup_GTlsConnection ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GTlsConnection$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTlsConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$979.glib_listautoptr_cleanup_GTlsConnection$MH,"glib_listautoptr_cleanup_GTlsConnection");
    }
    public static void glib_listautoptr_cleanup_GTlsConnection ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GTlsConnection$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTlsConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$979.glib_slistautoptr_cleanup_GTlsConnection$MH,"glib_slistautoptr_cleanup_GTlsConnection");
    }
    public static void glib_slistautoptr_cleanup_GTlsConnection ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GTlsConnection$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTlsConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$979.glib_queueautoptr_cleanup_GTlsConnection$MH,"glib_queueautoptr_cleanup_GTlsConnection");
    }
    public static void glib_queueautoptr_cleanup_GTlsConnection ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GTlsConnection$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTlsDatabase_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsDatabase_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsDatabase_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsDatabase_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTlsDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$979.glib_autoptr_clear_GTlsDatabase$MH,"glib_autoptr_clear_GTlsDatabase");
    }
    public static void glib_autoptr_clear_GTlsDatabase ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GTlsDatabase$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTlsDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$979.glib_autoptr_cleanup_GTlsDatabase$MH,"glib_autoptr_cleanup_GTlsDatabase");
    }
    public static void glib_autoptr_cleanup_GTlsDatabase ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GTlsDatabase$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTlsDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$980.glib_listautoptr_cleanup_GTlsDatabase$MH,"glib_listautoptr_cleanup_GTlsDatabase");
    }
    public static void glib_listautoptr_cleanup_GTlsDatabase ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GTlsDatabase$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTlsDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$980.glib_slistautoptr_cleanup_GTlsDatabase$MH,"glib_slistautoptr_cleanup_GTlsDatabase");
    }
    public static void glib_slistautoptr_cleanup_GTlsDatabase ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GTlsDatabase$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTlsDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$980.glib_queueautoptr_cleanup_GTlsDatabase$MH,"glib_queueautoptr_cleanup_GTlsDatabase");
    }
    public static void glib_queueautoptr_cleanup_GTlsDatabase ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GTlsDatabase$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTlsFileDatabase_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsFileDatabase_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsFileDatabase_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsFileDatabase_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTlsFileDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$980.glib_autoptr_clear_GTlsFileDatabase$MH,"glib_autoptr_clear_GTlsFileDatabase");
    }
    public static void glib_autoptr_clear_GTlsFileDatabase ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GTlsFileDatabase$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTlsFileDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$980.glib_autoptr_cleanup_GTlsFileDatabase$MH,"glib_autoptr_cleanup_GTlsFileDatabase");
    }
    public static void glib_autoptr_cleanup_GTlsFileDatabase ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GTlsFileDatabase$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTlsFileDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$980.glib_listautoptr_cleanup_GTlsFileDatabase$MH,"glib_listautoptr_cleanup_GTlsFileDatabase");
    }
    public static void glib_listautoptr_cleanup_GTlsFileDatabase ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GTlsFileDatabase$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTlsFileDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$981.glib_slistautoptr_cleanup_GTlsFileDatabase$MH,"glib_slistautoptr_cleanup_GTlsFileDatabase");
    }
    public static void glib_slistautoptr_cleanup_GTlsFileDatabase ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GTlsFileDatabase$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTlsFileDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$981.glib_queueautoptr_cleanup_GTlsFileDatabase$MH,"glib_queueautoptr_cleanup_GTlsFileDatabase");
    }
    public static void glib_queueautoptr_cleanup_GTlsFileDatabase ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GTlsFileDatabase$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTlsInteraction_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsInteraction_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsInteraction_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsInteraction_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTlsInteraction$MH() {
        return RuntimeHelper.requireNonNull(constants$981.glib_autoptr_clear_GTlsInteraction$MH,"glib_autoptr_clear_GTlsInteraction");
    }
    public static void glib_autoptr_clear_GTlsInteraction ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GTlsInteraction$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTlsInteraction$MH() {
        return RuntimeHelper.requireNonNull(constants$981.glib_autoptr_cleanup_GTlsInteraction$MH,"glib_autoptr_cleanup_GTlsInteraction");
    }
    public static void glib_autoptr_cleanup_GTlsInteraction ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GTlsInteraction$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTlsInteraction$MH() {
        return RuntimeHelper.requireNonNull(constants$981.glib_listautoptr_cleanup_GTlsInteraction$MH,"glib_listautoptr_cleanup_GTlsInteraction");
    }
    public static void glib_listautoptr_cleanup_GTlsInteraction ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GTlsInteraction$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTlsInteraction$MH() {
        return RuntimeHelper.requireNonNull(constants$981.glib_slistautoptr_cleanup_GTlsInteraction$MH,"glib_slistautoptr_cleanup_GTlsInteraction");
    }
    public static void glib_slistautoptr_cleanup_GTlsInteraction ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GTlsInteraction$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTlsInteraction$MH() {
        return RuntimeHelper.requireNonNull(constants$982.glib_queueautoptr_cleanup_GTlsInteraction$MH,"glib_queueautoptr_cleanup_GTlsInteraction");
    }
    public static void glib_queueautoptr_cleanup_GTlsInteraction ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GTlsInteraction$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTlsPassword_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsPassword_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsPassword_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsPassword_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTlsPassword$MH() {
        return RuntimeHelper.requireNonNull(constants$982.glib_autoptr_clear_GTlsPassword$MH,"glib_autoptr_clear_GTlsPassword");
    }
    public static void glib_autoptr_clear_GTlsPassword ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GTlsPassword$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTlsPassword$MH() {
        return RuntimeHelper.requireNonNull(constants$982.glib_autoptr_cleanup_GTlsPassword$MH,"glib_autoptr_cleanup_GTlsPassword");
    }
    public static void glib_autoptr_cleanup_GTlsPassword ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GTlsPassword$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTlsPassword$MH() {
        return RuntimeHelper.requireNonNull(constants$982.glib_listautoptr_cleanup_GTlsPassword$MH,"glib_listautoptr_cleanup_GTlsPassword");
    }
    public static void glib_listautoptr_cleanup_GTlsPassword ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GTlsPassword$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTlsPassword$MH() {
        return RuntimeHelper.requireNonNull(constants$982.glib_slistautoptr_cleanup_GTlsPassword$MH,"glib_slistautoptr_cleanup_GTlsPassword");
    }
    public static void glib_slistautoptr_cleanup_GTlsPassword ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GTlsPassword$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTlsPassword$MH() {
        return RuntimeHelper.requireNonNull(constants$982.glib_queueautoptr_cleanup_GTlsPassword$MH,"glib_queueautoptr_cleanup_GTlsPassword");
    }
    public static void glib_queueautoptr_cleanup_GTlsPassword ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GTlsPassword$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTlsServerConnection_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsServerConnection_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsServerConnection_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsServerConnection_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTlsServerConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$983.glib_autoptr_clear_GTlsServerConnection$MH,"glib_autoptr_clear_GTlsServerConnection");
    }
    public static void glib_autoptr_clear_GTlsServerConnection ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GTlsServerConnection$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTlsServerConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$983.glib_autoptr_cleanup_GTlsServerConnection$MH,"glib_autoptr_cleanup_GTlsServerConnection");
    }
    public static void glib_autoptr_cleanup_GTlsServerConnection ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GTlsServerConnection$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTlsServerConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$983.glib_listautoptr_cleanup_GTlsServerConnection$MH,"glib_listautoptr_cleanup_GTlsServerConnection");
    }
    public static void glib_listautoptr_cleanup_GTlsServerConnection ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GTlsServerConnection$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTlsServerConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$983.glib_slistautoptr_cleanup_GTlsServerConnection$MH,"glib_slistautoptr_cleanup_GTlsServerConnection");
    }
    public static void glib_slistautoptr_cleanup_GTlsServerConnection ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GTlsServerConnection$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTlsServerConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$983.glib_queueautoptr_cleanup_GTlsServerConnection$MH,"glib_queueautoptr_cleanup_GTlsServerConnection");
    }
    public static void glib_queueautoptr_cleanup_GTlsServerConnection ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GTlsServerConnection$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GVfs_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVfs_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVfs_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVfs_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GVfs$MH() {
        return RuntimeHelper.requireNonNull(constants$983.glib_autoptr_clear_GVfs$MH,"glib_autoptr_clear_GVfs");
    }
    public static void glib_autoptr_clear_GVfs ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GVfs$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GVfs$MH() {
        return RuntimeHelper.requireNonNull(constants$984.glib_autoptr_cleanup_GVfs$MH,"glib_autoptr_cleanup_GVfs");
    }
    public static void glib_autoptr_cleanup_GVfs ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GVfs$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GVfs$MH() {
        return RuntimeHelper.requireNonNull(constants$984.glib_listautoptr_cleanup_GVfs$MH,"glib_listautoptr_cleanup_GVfs");
    }
    public static void glib_listautoptr_cleanup_GVfs ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GVfs$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GVfs$MH() {
        return RuntimeHelper.requireNonNull(constants$984.glib_slistautoptr_cleanup_GVfs$MH,"glib_slistautoptr_cleanup_GVfs");
    }
    public static void glib_slistautoptr_cleanup_GVfs ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GVfs$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GVfs$MH() {
        return RuntimeHelper.requireNonNull(constants$984.glib_queueautoptr_cleanup_GVfs$MH,"glib_queueautoptr_cleanup_GVfs");
    }
    public static void glib_queueautoptr_cleanup_GVfs ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GVfs$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GVolume_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVolume_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVolume_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVolume_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GVolume$MH() {
        return RuntimeHelper.requireNonNull(constants$984.glib_autoptr_clear_GVolume$MH,"glib_autoptr_clear_GVolume");
    }
    public static void glib_autoptr_clear_GVolume ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GVolume$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GVolume$MH() {
        return RuntimeHelper.requireNonNull(constants$984.glib_autoptr_cleanup_GVolume$MH,"glib_autoptr_cleanup_GVolume");
    }
    public static void glib_autoptr_cleanup_GVolume ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GVolume$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GVolume$MH() {
        return RuntimeHelper.requireNonNull(constants$985.glib_listautoptr_cleanup_GVolume$MH,"glib_listautoptr_cleanup_GVolume");
    }
    public static void glib_listautoptr_cleanup_GVolume ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GVolume$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GVolume$MH() {
        return RuntimeHelper.requireNonNull(constants$985.glib_slistautoptr_cleanup_GVolume$MH,"glib_slistautoptr_cleanup_GVolume");
    }
    public static void glib_slistautoptr_cleanup_GVolume ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GVolume$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GVolume$MH() {
        return RuntimeHelper.requireNonNull(constants$985.glib_queueautoptr_cleanup_GVolume$MH,"glib_queueautoptr_cleanup_GVolume");
    }
    public static void glib_queueautoptr_cleanup_GVolume ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GVolume$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GVolumeMonitor_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVolumeMonitor_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVolumeMonitor_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVolumeMonitor_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$985.glib_autoptr_clear_GVolumeMonitor$MH,"glib_autoptr_clear_GVolumeMonitor");
    }
    public static void glib_autoptr_clear_GVolumeMonitor ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GVolumeMonitor$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$985.glib_autoptr_cleanup_GVolumeMonitor$MH,"glib_autoptr_cleanup_GVolumeMonitor");
    }
    public static void glib_autoptr_cleanup_GVolumeMonitor ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GVolumeMonitor$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$985.glib_listautoptr_cleanup_GVolumeMonitor$MH,"glib_listautoptr_cleanup_GVolumeMonitor");
    }
    public static void glib_listautoptr_cleanup_GVolumeMonitor ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GVolumeMonitor$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$986.glib_slistautoptr_cleanup_GVolumeMonitor$MH,"glib_slistautoptr_cleanup_GVolumeMonitor");
    }
    public static void glib_slistautoptr_cleanup_GVolumeMonitor ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GVolumeMonitor$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$986.glib_queueautoptr_cleanup_GVolumeMonitor$MH,"glib_queueautoptr_cleanup_GVolumeMonitor");
    }
    public static void glib_queueautoptr_cleanup_GVolumeMonitor ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GVolumeMonitor$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GZlibCompressor_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GZlibCompressor_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GZlibCompressor_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GZlibCompressor_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GZlibCompressor$MH() {
        return RuntimeHelper.requireNonNull(constants$986.glib_autoptr_clear_GZlibCompressor$MH,"glib_autoptr_clear_GZlibCompressor");
    }
    public static void glib_autoptr_clear_GZlibCompressor ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GZlibCompressor$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GZlibCompressor$MH() {
        return RuntimeHelper.requireNonNull(constants$986.glib_autoptr_cleanup_GZlibCompressor$MH,"glib_autoptr_cleanup_GZlibCompressor");
    }
    public static void glib_autoptr_cleanup_GZlibCompressor ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GZlibCompressor$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GZlibCompressor$MH() {
        return RuntimeHelper.requireNonNull(constants$986.glib_listautoptr_cleanup_GZlibCompressor$MH,"glib_listautoptr_cleanup_GZlibCompressor");
    }
    public static void glib_listautoptr_cleanup_GZlibCompressor ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GZlibCompressor$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GZlibCompressor$MH() {
        return RuntimeHelper.requireNonNull(constants$986.glib_slistautoptr_cleanup_GZlibCompressor$MH,"glib_slistautoptr_cleanup_GZlibCompressor");
    }
    public static void glib_slistautoptr_cleanup_GZlibCompressor ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GZlibCompressor$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GZlibCompressor$MH() {
        return RuntimeHelper.requireNonNull(constants$987.glib_queueautoptr_cleanup_GZlibCompressor$MH,"glib_queueautoptr_cleanup_GZlibCompressor");
    }
    public static void glib_queueautoptr_cleanup_GZlibCompressor ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GZlibCompressor$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GZlibDecompressor_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GZlibDecompressor_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GZlibDecompressor_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GZlibDecompressor_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GZlibDecompressor$MH() {
        return RuntimeHelper.requireNonNull(constants$987.glib_autoptr_clear_GZlibDecompressor$MH,"glib_autoptr_clear_GZlibDecompressor");
    }
    public static void glib_autoptr_clear_GZlibDecompressor ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GZlibDecompressor$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GZlibDecompressor$MH() {
        return RuntimeHelper.requireNonNull(constants$987.glib_autoptr_cleanup_GZlibDecompressor$MH,"glib_autoptr_cleanup_GZlibDecompressor");
    }
    public static void glib_autoptr_cleanup_GZlibDecompressor ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GZlibDecompressor$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GZlibDecompressor$MH() {
        return RuntimeHelper.requireNonNull(constants$987.glib_listautoptr_cleanup_GZlibDecompressor$MH,"glib_listautoptr_cleanup_GZlibDecompressor");
    }
    public static void glib_listautoptr_cleanup_GZlibDecompressor ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GZlibDecompressor$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GZlibDecompressor$MH() {
        return RuntimeHelper.requireNonNull(constants$987.glib_slistautoptr_cleanup_GZlibDecompressor$MH,"glib_slistautoptr_cleanup_GZlibDecompressor");
    }
    public static void glib_slistautoptr_cleanup_GZlibDecompressor ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GZlibDecompressor$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GZlibDecompressor$MH() {
        return RuntimeHelper.requireNonNull(constants$987.glib_queueautoptr_cleanup_GZlibDecompressor$MH,"glib_queueautoptr_cleanup_GZlibDecompressor");
    }
    public static void glib_queueautoptr_cleanup_GZlibDecompressor ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GZlibDecompressor$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDesktopAppInfo_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDesktopAppInfo_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDesktopAppInfo_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDesktopAppInfo_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDesktopAppInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$988.glib_autoptr_clear_GDesktopAppInfo$MH,"glib_autoptr_clear_GDesktopAppInfo");
    }
    public static void glib_autoptr_clear_GDesktopAppInfo ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GDesktopAppInfo$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDesktopAppInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$988.glib_autoptr_cleanup_GDesktopAppInfo$MH,"glib_autoptr_cleanup_GDesktopAppInfo");
    }
    public static void glib_autoptr_cleanup_GDesktopAppInfo ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GDesktopAppInfo$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDesktopAppInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$988.glib_listautoptr_cleanup_GDesktopAppInfo$MH,"glib_listautoptr_cleanup_GDesktopAppInfo");
    }
    public static void glib_listautoptr_cleanup_GDesktopAppInfo ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GDesktopAppInfo$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDesktopAppInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$988.glib_slistautoptr_cleanup_GDesktopAppInfo$MH,"glib_slistautoptr_cleanup_GDesktopAppInfo");
    }
    public static void glib_slistautoptr_cleanup_GDesktopAppInfo ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GDesktopAppInfo$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDesktopAppInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$988.glib_queueautoptr_cleanup_GDesktopAppInfo$MH,"glib_queueautoptr_cleanup_GDesktopAppInfo");
    }
    public static void glib_queueautoptr_cleanup_GDesktopAppInfo ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GDesktopAppInfo$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_desktop_app_info_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$988.g_desktop_app_info_get_type$MH,"g_desktop_app_info_get_type");
    }
    public static long g_desktop_app_info_get_type () {
        var mh$ = g_desktop_app_info_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_desktop_app_info_new_from_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$989.g_desktop_app_info_new_from_filename$MH,"g_desktop_app_info_new_from_filename");
    }
    public static MemoryAddress g_desktop_app_info_new_from_filename ( Addressable filename) {
        var mh$ = g_desktop_app_info_new_from_filename$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_desktop_app_info_new_from_keyfile$MH() {
        return RuntimeHelper.requireNonNull(constants$989.g_desktop_app_info_new_from_keyfile$MH,"g_desktop_app_info_new_from_keyfile");
    }
    public static MemoryAddress g_desktop_app_info_new_from_keyfile ( Addressable key_file) {
        var mh$ = g_desktop_app_info_new_from_keyfile$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(key_file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_desktop_app_info_get_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$989.g_desktop_app_info_get_filename$MH,"g_desktop_app_info_get_filename");
    }
    public static MemoryAddress g_desktop_app_info_get_filename ( Addressable info) {
        var mh$ = g_desktop_app_info_get_filename$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_desktop_app_info_get_generic_name$MH() {
        return RuntimeHelper.requireNonNull(constants$989.g_desktop_app_info_get_generic_name$MH,"g_desktop_app_info_get_generic_name");
    }
    public static MemoryAddress g_desktop_app_info_get_generic_name ( Addressable info) {
        var mh$ = g_desktop_app_info_get_generic_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_desktop_app_info_get_categories$MH() {
        return RuntimeHelper.requireNonNull(constants$989.g_desktop_app_info_get_categories$MH,"g_desktop_app_info_get_categories");
    }
    public static MemoryAddress g_desktop_app_info_get_categories ( Addressable info) {
        var mh$ = g_desktop_app_info_get_categories$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_desktop_app_info_get_keywords$MH() {
        return RuntimeHelper.requireNonNull(constants$989.g_desktop_app_info_get_keywords$MH,"g_desktop_app_info_get_keywords");
    }
    public static MemoryAddress g_desktop_app_info_get_keywords ( Addressable info) {
        var mh$ = g_desktop_app_info_get_keywords$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_desktop_app_info_get_nodisplay$MH() {
        return RuntimeHelper.requireNonNull(constants$990.g_desktop_app_info_get_nodisplay$MH,"g_desktop_app_info_get_nodisplay");
    }
    public static int g_desktop_app_info_get_nodisplay ( Addressable info) {
        var mh$ = g_desktop_app_info_get_nodisplay$MH();
        try {
            return (int)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_desktop_app_info_get_show_in$MH() {
        return RuntimeHelper.requireNonNull(constants$990.g_desktop_app_info_get_show_in$MH,"g_desktop_app_info_get_show_in");
    }
    public static int g_desktop_app_info_get_show_in ( Addressable info,  Addressable desktop_env) {
        var mh$ = g_desktop_app_info_get_show_in$MH();
        try {
            return (int)mh$.invokeExact(info, desktop_env);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_desktop_app_info_get_startup_wm_class$MH() {
        return RuntimeHelper.requireNonNull(constants$990.g_desktop_app_info_get_startup_wm_class$MH,"g_desktop_app_info_get_startup_wm_class");
    }
    public static MemoryAddress g_desktop_app_info_get_startup_wm_class ( Addressable info) {
        var mh$ = g_desktop_app_info_get_startup_wm_class$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_desktop_app_info_new$MH() {
        return RuntimeHelper.requireNonNull(constants$990.g_desktop_app_info_new$MH,"g_desktop_app_info_new");
    }
    public static MemoryAddress g_desktop_app_info_new ( Addressable desktop_id) {
        var mh$ = g_desktop_app_info_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(desktop_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_desktop_app_info_get_is_hidden$MH() {
        return RuntimeHelper.requireNonNull(constants$990.g_desktop_app_info_get_is_hidden$MH,"g_desktop_app_info_get_is_hidden");
    }
    public static int g_desktop_app_info_get_is_hidden ( Addressable info) {
        var mh$ = g_desktop_app_info_get_is_hidden$MH();
        try {
            return (int)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_desktop_app_info_set_desktop_env$MH() {
        return RuntimeHelper.requireNonNull(constants$990.g_desktop_app_info_set_desktop_env$MH,"g_desktop_app_info_set_desktop_env");
    }
    public static void g_desktop_app_info_set_desktop_env ( Addressable desktop_env) {
        var mh$ = g_desktop_app_info_set_desktop_env$MH();
        try {
            mh$.invokeExact(desktop_env);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_desktop_app_info_has_key$MH() {
        return RuntimeHelper.requireNonNull(constants$991.g_desktop_app_info_has_key$MH,"g_desktop_app_info_has_key");
    }
    public static int g_desktop_app_info_has_key ( Addressable info,  Addressable key) {
        var mh$ = g_desktop_app_info_has_key$MH();
        try {
            return (int)mh$.invokeExact(info, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_desktop_app_info_get_string$MH() {
        return RuntimeHelper.requireNonNull(constants$991.g_desktop_app_info_get_string$MH,"g_desktop_app_info_get_string");
    }
    public static MemoryAddress g_desktop_app_info_get_string ( Addressable info,  Addressable key) {
        var mh$ = g_desktop_app_info_get_string$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(info, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_desktop_app_info_get_locale_string$MH() {
        return RuntimeHelper.requireNonNull(constants$991.g_desktop_app_info_get_locale_string$MH,"g_desktop_app_info_get_locale_string");
    }
    public static MemoryAddress g_desktop_app_info_get_locale_string ( Addressable info,  Addressable key) {
        var mh$ = g_desktop_app_info_get_locale_string$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(info, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_desktop_app_info_get_boolean$MH() {
        return RuntimeHelper.requireNonNull(constants$991.g_desktop_app_info_get_boolean$MH,"g_desktop_app_info_get_boolean");
    }
    public static int g_desktop_app_info_get_boolean ( Addressable info,  Addressable key) {
        var mh$ = g_desktop_app_info_get_boolean$MH();
        try {
            return (int)mh$.invokeExact(info, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_desktop_app_info_get_string_list$MH() {
        return RuntimeHelper.requireNonNull(constants$991.g_desktop_app_info_get_string_list$MH,"g_desktop_app_info_get_string_list");
    }
    public static MemoryAddress g_desktop_app_info_get_string_list ( Addressable info,  Addressable key,  Addressable length) {
        var mh$ = g_desktop_app_info_get_string_list$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(info, key, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_desktop_app_info_list_actions$MH() {
        return RuntimeHelper.requireNonNull(constants$991.g_desktop_app_info_list_actions$MH,"g_desktop_app_info_list_actions");
    }
    public static MemoryAddress g_desktop_app_info_list_actions ( Addressable info) {
        var mh$ = g_desktop_app_info_list_actions$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_desktop_app_info_launch_action$MH() {
        return RuntimeHelper.requireNonNull(constants$992.g_desktop_app_info_launch_action$MH,"g_desktop_app_info_launch_action");
    }
    public static void g_desktop_app_info_launch_action ( Addressable info,  Addressable action_name,  Addressable launch_context) {
        var mh$ = g_desktop_app_info_launch_action$MH();
        try {
            mh$.invokeExact(info, action_name, launch_context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_desktop_app_info_get_action_name$MH() {
        return RuntimeHelper.requireNonNull(constants$992.g_desktop_app_info_get_action_name$MH,"g_desktop_app_info_get_action_name");
    }
    public static MemoryAddress g_desktop_app_info_get_action_name ( Addressable info,  Addressable action_name) {
        var mh$ = g_desktop_app_info_get_action_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(info, action_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_desktop_app_info_lookup_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$992.g_desktop_app_info_lookup_get_type$MH,"g_desktop_app_info_lookup_get_type");
    }
    public static long g_desktop_app_info_lookup_get_type () {
        var mh$ = g_desktop_app_info_lookup_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_desktop_app_info_lookup_get_default_for_uri_scheme$MH() {
        return RuntimeHelper.requireNonNull(constants$992.g_desktop_app_info_lookup_get_default_for_uri_scheme$MH,"g_desktop_app_info_lookup_get_default_for_uri_scheme");
    }
    public static MemoryAddress g_desktop_app_info_lookup_get_default_for_uri_scheme ( Addressable lookup,  Addressable uri_scheme) {
        var mh$ = g_desktop_app_info_lookup_get_default_for_uri_scheme$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(lookup, uri_scheme);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_desktop_app_info_launch_uris_as_manager$MH() {
        return RuntimeHelper.requireNonNull(constants$993.g_desktop_app_info_launch_uris_as_manager$MH,"g_desktop_app_info_launch_uris_as_manager");
    }
    public static int g_desktop_app_info_launch_uris_as_manager ( Addressable appinfo,  Addressable uris,  Addressable launch_context,  int spawn_flags,  Addressable user_setup,  Addressable user_setup_data,  Addressable pid_callback,  Addressable pid_callback_data,  Addressable error) {
        var mh$ = g_desktop_app_info_launch_uris_as_manager$MH();
        try {
            return (int)mh$.invokeExact(appinfo, uris, launch_context, spawn_flags, user_setup, user_setup_data, pid_callback, pid_callback_data, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_desktop_app_info_launch_uris_as_manager_with_fds$MH() {
        return RuntimeHelper.requireNonNull(constants$993.g_desktop_app_info_launch_uris_as_manager_with_fds$MH,"g_desktop_app_info_launch_uris_as_manager_with_fds");
    }
    public static int g_desktop_app_info_launch_uris_as_manager_with_fds ( Addressable appinfo,  Addressable uris,  Addressable launch_context,  int spawn_flags,  Addressable user_setup,  Addressable user_setup_data,  Addressable pid_callback,  Addressable pid_callback_data,  int stdin_fd,  int stdout_fd,  int stderr_fd,  Addressable error) {
        var mh$ = g_desktop_app_info_launch_uris_as_manager_with_fds$MH();
        try {
            return (int)mh$.invokeExact(appinfo, uris, launch_context, spawn_flags, user_setup, user_setup_data, pid_callback, pid_callback_data, stdin_fd, stdout_fd, stderr_fd, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_desktop_app_info_search$MH() {
        return RuntimeHelper.requireNonNull(constants$993.g_desktop_app_info_search$MH,"g_desktop_app_info_search");
    }
    public static MemoryAddress g_desktop_app_info_search ( Addressable search_string) {
        var mh$ = g_desktop_app_info_search$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(search_string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_desktop_app_info_get_implementations$MH() {
        return RuntimeHelper.requireNonNull(constants$993.g_desktop_app_info_get_implementations$MH,"g_desktop_app_info_get_implementations");
    }
    public static MemoryAddress g_desktop_app_info_get_implementations ( Addressable interface_) {
        var mh$ = g_desktop_app_info_get_implementations$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(interface_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFileDescriptorBased_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileDescriptorBased_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileDescriptorBased_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileDescriptorBased_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFileDescriptorBased$MH() {
        return RuntimeHelper.requireNonNull(constants$993.glib_autoptr_clear_GFileDescriptorBased$MH,"glib_autoptr_clear_GFileDescriptorBased");
    }
    public static void glib_autoptr_clear_GFileDescriptorBased ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GFileDescriptorBased$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFileDescriptorBased$MH() {
        return RuntimeHelper.requireNonNull(constants$993.glib_autoptr_cleanup_GFileDescriptorBased$MH,"glib_autoptr_cleanup_GFileDescriptorBased");
    }
    public static void glib_autoptr_cleanup_GFileDescriptorBased ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GFileDescriptorBased$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFileDescriptorBased$MH() {
        return RuntimeHelper.requireNonNull(constants$994.glib_listautoptr_cleanup_GFileDescriptorBased$MH,"glib_listautoptr_cleanup_GFileDescriptorBased");
    }
    public static void glib_listautoptr_cleanup_GFileDescriptorBased ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GFileDescriptorBased$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFileDescriptorBased$MH() {
        return RuntimeHelper.requireNonNull(constants$994.glib_slistautoptr_cleanup_GFileDescriptorBased$MH,"glib_slistautoptr_cleanup_GFileDescriptorBased");
    }
    public static void glib_slistautoptr_cleanup_GFileDescriptorBased ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GFileDescriptorBased$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFileDescriptorBased$MH() {
        return RuntimeHelper.requireNonNull(constants$994.glib_queueautoptr_cleanup_GFileDescriptorBased$MH,"glib_queueautoptr_cleanup_GFileDescriptorBased");
    }
    public static void glib_queueautoptr_cleanup_GFileDescriptorBased ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GFileDescriptorBased$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_descriptor_based_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$994.g_file_descriptor_based_get_type$MH,"g_file_descriptor_based_get_type");
    }
    public static long g_file_descriptor_based_get_type () {
        var mh$ = g_file_descriptor_based_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_descriptor_based_get_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$994.g_file_descriptor_based_get_fd$MH,"g_file_descriptor_based_get_fd");
    }
    public static int g_file_descriptor_based_get_fd ( Addressable fd_based) {
        var mh$ = g_file_descriptor_based_get_fd$MH();
        try {
            return (int)mh$.invokeExact(fd_based);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_backend_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$994.g_settings_backend_get_type$MH,"g_settings_backend_get_type");
    }
    public static long g_settings_backend_get_type () {
        var mh$ = g_settings_backend_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_backend_changed$MH() {
        return RuntimeHelper.requireNonNull(constants$995.g_settings_backend_changed$MH,"g_settings_backend_changed");
    }
    public static void g_settings_backend_changed ( Addressable backend,  Addressable key,  Addressable origin_tag) {
        var mh$ = g_settings_backend_changed$MH();
        try {
            mh$.invokeExact(backend, key, origin_tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_backend_path_changed$MH() {
        return RuntimeHelper.requireNonNull(constants$995.g_settings_backend_path_changed$MH,"g_settings_backend_path_changed");
    }
    public static void g_settings_backend_path_changed ( Addressable backend,  Addressable path,  Addressable origin_tag) {
        var mh$ = g_settings_backend_path_changed$MH();
        try {
            mh$.invokeExact(backend, path, origin_tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_backend_flatten_tree$MH() {
        return RuntimeHelper.requireNonNull(constants$995.g_settings_backend_flatten_tree$MH,"g_settings_backend_flatten_tree");
    }
    public static void g_settings_backend_flatten_tree ( Addressable tree,  Addressable path,  Addressable keys,  Addressable values) {
        var mh$ = g_settings_backend_flatten_tree$MH();
        try {
            mh$.invokeExact(tree, path, keys, values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_backend_keys_changed$MH() {
        return RuntimeHelper.requireNonNull(constants$995.g_settings_backend_keys_changed$MH,"g_settings_backend_keys_changed");
    }
    public static void g_settings_backend_keys_changed ( Addressable backend,  Addressable path,  Addressable items,  Addressable origin_tag) {
        var mh$ = g_settings_backend_keys_changed$MH();
        try {
            mh$.invokeExact(backend, path, items, origin_tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_backend_path_writable_changed$MH() {
        return RuntimeHelper.requireNonNull(constants$995.g_settings_backend_path_writable_changed$MH,"g_settings_backend_path_writable_changed");
    }
    public static void g_settings_backend_path_writable_changed ( Addressable backend,  Addressable path) {
        var mh$ = g_settings_backend_path_writable_changed$MH();
        try {
            mh$.invokeExact(backend, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_backend_writable_changed$MH() {
        return RuntimeHelper.requireNonNull(constants$995.g_settings_backend_writable_changed$MH,"g_settings_backend_writable_changed");
    }
    public static void g_settings_backend_writable_changed ( Addressable backend,  Addressable key) {
        var mh$ = g_settings_backend_writable_changed$MH();
        try {
            mh$.invokeExact(backend, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_backend_changed_tree$MH() {
        return RuntimeHelper.requireNonNull(constants$996.g_settings_backend_changed_tree$MH,"g_settings_backend_changed_tree");
    }
    public static void g_settings_backend_changed_tree ( Addressable backend,  Addressable tree,  Addressable origin_tag) {
        var mh$ = g_settings_backend_changed_tree$MH();
        try {
            mh$.invokeExact(backend, tree, origin_tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_settings_backend_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$996.g_settings_backend_get_default$MH,"g_settings_backend_get_default");
    }
    public static MemoryAddress g_settings_backend_get_default () {
        var mh$ = g_settings_backend_get_default$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_keyfile_settings_backend_new$MH() {
        return RuntimeHelper.requireNonNull(constants$996.g_keyfile_settings_backend_new$MH,"g_keyfile_settings_backend_new");
    }
    public static MemoryAddress g_keyfile_settings_backend_new ( Addressable filename,  Addressable root_path,  Addressable root_group) {
        var mh$ = g_keyfile_settings_backend_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(filename, root_path, root_group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_null_settings_backend_new$MH() {
        return RuntimeHelper.requireNonNull(constants$996.g_null_settings_backend_new$MH,"g_null_settings_backend_new");
    }
    public static MemoryAddress g_null_settings_backend_new () {
        var mh$ = g_null_settings_backend_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_memory_settings_backend_new$MH() {
        return RuntimeHelper.requireNonNull(constants$996.g_memory_settings_backend_new$MH,"g_memory_settings_backend_new");
    }
    public static MemoryAddress g_memory_settings_backend_new () {
        var mh$ = g_memory_settings_backend_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int SOCK_STREAM() {
        return (int)1L;
    }
    public static int SOCK_DGRAM() {
        return (int)2L;
    }
    public static int SOCK_RAW() {
        return (int)3L;
    }
    public static int SOCK_RDM() {
        return (int)4L;
    }
    public static int SOCK_SEQPACKET() {
        return (int)5L;
    }
    public static int SOCK_DCCP() {
        return (int)6L;
    }
    public static int SOCK_PACKET() {
        return (int)10L;
    }
    public static int SOCK_CLOEXEC() {
        return (int)524288L;
    }
    public static int SOCK_NONBLOCK() {
        return (int)2048L;
    }
    public static int MSG_OOB() {
        return (int)1L;
    }
    public static int MSG_PEEK() {
        return (int)2L;
    }
    public static int MSG_DONTROUTE() {
        return (int)4L;
    }
    public static int MSG_CTRUNC() {
        return (int)8L;
    }
    public static int MSG_PROXY() {
        return (int)16L;
    }
    public static int MSG_TRUNC() {
        return (int)32L;
    }
    public static int MSG_DONTWAIT() {
        return (int)64L;
    }
    public static int MSG_EOR() {
        return (int)128L;
    }
    public static int MSG_WAITALL() {
        return (int)256L;
    }
    public static int MSG_FIN() {
        return (int)512L;
    }
    public static int MSG_SYN() {
        return (int)1024L;
    }
    public static int MSG_CONFIRM() {
        return (int)2048L;
    }
    public static int MSG_RST() {
        return (int)4096L;
    }
    public static int MSG_ERRQUEUE() {
        return (int)8192L;
    }
    public static int MSG_NOSIGNAL() {
        return (int)16384L;
    }
    public static int MSG_MORE() {
        return (int)32768L;
    }
    public static int MSG_WAITFORONE() {
        return (int)65536L;
    }
    public static int MSG_BATCH() {
        return (int)262144L;
    }
    public static int MSG_ZEROCOPY() {
        return (int)67108864L;
    }
    public static int MSG_FASTOPEN() {
        return (int)536870912L;
    }
    public static int MSG_CMSG_CLOEXEC() {
        return (int)1073741824L;
    }
    public static MethodHandle __cmsg_nxthdr$MH() {
        return RuntimeHelper.requireNonNull(constants$996.__cmsg_nxthdr$MH,"__cmsg_nxthdr");
    }
    public static MemoryAddress __cmsg_nxthdr ( Addressable __mhdr,  Addressable __cmsg) {
        var mh$ = __cmsg_nxthdr$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__mhdr, __cmsg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int SCM_RIGHTS() {
        return (int)1L;
    }
    public static OfInt __kernel_key_t = Constants$root.C_INT$LAYOUT;
    public static OfInt __kernel_mqd_t = Constants$root.C_INT$LAYOUT;
    public static OfLong __kernel_long_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfInt __kernel_pid_t = Constants$root.C_INT$LAYOUT;
    public static OfInt __kernel_ipc_pid_t = Constants$root.C_INT$LAYOUT;
    public static OfLong __kernel_suseconds_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfInt __kernel_daddr_t = Constants$root.C_INT$LAYOUT;
    public static OfLong __kernel_ssize_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong __kernel_ptrdiff_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong __kernel_off_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong __kernel_loff_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong __kernel_old_time_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong __kernel_time_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong __kernel_time64_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong __kernel_clock_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfInt __kernel_timer_t = Constants$root.C_INT$LAYOUT;
    public static OfInt __kernel_clockid_t = Constants$root.C_INT$LAYOUT;
    public static OfAddress __kernel_caddr_t = Constants$root.C_POINTER$LAYOUT;
    public static int SHUT_RD() {
        return (int)0L;
    }
    public static int SHUT_WR() {
        return (int)1L;
    }
    public static int SHUT_RDWR() {
        return (int)2L;
    }
    public static MethodHandle socket$MH() {
        return RuntimeHelper.requireNonNull(constants$997.socket$MH,"socket");
    }
    public static int socket ( int __domain,  int __type,  int __protocol) {
        var mh$ = socket$MH();
        try {
            return (int)mh$.invokeExact(__domain, __type, __protocol);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle socketpair$MH() {
        return RuntimeHelper.requireNonNull(constants$997.socketpair$MH,"socketpair");
    }
    public static int socketpair ( int __domain,  int __type,  int __protocol,  Addressable __fds) {
        var mh$ = socketpair$MH();
        try {
            return (int)mh$.invokeExact(__domain, __type, __protocol, __fds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle bind$MH() {
        return RuntimeHelper.requireNonNull(constants$997.bind$MH,"bind");
    }
    public static int bind ( int __fd,  Addressable __addr,  int __len) {
        var mh$ = bind$MH();
        try {
            return (int)mh$.invokeExact(__fd, __addr, __len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getsockname$MH() {
        return RuntimeHelper.requireNonNull(constants$997.getsockname$MH,"getsockname");
    }
    public static int getsockname ( int __fd,  Addressable __addr,  Addressable __len) {
        var mh$ = getsockname$MH();
        try {
            return (int)mh$.invokeExact(__fd, __addr, __len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle connect$MH() {
        return RuntimeHelper.requireNonNull(constants$998.connect$MH,"connect");
    }
    public static int connect ( int __fd,  Addressable __addr,  int __len) {
        var mh$ = connect$MH();
        try {
            return (int)mh$.invokeExact(__fd, __addr, __len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getpeername$MH() {
        return RuntimeHelper.requireNonNull(constants$998.getpeername$MH,"getpeername");
    }
    public static int getpeername ( int __fd,  Addressable __addr,  Addressable __len) {
        var mh$ = getpeername$MH();
        try {
            return (int)mh$.invokeExact(__fd, __addr, __len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle send$MH() {
        return RuntimeHelper.requireNonNull(constants$998.send$MH,"send");
    }
    public static long send ( int __fd,  Addressable __buf,  long __n,  int __flags) {
        var mh$ = send$MH();
        try {
            return (long)mh$.invokeExact(__fd, __buf, __n, __flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle recv$MH() {
        return RuntimeHelper.requireNonNull(constants$998.recv$MH,"recv");
    }
    public static long recv ( int __fd,  Addressable __buf,  long __n,  int __flags) {
        var mh$ = recv$MH();
        try {
            return (long)mh$.invokeExact(__fd, __buf, __n, __flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sendto$MH() {
        return RuntimeHelper.requireNonNull(constants$998.sendto$MH,"sendto");
    }
    public static long sendto ( int __fd,  Addressable __buf,  long __n,  int __flags,  Addressable __addr,  int __addr_len) {
        var mh$ = sendto$MH();
        try {
            return (long)mh$.invokeExact(__fd, __buf, __n, __flags, __addr, __addr_len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle recvfrom$MH() {
        return RuntimeHelper.requireNonNull(constants$998.recvfrom$MH,"recvfrom");
    }
    public static long recvfrom ( int __fd,  Addressable __buf,  long __n,  int __flags,  Addressable __addr,  Addressable __addr_len) {
        var mh$ = recvfrom$MH();
        try {
            return (long)mh$.invokeExact(__fd, __buf, __n, __flags, __addr, __addr_len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sendmsg$MH() {
        return RuntimeHelper.requireNonNull(constants$999.sendmsg$MH,"sendmsg");
    }
    public static long sendmsg ( int __fd,  Addressable __message,  int __flags) {
        var mh$ = sendmsg$MH();
        try {
            return (long)mh$.invokeExact(__fd, __message, __flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle recvmsg$MH() {
        return RuntimeHelper.requireNonNull(constants$999.recvmsg$MH,"recvmsg");
    }
    public static long recvmsg ( int __fd,  Addressable __message,  int __flags) {
        var mh$ = recvmsg$MH();
        try {
            return (long)mh$.invokeExact(__fd, __message, __flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getsockopt$MH() {
        return RuntimeHelper.requireNonNull(constants$999.getsockopt$MH,"getsockopt");
    }
    public static int getsockopt ( int __fd,  int __level,  int __optname,  Addressable __optval,  Addressable __optlen) {
        var mh$ = getsockopt$MH();
        try {
            return (int)mh$.invokeExact(__fd, __level, __optname, __optval, __optlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setsockopt$MH() {
        return RuntimeHelper.requireNonNull(constants$999.setsockopt$MH,"setsockopt");
    }
    public static int setsockopt ( int __fd,  int __level,  int __optname,  Addressable __optval,  int __optlen) {
        var mh$ = setsockopt$MH();
        try {
            return (int)mh$.invokeExact(__fd, __level, __optname, __optval, __optlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle listen$MH() {
        return RuntimeHelper.requireNonNull(constants$999.listen$MH,"listen");
    }
    public static int listen ( int __fd,  int __n) {
        var mh$ = listen$MH();
        try {
            return (int)mh$.invokeExact(__fd, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle accept$MH() {
        return RuntimeHelper.requireNonNull(constants$999.accept$MH,"accept");
    }
    public static int accept ( int __fd,  Addressable __addr,  Addressable __addr_len) {
        var mh$ = accept$MH();
        try {
            return (int)mh$.invokeExact(__fd, __addr, __addr_len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle shutdown$MH() {
        return RuntimeHelper.requireNonNull(constants$1000.shutdown$MH,"shutdown");
    }
    public static int shutdown ( int __fd,  int __how) {
        var mh$ = shutdown$MH();
        try {
            return (int)mh$.invokeExact(__fd, __how);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sockatmark$MH() {
        return RuntimeHelper.requireNonNull(constants$1000.sockatmark$MH,"sockatmark");
    }
    public static int sockatmark ( int __fd) {
        var mh$ = sockatmark$MH();
        try {
            return (int)mh$.invokeExact(__fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle isfdtype$MH() {
        return RuntimeHelper.requireNonNull(constants$1000.isfdtype$MH,"isfdtype");
    }
    public static int isfdtype ( int __fd,  int __fdtype) {
        var mh$ = isfdtype$MH();
        try {
            return (int)mh$.invokeExact(__fd, __fdtype);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int IPPROTO_IP() {
        return (int)0L;
    }
    public static int IPPROTO_ICMP() {
        return (int)1L;
    }
    public static int IPPROTO_IGMP() {
        return (int)2L;
    }
    public static int IPPROTO_IPIP() {
        return (int)4L;
    }
    public static int IPPROTO_TCP() {
        return (int)6L;
    }
    public static int IPPROTO_EGP() {
        return (int)8L;
    }
    public static int IPPROTO_PUP() {
        return (int)12L;
    }
    public static int IPPROTO_UDP() {
        return (int)17L;
    }
    public static int IPPROTO_IDP() {
        return (int)22L;
    }
    public static int IPPROTO_TP() {
        return (int)29L;
    }
    public static int IPPROTO_DCCP() {
        return (int)33L;
    }
    public static int IPPROTO_IPV6() {
        return (int)41L;
    }
    public static int IPPROTO_RSVP() {
        return (int)46L;
    }
    public static int IPPROTO_GRE() {
        return (int)47L;
    }
    public static int IPPROTO_ESP() {
        return (int)50L;
    }
    public static int IPPROTO_AH() {
        return (int)51L;
    }
    public static int IPPROTO_MTP() {
        return (int)92L;
    }
    public static int IPPROTO_BEETPH() {
        return (int)94L;
    }
    public static int IPPROTO_ENCAP() {
        return (int)98L;
    }
    public static int IPPROTO_PIM() {
        return (int)103L;
    }
    public static int IPPROTO_COMP() {
        return (int)108L;
    }
    public static int IPPROTO_SCTP() {
        return (int)132L;
    }
    public static int IPPROTO_UDPLITE() {
        return (int)136L;
    }
    public static int IPPROTO_MPLS() {
        return (int)137L;
    }
    public static int IPPROTO_ETHERNET() {
        return (int)143L;
    }
    public static int IPPROTO_RAW() {
        return (int)255L;
    }
    public static int IPPROTO_MPTCP() {
        return (int)262L;
    }
    public static int IPPROTO_MAX() {
        return (int)263L;
    }
    public static int IPPROTO_HOPOPTS() {
        return (int)0L;
    }
    public static int IPPROTO_ROUTING() {
        return (int)43L;
    }
    public static int IPPROTO_FRAGMENT() {
        return (int)44L;
    }
    public static int IPPROTO_ICMPV6() {
        return (int)58L;
    }
    public static int IPPROTO_NONE() {
        return (int)59L;
    }
    public static int IPPROTO_DSTOPTS() {
        return (int)60L;
    }
    public static int IPPROTO_MH() {
        return (int)135L;
    }
    public static int IPPORT_ECHO() {
        return (int)7L;
    }
    public static int IPPORT_DISCARD() {
        return (int)9L;
    }
    public static int IPPORT_SYSTAT() {
        return (int)11L;
    }
    public static int IPPORT_DAYTIME() {
        return (int)13L;
    }
    public static int IPPORT_NETSTAT() {
        return (int)15L;
    }
    public static int IPPORT_FTP() {
        return (int)21L;
    }
    public static int IPPORT_TELNET() {
        return (int)23L;
    }
    public static int IPPORT_SMTP() {
        return (int)25L;
    }
    public static int IPPORT_TIMESERVER() {
        return (int)37L;
    }
    public static int IPPORT_NAMESERVER() {
        return (int)42L;
    }
    public static int IPPORT_WHOIS() {
        return (int)43L;
    }
    public static int IPPORT_MTP() {
        return (int)57L;
    }
    public static int IPPORT_TFTP() {
        return (int)69L;
    }
    public static int IPPORT_RJE() {
        return (int)77L;
    }
    public static int IPPORT_FINGER() {
        return (int)79L;
    }
    public static int IPPORT_TTYLINK() {
        return (int)87L;
    }
    public static int IPPORT_SUPDUP() {
        return (int)95L;
    }
    public static int IPPORT_EXECSERVER() {
        return (int)512L;
    }
    public static int IPPORT_LOGINSERVER() {
        return (int)513L;
    }
    public static int IPPORT_CMDSERVER() {
        return (int)514L;
    }
    public static int IPPORT_EFSSERVER() {
        return (int)520L;
    }
    public static int IPPORT_BIFFUDP() {
        return (int)512L;
    }
    public static int IPPORT_WHOSERVER() {
        return (int)513L;
    }
    public static int IPPORT_ROUTESERVER() {
        return (int)520L;
    }
    public static int IPPORT_USERRESERVED() {
        return (int)5000L;
    }
    public static MemorySegment in6addr_any$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1000.in6addr_any$SEGMENT,"in6addr_any");
    }
    public static MemorySegment in6addr_loopback$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1000.in6addr_loopback$SEGMENT,"in6addr_loopback");
    }
    public static MethodHandle ntohl$MH() {
        return RuntimeHelper.requireNonNull(constants$1000.ntohl$MH,"ntohl");
    }
    public static int ntohl ( int __netlong) {
        var mh$ = ntohl$MH();
        try {
            return (int)mh$.invokeExact(__netlong);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ntohs$MH() {
        return RuntimeHelper.requireNonNull(constants$1001.ntohs$MH,"ntohs");
    }
    public static short ntohs ( short __netshort) {
        var mh$ = ntohs$MH();
        try {
            return (short)mh$.invokeExact(__netshort);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle htonl$MH() {
        return RuntimeHelper.requireNonNull(constants$1001.htonl$MH,"htonl");
    }
    public static int htonl ( int __hostlong) {
        var mh$ = htonl$MH();
        try {
            return (int)mh$.invokeExact(__hostlong);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle htons$MH() {
        return RuntimeHelper.requireNonNull(constants$1001.htons$MH,"htons");
    }
    public static short htons ( short __hostshort) {
        var mh$ = htons$MH();
        try {
            return (short)mh$.invokeExact(__hostshort);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle bindresvport$MH() {
        return RuntimeHelper.requireNonNull(constants$1001.bindresvport$MH,"bindresvport");
    }
    public static int bindresvport ( int __sockfd,  Addressable __sock_in) {
        var mh$ = bindresvport$MH();
        try {
            return (int)mh$.invokeExact(__sockfd, __sock_in);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle bindresvport6$MH() {
        return RuntimeHelper.requireNonNull(constants$1001.bindresvport6$MH,"bindresvport6");
    }
    public static int bindresvport6 ( int __sockfd,  Addressable __sock_in) {
        var mh$ = bindresvport6$MH();
        try {
            return (int)mh$.invokeExact(__sockfd, __sock_in);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setrpcent$MH() {
        return RuntimeHelper.requireNonNull(constants$1001.setrpcent$MH,"setrpcent");
    }
    public static void setrpcent ( int __stayopen) {
        var mh$ = setrpcent$MH();
        try {
            mh$.invokeExact(__stayopen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle endrpcent$MH() {
        return RuntimeHelper.requireNonNull(constants$1002.endrpcent$MH,"endrpcent");
    }
    public static void endrpcent () {
        var mh$ = endrpcent$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getrpcbyname$MH() {
        return RuntimeHelper.requireNonNull(constants$1002.getrpcbyname$MH,"getrpcbyname");
    }
    public static MemoryAddress getrpcbyname ( Addressable __name) {
        var mh$ = getrpcbyname$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getrpcbynumber$MH() {
        return RuntimeHelper.requireNonNull(constants$1002.getrpcbynumber$MH,"getrpcbynumber");
    }
    public static MemoryAddress getrpcbynumber ( int __number) {
        var mh$ = getrpcbynumber$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getrpcent$MH() {
        return RuntimeHelper.requireNonNull(constants$1002.getrpcent$MH,"getrpcent");
    }
    public static MemoryAddress getrpcent () {
        var mh$ = getrpcent$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getrpcbyname_r$MH() {
        return RuntimeHelper.requireNonNull(constants$1002.getrpcbyname_r$MH,"getrpcbyname_r");
    }
    public static int getrpcbyname_r ( Addressable __name,  Addressable __result_buf,  Addressable __buffer,  long __buflen,  Addressable __result) {
        var mh$ = getrpcbyname_r$MH();
        try {
            return (int)mh$.invokeExact(__name, __result_buf, __buffer, __buflen, __result);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getrpcbynumber_r$MH() {
        return RuntimeHelper.requireNonNull(constants$1002.getrpcbynumber_r$MH,"getrpcbynumber_r");
    }
    public static int getrpcbynumber_r ( int __number,  Addressable __result_buf,  Addressable __buffer,  long __buflen,  Addressable __result) {
        var mh$ = getrpcbynumber_r$MH();
        try {
            return (int)mh$.invokeExact(__number, __result_buf, __buffer, __buflen, __result);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getrpcent_r$MH() {
        return RuntimeHelper.requireNonNull(constants$1003.getrpcent_r$MH,"getrpcent_r");
    }
    public static int getrpcent_r ( Addressable __result_buf,  Addressable __buffer,  long __buflen,  Addressable __result) {
        var mh$ = getrpcent_r$MH();
        try {
            return (int)mh$.invokeExact(__result_buf, __buffer, __buflen, __result);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __h_errno_location$MH() {
        return RuntimeHelper.requireNonNull(constants$1003.__h_errno_location$MH,"__h_errno_location");
    }
    public static MemoryAddress __h_errno_location () {
        var mh$ = __h_errno_location$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle herror$MH() {
        return RuntimeHelper.requireNonNull(constants$1003.herror$MH,"herror");
    }
    public static void herror ( Addressable __str) {
        var mh$ = herror$MH();
        try {
            mh$.invokeExact(__str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hstrerror$MH() {
        return RuntimeHelper.requireNonNull(constants$1003.hstrerror$MH,"hstrerror");
    }
    public static MemoryAddress hstrerror ( int __err_num) {
        var mh$ = hstrerror$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__err_num);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sethostent$MH() {
        return RuntimeHelper.requireNonNull(constants$1003.sethostent$MH,"sethostent");
    }
    public static void sethostent ( int __stay_open) {
        var mh$ = sethostent$MH();
        try {
            mh$.invokeExact(__stay_open);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle endhostent$MH() {
        return RuntimeHelper.requireNonNull(constants$1003.endhostent$MH,"endhostent");
    }
    public static void endhostent () {
        var mh$ = endhostent$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gethostent$MH() {
        return RuntimeHelper.requireNonNull(constants$1004.gethostent$MH,"gethostent");
    }
    public static MemoryAddress gethostent () {
        var mh$ = gethostent$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gethostbyaddr$MH() {
        return RuntimeHelper.requireNonNull(constants$1004.gethostbyaddr$MH,"gethostbyaddr");
    }
    public static MemoryAddress gethostbyaddr ( Addressable __addr,  int __len,  int __type) {
        var mh$ = gethostbyaddr$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__addr, __len, __type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gethostbyname$MH() {
        return RuntimeHelper.requireNonNull(constants$1004.gethostbyname$MH,"gethostbyname");
    }
    public static MemoryAddress gethostbyname ( Addressable __name) {
        var mh$ = gethostbyname$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gethostbyname2$MH() {
        return RuntimeHelper.requireNonNull(constants$1004.gethostbyname2$MH,"gethostbyname2");
    }
    public static MemoryAddress gethostbyname2 ( Addressable __name,  int __af) {
        var mh$ = gethostbyname2$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__name, __af);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gethostent_r$MH() {
        return RuntimeHelper.requireNonNull(constants$1004.gethostent_r$MH,"gethostent_r");
    }
    public static int gethostent_r ( Addressable __result_buf,  Addressable __buf,  long __buflen,  Addressable __result,  Addressable __h_errnop) {
        var mh$ = gethostent_r$MH();
        try {
            return (int)mh$.invokeExact(__result_buf, __buf, __buflen, __result, __h_errnop);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gethostbyaddr_r$MH() {
        return RuntimeHelper.requireNonNull(constants$1004.gethostbyaddr_r$MH,"gethostbyaddr_r");
    }
    public static int gethostbyaddr_r ( Addressable __addr,  int __len,  int __type,  Addressable __result_buf,  Addressable __buf,  long __buflen,  Addressable __result,  Addressable __h_errnop) {
        var mh$ = gethostbyaddr_r$MH();
        try {
            return (int)mh$.invokeExact(__addr, __len, __type, __result_buf, __buf, __buflen, __result, __h_errnop);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gethostbyname_r$MH() {
        return RuntimeHelper.requireNonNull(constants$1005.gethostbyname_r$MH,"gethostbyname_r");
    }
    public static int gethostbyname_r ( Addressable __name,  Addressable __result_buf,  Addressable __buf,  long __buflen,  Addressable __result,  Addressable __h_errnop) {
        var mh$ = gethostbyname_r$MH();
        try {
            return (int)mh$.invokeExact(__name, __result_buf, __buf, __buflen, __result, __h_errnop);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gethostbyname2_r$MH() {
        return RuntimeHelper.requireNonNull(constants$1005.gethostbyname2_r$MH,"gethostbyname2_r");
    }
    public static int gethostbyname2_r ( Addressable __name,  int __af,  Addressable __result_buf,  Addressable __buf,  long __buflen,  Addressable __result,  Addressable __h_errnop) {
        var mh$ = gethostbyname2_r$MH();
        try {
            return (int)mh$.invokeExact(__name, __af, __result_buf, __buf, __buflen, __result, __h_errnop);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setnetent$MH() {
        return RuntimeHelper.requireNonNull(constants$1005.setnetent$MH,"setnetent");
    }
    public static void setnetent ( int __stay_open) {
        var mh$ = setnetent$MH();
        try {
            mh$.invokeExact(__stay_open);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle endnetent$MH() {
        return RuntimeHelper.requireNonNull(constants$1005.endnetent$MH,"endnetent");
    }
    public static void endnetent () {
        var mh$ = endnetent$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getnetent$MH() {
        return RuntimeHelper.requireNonNull(constants$1005.getnetent$MH,"getnetent");
    }
    public static MemoryAddress getnetent () {
        var mh$ = getnetent$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getnetbyaddr$MH() {
        return RuntimeHelper.requireNonNull(constants$1005.getnetbyaddr$MH,"getnetbyaddr");
    }
    public static MemoryAddress getnetbyaddr ( int __net,  int __type) {
        var mh$ = getnetbyaddr$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__net, __type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getnetbyname$MH() {
        return RuntimeHelper.requireNonNull(constants$1006.getnetbyname$MH,"getnetbyname");
    }
    public static MemoryAddress getnetbyname ( Addressable __name) {
        var mh$ = getnetbyname$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getnetent_r$MH() {
        return RuntimeHelper.requireNonNull(constants$1006.getnetent_r$MH,"getnetent_r");
    }
    public static int getnetent_r ( Addressable __result_buf,  Addressable __buf,  long __buflen,  Addressable __result,  Addressable __h_errnop) {
        var mh$ = getnetent_r$MH();
        try {
            return (int)mh$.invokeExact(__result_buf, __buf, __buflen, __result, __h_errnop);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getnetbyaddr_r$MH() {
        return RuntimeHelper.requireNonNull(constants$1006.getnetbyaddr_r$MH,"getnetbyaddr_r");
    }
    public static int getnetbyaddr_r ( int __net,  int __type,  Addressable __result_buf,  Addressable __buf,  long __buflen,  Addressable __result,  Addressable __h_errnop) {
        var mh$ = getnetbyaddr_r$MH();
        try {
            return (int)mh$.invokeExact(__net, __type, __result_buf, __buf, __buflen, __result, __h_errnop);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getnetbyname_r$MH() {
        return RuntimeHelper.requireNonNull(constants$1006.getnetbyname_r$MH,"getnetbyname_r");
    }
    public static int getnetbyname_r ( Addressable __name,  Addressable __result_buf,  Addressable __buf,  long __buflen,  Addressable __result,  Addressable __h_errnop) {
        var mh$ = getnetbyname_r$MH();
        try {
            return (int)mh$.invokeExact(__name, __result_buf, __buf, __buflen, __result, __h_errnop);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setservent$MH() {
        return RuntimeHelper.requireNonNull(constants$1006.setservent$MH,"setservent");
    }
    public static void setservent ( int __stay_open) {
        var mh$ = setservent$MH();
        try {
            mh$.invokeExact(__stay_open);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle endservent$MH() {
        return RuntimeHelper.requireNonNull(constants$1006.endservent$MH,"endservent");
    }
    public static void endservent () {
        var mh$ = endservent$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getservent$MH() {
        return RuntimeHelper.requireNonNull(constants$1007.getservent$MH,"getservent");
    }
    public static MemoryAddress getservent () {
        var mh$ = getservent$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getservbyname$MH() {
        return RuntimeHelper.requireNonNull(constants$1007.getservbyname$MH,"getservbyname");
    }
    public static MemoryAddress getservbyname ( Addressable __name,  Addressable __proto) {
        var mh$ = getservbyname$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__name, __proto);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getservbyport$MH() {
        return RuntimeHelper.requireNonNull(constants$1007.getservbyport$MH,"getservbyport");
    }
    public static MemoryAddress getservbyport ( int __port,  Addressable __proto) {
        var mh$ = getservbyport$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__port, __proto);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getservent_r$MH() {
        return RuntimeHelper.requireNonNull(constants$1007.getservent_r$MH,"getservent_r");
    }
    public static int getservent_r ( Addressable __result_buf,  Addressable __buf,  long __buflen,  Addressable __result) {
        var mh$ = getservent_r$MH();
        try {
            return (int)mh$.invokeExact(__result_buf, __buf, __buflen, __result);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getservbyname_r$MH() {
        return RuntimeHelper.requireNonNull(constants$1007.getservbyname_r$MH,"getservbyname_r");
    }
    public static int getservbyname_r ( Addressable __name,  Addressable __proto,  Addressable __result_buf,  Addressable __buf,  long __buflen,  Addressable __result) {
        var mh$ = getservbyname_r$MH();
        try {
            return (int)mh$.invokeExact(__name, __proto, __result_buf, __buf, __buflen, __result);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getservbyport_r$MH() {
        return RuntimeHelper.requireNonNull(constants$1007.getservbyport_r$MH,"getservbyport_r");
    }
    public static int getservbyport_r ( int __port,  Addressable __proto,  Addressable __result_buf,  Addressable __buf,  long __buflen,  Addressable __result) {
        var mh$ = getservbyport_r$MH();
        try {
            return (int)mh$.invokeExact(__port, __proto, __result_buf, __buf, __buflen, __result);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setprotoent$MH() {
        return RuntimeHelper.requireNonNull(constants$1008.setprotoent$MH,"setprotoent");
    }
    public static void setprotoent ( int __stay_open) {
        var mh$ = setprotoent$MH();
        try {
            mh$.invokeExact(__stay_open);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle endprotoent$MH() {
        return RuntimeHelper.requireNonNull(constants$1008.endprotoent$MH,"endprotoent");
    }
    public static void endprotoent () {
        var mh$ = endprotoent$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getprotoent$MH() {
        return RuntimeHelper.requireNonNull(constants$1008.getprotoent$MH,"getprotoent");
    }
    public static MemoryAddress getprotoent () {
        var mh$ = getprotoent$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getprotobyname$MH() {
        return RuntimeHelper.requireNonNull(constants$1008.getprotobyname$MH,"getprotobyname");
    }
    public static MemoryAddress getprotobyname ( Addressable __name) {
        var mh$ = getprotobyname$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getprotobynumber$MH() {
        return RuntimeHelper.requireNonNull(constants$1008.getprotobynumber$MH,"getprotobynumber");
    }
    public static MemoryAddress getprotobynumber ( int __proto) {
        var mh$ = getprotobynumber$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__proto);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getprotoent_r$MH() {
        return RuntimeHelper.requireNonNull(constants$1008.getprotoent_r$MH,"getprotoent_r");
    }
    public static int getprotoent_r ( Addressable __result_buf,  Addressable __buf,  long __buflen,  Addressable __result) {
        var mh$ = getprotoent_r$MH();
        try {
            return (int)mh$.invokeExact(__result_buf, __buf, __buflen, __result);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getprotobyname_r$MH() {
        return RuntimeHelper.requireNonNull(constants$1009.getprotobyname_r$MH,"getprotobyname_r");
    }
    public static int getprotobyname_r ( Addressable __name,  Addressable __result_buf,  Addressable __buf,  long __buflen,  Addressable __result) {
        var mh$ = getprotobyname_r$MH();
        try {
            return (int)mh$.invokeExact(__name, __result_buf, __buf, __buflen, __result);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getprotobynumber_r$MH() {
        return RuntimeHelper.requireNonNull(constants$1009.getprotobynumber_r$MH,"getprotobynumber_r");
    }
    public static int getprotobynumber_r ( int __proto,  Addressable __result_buf,  Addressable __buf,  long __buflen,  Addressable __result) {
        var mh$ = getprotobynumber_r$MH();
        try {
            return (int)mh$.invokeExact(__proto, __result_buf, __buf, __buflen, __result);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setnetgrent$MH() {
        return RuntimeHelper.requireNonNull(constants$1009.setnetgrent$MH,"setnetgrent");
    }
    public static int setnetgrent ( Addressable __netgroup) {
        var mh$ = setnetgrent$MH();
        try {
            return (int)mh$.invokeExact(__netgroup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle endnetgrent$MH() {
        return RuntimeHelper.requireNonNull(constants$1009.endnetgrent$MH,"endnetgrent");
    }
    public static void endnetgrent () {
        var mh$ = endnetgrent$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getnetgrent$MH() {
        return RuntimeHelper.requireNonNull(constants$1009.getnetgrent$MH,"getnetgrent");
    }
    public static int getnetgrent ( Addressable __hostp,  Addressable __userp,  Addressable __domainp) {
        var mh$ = getnetgrent$MH();
        try {
            return (int)mh$.invokeExact(__hostp, __userp, __domainp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle innetgr$MH() {
        return RuntimeHelper.requireNonNull(constants$1009.innetgr$MH,"innetgr");
    }
    public static int innetgr ( Addressable __netgroup,  Addressable __host,  Addressable __user,  Addressable __domain) {
        var mh$ = innetgr$MH();
        try {
            return (int)mh$.invokeExact(__netgroup, __host, __user, __domain);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getnetgrent_r$MH() {
        return RuntimeHelper.requireNonNull(constants$1010.getnetgrent_r$MH,"getnetgrent_r");
    }
    public static int getnetgrent_r ( Addressable __hostp,  Addressable __userp,  Addressable __domainp,  Addressable __buffer,  long __buflen) {
        var mh$ = getnetgrent_r$MH();
        try {
            return (int)mh$.invokeExact(__hostp, __userp, __domainp, __buffer, __buflen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rcmd$MH() {
        return RuntimeHelper.requireNonNull(constants$1010.rcmd$MH,"rcmd");
    }
    public static int rcmd ( Addressable __ahost,  short __rport,  Addressable __locuser,  Addressable __remuser,  Addressable __cmd,  Addressable __fd2p) {
        var mh$ = rcmd$MH();
        try {
            return (int)mh$.invokeExact(__ahost, __rport, __locuser, __remuser, __cmd, __fd2p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rcmd_af$MH() {
        return RuntimeHelper.requireNonNull(constants$1010.rcmd_af$MH,"rcmd_af");
    }
    public static int rcmd_af ( Addressable __ahost,  short __rport,  Addressable __locuser,  Addressable __remuser,  Addressable __cmd,  Addressable __fd2p,  short __af) {
        var mh$ = rcmd_af$MH();
        try {
            return (int)mh$.invokeExact(__ahost, __rport, __locuser, __remuser, __cmd, __fd2p, __af);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rexec$MH() {
        return RuntimeHelper.requireNonNull(constants$1010.rexec$MH,"rexec");
    }
    public static int rexec ( Addressable __ahost,  int __rport,  Addressable __name,  Addressable __pass,  Addressable __cmd,  Addressable __fd2p) {
        var mh$ = rexec$MH();
        try {
            return (int)mh$.invokeExact(__ahost, __rport, __name, __pass, __cmd, __fd2p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rexec_af$MH() {
        return RuntimeHelper.requireNonNull(constants$1010.rexec_af$MH,"rexec_af");
    }
    public static int rexec_af ( Addressable __ahost,  int __rport,  Addressable __name,  Addressable __pass,  Addressable __cmd,  Addressable __fd2p,  short __af) {
        var mh$ = rexec_af$MH();
        try {
            return (int)mh$.invokeExact(__ahost, __rport, __name, __pass, __cmd, __fd2p, __af);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ruserok$MH() {
        return RuntimeHelper.requireNonNull(constants$1010.ruserok$MH,"ruserok");
    }
    public static int ruserok ( Addressable __rhost,  int __suser,  Addressable __remuser,  Addressable __locuser) {
        var mh$ = ruserok$MH();
        try {
            return (int)mh$.invokeExact(__rhost, __suser, __remuser, __locuser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ruserok_af$MH() {
        return RuntimeHelper.requireNonNull(constants$1011.ruserok_af$MH,"ruserok_af");
    }
    public static int ruserok_af ( Addressable __rhost,  int __suser,  Addressable __remuser,  Addressable __locuser,  short __af) {
        var mh$ = ruserok_af$MH();
        try {
            return (int)mh$.invokeExact(__rhost, __suser, __remuser, __locuser, __af);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle iruserok$MH() {
        return RuntimeHelper.requireNonNull(constants$1011.iruserok$MH,"iruserok");
    }
    public static int iruserok ( int __raddr,  int __suser,  Addressable __remuser,  Addressable __locuser) {
        var mh$ = iruserok$MH();
        try {
            return (int)mh$.invokeExact(__raddr, __suser, __remuser, __locuser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle iruserok_af$MH() {
        return RuntimeHelper.requireNonNull(constants$1011.iruserok_af$MH,"iruserok_af");
    }
    public static int iruserok_af ( Addressable __raddr,  int __suser,  Addressable __remuser,  Addressable __locuser,  short __af) {
        var mh$ = iruserok_af$MH();
        try {
            return (int)mh$.invokeExact(__raddr, __suser, __remuser, __locuser, __af);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rresvport$MH() {
        return RuntimeHelper.requireNonNull(constants$1011.rresvport$MH,"rresvport");
    }
    public static int rresvport ( Addressable __alport) {
        var mh$ = rresvport$MH();
        try {
            return (int)mh$.invokeExact(__alport);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rresvport_af$MH() {
        return RuntimeHelper.requireNonNull(constants$1011.rresvport_af$MH,"rresvport_af");
    }
    public static int rresvport_af ( Addressable __alport,  short __af) {
        var mh$ = rresvport_af$MH();
        try {
            return (int)mh$.invokeExact(__alport, __af);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getaddrinfo$MH() {
        return RuntimeHelper.requireNonNull(constants$1011.getaddrinfo$MH,"getaddrinfo");
    }
    public static int getaddrinfo ( Addressable __name,  Addressable __service,  Addressable __req,  Addressable __pai) {
        var mh$ = getaddrinfo$MH();
        try {
            return (int)mh$.invokeExact(__name, __service, __req, __pai);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle freeaddrinfo$MH() {
        return RuntimeHelper.requireNonNull(constants$1012.freeaddrinfo$MH,"freeaddrinfo");
    }
    public static void freeaddrinfo ( Addressable __ai) {
        var mh$ = freeaddrinfo$MH();
        try {
            mh$.invokeExact(__ai);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gai_strerror$MH() {
        return RuntimeHelper.requireNonNull(constants$1012.gai_strerror$MH,"gai_strerror");
    }
    public static MemoryAddress gai_strerror ( int __ecode) {
        var mh$ = gai_strerror$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__ecode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getnameinfo$MH() {
        return RuntimeHelper.requireNonNull(constants$1012.getnameinfo$MH,"getnameinfo");
    }
    public static int getnameinfo ( Addressable __sa,  int __salen,  Addressable __host,  int __hostlen,  Addressable __serv,  int __servlen,  int __flags) {
        var mh$ = getnameinfo$MH();
        try {
            return (int)mh$.invokeExact(__sa, __salen, __host, __hostlen, __serv, __servlen, __flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfShort int_least16_t = Constants$root.C_SHORT$LAYOUT;
    public static OfInt int_least32_t = Constants$root.C_INT$LAYOUT;
    public static OfLong int_least64_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong int_fast16_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong int_fast32_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong int_fast64_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong intmax_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static int TCP_ESTABLISHED() {
        return (int)1L;
    }
    public static int TCP_SYN_SENT() {
        return (int)2L;
    }
    public static int TCP_SYN_RECV() {
        return (int)3L;
    }
    public static int TCP_FIN_WAIT1() {
        return (int)4L;
    }
    public static int TCP_FIN_WAIT2() {
        return (int)5L;
    }
    public static int TCP_TIME_WAIT() {
        return (int)6L;
    }
    public static int TCP_CLOSE() {
        return (int)7L;
    }
    public static int TCP_CLOSE_WAIT() {
        return (int)8L;
    }
    public static int TCP_LAST_ACK() {
        return (int)9L;
    }
    public static int TCP_LISTEN() {
        return (int)10L;
    }
    public static int TCP_CLOSING() {
        return (int)11L;
    }
    public static int TCP_CA_Open() {
        return (int)0L;
    }
    public static int TCP_CA_Disorder() {
        return (int)1L;
    }
    public static int TCP_CA_CWR() {
        return (int)2L;
    }
    public static int TCP_CA_Recovery() {
        return (int)3L;
    }
    public static int TCP_CA_Loss() {
        return (int)4L;
    }
    public static int TCP_NO_QUEUE() {
        return (int)0L;
    }
    public static int TCP_RECV_QUEUE() {
        return (int)1L;
    }
    public static int TCP_SEND_QUEUE() {
        return (int)2L;
    }
    public static int TCP_QUEUES_NR() {
        return (int)3L;
    }
    public static MemoryLayout stdin$LAYOUT() {
        return constants$1012.stdin$LAYOUT;
    }
    public static VarHandle stdin$VH() {
        return constants$1012.stdin$VH;
    }
    public static MemorySegment stdin$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1012.stdin$SEGMENT,"stdin");
    }
    public static MemoryAddress stdin$get() {
        return (java.lang.foreign.MemoryAddress) constants$1012.stdin$VH.get(RuntimeHelper.requireNonNull(constants$1012.stdin$SEGMENT, "stdin"));
    }
    public static void stdin$set( MemoryAddress x) {
        constants$1012.stdin$VH.set(RuntimeHelper.requireNonNull(constants$1012.stdin$SEGMENT, "stdin"), x);
    }
    public static MemoryLayout stdout$LAYOUT() {
        return constants$1012.stdout$LAYOUT;
    }
    public static VarHandle stdout$VH() {
        return constants$1012.stdout$VH;
    }
    public static MemorySegment stdout$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1012.stdout$SEGMENT,"stdout");
    }
    public static MemoryAddress stdout$get() {
        return (java.lang.foreign.MemoryAddress) constants$1012.stdout$VH.get(RuntimeHelper.requireNonNull(constants$1012.stdout$SEGMENT, "stdout"));
    }
    public static void stdout$set( MemoryAddress x) {
        constants$1012.stdout$VH.set(RuntimeHelper.requireNonNull(constants$1012.stdout$SEGMENT, "stdout"), x);
    }
    public static MemoryLayout stderr$LAYOUT() {
        return constants$1012.stderr$LAYOUT;
    }
    public static VarHandle stderr$VH() {
        return constants$1012.stderr$VH;
    }
    public static MemorySegment stderr$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1012.stderr$SEGMENT,"stderr");
    }
    public static MemoryAddress stderr$get() {
        return (java.lang.foreign.MemoryAddress) constants$1012.stderr$VH.get(RuntimeHelper.requireNonNull(constants$1012.stderr$SEGMENT, "stderr"));
    }
    public static void stderr$set( MemoryAddress x) {
        constants$1012.stderr$VH.set(RuntimeHelper.requireNonNull(constants$1012.stderr$SEGMENT, "stderr"), x);
    }
    public static MethodHandle remove$MH() {
        return RuntimeHelper.requireNonNull(constants$1013.remove$MH,"remove");
    }
    public static int remove ( Addressable __filename) {
        var mh$ = remove$MH();
        try {
            return (int)mh$.invokeExact(__filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rename$MH() {
        return RuntimeHelper.requireNonNull(constants$1013.rename$MH,"rename");
    }
    public static int rename ( Addressable __old,  Addressable __new) {
        var mh$ = rename$MH();
        try {
            return (int)mh$.invokeExact(__old, __new);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle renameat$MH() {
        return RuntimeHelper.requireNonNull(constants$1013.renameat$MH,"renameat");
    }
    public static int renameat ( int __oldfd,  Addressable __old,  int __newfd,  Addressable __new) {
        var mh$ = renameat$MH();
        try {
            return (int)mh$.invokeExact(__oldfd, __old, __newfd, __new);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fclose$MH() {
        return RuntimeHelper.requireNonNull(constants$1013.fclose$MH,"fclose");
    }
    public static int fclose ( Addressable __stream) {
        var mh$ = fclose$MH();
        try {
            return (int)mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle tmpfile$MH() {
        return RuntimeHelper.requireNonNull(constants$1013.tmpfile$MH,"tmpfile");
    }
    public static MemoryAddress tmpfile () {
        var mh$ = tmpfile$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle tmpnam$MH() {
        return RuntimeHelper.requireNonNull(constants$1013.tmpnam$MH,"tmpnam");
    }
    public static MemoryAddress tmpnam ( Addressable x0) {
        var mh$ = tmpnam$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle tmpnam_r$MH() {
        return RuntimeHelper.requireNonNull(constants$1014.tmpnam_r$MH,"tmpnam_r");
    }
    public static MemoryAddress tmpnam_r ( Addressable __s) {
        var mh$ = tmpnam_r$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle tempnam$MH() {
        return RuntimeHelper.requireNonNull(constants$1014.tempnam$MH,"tempnam");
    }
    public static MemoryAddress tempnam ( Addressable __dir,  Addressable __pfx) {
        var mh$ = tempnam$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__dir, __pfx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fflush$MH() {
        return RuntimeHelper.requireNonNull(constants$1014.fflush$MH,"fflush");
    }
    public static int fflush ( Addressable __stream) {
        var mh$ = fflush$MH();
        try {
            return (int)mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fflush_unlocked$MH() {
        return RuntimeHelper.requireNonNull(constants$1014.fflush_unlocked$MH,"fflush_unlocked");
    }
    public static int fflush_unlocked ( Addressable __stream) {
        var mh$ = fflush_unlocked$MH();
        try {
            return (int)mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fopen$MH() {
        return RuntimeHelper.requireNonNull(constants$1014.fopen$MH,"fopen");
    }
    public static MemoryAddress fopen ( Addressable __filename,  Addressable __modes) {
        var mh$ = fopen$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__filename, __modes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle freopen$MH() {
        return RuntimeHelper.requireNonNull(constants$1014.freopen$MH,"freopen");
    }
    public static MemoryAddress freopen ( Addressable __filename,  Addressable __modes,  Addressable __stream) {
        var mh$ = freopen$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__filename, __modes, __stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fdopen$MH() {
        return RuntimeHelper.requireNonNull(constants$1015.fdopen$MH,"fdopen");
    }
    public static MemoryAddress fdopen ( int __fd,  Addressable __modes) {
        var mh$ = fdopen$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__fd, __modes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fmemopen$MH() {
        return RuntimeHelper.requireNonNull(constants$1015.fmemopen$MH,"fmemopen");
    }
    public static MemoryAddress fmemopen ( Addressable __s,  long __len,  Addressable __modes) {
        var mh$ = fmemopen$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__s, __len, __modes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle open_memstream$MH() {
        return RuntimeHelper.requireNonNull(constants$1015.open_memstream$MH,"open_memstream");
    }
    public static MemoryAddress open_memstream ( Addressable __bufloc,  Addressable __sizeloc) {
        var mh$ = open_memstream$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__bufloc, __sizeloc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$1015.setbuf$MH,"setbuf");
    }
    public static void setbuf ( Addressable __stream,  Addressable __buf) {
        var mh$ = setbuf$MH();
        try {
            mh$.invokeExact(__stream, __buf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setvbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$1015.setvbuf$MH,"setvbuf");
    }
    public static int setvbuf ( Addressable __stream,  Addressable __buf,  int __modes,  long __n) {
        var mh$ = setvbuf$MH();
        try {
            return (int)mh$.invokeExact(__stream, __buf, __modes, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setbuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$1015.setbuffer$MH,"setbuffer");
    }
    public static void setbuffer ( Addressable __stream,  Addressable __buf,  long __size) {
        var mh$ = setbuffer$MH();
        try {
            mh$.invokeExact(__stream, __buf, __size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setlinebuf$MH() {
        return RuntimeHelper.requireNonNull(constants$1016.setlinebuf$MH,"setlinebuf");
    }
    public static void setlinebuf ( Addressable __stream) {
        var mh$ = setlinebuf$MH();
        try {
            mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$1016.fprintf$MH,"fprintf");
    }
    public static int fprintf ( Addressable __stream,  Addressable __format, Object... x2) {
        var mh$ = fprintf$MH();
        try {
            return (int)mh$.invokeExact(__stream, __format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle printf$MH() {
        return RuntimeHelper.requireNonNull(constants$1016.printf$MH,"printf");
    }
    public static int printf ( Addressable __format, Object... x1) {
        var mh$ = printf$MH();
        try {
            return (int)mh$.invokeExact(__format, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$1016.sprintf$MH,"sprintf");
    }
    public static int sprintf ( Addressable __s,  Addressable __format, Object... x2) {
        var mh$ = sprintf$MH();
        try {
            return (int)mh$.invokeExact(__s, __format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vfprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$1016.vfprintf$MH,"vfprintf");
    }
    public static int vfprintf ( Addressable __s,  Addressable __format,  Addressable __arg) {
        var mh$ = vfprintf$MH();
        try {
            return (int)mh$.invokeExact(__s, __format, __arg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$1016.vprintf$MH,"vprintf");
    }
    public static int vprintf ( Addressable __format,  Addressable __arg) {
        var mh$ = vprintf$MH();
        try {
            return (int)mh$.invokeExact(__format, __arg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vsprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$1017.vsprintf$MH,"vsprintf");
    }
    public static int vsprintf ( Addressable __s,  Addressable __format,  Addressable __arg) {
        var mh$ = vsprintf$MH();
        try {
            return (int)mh$.invokeExact(__s, __format, __arg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle snprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$1017.snprintf$MH,"snprintf");
    }
    public static int snprintf ( Addressable __s,  long __maxlen,  Addressable __format, Object... x3) {
        var mh$ = snprintf$MH();
        try {
            return (int)mh$.invokeExact(__s, __maxlen, __format, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vsnprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$1017.vsnprintf$MH,"vsnprintf");
    }
    public static int vsnprintf ( Addressable __s,  long __maxlen,  Addressable __format,  Addressable __arg) {
        var mh$ = vsnprintf$MH();
        try {
            return (int)mh$.invokeExact(__s, __maxlen, __format, __arg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vdprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$1017.vdprintf$MH,"vdprintf");
    }
    public static int vdprintf ( int __fd,  Addressable __fmt,  Addressable __arg) {
        var mh$ = vdprintf$MH();
        try {
            return (int)mh$.invokeExact(__fd, __fmt, __arg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle dprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$1017.dprintf$MH,"dprintf");
    }
    public static int dprintf ( int __fd,  Addressable __fmt, Object... x2) {
        var mh$ = dprintf$MH();
        try {
            return (int)mh$.invokeExact(__fd, __fmt, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$1017.fscanf$MH,"fscanf");
    }
    public static int fscanf ( Addressable __stream,  Addressable __format, Object... x2) {
        var mh$ = fscanf$MH();
        try {
            return (int)mh$.invokeExact(__stream, __format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle scanf$MH() {
        return RuntimeHelper.requireNonNull(constants$1018.scanf$MH,"scanf");
    }
    public static int scanf ( Addressable __format, Object... x1) {
        var mh$ = scanf$MH();
        try {
            return (int)mh$.invokeExact(__format, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$1018.sscanf$MH,"sscanf");
    }
    public static int sscanf ( Addressable __s,  Addressable __format, Object... x2) {
        var mh$ = sscanf$MH();
        try {
            return (int)mh$.invokeExact(__s, __format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vfscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$1018.vfscanf$MH,"vfscanf");
    }
    public static int vfscanf ( Addressable __s,  Addressable __format,  Addressable __arg) {
        var mh$ = vfscanf$MH();
        try {
            return (int)mh$.invokeExact(__s, __format, __arg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$1018.vscanf$MH,"vscanf");
    }
    public static int vscanf ( Addressable __format,  Addressable __arg) {
        var mh$ = vscanf$MH();
        try {
            return (int)mh$.invokeExact(__format, __arg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vsscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$1018.vsscanf$MH,"vsscanf");
    }
    public static int vsscanf ( Addressable __s,  Addressable __format,  Addressable __arg) {
        var mh$ = vsscanf$MH();
        try {
            return (int)mh$.invokeExact(__s, __format, __arg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fgetc$MH() {
        return RuntimeHelper.requireNonNull(constants$1018.fgetc$MH,"fgetc");
    }
    public static int fgetc ( Addressable __stream) {
        var mh$ = fgetc$MH();
        try {
            return (int)mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getc$MH() {
        return RuntimeHelper.requireNonNull(constants$1019.getc$MH,"getc");
    }
    public static int getc ( Addressable __stream) {
        var mh$ = getc$MH();
        try {
            return (int)mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getchar$MH() {
        return RuntimeHelper.requireNonNull(constants$1019.getchar$MH,"getchar");
    }
    public static int getchar () {
        var mh$ = getchar$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getc_unlocked$MH() {
        return RuntimeHelper.requireNonNull(constants$1019.getc_unlocked$MH,"getc_unlocked");
    }
    public static int getc_unlocked ( Addressable __stream) {
        var mh$ = getc_unlocked$MH();
        try {
            return (int)mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getchar_unlocked$MH() {
        return RuntimeHelper.requireNonNull(constants$1019.getchar_unlocked$MH,"getchar_unlocked");
    }
    public static int getchar_unlocked () {
        var mh$ = getchar_unlocked$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fgetc_unlocked$MH() {
        return RuntimeHelper.requireNonNull(constants$1019.fgetc_unlocked$MH,"fgetc_unlocked");
    }
    public static int fgetc_unlocked ( Addressable __stream) {
        var mh$ = fgetc_unlocked$MH();
        try {
            return (int)mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fputc$MH() {
        return RuntimeHelper.requireNonNull(constants$1019.fputc$MH,"fputc");
    }
    public static int fputc ( int __c,  Addressable __stream) {
        var mh$ = fputc$MH();
        try {
            return (int)mh$.invokeExact(__c, __stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle putc$MH() {
        return RuntimeHelper.requireNonNull(constants$1020.putc$MH,"putc");
    }
    public static int putc ( int __c,  Addressable __stream) {
        var mh$ = putc$MH();
        try {
            return (int)mh$.invokeExact(__c, __stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle putchar$MH() {
        return RuntimeHelper.requireNonNull(constants$1020.putchar$MH,"putchar");
    }
    public static int putchar ( int __c) {
        var mh$ = putchar$MH();
        try {
            return (int)mh$.invokeExact(__c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fputc_unlocked$MH() {
        return RuntimeHelper.requireNonNull(constants$1020.fputc_unlocked$MH,"fputc_unlocked");
    }
    public static int fputc_unlocked ( int __c,  Addressable __stream) {
        var mh$ = fputc_unlocked$MH();
        try {
            return (int)mh$.invokeExact(__c, __stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle putc_unlocked$MH() {
        return RuntimeHelper.requireNonNull(constants$1020.putc_unlocked$MH,"putc_unlocked");
    }
    public static int putc_unlocked ( int __c,  Addressable __stream) {
        var mh$ = putc_unlocked$MH();
        try {
            return (int)mh$.invokeExact(__c, __stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle putchar_unlocked$MH() {
        return RuntimeHelper.requireNonNull(constants$1020.putchar_unlocked$MH,"putchar_unlocked");
    }
    public static int putchar_unlocked ( int __c) {
        var mh$ = putchar_unlocked$MH();
        try {
            return (int)mh$.invokeExact(__c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getw$MH() {
        return RuntimeHelper.requireNonNull(constants$1020.getw$MH,"getw");
    }
    public static int getw ( Addressable __stream) {
        var mh$ = getw$MH();
        try {
            return (int)mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle putw$MH() {
        return RuntimeHelper.requireNonNull(constants$1021.putw$MH,"putw");
    }
    public static int putw ( int __w,  Addressable __stream) {
        var mh$ = putw$MH();
        try {
            return (int)mh$.invokeExact(__w, __stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fgets$MH() {
        return RuntimeHelper.requireNonNull(constants$1021.fgets$MH,"fgets");
    }
    public static MemoryAddress fgets ( Addressable __s,  int __n,  Addressable __stream) {
        var mh$ = fgets$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__s, __n, __stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __getdelim$MH() {
        return RuntimeHelper.requireNonNull(constants$1021.__getdelim$MH,"__getdelim");
    }
    public static long __getdelim ( Addressable __lineptr,  Addressable __n,  int __delimiter,  Addressable __stream) {
        var mh$ = __getdelim$MH();
        try {
            return (long)mh$.invokeExact(__lineptr, __n, __delimiter, __stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getdelim$MH() {
        return RuntimeHelper.requireNonNull(constants$1021.getdelim$MH,"getdelim");
    }
    public static long getdelim ( Addressable __lineptr,  Addressable __n,  int __delimiter,  Addressable __stream) {
        var mh$ = getdelim$MH();
        try {
            return (long)mh$.invokeExact(__lineptr, __n, __delimiter, __stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getline$MH() {
        return RuntimeHelper.requireNonNull(constants$1021.getline$MH,"getline");
    }
    public static long getline ( Addressable __lineptr,  Addressable __n,  Addressable __stream) {
        var mh$ = getline$MH();
        try {
            return (long)mh$.invokeExact(__lineptr, __n, __stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fputs$MH() {
        return RuntimeHelper.requireNonNull(constants$1021.fputs$MH,"fputs");
    }
    public static int fputs ( Addressable __s,  Addressable __stream) {
        var mh$ = fputs$MH();
        try {
            return (int)mh$.invokeExact(__s, __stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle puts$MH() {
        return RuntimeHelper.requireNonNull(constants$1022.puts$MH,"puts");
    }
    public static int puts ( Addressable __s) {
        var mh$ = puts$MH();
        try {
            return (int)mh$.invokeExact(__s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ungetc$MH() {
        return RuntimeHelper.requireNonNull(constants$1022.ungetc$MH,"ungetc");
    }
    public static int ungetc ( int __c,  Addressable __stream) {
        var mh$ = ungetc$MH();
        try {
            return (int)mh$.invokeExact(__c, __stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fread$MH() {
        return RuntimeHelper.requireNonNull(constants$1022.fread$MH,"fread");
    }
    public static long fread ( Addressable __ptr,  long __size,  long __n,  Addressable __stream) {
        var mh$ = fread$MH();
        try {
            return (long)mh$.invokeExact(__ptr, __size, __n, __stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fwrite$MH() {
        return RuntimeHelper.requireNonNull(constants$1022.fwrite$MH,"fwrite");
    }
    public static long fwrite ( Addressable __ptr,  long __size,  long __n,  Addressable __s) {
        var mh$ = fwrite$MH();
        try {
            return (long)mh$.invokeExact(__ptr, __size, __n, __s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fread_unlocked$MH() {
        return RuntimeHelper.requireNonNull(constants$1022.fread_unlocked$MH,"fread_unlocked");
    }
    public static long fread_unlocked ( Addressable __ptr,  long __size,  long __n,  Addressable __stream) {
        var mh$ = fread_unlocked$MH();
        try {
            return (long)mh$.invokeExact(__ptr, __size, __n, __stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fwrite_unlocked$MH() {
        return RuntimeHelper.requireNonNull(constants$1022.fwrite_unlocked$MH,"fwrite_unlocked");
    }
    public static long fwrite_unlocked ( Addressable __ptr,  long __size,  long __n,  Addressable __stream) {
        var mh$ = fwrite_unlocked$MH();
        try {
            return (long)mh$.invokeExact(__ptr, __size, __n, __stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fseek$MH() {
        return RuntimeHelper.requireNonNull(constants$1023.fseek$MH,"fseek");
    }
    public static int fseek ( Addressable __stream,  long __off,  int __whence) {
        var mh$ = fseek$MH();
        try {
            return (int)mh$.invokeExact(__stream, __off, __whence);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ftell$MH() {
        return RuntimeHelper.requireNonNull(constants$1023.ftell$MH,"ftell");
    }
    public static long ftell ( Addressable __stream) {
        var mh$ = ftell$MH();
        try {
            return (long)mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rewind$MH() {
        return RuntimeHelper.requireNonNull(constants$1023.rewind$MH,"rewind");
    }
    public static void rewind ( Addressable __stream) {
        var mh$ = rewind$MH();
        try {
            mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fseeko$MH() {
        return RuntimeHelper.requireNonNull(constants$1023.fseeko$MH,"fseeko");
    }
    public static int fseeko ( Addressable __stream,  long __off,  int __whence) {
        var mh$ = fseeko$MH();
        try {
            return (int)mh$.invokeExact(__stream, __off, __whence);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ftello$MH() {
        return RuntimeHelper.requireNonNull(constants$1023.ftello$MH,"ftello");
    }
    public static long ftello ( Addressable __stream) {
        var mh$ = ftello$MH();
        try {
            return (long)mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fgetpos$MH() {
        return RuntimeHelper.requireNonNull(constants$1023.fgetpos$MH,"fgetpos");
    }
    public static int fgetpos ( Addressable __stream,  Addressable __pos) {
        var mh$ = fgetpos$MH();
        try {
            return (int)mh$.invokeExact(__stream, __pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fsetpos$MH() {
        return RuntimeHelper.requireNonNull(constants$1024.fsetpos$MH,"fsetpos");
    }
    public static int fsetpos ( Addressable __stream,  Addressable __pos) {
        var mh$ = fsetpos$MH();
        try {
            return (int)mh$.invokeExact(__stream, __pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle clearerr$MH() {
        return RuntimeHelper.requireNonNull(constants$1024.clearerr$MH,"clearerr");
    }
    public static void clearerr ( Addressable __stream) {
        var mh$ = clearerr$MH();
        try {
            mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle feof$MH() {
        return RuntimeHelper.requireNonNull(constants$1024.feof$MH,"feof");
    }
    public static int feof ( Addressable __stream) {
        var mh$ = feof$MH();
        try {
            return (int)mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ferror$MH() {
        return RuntimeHelper.requireNonNull(constants$1024.ferror$MH,"ferror");
    }
    public static int ferror ( Addressable __stream) {
        var mh$ = ferror$MH();
        try {
            return (int)mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle clearerr_unlocked$MH() {
        return RuntimeHelper.requireNonNull(constants$1024.clearerr_unlocked$MH,"clearerr_unlocked");
    }
    public static void clearerr_unlocked ( Addressable __stream) {
        var mh$ = clearerr_unlocked$MH();
        try {
            mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle feof_unlocked$MH() {
        return RuntimeHelper.requireNonNull(constants$1024.feof_unlocked$MH,"feof_unlocked");
    }
    public static int feof_unlocked ( Addressable __stream) {
        var mh$ = feof_unlocked$MH();
        try {
            return (int)mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ferror_unlocked$MH() {
        return RuntimeHelper.requireNonNull(constants$1025.ferror_unlocked$MH,"ferror_unlocked");
    }
    public static int ferror_unlocked ( Addressable __stream) {
        var mh$ = ferror_unlocked$MH();
        try {
            return (int)mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle perror$MH() {
        return RuntimeHelper.requireNonNull(constants$1025.perror$MH,"perror");
    }
    public static void perror ( Addressable __s) {
        var mh$ = perror$MH();
        try {
            mh$.invokeExact(__s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fileno$MH() {
        return RuntimeHelper.requireNonNull(constants$1025.fileno$MH,"fileno");
    }
    public static int fileno ( Addressable __stream) {
        var mh$ = fileno$MH();
        try {
            return (int)mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fileno_unlocked$MH() {
        return RuntimeHelper.requireNonNull(constants$1025.fileno_unlocked$MH,"fileno_unlocked");
    }
    public static int fileno_unlocked ( Addressable __stream) {
        var mh$ = fileno_unlocked$MH();
        try {
            return (int)mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pclose$MH() {
        return RuntimeHelper.requireNonNull(constants$1025.pclose$MH,"pclose");
    }
    public static int pclose ( Addressable __stream) {
        var mh$ = pclose$MH();
        try {
            return (int)mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle popen$MH() {
        return RuntimeHelper.requireNonNull(constants$1025.popen$MH,"popen");
    }
    public static MemoryAddress popen ( Addressable __command,  Addressable __modes) {
        var mh$ = popen$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__command, __modes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ctermid$MH() {
        return RuntimeHelper.requireNonNull(constants$1026.ctermid$MH,"ctermid");
    }
    public static MemoryAddress ctermid ( Addressable __s) {
        var mh$ = ctermid$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle flockfile$MH() {
        return RuntimeHelper.requireNonNull(constants$1026.flockfile$MH,"flockfile");
    }
    public static void flockfile ( Addressable __stream) {
        var mh$ = flockfile$MH();
        try {
            mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ftrylockfile$MH() {
        return RuntimeHelper.requireNonNull(constants$1026.ftrylockfile$MH,"ftrylockfile");
    }
    public static int ftrylockfile ( Addressable __stream) {
        var mh$ = ftrylockfile$MH();
        try {
            return (int)mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle funlockfile$MH() {
        return RuntimeHelper.requireNonNull(constants$1026.funlockfile$MH,"funlockfile");
    }
    public static void funlockfile ( Addressable __stream) {
        var mh$ = funlockfile$MH();
        try {
            mh$.invokeExact(__stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


