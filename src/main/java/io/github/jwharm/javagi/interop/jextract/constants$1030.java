// Generated by jextract

package io.github.jwharm.javagi.interop.jextract;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$1030 {

    static final FunctionDescriptor ns_name_pack$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ns_name_pack$MH = RuntimeHelper.downcallHandle(
        "ns_name_pack",
        constants$1030.ns_name_pack$FUNC
    );
    static final FunctionDescriptor ns_name_uncompress$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle ns_name_uncompress$MH = RuntimeHelper.downcallHandle(
        "ns_name_uncompress",
        constants$1030.ns_name_uncompress$FUNC
    );
    static final FunctionDescriptor ns_name_compress$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ns_name_compress$MH = RuntimeHelper.downcallHandle(
        "ns_name_compress",
        constants$1030.ns_name_compress$FUNC
    );
    static final FunctionDescriptor ns_name_skip$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ns_name_skip$MH = RuntimeHelper.downcallHandle(
        "ns_name_skip",
        constants$1030.ns_name_skip$FUNC
    );
    static final FunctionDescriptor ns_name_rollback$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ns_name_rollback$MH = RuntimeHelper.downcallHandle(
        "ns_name_rollback",
        constants$1030.ns_name_rollback$FUNC
    );
    static final FunctionDescriptor ns_samedomain$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ns_samedomain$MH = RuntimeHelper.downcallHandle(
        "ns_samedomain",
        constants$1030.ns_samedomain$FUNC
    );
}


