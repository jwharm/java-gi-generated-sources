// Generated by jextract

package io.github.jwharm.javagi.interop.jextract;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$2501 {

    static final FunctionDescriptor glib_listautoptr_cleanup_GtkWindowHandleClass$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glib_listautoptr_cleanup_GtkWindowHandleClass$MH = RuntimeHelper.downcallHandle(
        "glib_listautoptr_cleanup_GtkWindowHandleClass",
        constants$2501.glib_listautoptr_cleanup_GtkWindowHandleClass$FUNC
    );
    static final FunctionDescriptor glib_slistautoptr_cleanup_GtkWindowHandleClass$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glib_slistautoptr_cleanup_GtkWindowHandleClass$MH = RuntimeHelper.downcallHandle(
        "glib_slistautoptr_cleanup_GtkWindowHandleClass",
        constants$2501.glib_slistautoptr_cleanup_GtkWindowHandleClass$FUNC
    );
    static final FunctionDescriptor glib_queueautoptr_cleanup_GtkWindowHandleClass$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glib_queueautoptr_cleanup_GtkWindowHandleClass$MH = RuntimeHelper.downcallHandle(
        "glib_queueautoptr_cleanup_GtkWindowHandleClass",
        constants$2501.glib_queueautoptr_cleanup_GtkWindowHandleClass$FUNC
    );
    static final FunctionDescriptor GTK_WINDOW_HANDLE$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GTK_WINDOW_HANDLE$MH = RuntimeHelper.downcallHandle(
        "GTK_WINDOW_HANDLE",
        constants$2501.GTK_WINDOW_HANDLE$FUNC
    );
    static final FunctionDescriptor GTK_IS_WINDOW_HANDLE$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GTK_IS_WINDOW_HANDLE$MH = RuntimeHelper.downcallHandle(
        "GTK_IS_WINDOW_HANDLE",
        constants$2501.GTK_IS_WINDOW_HANDLE$FUNC
    );
    static final FunctionDescriptor gtk_window_handle_new$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle gtk_window_handle_new$MH = RuntimeHelper.downcallHandle(
        "gtk_window_handle_new",
        constants$2501.gtk_window_handle_new$FUNC
    );
}


