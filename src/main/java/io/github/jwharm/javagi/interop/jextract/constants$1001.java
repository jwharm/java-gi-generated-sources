// Generated by jextract

package io.github.jwharm.javagi.interop.jextract;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$1001 {

    static final FunctionDescriptor ntohs$FUNC = FunctionDescriptor.of(Constants$root.C_SHORT$LAYOUT,
        Constants$root.C_SHORT$LAYOUT
    );
    static final MethodHandle ntohs$MH = RuntimeHelper.downcallHandle(
        "ntohs",
        constants$1001.ntohs$FUNC
    );
    static final FunctionDescriptor htonl$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle htonl$MH = RuntimeHelper.downcallHandle(
        "htonl",
        constants$1001.htonl$FUNC
    );
    static final FunctionDescriptor htons$FUNC = FunctionDescriptor.of(Constants$root.C_SHORT$LAYOUT,
        Constants$root.C_SHORT$LAYOUT
    );
    static final MethodHandle htons$MH = RuntimeHelper.downcallHandle(
        "htons",
        constants$1001.htons$FUNC
    );
    static final FunctionDescriptor bindresvport$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle bindresvport$MH = RuntimeHelper.downcallHandle(
        "bindresvport",
        constants$1001.bindresvport$FUNC
    );
    static final FunctionDescriptor bindresvport6$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle bindresvport6$MH = RuntimeHelper.downcallHandle(
        "bindresvport6",
        constants$1001.bindresvport6$FUNC
    );
    static final FunctionDescriptor setrpcent$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle setrpcent$MH = RuntimeHelper.downcallHandle(
        "setrpcent",
        constants$1001.setrpcent$FUNC
    );
}


