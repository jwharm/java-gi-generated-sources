// Generated by jextract

package io.github.jwharm.javagi.interop.jextract;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$1429 {

    static final FunctionDescriptor gdk_toplevel_size_set_min_size$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle gdk_toplevel_size_set_min_size$MH = RuntimeHelper.downcallHandle(
        "gdk_toplevel_size_set_min_size",
        constants$1429.gdk_toplevel_size_set_min_size$FUNC
    );
    static final FunctionDescriptor gdk_toplevel_size_set_shadow_width$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle gdk_toplevel_size_set_shadow_width$MH = RuntimeHelper.downcallHandle(
        "gdk_toplevel_size_set_shadow_width",
        constants$1429.gdk_toplevel_size_set_shadow_width$FUNC
    );
    static final FunctionDescriptor gdk_vulkan_error_quark$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT);
    static final MethodHandle gdk_vulkan_error_quark$MH = RuntimeHelper.downcallHandle(
        "gdk_vulkan_error_quark",
        constants$1429.gdk_vulkan_error_quark$FUNC
    );
    static final FunctionDescriptor gdk_vulkan_context_get_type$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT);
    static final MethodHandle gdk_vulkan_context_get_type$MH = RuntimeHelper.downcallHandle(
        "gdk_vulkan_context_get_type",
        constants$1429.gdk_vulkan_context_get_type$FUNC
    );
    static final FunctionDescriptor glib_autoptr_clear_GdkAppLaunchContext$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glib_autoptr_clear_GdkAppLaunchContext$MH = RuntimeHelper.downcallHandle(
        "glib_autoptr_clear_GdkAppLaunchContext",
        constants$1429.glib_autoptr_clear_GdkAppLaunchContext$FUNC
    );
    static final FunctionDescriptor glib_autoptr_cleanup_GdkAppLaunchContext$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glib_autoptr_cleanup_GdkAppLaunchContext$MH = RuntimeHelper.downcallHandle(
        "glib_autoptr_cleanup_GdkAppLaunchContext",
        constants$1429.glib_autoptr_cleanup_GdkAppLaunchContext$FUNC
    );
}


