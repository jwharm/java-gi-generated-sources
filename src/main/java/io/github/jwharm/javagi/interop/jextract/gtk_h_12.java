// Generated by jextract

package io.github.jwharm.javagi.interop.jextract;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
 class gtk_h_12 extends gtk_h_11 {

    public static MethodHandle __uflow$MH() {
        return RuntimeHelper.requireNonNull(constants$1026.__uflow$MH,"__uflow");
    }
    public static int __uflow ( Addressable x0) {
        var mh$ = __uflow$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __overflow$MH() {
        return RuntimeHelper.requireNonNull(constants$1026.__overflow$MH,"__overflow");
    }
    public static int __overflow ( Addressable x0,  int x1) {
        var mh$ = __overflow$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int ns_s_qd() {
        return (int)0L;
    }
    public static int ns_s_zn() {
        return (int)0L;
    }
    public static int ns_s_an() {
        return (int)1L;
    }
    public static int ns_s_pr() {
        return (int)1L;
    }
    public static int ns_s_ns() {
        return (int)2L;
    }
    public static int ns_s_ud() {
        return (int)2L;
    }
    public static int ns_s_ar() {
        return (int)3L;
    }
    public static int ns_s_max() {
        return (int)4L;
    }
    public static int ns_f_qr() {
        return (int)0L;
    }
    public static int ns_f_opcode() {
        return (int)1L;
    }
    public static int ns_f_aa() {
        return (int)2L;
    }
    public static int ns_f_tc() {
        return (int)3L;
    }
    public static int ns_f_rd() {
        return (int)4L;
    }
    public static int ns_f_ra() {
        return (int)5L;
    }
    public static int ns_f_z() {
        return (int)6L;
    }
    public static int ns_f_ad() {
        return (int)7L;
    }
    public static int ns_f_cd() {
        return (int)8L;
    }
    public static int ns_f_rcode() {
        return (int)9L;
    }
    public static int ns_f_max() {
        return (int)10L;
    }
    public static int ns_o_query() {
        return (int)0L;
    }
    public static int ns_o_iquery() {
        return (int)1L;
    }
    public static int ns_o_status() {
        return (int)2L;
    }
    public static int ns_o_notify() {
        return (int)4L;
    }
    public static int ns_o_update() {
        return (int)5L;
    }
    public static int ns_o_max() {
        return (int)6L;
    }
    public static int ns_r_noerror() {
        return (int)0L;
    }
    public static int ns_r_formerr() {
        return (int)1L;
    }
    public static int ns_r_servfail() {
        return (int)2L;
    }
    public static int ns_r_nxdomain() {
        return (int)3L;
    }
    public static int ns_r_notimpl() {
        return (int)4L;
    }
    public static int ns_r_refused() {
        return (int)5L;
    }
    public static int ns_r_yxdomain() {
        return (int)6L;
    }
    public static int ns_r_yxrrset() {
        return (int)7L;
    }
    public static int ns_r_nxrrset() {
        return (int)8L;
    }
    public static int ns_r_notauth() {
        return (int)9L;
    }
    public static int ns_r_notzone() {
        return (int)10L;
    }
    public static int ns_r_max() {
        return (int)11L;
    }
    public static int ns_r_badvers() {
        return (int)16L;
    }
    public static int ns_r_badsig() {
        return (int)16L;
    }
    public static int ns_r_badkey() {
        return (int)17L;
    }
    public static int ns_r_badtime() {
        return (int)18L;
    }
    public static int ns_uop_delete() {
        return (int)0L;
    }
    public static int ns_uop_add() {
        return (int)1L;
    }
    public static int ns_uop_max() {
        return (int)2L;
    }
    public static int ns_t_invalid() {
        return (int)0L;
    }
    public static int ns_t_a() {
        return (int)1L;
    }
    public static int ns_t_ns() {
        return (int)2L;
    }
    public static int ns_t_md() {
        return (int)3L;
    }
    public static int ns_t_mf() {
        return (int)4L;
    }
    public static int ns_t_cname() {
        return (int)5L;
    }
    public static int ns_t_soa() {
        return (int)6L;
    }
    public static int ns_t_mb() {
        return (int)7L;
    }
    public static int ns_t_mg() {
        return (int)8L;
    }
    public static int ns_t_mr() {
        return (int)9L;
    }
    public static int ns_t_null() {
        return (int)10L;
    }
    public static int ns_t_wks() {
        return (int)11L;
    }
    public static int ns_t_ptr() {
        return (int)12L;
    }
    public static int ns_t_hinfo() {
        return (int)13L;
    }
    public static int ns_t_minfo() {
        return (int)14L;
    }
    public static int ns_t_mx() {
        return (int)15L;
    }
    public static int ns_t_txt() {
        return (int)16L;
    }
    public static int ns_t_rp() {
        return (int)17L;
    }
    public static int ns_t_afsdb() {
        return (int)18L;
    }
    public static int ns_t_x25() {
        return (int)19L;
    }
    public static int ns_t_isdn() {
        return (int)20L;
    }
    public static int ns_t_rt() {
        return (int)21L;
    }
    public static int ns_t_nsap() {
        return (int)22L;
    }
    public static int ns_t_nsap_ptr() {
        return (int)23L;
    }
    public static int ns_t_sig() {
        return (int)24L;
    }
    public static int ns_t_key() {
        return (int)25L;
    }
    public static int ns_t_px() {
        return (int)26L;
    }
    public static int ns_t_gpos() {
        return (int)27L;
    }
    public static int ns_t_aaaa() {
        return (int)28L;
    }
    public static int ns_t_loc() {
        return (int)29L;
    }
    public static int ns_t_nxt() {
        return (int)30L;
    }
    public static int ns_t_eid() {
        return (int)31L;
    }
    public static int ns_t_nimloc() {
        return (int)32L;
    }
    public static int ns_t_srv() {
        return (int)33L;
    }
    public static int ns_t_atma() {
        return (int)34L;
    }
    public static int ns_t_naptr() {
        return (int)35L;
    }
    public static int ns_t_kx() {
        return (int)36L;
    }
    public static int ns_t_cert() {
        return (int)37L;
    }
    public static int ns_t_a6() {
        return (int)38L;
    }
    public static int ns_t_dname() {
        return (int)39L;
    }
    public static int ns_t_sink() {
        return (int)40L;
    }
    public static int ns_t_opt() {
        return (int)41L;
    }
    public static int ns_t_apl() {
        return (int)42L;
    }
    public static int ns_t_ds() {
        return (int)43L;
    }
    public static int ns_t_sshfp() {
        return (int)44L;
    }
    public static int ns_t_ipseckey() {
        return (int)45L;
    }
    public static int ns_t_rrsig() {
        return (int)46L;
    }
    public static int ns_t_nsec() {
        return (int)47L;
    }
    public static int ns_t_dnskey() {
        return (int)48L;
    }
    public static int ns_t_dhcid() {
        return (int)49L;
    }
    public static int ns_t_nsec3() {
        return (int)50L;
    }
    public static int ns_t_nsec3param() {
        return (int)51L;
    }
    public static int ns_t_tlsa() {
        return (int)52L;
    }
    public static int ns_t_smimea() {
        return (int)53L;
    }
    public static int ns_t_hip() {
        return (int)55L;
    }
    public static int ns_t_ninfo() {
        return (int)56L;
    }
    public static int ns_t_rkey() {
        return (int)57L;
    }
    public static int ns_t_talink() {
        return (int)58L;
    }
    public static int ns_t_cds() {
        return (int)59L;
    }
    public static int ns_t_cdnskey() {
        return (int)60L;
    }
    public static int ns_t_openpgpkey() {
        return (int)61L;
    }
    public static int ns_t_csync() {
        return (int)62L;
    }
    public static int ns_t_spf() {
        return (int)99L;
    }
    public static int ns_t_uinfo() {
        return (int)100L;
    }
    public static int ns_t_uid() {
        return (int)101L;
    }
    public static int ns_t_gid() {
        return (int)102L;
    }
    public static int ns_t_unspec() {
        return (int)103L;
    }
    public static int ns_t_nid() {
        return (int)104L;
    }
    public static int ns_t_l32() {
        return (int)105L;
    }
    public static int ns_t_l64() {
        return (int)106L;
    }
    public static int ns_t_lp() {
        return (int)107L;
    }
    public static int ns_t_eui48() {
        return (int)108L;
    }
    public static int ns_t_eui64() {
        return (int)109L;
    }
    public static int ns_t_tkey() {
        return (int)249L;
    }
    public static int ns_t_tsig() {
        return (int)250L;
    }
    public static int ns_t_ixfr() {
        return (int)251L;
    }
    public static int ns_t_axfr() {
        return (int)252L;
    }
    public static int ns_t_mailb() {
        return (int)253L;
    }
    public static int ns_t_maila() {
        return (int)254L;
    }
    public static int ns_t_any() {
        return (int)255L;
    }
    public static int ns_t_uri() {
        return (int)256L;
    }
    public static int ns_t_caa() {
        return (int)257L;
    }
    public static int ns_t_avc() {
        return (int)258L;
    }
    public static int ns_t_ta() {
        return (int)32768L;
    }
    public static int ns_t_dlv() {
        return (int)32769L;
    }
    public static int ns_t_max() {
        return (int)65536L;
    }
    public static int ns_c_invalid() {
        return (int)0L;
    }
    public static int ns_c_in() {
        return (int)1L;
    }
    public static int ns_c_2() {
        return (int)2L;
    }
    public static int ns_c_chaos() {
        return (int)3L;
    }
    public static int ns_c_hs() {
        return (int)4L;
    }
    public static int ns_c_none() {
        return (int)254L;
    }
    public static int ns_c_any() {
        return (int)255L;
    }
    public static int ns_c_max() {
        return (int)65536L;
    }
    public static int cert_t_pkix() {
        return (int)1L;
    }
    public static int cert_t_spki() {
        return (int)2L;
    }
    public static int cert_t_pgp() {
        return (int)3L;
    }
    public static int cert_t_url() {
        return (int)253L;
    }
    public static int cert_t_oid() {
        return (int)254L;
    }
    public static MethodHandle ns_msg_getflag$MH() {
        return RuntimeHelper.requireNonNull(constants$1027.ns_msg_getflag$MH,"ns_msg_getflag");
    }
    public static int ns_msg_getflag ( MemorySegment x0,  int x1) {
        var mh$ = ns_msg_getflag$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ns_get16$MH() {
        return RuntimeHelper.requireNonNull(constants$1027.ns_get16$MH,"ns_get16");
    }
    public static int ns_get16 ( Addressable x0) {
        var mh$ = ns_get16$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ns_get32$MH() {
        return RuntimeHelper.requireNonNull(constants$1027.ns_get32$MH,"ns_get32");
    }
    public static long ns_get32 ( Addressable x0) {
        var mh$ = ns_get32$MH();
        try {
            return (long)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ns_put16$MH() {
        return RuntimeHelper.requireNonNull(constants$1027.ns_put16$MH,"ns_put16");
    }
    public static void ns_put16 ( int x0,  Addressable x1) {
        var mh$ = ns_put16$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ns_put32$MH() {
        return RuntimeHelper.requireNonNull(constants$1027.ns_put32$MH,"ns_put32");
    }
    public static void ns_put32 ( long x0,  Addressable x1) {
        var mh$ = ns_put32$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ns_initparse$MH() {
        return RuntimeHelper.requireNonNull(constants$1028.ns_initparse$MH,"ns_initparse");
    }
    public static int ns_initparse ( Addressable x0,  int x1,  Addressable x2) {
        var mh$ = ns_initparse$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ns_skiprr$MH() {
        return RuntimeHelper.requireNonNull(constants$1028.ns_skiprr$MH,"ns_skiprr");
    }
    public static int ns_skiprr ( Addressable x0,  Addressable x1,  int x2,  int x3) {
        var mh$ = ns_skiprr$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ns_parserr$MH() {
        return RuntimeHelper.requireNonNull(constants$1028.ns_parserr$MH,"ns_parserr");
    }
    public static int ns_parserr ( Addressable x0,  int x1,  int x2,  Addressable x3) {
        var mh$ = ns_parserr$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ns_sprintrr$MH() {
        return RuntimeHelper.requireNonNull(constants$1028.ns_sprintrr$MH,"ns_sprintrr");
    }
    public static int ns_sprintrr ( Addressable x0,  Addressable x1,  Addressable x2,  Addressable x3,  Addressable x4,  long x5) {
        var mh$ = ns_sprintrr$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3, x4, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ns_sprintrrf$MH() {
        return RuntimeHelper.requireNonNull(constants$1028.ns_sprintrrf$MH,"ns_sprintrrf");
    }
    public static int ns_sprintrrf ( Addressable x0,  long x1,  Addressable x2,  int x3,  int x4,  long x5,  Addressable x6,  long x7,  Addressable x8,  Addressable x9,  Addressable x10,  long x11) {
        var mh$ = ns_sprintrrf$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ns_format_ttl$MH() {
        return RuntimeHelper.requireNonNull(constants$1028.ns_format_ttl$MH,"ns_format_ttl");
    }
    public static int ns_format_ttl ( long x0,  Addressable x1,  long x2) {
        var mh$ = ns_format_ttl$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ns_parse_ttl$MH() {
        return RuntimeHelper.requireNonNull(constants$1029.ns_parse_ttl$MH,"ns_parse_ttl");
    }
    public static int ns_parse_ttl ( Addressable x0,  Addressable x1) {
        var mh$ = ns_parse_ttl$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ns_datetosecs$MH() {
        return RuntimeHelper.requireNonNull(constants$1029.ns_datetosecs$MH,"ns_datetosecs");
    }
    public static int ns_datetosecs ( Addressable x0,  Addressable x1) {
        var mh$ = ns_datetosecs$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ns_name_ntol$MH() {
        return RuntimeHelper.requireNonNull(constants$1029.ns_name_ntol$MH,"ns_name_ntol");
    }
    public static int ns_name_ntol ( Addressable x0,  Addressable x1,  long x2) {
        var mh$ = ns_name_ntol$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ns_name_ntop$MH() {
        return RuntimeHelper.requireNonNull(constants$1029.ns_name_ntop$MH,"ns_name_ntop");
    }
    public static int ns_name_ntop ( Addressable x0,  Addressable x1,  long x2) {
        var mh$ = ns_name_ntop$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ns_name_pton$MH() {
        return RuntimeHelper.requireNonNull(constants$1029.ns_name_pton$MH,"ns_name_pton");
    }
    public static int ns_name_pton ( Addressable x0,  Addressable x1,  long x2) {
        var mh$ = ns_name_pton$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ns_name_unpack$MH() {
        return RuntimeHelper.requireNonNull(constants$1029.ns_name_unpack$MH,"ns_name_unpack");
    }
    public static int ns_name_unpack ( Addressable x0,  Addressable x1,  Addressable x2,  Addressable x3,  long x4) {
        var mh$ = ns_name_unpack$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ns_name_pack$MH() {
        return RuntimeHelper.requireNonNull(constants$1030.ns_name_pack$MH,"ns_name_pack");
    }
    public static int ns_name_pack ( Addressable x0,  Addressable x1,  int x2,  Addressable x3,  Addressable x4) {
        var mh$ = ns_name_pack$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ns_name_uncompress$MH() {
        return RuntimeHelper.requireNonNull(constants$1030.ns_name_uncompress$MH,"ns_name_uncompress");
    }
    public static int ns_name_uncompress ( Addressable x0,  Addressable x1,  Addressable x2,  Addressable x3,  long x4) {
        var mh$ = ns_name_uncompress$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ns_name_compress$MH() {
        return RuntimeHelper.requireNonNull(constants$1030.ns_name_compress$MH,"ns_name_compress");
    }
    public static int ns_name_compress ( Addressable x0,  Addressable x1,  long x2,  Addressable x3,  Addressable x4) {
        var mh$ = ns_name_compress$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ns_name_skip$MH() {
        return RuntimeHelper.requireNonNull(constants$1030.ns_name_skip$MH,"ns_name_skip");
    }
    public static int ns_name_skip ( Addressable x0,  Addressable x1) {
        var mh$ = ns_name_skip$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ns_name_rollback$MH() {
        return RuntimeHelper.requireNonNull(constants$1030.ns_name_rollback$MH,"ns_name_rollback");
    }
    public static void ns_name_rollback ( Addressable x0,  Addressable x1,  Addressable x2) {
        var mh$ = ns_name_rollback$MH();
        try {
            mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ns_samedomain$MH() {
        return RuntimeHelper.requireNonNull(constants$1030.ns_samedomain$MH,"ns_samedomain");
    }
    public static int ns_samedomain ( Addressable x0,  Addressable x1) {
        var mh$ = ns_samedomain$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ns_subdomain$MH() {
        return RuntimeHelper.requireNonNull(constants$1031.ns_subdomain$MH,"ns_subdomain");
    }
    public static int ns_subdomain ( Addressable x0,  Addressable x1) {
        var mh$ = ns_subdomain$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ns_makecanon$MH() {
        return RuntimeHelper.requireNonNull(constants$1031.ns_makecanon$MH,"ns_makecanon");
    }
    public static int ns_makecanon ( Addressable x0,  Addressable x1,  long x2) {
        var mh$ = ns_makecanon$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ns_samename$MH() {
        return RuntimeHelper.requireNonNull(constants$1031.ns_samename$MH,"ns_samename");
    }
    public static int ns_samename ( Addressable x0,  Addressable x1) {
        var mh$ = ns_samename$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress res_state = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle __res_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1031.__res_state$MH,"__res_state");
    }
    public static MemoryAddress __res_state () {
        var mh$ = __res_state$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __fp_nquery$MH() {
        return RuntimeHelper.requireNonNull(constants$1031.__fp_nquery$MH,"__fp_nquery");
    }
    public static void __fp_nquery ( Addressable x0,  int x1,  Addressable x2) {
        var mh$ = __fp_nquery$MH();
        try {
            mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __fp_query$MH() {
        return RuntimeHelper.requireNonNull(constants$1031.__fp_query$MH,"__fp_query");
    }
    public static void __fp_query ( Addressable x0,  Addressable x1) {
        var mh$ = __fp_query$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __hostalias$MH() {
        return RuntimeHelper.requireNonNull(constants$1032.__hostalias$MH,"__hostalias");
    }
    public static MemoryAddress __hostalias ( Addressable x0) {
        var mh$ = __hostalias$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p_query$MH() {
        return RuntimeHelper.requireNonNull(constants$1032.__p_query$MH,"__p_query");
    }
    public static void __p_query ( Addressable x0) {
        var mh$ = __p_query$MH();
        try {
            mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __res_close$MH() {
        return RuntimeHelper.requireNonNull(constants$1032.__res_close$MH,"__res_close");
    }
    public static void __res_close () {
        var mh$ = __res_close$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __res_init$MH() {
        return RuntimeHelper.requireNonNull(constants$1032.__res_init$MH,"__res_init");
    }
    public static int __res_init () {
        var mh$ = __res_init$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __res_isourserver$MH() {
        return RuntimeHelper.requireNonNull(constants$1032.__res_isourserver$MH,"__res_isourserver");
    }
    public static int __res_isourserver ( Addressable x0) {
        var mh$ = __res_isourserver$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle res_mkquery$MH() {
        return RuntimeHelper.requireNonNull(constants$1032.res_mkquery$MH,"res_mkquery");
    }
    public static int res_mkquery ( int x0,  Addressable x1,  int x2,  int x3,  Addressable x4,  int x5,  Addressable x6,  Addressable x7,  int x8) {
        var mh$ = res_mkquery$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3, x4, x5, x6, x7, x8);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle res_query$MH() {
        return RuntimeHelper.requireNonNull(constants$1033.res_query$MH,"res_query");
    }
    public static int res_query ( Addressable x0,  int x1,  int x2,  Addressable x3,  int x4) {
        var mh$ = res_query$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle res_querydomain$MH() {
        return RuntimeHelper.requireNonNull(constants$1033.res_querydomain$MH,"res_querydomain");
    }
    public static int res_querydomain ( Addressable x0,  Addressable x1,  int x2,  int x3,  Addressable x4,  int x5) {
        var mh$ = res_querydomain$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3, x4, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle res_search$MH() {
        return RuntimeHelper.requireNonNull(constants$1033.res_search$MH,"res_search");
    }
    public static int res_search ( Addressable x0,  int x1,  int x2,  Addressable x3,  int x4) {
        var mh$ = res_search$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle res_send$MH() {
        return RuntimeHelper.requireNonNull(constants$1033.res_send$MH,"res_send");
    }
    public static int res_send ( Addressable x0,  int x1,  Addressable x2,  int x3) {
        var mh$ = res_send$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle res_hnok$MH() {
        return RuntimeHelper.requireNonNull(constants$1033.res_hnok$MH,"res_hnok");
    }
    public static int res_hnok ( Addressable x0) {
        var mh$ = res_hnok$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle res_ownok$MH() {
        return RuntimeHelper.requireNonNull(constants$1033.res_ownok$MH,"res_ownok");
    }
    public static int res_ownok ( Addressable x0) {
        var mh$ = res_ownok$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle res_mailok$MH() {
        return RuntimeHelper.requireNonNull(constants$1034.res_mailok$MH,"res_mailok");
    }
    public static int res_mailok ( Addressable x0) {
        var mh$ = res_mailok$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle res_dnok$MH() {
        return RuntimeHelper.requireNonNull(constants$1034.res_dnok$MH,"res_dnok");
    }
    public static int res_dnok ( Addressable x0) {
        var mh$ = res_dnok$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __sym_ston$MH() {
        return RuntimeHelper.requireNonNull(constants$1034.__sym_ston$MH,"__sym_ston");
    }
    public static int __sym_ston ( Addressable x0,  Addressable x1,  Addressable x2) {
        var mh$ = __sym_ston$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __sym_ntos$MH() {
        return RuntimeHelper.requireNonNull(constants$1034.__sym_ntos$MH,"__sym_ntos");
    }
    public static MemoryAddress __sym_ntos ( Addressable x0,  int x1,  Addressable x2) {
        var mh$ = __sym_ntos$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __sym_ntop$MH() {
        return RuntimeHelper.requireNonNull(constants$1034.__sym_ntop$MH,"__sym_ntop");
    }
    public static MemoryAddress __sym_ntop ( Addressable x0,  int x1,  Addressable x2) {
        var mh$ = __sym_ntop$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __b64_ntop$MH() {
        return RuntimeHelper.requireNonNull(constants$1034.__b64_ntop$MH,"__b64_ntop");
    }
    public static int __b64_ntop ( Addressable x0,  long x1,  Addressable x2,  long x3) {
        var mh$ = __b64_ntop$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __b64_pton$MH() {
        return RuntimeHelper.requireNonNull(constants$1035.__b64_pton$MH,"__b64_pton");
    }
    public static int __b64_pton ( Addressable x0,  Addressable x1,  long x2) {
        var mh$ = __b64_pton$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __loc_aton$MH() {
        return RuntimeHelper.requireNonNull(constants$1035.__loc_aton$MH,"__loc_aton");
    }
    public static int __loc_aton ( Addressable __ascii,  Addressable __binary) {
        var mh$ = __loc_aton$MH();
        try {
            return (int)mh$.invokeExact(__ascii, __binary);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __loc_ntoa$MH() {
        return RuntimeHelper.requireNonNull(constants$1035.__loc_ntoa$MH,"__loc_ntoa");
    }
    public static MemoryAddress __loc_ntoa ( Addressable __binary,  Addressable __ascii) {
        var mh$ = __loc_ntoa$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__binary, __ascii);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle dn_skipname$MH() {
        return RuntimeHelper.requireNonNull(constants$1035.dn_skipname$MH,"dn_skipname");
    }
    public static int dn_skipname ( Addressable x0,  Addressable x1) {
        var mh$ = dn_skipname$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __putlong$MH() {
        return RuntimeHelper.requireNonNull(constants$1035.__putlong$MH,"__putlong");
    }
    public static void __putlong ( int x0,  Addressable x1) {
        var mh$ = __putlong$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __putshort$MH() {
        return RuntimeHelper.requireNonNull(constants$1035.__putshort$MH,"__putshort");
    }
    public static void __putshort ( short x0,  Addressable x1) {
        var mh$ = __putshort$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p_class$MH() {
        return RuntimeHelper.requireNonNull(constants$1036.__p_class$MH,"__p_class");
    }
    public static MemoryAddress __p_class ( int x0) {
        var mh$ = __p_class$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p_time$MH() {
        return RuntimeHelper.requireNonNull(constants$1036.__p_time$MH,"__p_time");
    }
    public static MemoryAddress __p_time ( int x0) {
        var mh$ = __p_time$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1036.__p_type$MH,"__p_type");
    }
    public static MemoryAddress __p_type ( int x0) {
        var mh$ = __p_type$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p_rcode$MH() {
        return RuntimeHelper.requireNonNull(constants$1036.__p_rcode$MH,"__p_rcode");
    }
    public static MemoryAddress __p_rcode ( int x0) {
        var mh$ = __p_rcode$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p_cdnname$MH() {
        return RuntimeHelper.requireNonNull(constants$1036.__p_cdnname$MH,"__p_cdnname");
    }
    public static MemoryAddress __p_cdnname ( Addressable x0,  Addressable x1,  int x2,  Addressable x3) {
        var mh$ = __p_cdnname$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(x0, x1, x2, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p_cdname$MH() {
        return RuntimeHelper.requireNonNull(constants$1036.__p_cdname$MH,"__p_cdname");
    }
    public static MemoryAddress __p_cdname ( Addressable x0,  Addressable x1,  Addressable x2) {
        var mh$ = __p_cdname$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p_fqnname$MH() {
        return RuntimeHelper.requireNonNull(constants$1037.__p_fqnname$MH,"__p_fqnname");
    }
    public static MemoryAddress __p_fqnname ( Addressable __cp,  Addressable __msg,  int x2,  Addressable x3,  int x4) {
        var mh$ = __p_fqnname$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__cp, __msg, x2, x3, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p_fqname$MH() {
        return RuntimeHelper.requireNonNull(constants$1037.__p_fqname$MH,"__p_fqname");
    }
    public static MemoryAddress __p_fqname ( Addressable x0,  Addressable x1,  Addressable x2) {
        var mh$ = __p_fqname$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p_option$MH() {
        return RuntimeHelper.requireNonNull(constants$1037.__p_option$MH,"__p_option");
    }
    public static MemoryAddress __p_option ( long __option) {
        var mh$ = __p_option$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__option);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __dn_count_labels$MH() {
        return RuntimeHelper.requireNonNull(constants$1037.__dn_count_labels$MH,"__dn_count_labels");
    }
    public static int __dn_count_labels ( Addressable x0) {
        var mh$ = __dn_count_labels$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle dn_comp$MH() {
        return RuntimeHelper.requireNonNull(constants$1037.dn_comp$MH,"dn_comp");
    }
    public static int dn_comp ( Addressable x0,  Addressable x1,  int x2,  Addressable x3,  Addressable x4) {
        var mh$ = dn_comp$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle dn_expand$MH() {
        return RuntimeHelper.requireNonNull(constants$1037.dn_expand$MH,"dn_expand");
    }
    public static int dn_expand ( Addressable x0,  Addressable x1,  Addressable x2,  Addressable x3,  int x4) {
        var mh$ = dn_expand$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __res_randomid$MH() {
        return RuntimeHelper.requireNonNull(constants$1038.__res_randomid$MH,"__res_randomid");
    }
    public static int __res_randomid () {
        var mh$ = __res_randomid$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __res_nameinquery$MH() {
        return RuntimeHelper.requireNonNull(constants$1038.__res_nameinquery$MH,"__res_nameinquery");
    }
    public static int __res_nameinquery ( Addressable x0,  int x1,  int x2,  Addressable x3,  Addressable x4) {
        var mh$ = __res_nameinquery$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __res_queriesmatch$MH() {
        return RuntimeHelper.requireNonNull(constants$1038.__res_queriesmatch$MH,"__res_queriesmatch");
    }
    public static int __res_queriesmatch ( Addressable x0,  Addressable x1,  Addressable x2,  Addressable x3) {
        var mh$ = __res_queriesmatch$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __res_ninit$MH() {
        return RuntimeHelper.requireNonNull(constants$1038.__res_ninit$MH,"__res_ninit");
    }
    public static int __res_ninit ( Addressable x0) {
        var mh$ = __res_ninit$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __fp_resstat$MH() {
        return RuntimeHelper.requireNonNull(constants$1038.__fp_resstat$MH,"__fp_resstat");
    }
    public static void __fp_resstat ( Addressable x0,  Addressable x1) {
        var mh$ = __fp_resstat$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __res_hostalias$MH() {
        return RuntimeHelper.requireNonNull(constants$1038.__res_hostalias$MH,"__res_hostalias");
    }
    public static MemoryAddress __res_hostalias ( Addressable x0,  Addressable x1,  Addressable x2,  long x3) {
        var mh$ = __res_hostalias$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(x0, x1, x2, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle res_nquery$MH() {
        return RuntimeHelper.requireNonNull(constants$1039.res_nquery$MH,"res_nquery");
    }
    public static int res_nquery ( Addressable x0,  Addressable x1,  int x2,  int x3,  Addressable x4,  int x5) {
        var mh$ = res_nquery$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3, x4, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle res_nsearch$MH() {
        return RuntimeHelper.requireNonNull(constants$1039.res_nsearch$MH,"res_nsearch");
    }
    public static int res_nsearch ( Addressable x0,  Addressable x1,  int x2,  int x3,  Addressable x4,  int x5) {
        var mh$ = res_nsearch$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3, x4, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle res_nquerydomain$MH() {
        return RuntimeHelper.requireNonNull(constants$1039.res_nquerydomain$MH,"res_nquerydomain");
    }
    public static int res_nquerydomain ( Addressable x0,  Addressable x1,  Addressable x2,  int x3,  int x4,  Addressable x5,  int x6) {
        var mh$ = res_nquerydomain$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3, x4, x5, x6);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle res_nmkquery$MH() {
        return RuntimeHelper.requireNonNull(constants$1039.res_nmkquery$MH,"res_nmkquery");
    }
    public static int res_nmkquery ( Addressable x0,  int x1,  Addressable x2,  int x3,  int x4,  Addressable x5,  int x6,  Addressable x7,  Addressable x8,  int x9) {
        var mh$ = res_nmkquery$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle res_nsend$MH() {
        return RuntimeHelper.requireNonNull(constants$1039.res_nsend$MH,"res_nsend");
    }
    public static int res_nsend ( Addressable x0,  Addressable x1,  int x2,  Addressable x3,  int x4) {
        var mh$ = res_nsend$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __res_nclose$MH() {
        return RuntimeHelper.requireNonNull(constants$1039.__res_nclose$MH,"__res_nclose");
    }
    public static void __res_nclose ( Addressable x0) {
        var mh$ = __res_nclose$MH();
        try {
            mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int IFF_UP() {
        return (int)1L;
    }
    public static int IFF_BROADCAST() {
        return (int)2L;
    }
    public static int IFF_DEBUG() {
        return (int)4L;
    }
    public static int IFF_LOOPBACK() {
        return (int)8L;
    }
    public static int IFF_POINTOPOINT() {
        return (int)16L;
    }
    public static int IFF_NOTRAILERS() {
        return (int)32L;
    }
    public static int IFF_RUNNING() {
        return (int)64L;
    }
    public static int IFF_NOARP() {
        return (int)128L;
    }
    public static int IFF_PROMISC() {
        return (int)256L;
    }
    public static int IFF_ALLMULTI() {
        return (int)512L;
    }
    public static int IFF_MASTER() {
        return (int)1024L;
    }
    public static int IFF_SLAVE() {
        return (int)2048L;
    }
    public static int IFF_MULTICAST() {
        return (int)4096L;
    }
    public static int IFF_PORTSEL() {
        return (int)8192L;
    }
    public static int IFF_AUTOMEDIA() {
        return (int)16384L;
    }
    public static int IFF_DYNAMIC() {
        return (int)32768L;
    }
    public static MethodHandle if_nametoindex$MH() {
        return RuntimeHelper.requireNonNull(constants$1040.if_nametoindex$MH,"if_nametoindex");
    }
    public static int if_nametoindex ( Addressable __ifname) {
        var mh$ = if_nametoindex$MH();
        try {
            return (int)mh$.invokeExact(__ifname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle if_indextoname$MH() {
        return RuntimeHelper.requireNonNull(constants$1040.if_indextoname$MH,"if_indextoname");
    }
    public static MemoryAddress if_indextoname ( int __ifindex,  Addressable __ifname) {
        var mh$ = if_indextoname$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__ifindex, __ifname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle if_nameindex$MH() {
        return RuntimeHelper.requireNonNull(constants$1040.if_nameindex$MH,"if_nameindex");
    }
    public static MemoryAddress if_nameindex () {
        var mh$ = if_nameindex$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle if_freenameindex$MH() {
        return RuntimeHelper.requireNonNull(constants$1040.if_freenameindex$MH,"if_freenameindex");
    }
    public static void if_freenameindex ( Addressable __ptr) {
        var mh$ = if_freenameindex$MH();
        try {
            mh$.invokeExact(__ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle inet_addr$MH() {
        return RuntimeHelper.requireNonNull(constants$1040.inet_addr$MH,"inet_addr");
    }
    public static int inet_addr ( Addressable __cp) {
        var mh$ = inet_addr$MH();
        try {
            return (int)mh$.invokeExact(__cp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle inet_lnaof$MH() {
        return RuntimeHelper.requireNonNull(constants$1040.inet_lnaof$MH,"inet_lnaof");
    }
    public static int inet_lnaof ( MemorySegment __in) {
        var mh$ = inet_lnaof$MH();
        try {
            return (int)mh$.invokeExact(__in);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle inet_makeaddr$MH() {
        return RuntimeHelper.requireNonNull(constants$1041.inet_makeaddr$MH,"inet_makeaddr");
    }
    public static MemorySegment inet_makeaddr ( SegmentAllocator allocator,  int __net,  int __host) {
        var mh$ = inet_makeaddr$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(allocator, __net, __host);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle inet_netof$MH() {
        return RuntimeHelper.requireNonNull(constants$1041.inet_netof$MH,"inet_netof");
    }
    public static int inet_netof ( MemorySegment __in) {
        var mh$ = inet_netof$MH();
        try {
            return (int)mh$.invokeExact(__in);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle inet_network$MH() {
        return RuntimeHelper.requireNonNull(constants$1041.inet_network$MH,"inet_network");
    }
    public static int inet_network ( Addressable __cp) {
        var mh$ = inet_network$MH();
        try {
            return (int)mh$.invokeExact(__cp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle inet_ntoa$MH() {
        return RuntimeHelper.requireNonNull(constants$1041.inet_ntoa$MH,"inet_ntoa");
    }
    public static MemoryAddress inet_ntoa ( MemorySegment __in) {
        var mh$ = inet_ntoa$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__in);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle inet_pton$MH() {
        return RuntimeHelper.requireNonNull(constants$1041.inet_pton$MH,"inet_pton");
    }
    public static int inet_pton ( int __af,  Addressable __cp,  Addressable __buf) {
        var mh$ = inet_pton$MH();
        try {
            return (int)mh$.invokeExact(__af, __cp, __buf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle inet_ntop$MH() {
        return RuntimeHelper.requireNonNull(constants$1041.inet_ntop$MH,"inet_ntop");
    }
    public static MemoryAddress inet_ntop ( int __af,  Addressable __cp,  Addressable __buf,  int __len) {
        var mh$ = inet_ntop$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__af, __cp, __buf, __len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle inet_aton$MH() {
        return RuntimeHelper.requireNonNull(constants$1042.inet_aton$MH,"inet_aton");
    }
    public static int inet_aton ( Addressable __cp,  Addressable __inp) {
        var mh$ = inet_aton$MH();
        try {
            return (int)mh$.invokeExact(__cp, __inp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle inet_neta$MH() {
        return RuntimeHelper.requireNonNull(constants$1042.inet_neta$MH,"inet_neta");
    }
    public static MemoryAddress inet_neta ( int __net,  Addressable __buf,  long __len) {
        var mh$ = inet_neta$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__net, __buf, __len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle inet_net_ntop$MH() {
        return RuntimeHelper.requireNonNull(constants$1042.inet_net_ntop$MH,"inet_net_ntop");
    }
    public static MemoryAddress inet_net_ntop ( int __af,  Addressable __cp,  int __bits,  Addressable __buf,  long __len) {
        var mh$ = inet_net_ntop$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__af, __cp, __bits, __buf, __len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle inet_net_pton$MH() {
        return RuntimeHelper.requireNonNull(constants$1042.inet_net_pton$MH,"inet_net_pton");
    }
    public static int inet_net_pton ( int __af,  Addressable __cp,  Addressable __buf,  long __len) {
        var mh$ = inet_net_pton$MH();
        try {
            return (int)mh$.invokeExact(__af, __cp, __buf, __len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle inet_nsap_addr$MH() {
        return RuntimeHelper.requireNonNull(constants$1042.inet_nsap_addr$MH,"inet_nsap_addr");
    }
    public static int inet_nsap_addr ( Addressable __cp,  Addressable __buf,  int __len) {
        var mh$ = inet_nsap_addr$MH();
        try {
            return (int)mh$.invokeExact(__cp, __buf, __len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle inet_nsap_ntoa$MH() {
        return RuntimeHelper.requireNonNull(constants$1042.inet_nsap_ntoa$MH,"inet_nsap_ntoa");
    }
    public static MemoryAddress inet_nsap_ntoa ( int __len,  Addressable __cp,  Addressable __buf) {
        var mh$ = inet_nsap_ntoa$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(__len, __cp, __buf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_networking_init$MH() {
        return RuntimeHelper.requireNonNull(constants$1043.g_networking_init$MH,"g_networking_init");
    }
    public static void g_networking_init () {
        var mh$ = g_networking_init$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GUnixConnection_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GUnixConnection_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GUnixConnection_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GUnixConnection_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GUnixConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$1043.glib_autoptr_clear_GUnixConnection$MH,"glib_autoptr_clear_GUnixConnection");
    }
    public static void glib_autoptr_clear_GUnixConnection ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GUnixConnection$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GUnixConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$1043.glib_autoptr_cleanup_GUnixConnection$MH,"glib_autoptr_cleanup_GUnixConnection");
    }
    public static void glib_autoptr_cleanup_GUnixConnection ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GUnixConnection$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GUnixConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$1043.glib_listautoptr_cleanup_GUnixConnection$MH,"glib_listautoptr_cleanup_GUnixConnection");
    }
    public static void glib_listautoptr_cleanup_GUnixConnection ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GUnixConnection$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GUnixConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$1043.glib_slistautoptr_cleanup_GUnixConnection$MH,"glib_slistautoptr_cleanup_GUnixConnection");
    }
    public static void glib_slistautoptr_cleanup_GUnixConnection ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GUnixConnection$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GUnixConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$1043.glib_queueautoptr_cleanup_GUnixConnection$MH,"glib_queueautoptr_cleanup_GUnixConnection");
    }
    public static void glib_queueautoptr_cleanup_GUnixConnection ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GUnixConnection$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_connection_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1044.g_unix_connection_get_type$MH,"g_unix_connection_get_type");
    }
    public static long g_unix_connection_get_type () {
        var mh$ = g_unix_connection_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_connection_send_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$1044.g_unix_connection_send_fd$MH,"g_unix_connection_send_fd");
    }
    public static int g_unix_connection_send_fd ( Addressable connection,  int fd,  Addressable cancellable,  Addressable error) {
        var mh$ = g_unix_connection_send_fd$MH();
        try {
            return (int)mh$.invokeExact(connection, fd, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_connection_receive_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$1044.g_unix_connection_receive_fd$MH,"g_unix_connection_receive_fd");
    }
    public static int g_unix_connection_receive_fd ( Addressable connection,  Addressable cancellable,  Addressable error) {
        var mh$ = g_unix_connection_receive_fd$MH();
        try {
            return (int)mh$.invokeExact(connection, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_connection_send_credentials$MH() {
        return RuntimeHelper.requireNonNull(constants$1044.g_unix_connection_send_credentials$MH,"g_unix_connection_send_credentials");
    }
    public static int g_unix_connection_send_credentials ( Addressable connection,  Addressable cancellable,  Addressable error) {
        var mh$ = g_unix_connection_send_credentials$MH();
        try {
            return (int)mh$.invokeExact(connection, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_connection_send_credentials_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1044.g_unix_connection_send_credentials_async$MH,"g_unix_connection_send_credentials_async");
    }
    public static void g_unix_connection_send_credentials_async ( Addressable connection,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = g_unix_connection_send_credentials_async$MH();
        try {
            mh$.invokeExact(connection, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_connection_send_credentials_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1044.g_unix_connection_send_credentials_finish$MH,"g_unix_connection_send_credentials_finish");
    }
    public static int g_unix_connection_send_credentials_finish ( Addressable connection,  Addressable result,  Addressable error) {
        var mh$ = g_unix_connection_send_credentials_finish$MH();
        try {
            return (int)mh$.invokeExact(connection, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_connection_receive_credentials$MH() {
        return RuntimeHelper.requireNonNull(constants$1045.g_unix_connection_receive_credentials$MH,"g_unix_connection_receive_credentials");
    }
    public static MemoryAddress g_unix_connection_receive_credentials ( Addressable connection,  Addressable cancellable,  Addressable error) {
        var mh$ = g_unix_connection_receive_credentials$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(connection, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_connection_receive_credentials_async$MH() {
        return RuntimeHelper.requireNonNull(constants$1045.g_unix_connection_receive_credentials_async$MH,"g_unix_connection_receive_credentials_async");
    }
    public static void g_unix_connection_receive_credentials_async ( Addressable connection,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = g_unix_connection_receive_credentials_async$MH();
        try {
            mh$.invokeExact(connection, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_connection_receive_credentials_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1045.g_unix_connection_receive_credentials_finish$MH,"g_unix_connection_receive_credentials_finish");
    }
    public static MemoryAddress g_unix_connection_receive_credentials_finish ( Addressable connection,  Addressable result,  Addressable error) {
        var mh$ = g_unix_connection_receive_credentials_finish$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(connection, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GUnixCredentialsMessage_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GUnixCredentialsMessage_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GUnixCredentialsMessage_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GUnixCredentialsMessage_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GUnixCredentialsMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$1045.glib_autoptr_clear_GUnixCredentialsMessage$MH,"glib_autoptr_clear_GUnixCredentialsMessage");
    }
    public static void glib_autoptr_clear_GUnixCredentialsMessage ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GUnixCredentialsMessage$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GUnixCredentialsMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$1045.glib_autoptr_cleanup_GUnixCredentialsMessage$MH,"glib_autoptr_cleanup_GUnixCredentialsMessage");
    }
    public static void glib_autoptr_cleanup_GUnixCredentialsMessage ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GUnixCredentialsMessage$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GUnixCredentialsMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$1045.glib_listautoptr_cleanup_GUnixCredentialsMessage$MH,"glib_listautoptr_cleanup_GUnixCredentialsMessage");
    }
    public static void glib_listautoptr_cleanup_GUnixCredentialsMessage ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GUnixCredentialsMessage$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GUnixCredentialsMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$1046.glib_slistautoptr_cleanup_GUnixCredentialsMessage$MH,"glib_slistautoptr_cleanup_GUnixCredentialsMessage");
    }
    public static void glib_slistautoptr_cleanup_GUnixCredentialsMessage ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GUnixCredentialsMessage$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GUnixCredentialsMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$1046.glib_queueautoptr_cleanup_GUnixCredentialsMessage$MH,"glib_queueautoptr_cleanup_GUnixCredentialsMessage");
    }
    public static void glib_queueautoptr_cleanup_GUnixCredentialsMessage ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GUnixCredentialsMessage$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_credentials_message_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1046.g_unix_credentials_message_get_type$MH,"g_unix_credentials_message_get_type");
    }
    public static long g_unix_credentials_message_get_type () {
        var mh$ = g_unix_credentials_message_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_credentials_message_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1046.g_unix_credentials_message_new$MH,"g_unix_credentials_message_new");
    }
    public static MemoryAddress g_unix_credentials_message_new () {
        var mh$ = g_unix_credentials_message_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_credentials_message_new_with_credentials$MH() {
        return RuntimeHelper.requireNonNull(constants$1046.g_unix_credentials_message_new_with_credentials$MH,"g_unix_credentials_message_new_with_credentials");
    }
    public static MemoryAddress g_unix_credentials_message_new_with_credentials ( Addressable credentials) {
        var mh$ = g_unix_credentials_message_new_with_credentials$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(credentials);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_credentials_message_get_credentials$MH() {
        return RuntimeHelper.requireNonNull(constants$1046.g_unix_credentials_message_get_credentials$MH,"g_unix_credentials_message_get_credentials");
    }
    public static MemoryAddress g_unix_credentials_message_get_credentials ( Addressable message) {
        var mh$ = g_unix_credentials_message_get_credentials$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_credentials_message_is_supported$MH() {
        return RuntimeHelper.requireNonNull(constants$1047.g_unix_credentials_message_is_supported$MH,"g_unix_credentials_message_is_supported");
    }
    public static int g_unix_credentials_message_is_supported () {
        var mh$ = g_unix_credentials_message_is_supported$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GUnixFDList_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GUnixFDList_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GUnixFDList_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GUnixFDList_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GUnixFDList$MH() {
        return RuntimeHelper.requireNonNull(constants$1047.glib_autoptr_clear_GUnixFDList$MH,"glib_autoptr_clear_GUnixFDList");
    }
    public static void glib_autoptr_clear_GUnixFDList ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GUnixFDList$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GUnixFDList$MH() {
        return RuntimeHelper.requireNonNull(constants$1047.glib_autoptr_cleanup_GUnixFDList$MH,"glib_autoptr_cleanup_GUnixFDList");
    }
    public static void glib_autoptr_cleanup_GUnixFDList ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GUnixFDList$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GUnixFDList$MH() {
        return RuntimeHelper.requireNonNull(constants$1047.glib_listautoptr_cleanup_GUnixFDList$MH,"glib_listautoptr_cleanup_GUnixFDList");
    }
    public static void glib_listautoptr_cleanup_GUnixFDList ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GUnixFDList$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GUnixFDList$MH() {
        return RuntimeHelper.requireNonNull(constants$1047.glib_slistautoptr_cleanup_GUnixFDList$MH,"glib_slistautoptr_cleanup_GUnixFDList");
    }
    public static void glib_slistautoptr_cleanup_GUnixFDList ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GUnixFDList$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GUnixFDList$MH() {
        return RuntimeHelper.requireNonNull(constants$1047.glib_queueautoptr_cleanup_GUnixFDList$MH,"glib_queueautoptr_cleanup_GUnixFDList");
    }
    public static void glib_queueautoptr_cleanup_GUnixFDList ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GUnixFDList$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_fd_list_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1048.g_unix_fd_list_get_type$MH,"g_unix_fd_list_get_type");
    }
    public static long g_unix_fd_list_get_type () {
        var mh$ = g_unix_fd_list_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_fd_list_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1048.g_unix_fd_list_new$MH,"g_unix_fd_list_new");
    }
    public static MemoryAddress g_unix_fd_list_new () {
        var mh$ = g_unix_fd_list_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_fd_list_new_from_array$MH() {
        return RuntimeHelper.requireNonNull(constants$1048.g_unix_fd_list_new_from_array$MH,"g_unix_fd_list_new_from_array");
    }
    public static MemoryAddress g_unix_fd_list_new_from_array ( Addressable fds,  int n_fds) {
        var mh$ = g_unix_fd_list_new_from_array$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(fds, n_fds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_fd_list_append$MH() {
        return RuntimeHelper.requireNonNull(constants$1048.g_unix_fd_list_append$MH,"g_unix_fd_list_append");
    }
    public static int g_unix_fd_list_append ( Addressable list,  int fd,  Addressable error) {
        var mh$ = g_unix_fd_list_append$MH();
        try {
            return (int)mh$.invokeExact(list, fd, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_fd_list_get_length$MH() {
        return RuntimeHelper.requireNonNull(constants$1048.g_unix_fd_list_get_length$MH,"g_unix_fd_list_get_length");
    }
    public static int g_unix_fd_list_get_length ( Addressable list) {
        var mh$ = g_unix_fd_list_get_length$MH();
        try {
            return (int)mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_fd_list_get$MH() {
        return RuntimeHelper.requireNonNull(constants$1048.g_unix_fd_list_get$MH,"g_unix_fd_list_get");
    }
    public static int g_unix_fd_list_get ( Addressable list,  int index_,  Addressable error) {
        var mh$ = g_unix_fd_list_get$MH();
        try {
            return (int)mh$.invokeExact(list, index_, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_fd_list_peek_fds$MH() {
        return RuntimeHelper.requireNonNull(constants$1049.g_unix_fd_list_peek_fds$MH,"g_unix_fd_list_peek_fds");
    }
    public static MemoryAddress g_unix_fd_list_peek_fds ( Addressable list,  Addressable length) {
        var mh$ = g_unix_fd_list_peek_fds$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(list, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_fd_list_steal_fds$MH() {
        return RuntimeHelper.requireNonNull(constants$1049.g_unix_fd_list_steal_fds$MH,"g_unix_fd_list_steal_fds");
    }
    public static MemoryAddress g_unix_fd_list_steal_fds ( Addressable list,  Addressable length) {
        var mh$ = g_unix_fd_list_steal_fds$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(list, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GUnixFDMessage_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GUnixFDMessage_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GUnixFDMessage_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GUnixFDMessage_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GUnixFDMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$1049.glib_autoptr_clear_GUnixFDMessage$MH,"glib_autoptr_clear_GUnixFDMessage");
    }
    public static void glib_autoptr_clear_GUnixFDMessage ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GUnixFDMessage$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GUnixFDMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$1049.glib_autoptr_cleanup_GUnixFDMessage$MH,"glib_autoptr_cleanup_GUnixFDMessage");
    }
    public static void glib_autoptr_cleanup_GUnixFDMessage ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GUnixFDMessage$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GUnixFDMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$1049.glib_listautoptr_cleanup_GUnixFDMessage$MH,"glib_listautoptr_cleanup_GUnixFDMessage");
    }
    public static void glib_listautoptr_cleanup_GUnixFDMessage ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GUnixFDMessage$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GUnixFDMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$1049.glib_slistautoptr_cleanup_GUnixFDMessage$MH,"glib_slistautoptr_cleanup_GUnixFDMessage");
    }
    public static void glib_slistautoptr_cleanup_GUnixFDMessage ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GUnixFDMessage$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GUnixFDMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$1050.glib_queueautoptr_cleanup_GUnixFDMessage$MH,"glib_queueautoptr_cleanup_GUnixFDMessage");
    }
    public static void glib_queueautoptr_cleanup_GUnixFDMessage ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GUnixFDMessage$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_fd_message_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1050.g_unix_fd_message_get_type$MH,"g_unix_fd_message_get_type");
    }
    public static long g_unix_fd_message_get_type () {
        var mh$ = g_unix_fd_message_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_fd_message_new_with_fd_list$MH() {
        return RuntimeHelper.requireNonNull(constants$1050.g_unix_fd_message_new_with_fd_list$MH,"g_unix_fd_message_new_with_fd_list");
    }
    public static MemoryAddress g_unix_fd_message_new_with_fd_list ( Addressable fd_list) {
        var mh$ = g_unix_fd_message_new_with_fd_list$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(fd_list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_fd_message_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1050.g_unix_fd_message_new$MH,"g_unix_fd_message_new");
    }
    public static MemoryAddress g_unix_fd_message_new () {
        var mh$ = g_unix_fd_message_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_fd_message_get_fd_list$MH() {
        return RuntimeHelper.requireNonNull(constants$1050.g_unix_fd_message_get_fd_list$MH,"g_unix_fd_message_get_fd_list");
    }
    public static MemoryAddress g_unix_fd_message_get_fd_list ( Addressable message) {
        var mh$ = g_unix_fd_message_get_fd_list$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_fd_message_steal_fds$MH() {
        return RuntimeHelper.requireNonNull(constants$1050.g_unix_fd_message_steal_fds$MH,"g_unix_fd_message_steal_fds");
    }
    public static MemoryAddress g_unix_fd_message_steal_fds ( Addressable message,  Addressable length) {
        var mh$ = g_unix_fd_message_steal_fds$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(message, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_fd_message_append_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$1051.g_unix_fd_message_append_fd$MH,"g_unix_fd_message_append_fd");
    }
    public static int g_unix_fd_message_append_fd ( Addressable message,  int fd,  Addressable error) {
        var mh$ = g_unix_fd_message_append_fd$MH();
        try {
            return (int)mh$.invokeExact(message, fd, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GUnixInputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GUnixInputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GUnixInputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GUnixInputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GUnixInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$1051.glib_autoptr_clear_GUnixInputStream$MH,"glib_autoptr_clear_GUnixInputStream");
    }
    public static void glib_autoptr_clear_GUnixInputStream ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GUnixInputStream$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GUnixInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$1051.glib_autoptr_cleanup_GUnixInputStream$MH,"glib_autoptr_cleanup_GUnixInputStream");
    }
    public static void glib_autoptr_cleanup_GUnixInputStream ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GUnixInputStream$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GUnixInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$1051.glib_listautoptr_cleanup_GUnixInputStream$MH,"glib_listautoptr_cleanup_GUnixInputStream");
    }
    public static void glib_listautoptr_cleanup_GUnixInputStream ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GUnixInputStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GUnixInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$1051.glib_slistautoptr_cleanup_GUnixInputStream$MH,"glib_slistautoptr_cleanup_GUnixInputStream");
    }
    public static void glib_slistautoptr_cleanup_GUnixInputStream ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GUnixInputStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GUnixInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$1051.glib_queueautoptr_cleanup_GUnixInputStream$MH,"glib_queueautoptr_cleanup_GUnixInputStream");
    }
    public static void glib_queueautoptr_cleanup_GUnixInputStream ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GUnixInputStream$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_input_stream_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1052.g_unix_input_stream_get_type$MH,"g_unix_input_stream_get_type");
    }
    public static long g_unix_input_stream_get_type () {
        var mh$ = g_unix_input_stream_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_input_stream_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1052.g_unix_input_stream_new$MH,"g_unix_input_stream_new");
    }
    public static MemoryAddress g_unix_input_stream_new ( int fd,  int close_fd) {
        var mh$ = g_unix_input_stream_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(fd, close_fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_input_stream_set_close_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$1052.g_unix_input_stream_set_close_fd$MH,"g_unix_input_stream_set_close_fd");
    }
    public static void g_unix_input_stream_set_close_fd ( Addressable stream,  int close_fd) {
        var mh$ = g_unix_input_stream_set_close_fd$MH();
        try {
            mh$.invokeExact(stream, close_fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_input_stream_get_close_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$1052.g_unix_input_stream_get_close_fd$MH,"g_unix_input_stream_get_close_fd");
    }
    public static int g_unix_input_stream_get_close_fd ( Addressable stream) {
        var mh$ = g_unix_input_stream_get_close_fd$MH();
        try {
            return (int)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_input_stream_get_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$1052.g_unix_input_stream_get_fd$MH,"g_unix_input_stream_get_fd");
    }
    public static int g_unix_input_stream_get_fd ( Addressable stream) {
        var mh$ = g_unix_input_stream_get_fd$MH();
        try {
            return (int)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mount_entry_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1052.g_unix_mount_entry_get_type$MH,"g_unix_mount_entry_get_type");
    }
    public static long g_unix_mount_entry_get_type () {
        var mh$ = g_unix_mount_entry_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mount_point_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1053.g_unix_mount_point_get_type$MH,"g_unix_mount_point_get_type");
    }
    public static long g_unix_mount_point_get_type () {
        var mh$ = g_unix_mount_point_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GUnixMountMonitor_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GUnixMountMonitor_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GUnixMountMonitor_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GUnixMountMonitor_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GUnixMountMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$1053.glib_autoptr_clear_GUnixMountMonitor$MH,"glib_autoptr_clear_GUnixMountMonitor");
    }
    public static void glib_autoptr_clear_GUnixMountMonitor ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GUnixMountMonitor$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GUnixMountMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$1053.glib_autoptr_cleanup_GUnixMountMonitor$MH,"glib_autoptr_cleanup_GUnixMountMonitor");
    }
    public static void glib_autoptr_cleanup_GUnixMountMonitor ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GUnixMountMonitor$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GUnixMountMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$1053.glib_listautoptr_cleanup_GUnixMountMonitor$MH,"glib_listautoptr_cleanup_GUnixMountMonitor");
    }
    public static void glib_listautoptr_cleanup_GUnixMountMonitor ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GUnixMountMonitor$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GUnixMountMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$1053.glib_slistautoptr_cleanup_GUnixMountMonitor$MH,"glib_slistautoptr_cleanup_GUnixMountMonitor");
    }
    public static void glib_slistautoptr_cleanup_GUnixMountMonitor ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GUnixMountMonitor$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GUnixMountMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$1053.glib_queueautoptr_cleanup_GUnixMountMonitor$MH,"glib_queueautoptr_cleanup_GUnixMountMonitor");
    }
    public static void glib_queueautoptr_cleanup_GUnixMountMonitor ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GUnixMountMonitor$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mount_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1054.g_unix_mount_free$MH,"g_unix_mount_free");
    }
    public static void g_unix_mount_free ( Addressable mount_entry) {
        var mh$ = g_unix_mount_free$MH();
        try {
            mh$.invokeExact(mount_entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mount_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1054.g_unix_mount_copy$MH,"g_unix_mount_copy");
    }
    public static MemoryAddress g_unix_mount_copy ( Addressable mount_entry) {
        var mh$ = g_unix_mount_copy$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(mount_entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mount_point_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1054.g_unix_mount_point_free$MH,"g_unix_mount_point_free");
    }
    public static void g_unix_mount_point_free ( Addressable mount_point) {
        var mh$ = g_unix_mount_point_free$MH();
        try {
            mh$.invokeExact(mount_point);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mount_point_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1054.g_unix_mount_point_copy$MH,"g_unix_mount_point_copy");
    }
    public static MemoryAddress g_unix_mount_point_copy ( Addressable mount_point) {
        var mh$ = g_unix_mount_point_copy$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(mount_point);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mount_compare$MH() {
        return RuntimeHelper.requireNonNull(constants$1054.g_unix_mount_compare$MH,"g_unix_mount_compare");
    }
    public static int g_unix_mount_compare ( Addressable mount1,  Addressable mount2) {
        var mh$ = g_unix_mount_compare$MH();
        try {
            return (int)mh$.invokeExact(mount1, mount2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mount_get_mount_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1054.g_unix_mount_get_mount_path$MH,"g_unix_mount_get_mount_path");
    }
    public static MemoryAddress g_unix_mount_get_mount_path ( Addressable mount_entry) {
        var mh$ = g_unix_mount_get_mount_path$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(mount_entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mount_get_device_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1055.g_unix_mount_get_device_path$MH,"g_unix_mount_get_device_path");
    }
    public static MemoryAddress g_unix_mount_get_device_path ( Addressable mount_entry) {
        var mh$ = g_unix_mount_get_device_path$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(mount_entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mount_get_root_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1055.g_unix_mount_get_root_path$MH,"g_unix_mount_get_root_path");
    }
    public static MemoryAddress g_unix_mount_get_root_path ( Addressable mount_entry) {
        var mh$ = g_unix_mount_get_root_path$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(mount_entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mount_get_fs_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1055.g_unix_mount_get_fs_type$MH,"g_unix_mount_get_fs_type");
    }
    public static MemoryAddress g_unix_mount_get_fs_type ( Addressable mount_entry) {
        var mh$ = g_unix_mount_get_fs_type$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(mount_entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mount_get_options$MH() {
        return RuntimeHelper.requireNonNull(constants$1055.g_unix_mount_get_options$MH,"g_unix_mount_get_options");
    }
    public static MemoryAddress g_unix_mount_get_options ( Addressable mount_entry) {
        var mh$ = g_unix_mount_get_options$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(mount_entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mount_is_readonly$MH() {
        return RuntimeHelper.requireNonNull(constants$1055.g_unix_mount_is_readonly$MH,"g_unix_mount_is_readonly");
    }
    public static int g_unix_mount_is_readonly ( Addressable mount_entry) {
        var mh$ = g_unix_mount_is_readonly$MH();
        try {
            return (int)mh$.invokeExact(mount_entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mount_is_system_internal$MH() {
        return RuntimeHelper.requireNonNull(constants$1055.g_unix_mount_is_system_internal$MH,"g_unix_mount_is_system_internal");
    }
    public static int g_unix_mount_is_system_internal ( Addressable mount_entry) {
        var mh$ = g_unix_mount_is_system_internal$MH();
        try {
            return (int)mh$.invokeExact(mount_entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mount_guess_can_eject$MH() {
        return RuntimeHelper.requireNonNull(constants$1056.g_unix_mount_guess_can_eject$MH,"g_unix_mount_guess_can_eject");
    }
    public static int g_unix_mount_guess_can_eject ( Addressable mount_entry) {
        var mh$ = g_unix_mount_guess_can_eject$MH();
        try {
            return (int)mh$.invokeExact(mount_entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mount_guess_should_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1056.g_unix_mount_guess_should_display$MH,"g_unix_mount_guess_should_display");
    }
    public static int g_unix_mount_guess_should_display ( Addressable mount_entry) {
        var mh$ = g_unix_mount_guess_should_display$MH();
        try {
            return (int)mh$.invokeExact(mount_entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mount_guess_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1056.g_unix_mount_guess_name$MH,"g_unix_mount_guess_name");
    }
    public static MemoryAddress g_unix_mount_guess_name ( Addressable mount_entry) {
        var mh$ = g_unix_mount_guess_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(mount_entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mount_guess_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$1056.g_unix_mount_guess_icon$MH,"g_unix_mount_guess_icon");
    }
    public static MemoryAddress g_unix_mount_guess_icon ( Addressable mount_entry) {
        var mh$ = g_unix_mount_guess_icon$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(mount_entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mount_guess_symbolic_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$1056.g_unix_mount_guess_symbolic_icon$MH,"g_unix_mount_guess_symbolic_icon");
    }
    public static MemoryAddress g_unix_mount_guess_symbolic_icon ( Addressable mount_entry) {
        var mh$ = g_unix_mount_guess_symbolic_icon$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(mount_entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GUnixMountEntry_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GUnixMountEntry_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GUnixMountEntry_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GUnixMountEntry_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GUnixMountEntry$MH() {
        return RuntimeHelper.requireNonNull(constants$1056.glib_autoptr_clear_GUnixMountEntry$MH,"glib_autoptr_clear_GUnixMountEntry");
    }
    public static void glib_autoptr_clear_GUnixMountEntry ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GUnixMountEntry$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GUnixMountEntry$MH() {
        return RuntimeHelper.requireNonNull(constants$1057.glib_autoptr_cleanup_GUnixMountEntry$MH,"glib_autoptr_cleanup_GUnixMountEntry");
    }
    public static void glib_autoptr_cleanup_GUnixMountEntry ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GUnixMountEntry$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GUnixMountEntry$MH() {
        return RuntimeHelper.requireNonNull(constants$1057.glib_listautoptr_cleanup_GUnixMountEntry$MH,"glib_listautoptr_cleanup_GUnixMountEntry");
    }
    public static void glib_listautoptr_cleanup_GUnixMountEntry ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GUnixMountEntry$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GUnixMountEntry$MH() {
        return RuntimeHelper.requireNonNull(constants$1057.glib_slistautoptr_cleanup_GUnixMountEntry$MH,"glib_slistautoptr_cleanup_GUnixMountEntry");
    }
    public static void glib_slistautoptr_cleanup_GUnixMountEntry ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GUnixMountEntry$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GUnixMountEntry$MH() {
        return RuntimeHelper.requireNonNull(constants$1057.glib_queueautoptr_cleanup_GUnixMountEntry$MH,"glib_queueautoptr_cleanup_GUnixMountEntry");
    }
    public static void glib_queueautoptr_cleanup_GUnixMountEntry ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GUnixMountEntry$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GUnixMountPoint_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GUnixMountPoint_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GUnixMountPoint_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GUnixMountPoint_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GUnixMountPoint$MH() {
        return RuntimeHelper.requireNonNull(constants$1057.glib_autoptr_clear_GUnixMountPoint$MH,"glib_autoptr_clear_GUnixMountPoint");
    }
    public static void glib_autoptr_clear_GUnixMountPoint ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GUnixMountPoint$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GUnixMountPoint$MH() {
        return RuntimeHelper.requireNonNull(constants$1057.glib_autoptr_cleanup_GUnixMountPoint$MH,"glib_autoptr_cleanup_GUnixMountPoint");
    }
    public static void glib_autoptr_cleanup_GUnixMountPoint ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GUnixMountPoint$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GUnixMountPoint$MH() {
        return RuntimeHelper.requireNonNull(constants$1058.glib_listautoptr_cleanup_GUnixMountPoint$MH,"glib_listautoptr_cleanup_GUnixMountPoint");
    }
    public static void glib_listautoptr_cleanup_GUnixMountPoint ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GUnixMountPoint$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GUnixMountPoint$MH() {
        return RuntimeHelper.requireNonNull(constants$1058.glib_slistautoptr_cleanup_GUnixMountPoint$MH,"glib_slistautoptr_cleanup_GUnixMountPoint");
    }
    public static void glib_slistautoptr_cleanup_GUnixMountPoint ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GUnixMountPoint$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GUnixMountPoint$MH() {
        return RuntimeHelper.requireNonNull(constants$1058.glib_queueautoptr_cleanup_GUnixMountPoint$MH,"glib_queueautoptr_cleanup_GUnixMountPoint");
    }
    public static void glib_queueautoptr_cleanup_GUnixMountPoint ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GUnixMountPoint$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mount_point_compare$MH() {
        return RuntimeHelper.requireNonNull(constants$1058.g_unix_mount_point_compare$MH,"g_unix_mount_point_compare");
    }
    public static int g_unix_mount_point_compare ( Addressable mount1,  Addressable mount2) {
        var mh$ = g_unix_mount_point_compare$MH();
        try {
            return (int)mh$.invokeExact(mount1, mount2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mount_point_get_mount_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1058.g_unix_mount_point_get_mount_path$MH,"g_unix_mount_point_get_mount_path");
    }
    public static MemoryAddress g_unix_mount_point_get_mount_path ( Addressable mount_point) {
        var mh$ = g_unix_mount_point_get_mount_path$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(mount_point);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mount_point_get_device_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1058.g_unix_mount_point_get_device_path$MH,"g_unix_mount_point_get_device_path");
    }
    public static MemoryAddress g_unix_mount_point_get_device_path ( Addressable mount_point) {
        var mh$ = g_unix_mount_point_get_device_path$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(mount_point);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mount_point_get_fs_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1059.g_unix_mount_point_get_fs_type$MH,"g_unix_mount_point_get_fs_type");
    }
    public static MemoryAddress g_unix_mount_point_get_fs_type ( Addressable mount_point) {
        var mh$ = g_unix_mount_point_get_fs_type$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(mount_point);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mount_point_get_options$MH() {
        return RuntimeHelper.requireNonNull(constants$1059.g_unix_mount_point_get_options$MH,"g_unix_mount_point_get_options");
    }
    public static MemoryAddress g_unix_mount_point_get_options ( Addressable mount_point) {
        var mh$ = g_unix_mount_point_get_options$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(mount_point);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mount_point_is_readonly$MH() {
        return RuntimeHelper.requireNonNull(constants$1059.g_unix_mount_point_is_readonly$MH,"g_unix_mount_point_is_readonly");
    }
    public static int g_unix_mount_point_is_readonly ( Addressable mount_point) {
        var mh$ = g_unix_mount_point_is_readonly$MH();
        try {
            return (int)mh$.invokeExact(mount_point);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mount_point_is_user_mountable$MH() {
        return RuntimeHelper.requireNonNull(constants$1059.g_unix_mount_point_is_user_mountable$MH,"g_unix_mount_point_is_user_mountable");
    }
    public static int g_unix_mount_point_is_user_mountable ( Addressable mount_point) {
        var mh$ = g_unix_mount_point_is_user_mountable$MH();
        try {
            return (int)mh$.invokeExact(mount_point);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mount_point_is_loopback$MH() {
        return RuntimeHelper.requireNonNull(constants$1059.g_unix_mount_point_is_loopback$MH,"g_unix_mount_point_is_loopback");
    }
    public static int g_unix_mount_point_is_loopback ( Addressable mount_point) {
        var mh$ = g_unix_mount_point_is_loopback$MH();
        try {
            return (int)mh$.invokeExact(mount_point);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mount_point_guess_can_eject$MH() {
        return RuntimeHelper.requireNonNull(constants$1059.g_unix_mount_point_guess_can_eject$MH,"g_unix_mount_point_guess_can_eject");
    }
    public static int g_unix_mount_point_guess_can_eject ( Addressable mount_point) {
        var mh$ = g_unix_mount_point_guess_can_eject$MH();
        try {
            return (int)mh$.invokeExact(mount_point);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mount_point_guess_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1060.g_unix_mount_point_guess_name$MH,"g_unix_mount_point_guess_name");
    }
    public static MemoryAddress g_unix_mount_point_guess_name ( Addressable mount_point) {
        var mh$ = g_unix_mount_point_guess_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(mount_point);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mount_point_guess_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$1060.g_unix_mount_point_guess_icon$MH,"g_unix_mount_point_guess_icon");
    }
    public static MemoryAddress g_unix_mount_point_guess_icon ( Addressable mount_point) {
        var mh$ = g_unix_mount_point_guess_icon$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(mount_point);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mount_point_guess_symbolic_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$1060.g_unix_mount_point_guess_symbolic_icon$MH,"g_unix_mount_point_guess_symbolic_icon");
    }
    public static MemoryAddress g_unix_mount_point_guess_symbolic_icon ( Addressable mount_point) {
        var mh$ = g_unix_mount_point_guess_symbolic_icon$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(mount_point);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mount_points_get$MH() {
        return RuntimeHelper.requireNonNull(constants$1060.g_unix_mount_points_get$MH,"g_unix_mount_points_get");
    }
    public static MemoryAddress g_unix_mount_points_get ( Addressable time_read) {
        var mh$ = g_unix_mount_points_get$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(time_read);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mount_point_at$MH() {
        return RuntimeHelper.requireNonNull(constants$1060.g_unix_mount_point_at$MH,"g_unix_mount_point_at");
    }
    public static MemoryAddress g_unix_mount_point_at ( Addressable mount_path,  Addressable time_read) {
        var mh$ = g_unix_mount_point_at$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(mount_path, time_read);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mounts_get$MH() {
        return RuntimeHelper.requireNonNull(constants$1060.g_unix_mounts_get$MH,"g_unix_mounts_get");
    }
    public static MemoryAddress g_unix_mounts_get ( Addressable time_read) {
        var mh$ = g_unix_mounts_get$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(time_read);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mount_at$MH() {
        return RuntimeHelper.requireNonNull(constants$1061.g_unix_mount_at$MH,"g_unix_mount_at");
    }
    public static MemoryAddress g_unix_mount_at ( Addressable mount_path,  Addressable time_read) {
        var mh$ = g_unix_mount_at$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(mount_path, time_read);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mount_for$MH() {
        return RuntimeHelper.requireNonNull(constants$1061.g_unix_mount_for$MH,"g_unix_mount_for");
    }
    public static MemoryAddress g_unix_mount_for ( Addressable file_path,  Addressable time_read) {
        var mh$ = g_unix_mount_for$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(file_path, time_read);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mounts_changed_since$MH() {
        return RuntimeHelper.requireNonNull(constants$1061.g_unix_mounts_changed_since$MH,"g_unix_mounts_changed_since");
    }
    public static int g_unix_mounts_changed_since ( long time) {
        var mh$ = g_unix_mounts_changed_since$MH();
        try {
            return (int)mh$.invokeExact(time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mount_points_changed_since$MH() {
        return RuntimeHelper.requireNonNull(constants$1061.g_unix_mount_points_changed_since$MH,"g_unix_mount_points_changed_since");
    }
    public static int g_unix_mount_points_changed_since ( long time) {
        var mh$ = g_unix_mount_points_changed_since$MH();
        try {
            return (int)mh$.invokeExact(time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mount_monitor_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1061.g_unix_mount_monitor_get_type$MH,"g_unix_mount_monitor_get_type");
    }
    public static long g_unix_mount_monitor_get_type () {
        var mh$ = g_unix_mount_monitor_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mount_monitor_get$MH() {
        return RuntimeHelper.requireNonNull(constants$1061.g_unix_mount_monitor_get$MH,"g_unix_mount_monitor_get");
    }
    public static MemoryAddress g_unix_mount_monitor_get () {
        var mh$ = g_unix_mount_monitor_get$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mount_monitor_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1062.g_unix_mount_monitor_new$MH,"g_unix_mount_monitor_new");
    }
    public static MemoryAddress g_unix_mount_monitor_new () {
        var mh$ = g_unix_mount_monitor_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_mount_monitor_set_rate_limit$MH() {
        return RuntimeHelper.requireNonNull(constants$1062.g_unix_mount_monitor_set_rate_limit$MH,"g_unix_mount_monitor_set_rate_limit");
    }
    public static void g_unix_mount_monitor_set_rate_limit ( Addressable mount_monitor,  int limit_msec) {
        var mh$ = g_unix_mount_monitor_set_rate_limit$MH();
        try {
            mh$.invokeExact(mount_monitor, limit_msec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_is_mount_path_system_internal$MH() {
        return RuntimeHelper.requireNonNull(constants$1062.g_unix_is_mount_path_system_internal$MH,"g_unix_is_mount_path_system_internal");
    }
    public static int g_unix_is_mount_path_system_internal ( Addressable mount_path) {
        var mh$ = g_unix_is_mount_path_system_internal$MH();
        try {
            return (int)mh$.invokeExact(mount_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_is_system_fs_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1062.g_unix_is_system_fs_type$MH,"g_unix_is_system_fs_type");
    }
    public static int g_unix_is_system_fs_type ( Addressable fs_type) {
        var mh$ = g_unix_is_system_fs_type$MH();
        try {
            return (int)mh$.invokeExact(fs_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_is_system_device_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1062.g_unix_is_system_device_path$MH,"g_unix_is_system_device_path");
    }
    public static int g_unix_is_system_device_path ( Addressable device_path) {
        var mh$ = g_unix_is_system_device_path$MH();
        try {
            return (int)mh$.invokeExact(device_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GUnixOutputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GUnixOutputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GUnixOutputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GUnixOutputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GUnixOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$1062.glib_autoptr_clear_GUnixOutputStream$MH,"glib_autoptr_clear_GUnixOutputStream");
    }
    public static void glib_autoptr_clear_GUnixOutputStream ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GUnixOutputStream$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GUnixOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$1063.glib_autoptr_cleanup_GUnixOutputStream$MH,"glib_autoptr_cleanup_GUnixOutputStream");
    }
    public static void glib_autoptr_cleanup_GUnixOutputStream ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GUnixOutputStream$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GUnixOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$1063.glib_listautoptr_cleanup_GUnixOutputStream$MH,"glib_listautoptr_cleanup_GUnixOutputStream");
    }
    public static void glib_listautoptr_cleanup_GUnixOutputStream ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GUnixOutputStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GUnixOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$1063.glib_slistautoptr_cleanup_GUnixOutputStream$MH,"glib_slistautoptr_cleanup_GUnixOutputStream");
    }
    public static void glib_slistautoptr_cleanup_GUnixOutputStream ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GUnixOutputStream$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GUnixOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$1063.glib_queueautoptr_cleanup_GUnixOutputStream$MH,"glib_queueautoptr_cleanup_GUnixOutputStream");
    }
    public static void glib_queueautoptr_cleanup_GUnixOutputStream ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GUnixOutputStream$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_output_stream_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1063.g_unix_output_stream_get_type$MH,"g_unix_output_stream_get_type");
    }
    public static long g_unix_output_stream_get_type () {
        var mh$ = g_unix_output_stream_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_output_stream_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1063.g_unix_output_stream_new$MH,"g_unix_output_stream_new");
    }
    public static MemoryAddress g_unix_output_stream_new ( int fd,  int close_fd) {
        var mh$ = g_unix_output_stream_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(fd, close_fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_output_stream_set_close_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$1064.g_unix_output_stream_set_close_fd$MH,"g_unix_output_stream_set_close_fd");
    }
    public static void g_unix_output_stream_set_close_fd ( Addressable stream,  int close_fd) {
        var mh$ = g_unix_output_stream_set_close_fd$MH();
        try {
            mh$.invokeExact(stream, close_fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_output_stream_get_close_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$1064.g_unix_output_stream_get_close_fd$MH,"g_unix_output_stream_get_close_fd");
    }
    public static int g_unix_output_stream_get_close_fd ( Addressable stream) {
        var mh$ = g_unix_output_stream_get_close_fd$MH();
        try {
            return (int)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_output_stream_get_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$1064.g_unix_output_stream_get_fd$MH,"g_unix_output_stream_get_fd");
    }
    public static int g_unix_output_stream_get_fd ( Addressable stream) {
        var mh$ = g_unix_output_stream_get_fd$MH();
        try {
            return (int)mh$.invokeExact(stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GUnixSocketAddress_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GUnixSocketAddress_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GUnixSocketAddress_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GUnixSocketAddress_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GUnixSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$1064.glib_autoptr_clear_GUnixSocketAddress$MH,"glib_autoptr_clear_GUnixSocketAddress");
    }
    public static void glib_autoptr_clear_GUnixSocketAddress ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GUnixSocketAddress$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GUnixSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$1064.glib_autoptr_cleanup_GUnixSocketAddress$MH,"glib_autoptr_cleanup_GUnixSocketAddress");
    }
    public static void glib_autoptr_cleanup_GUnixSocketAddress ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GUnixSocketAddress$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GUnixSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$1064.glib_listautoptr_cleanup_GUnixSocketAddress$MH,"glib_listautoptr_cleanup_GUnixSocketAddress");
    }
    public static void glib_listautoptr_cleanup_GUnixSocketAddress ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GUnixSocketAddress$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GUnixSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$1065.glib_slistautoptr_cleanup_GUnixSocketAddress$MH,"glib_slistautoptr_cleanup_GUnixSocketAddress");
    }
    public static void glib_slistautoptr_cleanup_GUnixSocketAddress ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GUnixSocketAddress$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GUnixSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$1065.glib_queueautoptr_cleanup_GUnixSocketAddress$MH,"glib_queueautoptr_cleanup_GUnixSocketAddress");
    }
    public static void glib_queueautoptr_cleanup_GUnixSocketAddress ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GUnixSocketAddress$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_socket_address_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1065.g_unix_socket_address_get_type$MH,"g_unix_socket_address_get_type");
    }
    public static long g_unix_socket_address_get_type () {
        var mh$ = g_unix_socket_address_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_socket_address_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1065.g_unix_socket_address_new$MH,"g_unix_socket_address_new");
    }
    public static MemoryAddress g_unix_socket_address_new ( Addressable path) {
        var mh$ = g_unix_socket_address_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_socket_address_new_abstract$MH() {
        return RuntimeHelper.requireNonNull(constants$1065.g_unix_socket_address_new_abstract$MH,"g_unix_socket_address_new_abstract");
    }
    public static MemoryAddress g_unix_socket_address_new_abstract ( Addressable path,  int path_len) {
        var mh$ = g_unix_socket_address_new_abstract$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(path, path_len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_socket_address_new_with_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1065.g_unix_socket_address_new_with_type$MH,"g_unix_socket_address_new_with_type");
    }
    public static MemoryAddress g_unix_socket_address_new_with_type ( Addressable path,  int path_len,  int type) {
        var mh$ = g_unix_socket_address_new_with_type$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(path, path_len, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_socket_address_get_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1066.g_unix_socket_address_get_path$MH,"g_unix_socket_address_get_path");
    }
    public static MemoryAddress g_unix_socket_address_get_path ( Addressable address) {
        var mh$ = g_unix_socket_address_get_path$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(address);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_socket_address_get_path_len$MH() {
        return RuntimeHelper.requireNonNull(constants$1066.g_unix_socket_address_get_path_len$MH,"g_unix_socket_address_get_path_len");
    }
    public static long g_unix_socket_address_get_path_len ( Addressable address) {
        var mh$ = g_unix_socket_address_get_path_len$MH();
        try {
            return (long)mh$.invokeExact(address);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_socket_address_get_address_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1066.g_unix_socket_address_get_address_type$MH,"g_unix_socket_address_get_address_type");
    }
    public static int g_unix_socket_address_get_address_type ( Addressable address) {
        var mh$ = g_unix_socket_address_get_address_type$MH();
        try {
            return (int)mh$.invokeExact(address);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_socket_address_get_is_abstract$MH() {
        return RuntimeHelper.requireNonNull(constants$1066.g_unix_socket_address_get_is_abstract$MH,"g_unix_socket_address_get_is_abstract");
    }
    public static int g_unix_socket_address_get_is_abstract ( Addressable address) {
        var mh$ = g_unix_socket_address_get_is_abstract$MH();
        try {
            return (int)mh$.invokeExact(address);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_socket_address_abstract_names_supported$MH() {
        return RuntimeHelper.requireNonNull(constants$1066.g_unix_socket_address_abstract_names_supported$MH,"g_unix_socket_address_abstract_names_supported");
    }
    public static int g_unix_socket_address_abstract_names_supported () {
        var mh$ = g_unix_socket_address_abstract_names_supported$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_printf$MH() {
        return RuntimeHelper.requireNonNull(constants$1066.g_printf$MH,"g_printf");
    }
    public static int g_printf ( Addressable format, Object... x1) {
        var mh$ = g_printf$MH();
        try {
            return (int)mh$.invokeExact(format, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_fprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$1067.g_fprintf$MH,"g_fprintf");
    }
    public static int g_fprintf ( Addressable file,  Addressable format, Object... x2) {
        var mh$ = g_fprintf$MH();
        try {
            return (int)mh$.invokeExact(file, format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_sprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$1067.g_sprintf$MH,"g_sprintf");
    }
    public static int g_sprintf ( Addressable string,  Addressable format, Object... x2) {
        var mh$ = g_sprintf$MH();
        try {
            return (int)mh$.invokeExact(string, format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$1067.g_vprintf$MH,"g_vprintf");
    }
    public static int g_vprintf ( Addressable format,  Addressable args) {
        var mh$ = g_vprintf$MH();
        try {
            return (int)mh$.invokeExact(format, args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vfprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$1067.g_vfprintf$MH,"g_vfprintf");
    }
    public static int g_vfprintf ( Addressable file,  Addressable format,  Addressable args) {
        var mh$ = g_vfprintf$MH();
        try {
            return (int)mh$.invokeExact(file, format, args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vsprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$1067.g_vsprintf$MH,"g_vsprintf");
    }
    public static int g_vsprintf ( Addressable string,  Addressable format,  Addressable args) {
        var mh$ = g_vsprintf$MH();
        try {
            return (int)mh$.invokeExact(string, format, args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vasprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$1067.g_vasprintf$MH,"g_vasprintf");
    }
    public static int g_vasprintf ( Addressable string,  Addressable format,  Addressable args) {
        var mh$ = g_vasprintf$MH();
        try {
            return (int)mh$.invokeExact(string, format, args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle stat$MH() {
        return RuntimeHelper.requireNonNull(constants$1068.stat$MH,"stat");
    }
    public static int stat ( Addressable __file,  Addressable __buf) {
        var mh$ = stat$MH();
        try {
            return (int)mh$.invokeExact(__file, __buf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fstat$MH() {
        return RuntimeHelper.requireNonNull(constants$1068.fstat$MH,"fstat");
    }
    public static int fstat ( int __fd,  Addressable __buf) {
        var mh$ = fstat$MH();
        try {
            return (int)mh$.invokeExact(__fd, __buf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fstatat$MH() {
        return RuntimeHelper.requireNonNull(constants$1068.fstatat$MH,"fstatat");
    }
    public static int fstatat ( int __fd,  Addressable __file,  Addressable __buf,  int __flag) {
        var mh$ = fstatat$MH();
        try {
            return (int)mh$.invokeExact(__fd, __file, __buf, __flag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lstat$MH() {
        return RuntimeHelper.requireNonNull(constants$1068.lstat$MH,"lstat");
    }
    public static int lstat ( Addressable __file,  Addressable __buf) {
        var mh$ = lstat$MH();
        try {
            return (int)mh$.invokeExact(__file, __buf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle chmod$MH() {
        return RuntimeHelper.requireNonNull(constants$1068.chmod$MH,"chmod");
    }
    public static int chmod ( Addressable __file,  int __mode) {
        var mh$ = chmod$MH();
        try {
            return (int)mh$.invokeExact(__file, __mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lchmod$MH() {
        return RuntimeHelper.requireNonNull(constants$1068.lchmod$MH,"lchmod");
    }
    public static int lchmod ( Addressable __file,  int __mode) {
        var mh$ = lchmod$MH();
        try {
            return (int)mh$.invokeExact(__file, __mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fchmod$MH() {
        return RuntimeHelper.requireNonNull(constants$1069.fchmod$MH,"fchmod");
    }
    public static int fchmod ( int __fd,  int __mode) {
        var mh$ = fchmod$MH();
        try {
            return (int)mh$.invokeExact(__fd, __mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fchmodat$MH() {
        return RuntimeHelper.requireNonNull(constants$1069.fchmodat$MH,"fchmodat");
    }
    public static int fchmodat ( int __fd,  Addressable __file,  int __mode,  int __flag) {
        var mh$ = fchmodat$MH();
        try {
            return (int)mh$.invokeExact(__fd, __file, __mode, __flag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle umask$MH() {
        return RuntimeHelper.requireNonNull(constants$1069.umask$MH,"umask");
    }
    public static int umask ( int __mask) {
        var mh$ = umask$MH();
        try {
            return (int)mh$.invokeExact(__mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mkdir$MH() {
        return RuntimeHelper.requireNonNull(constants$1069.mkdir$MH,"mkdir");
    }
    public static int mkdir ( Addressable __path,  int __mode) {
        var mh$ = mkdir$MH();
        try {
            return (int)mh$.invokeExact(__path, __mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mkdirat$MH() {
        return RuntimeHelper.requireNonNull(constants$1069.mkdirat$MH,"mkdirat");
    }
    public static int mkdirat ( int __fd,  Addressable __path,  int __mode) {
        var mh$ = mkdirat$MH();
        try {
            return (int)mh$.invokeExact(__fd, __path, __mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mknod$MH() {
        return RuntimeHelper.requireNonNull(constants$1069.mknod$MH,"mknod");
    }
    public static int mknod ( Addressable __path,  int __mode,  long __dev) {
        var mh$ = mknod$MH();
        try {
            return (int)mh$.invokeExact(__path, __mode, __dev);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mknodat$MH() {
        return RuntimeHelper.requireNonNull(constants$1070.mknodat$MH,"mknodat");
    }
    public static int mknodat ( int __fd,  Addressable __path,  int __mode,  long __dev) {
        var mh$ = mknodat$MH();
        try {
            return (int)mh$.invokeExact(__fd, __path, __mode, __dev);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mkfifo$MH() {
        return RuntimeHelper.requireNonNull(constants$1070.mkfifo$MH,"mkfifo");
    }
    public static int mkfifo ( Addressable __path,  int __mode) {
        var mh$ = mkfifo$MH();
        try {
            return (int)mh$.invokeExact(__path, __mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mkfifoat$MH() {
        return RuntimeHelper.requireNonNull(constants$1070.mkfifoat$MH,"mkfifoat");
    }
    public static int mkfifoat ( int __fd,  Addressable __path,  int __mode) {
        var mh$ = mkfifoat$MH();
        try {
            return (int)mh$.invokeExact(__fd, __path, __mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle utimensat$MH() {
        return RuntimeHelper.requireNonNull(constants$1070.utimensat$MH,"utimensat");
    }
    public static int utimensat ( int __fd,  Addressable __path,  Addressable __times,  int __flags) {
        var mh$ = utimensat$MH();
        try {
            return (int)mh$.invokeExact(__fd, __path, __times, __flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle futimens$MH() {
        return RuntimeHelper.requireNonNull(constants$1070.futimens$MH,"futimens");
    }
    public static int futimens ( int __fd,  Addressable __times) {
        var mh$ = futimens$MH();
        try {
            return (int)mh$.invokeExact(__fd, __times);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_access$MH() {
        return RuntimeHelper.requireNonNull(constants$1070.g_access$MH,"g_access");
    }
    public static int g_access ( Addressable filename,  int mode) {
        var mh$ = g_access$MH();
        try {
            return (int)mh$.invokeExact(filename, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_chdir$MH() {
        return RuntimeHelper.requireNonNull(constants$1071.g_chdir$MH,"g_chdir");
    }
    public static int g_chdir ( Addressable path) {
        var mh$ = g_chdir$MH();
        try {
            return (int)mh$.invokeExact(path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unlink$MH() {
        return RuntimeHelper.requireNonNull(constants$1071.g_unlink$MH,"g_unlink");
    }
    public static int g_unlink ( Addressable filename) {
        var mh$ = g_unlink$MH();
        try {
            return (int)mh$.invokeExact(filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_rmdir$MH() {
        return RuntimeHelper.requireNonNull(constants$1071.g_rmdir$MH,"g_rmdir");
    }
    public static int g_rmdir ( Addressable filename) {
        var mh$ = g_rmdir$MH();
        try {
            return (int)mh$.invokeExact(filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_close$MH() {
        return RuntimeHelper.requireNonNull(constants$1071.g_close$MH,"g_close");
    }
    public static int g_close ( int fd,  Addressable error) {
        var mh$ = g_close$MH();
        try {
            return (int)mh$.invokeExact(fd, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int P_ALL() {
        return (int)0L;
    }
    public static int P_PID() {
        return (int)1L;
    }
    public static int P_PGID() {
        return (int)2L;
    }
    public static MethodHandle wait$MH() {
        return RuntimeHelper.requireNonNull(constants$1071.wait$MH,"wait");
    }
    public static int wait ( Addressable __stat_loc) {
        var mh$ = wait$MH();
        try {
            return (int)mh$.invokeExact(__stat_loc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waitpid$MH() {
        return RuntimeHelper.requireNonNull(constants$1071.waitpid$MH,"waitpid");
    }
    public static int waitpid ( int __pid,  Addressable __stat_loc,  int __options) {
        var mh$ = waitpid$MH();
        try {
            return (int)mh$.invokeExact(__pid, __stat_loc, __options);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waitid$MH() {
        return RuntimeHelper.requireNonNull(constants$1072.waitid$MH,"waitid");
    }
    public static int waitid ( int __idtype,  int __id,  Addressable __infop,  int __options) {
        var mh$ = waitid$MH();
        try {
            return (int)mh$.invokeExact(__idtype, __id, __infop, __options);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wait3$MH() {
        return RuntimeHelper.requireNonNull(constants$1072.wait3$MH,"wait3");
    }
    public static int wait3 ( Addressable __stat_loc,  int __options,  Addressable __usage) {
        var mh$ = wait3$MH();
        try {
            return (int)mh$.invokeExact(__stat_loc, __options, __usage);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wait4$MH() {
        return RuntimeHelper.requireNonNull(constants$1072.wait4$MH,"wait4");
    }
    public static int wait4 ( int __pid,  Addressable __stat_loc,  int __options,  Addressable __usage) {
        var mh$ = wait4$MH();
        try {
            return (int)mh$.invokeExact(__pid, __stat_loc, __options, __usage);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fcntl$MH() {
        return RuntimeHelper.requireNonNull(constants$1072.fcntl$MH,"fcntl");
    }
    public static int fcntl ( int __fd,  int __cmd, Object... x2) {
        var mh$ = fcntl$MH();
        try {
            return (int)mh$.invokeExact(__fd, __cmd, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle open$MH() {
        return RuntimeHelper.requireNonNull(constants$1072.open$MH,"open");
    }
    public static int open ( Addressable __file,  int __oflag, Object... x2) {
        var mh$ = open$MH();
        try {
            return (int)mh$.invokeExact(__file, __oflag, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle openat$MH() {
        return RuntimeHelper.requireNonNull(constants$1072.openat$MH,"openat");
    }
    public static int openat ( int __fd,  Addressable __file,  int __oflag, Object... x3) {
        var mh$ = openat$MH();
        try {
            return (int)mh$.invokeExact(__fd, __file, __oflag, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle creat$MH() {
        return RuntimeHelper.requireNonNull(constants$1073.creat$MH,"creat");
    }
    public static int creat ( Addressable __file,  int __mode) {
        var mh$ = creat$MH();
        try {
            return (int)mh$.invokeExact(__file, __mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle posix_fadvise$MH() {
        return RuntimeHelper.requireNonNull(constants$1073.posix_fadvise$MH,"posix_fadvise");
    }
    public static int posix_fadvise ( int __fd,  long __offset,  long __len,  int __advise) {
        var mh$ = posix_fadvise$MH();
        try {
            return (int)mh$.invokeExact(__fd, __offset, __len, __advise);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle posix_fallocate$MH() {
        return RuntimeHelper.requireNonNull(constants$1073.posix_fallocate$MH,"posix_fallocate");
    }
    public static int posix_fallocate ( int __fd,  long __offset,  long __len) {
        var mh$ = posix_fallocate$MH();
        try {
            return (int)mh$.invokeExact(__fd, __offset, __len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$1073.g_unix_error_quark$MH,"g_unix_error_quark");
    }
    public static int g_unix_error_quark () {
        var mh$ = g_unix_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_open_pipe$MH() {
        return RuntimeHelper.requireNonNull(constants$1073.g_unix_open_pipe$MH,"g_unix_open_pipe");
    }
    public static int g_unix_open_pipe ( Addressable fds,  int flags,  Addressable error) {
        var mh$ = g_unix_open_pipe$MH();
        try {
            return (int)mh$.invokeExact(fds, flags, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_set_fd_nonblocking$MH() {
        return RuntimeHelper.requireNonNull(constants$1073.g_unix_set_fd_nonblocking$MH,"g_unix_set_fd_nonblocking");
    }
    public static int g_unix_set_fd_nonblocking ( int fd,  int nonblock,  Addressable error) {
        var mh$ = g_unix_set_fd_nonblocking$MH();
        try {
            return (int)mh$.invokeExact(fd, nonblock, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_signal_source_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1074.g_unix_signal_source_new$MH,"g_unix_signal_source_new");
    }
    public static MemoryAddress g_unix_signal_source_new ( int signum) {
        var mh$ = g_unix_signal_source_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(signum);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_signal_add_full$MH() {
        return RuntimeHelper.requireNonNull(constants$1074.g_unix_signal_add_full$MH,"g_unix_signal_add_full");
    }
    public static int g_unix_signal_add_full ( int priority,  int signum,  Addressable handler,  Addressable user_data,  Addressable notify) {
        var mh$ = g_unix_signal_add_full$MH();
        try {
            return (int)mh$.invokeExact(priority, signum, handler, user_data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_signal_add$MH() {
        return RuntimeHelper.requireNonNull(constants$1074.g_unix_signal_add$MH,"g_unix_signal_add");
    }
    public static int g_unix_signal_add ( int signum,  Addressable handler,  Addressable user_data) {
        var mh$ = g_unix_signal_add$MH();
        try {
            return (int)mh$.invokeExact(signum, handler, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_fd_source_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1074.g_unix_fd_source_new$MH,"g_unix_fd_source_new");
    }
    public static MemoryAddress g_unix_fd_source_new ( int fd,  int condition) {
        var mh$ = g_unix_fd_source_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(fd, condition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_fd_add_full$MH() {
        return RuntimeHelper.requireNonNull(constants$1075.g_unix_fd_add_full$MH,"g_unix_fd_add_full");
    }
    public static int g_unix_fd_add_full ( int priority,  int fd,  int condition,  Addressable function,  Addressable user_data,  Addressable notify) {
        var mh$ = g_unix_fd_add_full$MH();
        try {
            return (int)mh$.invokeExact(priority, fd, condition, function, user_data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_fd_add$MH() {
        return RuntimeHelper.requireNonNull(constants$1075.g_unix_fd_add$MH,"g_unix_fd_add");
    }
    public static int g_unix_fd_add ( int fd,  int condition,  Addressable function,  Addressable user_data) {
        var mh$ = g_unix_fd_add$MH();
        try {
            return (int)mh$.invokeExact(fd, condition, function, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unix_get_passwd_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$1075.g_unix_get_passwd_entry$MH,"g_unix_get_passwd_entry");
    }
    public static MemoryAddress g_unix_get_passwd_entry ( Addressable user_name,  Addressable error) {
        var mh$ = g_unix_get_passwd_entry$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(user_name, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GTK_CSS_PARSER_ERROR_FAILED() {
        return (int)0L;
    }
    public static int GTK_CSS_PARSER_ERROR_SYNTAX() {
        return (int)1L;
    }
    public static int GTK_CSS_PARSER_ERROR_IMPORT() {
        return (int)2L;
    }
    public static int GTK_CSS_PARSER_ERROR_NAME() {
        return (int)3L;
    }
    public static int GTK_CSS_PARSER_ERROR_UNKNOWN_VALUE() {
        return (int)4L;
    }
    public static int GTK_CSS_PARSER_WARNING_DEPRECATED() {
        return (int)0L;
    }
    public static int GTK_CSS_PARSER_WARNING_SYNTAX() {
        return (int)1L;
    }
    public static int GTK_CSS_PARSER_WARNING_UNIMPLEMENTED() {
        return (int)2L;
    }
    public static MethodHandle gtk_css_parser_error_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1075.gtk_css_parser_error_get_type$MH,"gtk_css_parser_error_get_type");
    }
    public static long gtk_css_parser_error_get_type () {
        var mh$ = gtk_css_parser_error_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_parser_warning_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1075.gtk_css_parser_warning_get_type$MH,"gtk_css_parser_warning_get_type");
    }
    public static long gtk_css_parser_warning_get_type () {
        var mh$ = gtk_css_parser_warning_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_parser_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$1075.gtk_css_parser_error_quark$MH,"gtk_css_parser_error_quark");
    }
    public static int gtk_css_parser_error_quark () {
        var mh$ = gtk_css_parser_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_parser_warning_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$1076.gtk_css_parser_warning_quark$MH,"gtk_css_parser_warning_quark");
    }
    public static int gtk_css_parser_warning_quark () {
        var mh$ = gtk_css_parser_warning_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_section_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1076.gtk_css_section_get_type$MH,"gtk_css_section_get_type");
    }
    public static long gtk_css_section_get_type () {
        var mh$ = gtk_css_section_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_section_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1076.gtk_css_section_new$MH,"gtk_css_section_new");
    }
    public static MemoryAddress gtk_css_section_new ( Addressable file,  Addressable start,  Addressable end) {
        var mh$ = gtk_css_section_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(file, start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_section_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$1076.gtk_css_section_ref$MH,"gtk_css_section_ref");
    }
    public static MemoryAddress gtk_css_section_ref ( Addressable section) {
        var mh$ = gtk_css_section_ref$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(section);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_section_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$1076.gtk_css_section_unref$MH,"gtk_css_section_unref");
    }
    public static void gtk_css_section_unref ( Addressable section) {
        var mh$ = gtk_css_section_unref$MH();
        try {
            mh$.invokeExact(section);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_section_print$MH() {
        return RuntimeHelper.requireNonNull(constants$1076.gtk_css_section_print$MH,"gtk_css_section_print");
    }
    public static void gtk_css_section_print ( Addressable section,  Addressable string) {
        var mh$ = gtk_css_section_print$MH();
        try {
            mh$.invokeExact(section, string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_section_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1077.gtk_css_section_to_string$MH,"gtk_css_section_to_string");
    }
    public static MemoryAddress gtk_css_section_to_string ( Addressable section) {
        var mh$ = gtk_css_section_to_string$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(section);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_section_get_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$1077.gtk_css_section_get_parent$MH,"gtk_css_section_get_parent");
    }
    public static MemoryAddress gtk_css_section_get_parent ( Addressable section) {
        var mh$ = gtk_css_section_get_parent$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(section);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_section_get_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1077.gtk_css_section_get_file$MH,"gtk_css_section_get_file");
    }
    public static MemoryAddress gtk_css_section_get_file ( Addressable section) {
        var mh$ = gtk_css_section_get_file$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(section);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_section_get_start_location$MH() {
        return RuntimeHelper.requireNonNull(constants$1077.gtk_css_section_get_start_location$MH,"gtk_css_section_get_start_location");
    }
    public static MemoryAddress gtk_css_section_get_start_location ( Addressable section) {
        var mh$ = gtk_css_section_get_start_location$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(section);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_section_get_end_location$MH() {
        return RuntimeHelper.requireNonNull(constants$1077.gtk_css_section_get_end_location$MH,"gtk_css_section_get_end_location");
    }
    public static MemoryAddress gtk_css_section_get_end_location ( Addressable section) {
        var mh$ = gtk_css_section_get_end_location$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(section);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_version$MH() {
        return RuntimeHelper.requireNonNull(constants$1077.cairo_version$MH,"cairo_version");
    }
    public static int cairo_version () {
        var mh$ = cairo_version$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_version_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1078.cairo_version_string$MH,"cairo_version_string");
    }
    public static MemoryAddress cairo_version_string () {
        var mh$ = cairo_version_string$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfInt cairo_bool_t = Constants$root.C_INT$LAYOUT;
    public static int CAIRO_STATUS_SUCCESS() {
        return (int)0L;
    }
    public static int CAIRO_STATUS_NO_MEMORY() {
        return (int)1L;
    }
    public static int CAIRO_STATUS_INVALID_RESTORE() {
        return (int)2L;
    }
    public static int CAIRO_STATUS_INVALID_POP_GROUP() {
        return (int)3L;
    }
    public static int CAIRO_STATUS_NO_CURRENT_POINT() {
        return (int)4L;
    }
    public static int CAIRO_STATUS_INVALID_MATRIX() {
        return (int)5L;
    }
    public static int CAIRO_STATUS_INVALID_STATUS() {
        return (int)6L;
    }
    public static int CAIRO_STATUS_NULL_POINTER() {
        return (int)7L;
    }
    public static int CAIRO_STATUS_INVALID_STRING() {
        return (int)8L;
    }
    public static int CAIRO_STATUS_INVALID_PATH_DATA() {
        return (int)9L;
    }
    public static int CAIRO_STATUS_READ_ERROR() {
        return (int)10L;
    }
    public static int CAIRO_STATUS_WRITE_ERROR() {
        return (int)11L;
    }
    public static int CAIRO_STATUS_SURFACE_FINISHED() {
        return (int)12L;
    }
    public static int CAIRO_STATUS_SURFACE_TYPE_MISMATCH() {
        return (int)13L;
    }
    public static int CAIRO_STATUS_PATTERN_TYPE_MISMATCH() {
        return (int)14L;
    }
    public static int CAIRO_STATUS_INVALID_CONTENT() {
        return (int)15L;
    }
    public static int CAIRO_STATUS_INVALID_FORMAT() {
        return (int)16L;
    }
    public static int CAIRO_STATUS_INVALID_VISUAL() {
        return (int)17L;
    }
    public static int CAIRO_STATUS_FILE_NOT_FOUND() {
        return (int)18L;
    }
    public static int CAIRO_STATUS_INVALID_DASH() {
        return (int)19L;
    }
    public static int CAIRO_STATUS_INVALID_DSC_COMMENT() {
        return (int)20L;
    }
    public static int CAIRO_STATUS_INVALID_INDEX() {
        return (int)21L;
    }
    public static int CAIRO_STATUS_CLIP_NOT_REPRESENTABLE() {
        return (int)22L;
    }
    public static int CAIRO_STATUS_TEMP_FILE_ERROR() {
        return (int)23L;
    }
    public static int CAIRO_STATUS_INVALID_STRIDE() {
        return (int)24L;
    }
    public static int CAIRO_STATUS_FONT_TYPE_MISMATCH() {
        return (int)25L;
    }
    public static int CAIRO_STATUS_USER_FONT_IMMUTABLE() {
        return (int)26L;
    }
    public static int CAIRO_STATUS_USER_FONT_ERROR() {
        return (int)27L;
    }
    public static int CAIRO_STATUS_NEGATIVE_COUNT() {
        return (int)28L;
    }
    public static int CAIRO_STATUS_INVALID_CLUSTERS() {
        return (int)29L;
    }
    public static int CAIRO_STATUS_INVALID_SLANT() {
        return (int)30L;
    }
    public static int CAIRO_STATUS_INVALID_WEIGHT() {
        return (int)31L;
    }
    public static int CAIRO_STATUS_INVALID_SIZE() {
        return (int)32L;
    }
    public static int CAIRO_STATUS_USER_FONT_NOT_IMPLEMENTED() {
        return (int)33L;
    }
    public static int CAIRO_STATUS_DEVICE_TYPE_MISMATCH() {
        return (int)34L;
    }
    public static int CAIRO_STATUS_DEVICE_ERROR() {
        return (int)35L;
    }
    public static int CAIRO_STATUS_INVALID_MESH_CONSTRUCTION() {
        return (int)36L;
    }
    public static int CAIRO_STATUS_DEVICE_FINISHED() {
        return (int)37L;
    }
    public static int CAIRO_STATUS_JBIG2_GLOBAL_MISSING() {
        return (int)38L;
    }
    public static int CAIRO_STATUS_PNG_ERROR() {
        return (int)39L;
    }
    public static int CAIRO_STATUS_FREETYPE_ERROR() {
        return (int)40L;
    }
    public static int CAIRO_STATUS_WIN32_GDI_ERROR() {
        return (int)41L;
    }
    public static int CAIRO_STATUS_TAG_ERROR() {
        return (int)42L;
    }
    public static int CAIRO_STATUS_DWRITE_ERROR() {
        return (int)43L;
    }
    public static int CAIRO_STATUS_LAST_STATUS() {
        return (int)44L;
    }
    public static int CAIRO_CONTENT_COLOR() {
        return (int)4096L;
    }
    public static int CAIRO_CONTENT_ALPHA() {
        return (int)8192L;
    }
    public static int CAIRO_CONTENT_COLOR_ALPHA() {
        return (int)12288L;
    }
    public static int CAIRO_FORMAT_INVALID() {
        return (int)-1L;
    }
    public static int CAIRO_FORMAT_ARGB32() {
        return (int)0L;
    }
    public static int CAIRO_FORMAT_RGB24() {
        return (int)1L;
    }
    public static int CAIRO_FORMAT_A8() {
        return (int)2L;
    }
    public static int CAIRO_FORMAT_A1() {
        return (int)3L;
    }
    public static int CAIRO_FORMAT_RGB16_565() {
        return (int)4L;
    }
    public static int CAIRO_FORMAT_RGB30() {
        return (int)5L;
    }
    public static int CAIRO_FORMAT_RGB96F() {
        return (int)6L;
    }
    public static int CAIRO_FORMAT_RGBA128F() {
        return (int)7L;
    }
    public static MethodHandle cairo_create$MH() {
        return RuntimeHelper.requireNonNull(constants$1079.cairo_create$MH,"cairo_create");
    }
    public static MemoryAddress cairo_create ( Addressable target) {
        var mh$ = cairo_create$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_reference$MH() {
        return RuntimeHelper.requireNonNull(constants$1079.cairo_reference$MH,"cairo_reference");
    }
    public static MemoryAddress cairo_reference ( Addressable cr) {
        var mh$ = cairo_reference$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$1079.cairo_destroy$MH,"cairo_destroy");
    }
    public static void cairo_destroy ( Addressable cr) {
        var mh$ = cairo_destroy$MH();
        try {
            mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_reference_count$MH() {
        return RuntimeHelper.requireNonNull(constants$1079.cairo_get_reference_count$MH,"cairo_get_reference_count");
    }
    public static int cairo_get_reference_count ( Addressable cr) {
        var mh$ = cairo_get_reference_count$MH();
        try {
            return (int)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1079.cairo_get_user_data$MH,"cairo_get_user_data");
    }
    public static MemoryAddress cairo_get_user_data ( Addressable cr,  Addressable key) {
        var mh$ = cairo_get_user_data$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(cr, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_set_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1080.cairo_set_user_data$MH,"cairo_set_user_data");
    }
    public static int cairo_set_user_data ( Addressable cr,  Addressable key,  Addressable user_data,  Addressable destroy) {
        var mh$ = cairo_set_user_data$MH();
        try {
            return (int)mh$.invokeExact(cr, key, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_save$MH() {
        return RuntimeHelper.requireNonNull(constants$1080.cairo_save$MH,"cairo_save");
    }
    public static void cairo_save ( Addressable cr) {
        var mh$ = cairo_save$MH();
        try {
            mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_restore$MH() {
        return RuntimeHelper.requireNonNull(constants$1080.cairo_restore$MH,"cairo_restore");
    }
    public static void cairo_restore ( Addressable cr) {
        var mh$ = cairo_restore$MH();
        try {
            mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_push_group$MH() {
        return RuntimeHelper.requireNonNull(constants$1080.cairo_push_group$MH,"cairo_push_group");
    }
    public static void cairo_push_group ( Addressable cr) {
        var mh$ = cairo_push_group$MH();
        try {
            mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_push_group_with_content$MH() {
        return RuntimeHelper.requireNonNull(constants$1080.cairo_push_group_with_content$MH,"cairo_push_group_with_content");
    }
    public static void cairo_push_group_with_content ( Addressable cr,  int content) {
        var mh$ = cairo_push_group_with_content$MH();
        try {
            mh$.invokeExact(cr, content);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pop_group$MH() {
        return RuntimeHelper.requireNonNull(constants$1080.cairo_pop_group$MH,"cairo_pop_group");
    }
    public static MemoryAddress cairo_pop_group ( Addressable cr) {
        var mh$ = cairo_pop_group$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pop_group_to_source$MH() {
        return RuntimeHelper.requireNonNull(constants$1081.cairo_pop_group_to_source$MH,"cairo_pop_group_to_source");
    }
    public static void cairo_pop_group_to_source ( Addressable cr) {
        var mh$ = cairo_pop_group_to_source$MH();
        try {
            mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int CAIRO_OPERATOR_CLEAR() {
        return (int)0L;
    }
    public static int CAIRO_OPERATOR_SOURCE() {
        return (int)1L;
    }
    public static int CAIRO_OPERATOR_OVER() {
        return (int)2L;
    }
    public static int CAIRO_OPERATOR_IN() {
        return (int)3L;
    }
    public static int CAIRO_OPERATOR_OUT() {
        return (int)4L;
    }
    public static int CAIRO_OPERATOR_ATOP() {
        return (int)5L;
    }
    public static int CAIRO_OPERATOR_DEST() {
        return (int)6L;
    }
    public static int CAIRO_OPERATOR_DEST_OVER() {
        return (int)7L;
    }
    public static int CAIRO_OPERATOR_DEST_IN() {
        return (int)8L;
    }
    public static int CAIRO_OPERATOR_DEST_OUT() {
        return (int)9L;
    }
    public static int CAIRO_OPERATOR_DEST_ATOP() {
        return (int)10L;
    }
    public static int CAIRO_OPERATOR_XOR() {
        return (int)11L;
    }
    public static int CAIRO_OPERATOR_ADD() {
        return (int)12L;
    }
    public static int CAIRO_OPERATOR_SATURATE() {
        return (int)13L;
    }
    public static int CAIRO_OPERATOR_MULTIPLY() {
        return (int)14L;
    }
    public static int CAIRO_OPERATOR_SCREEN() {
        return (int)15L;
    }
    public static int CAIRO_OPERATOR_OVERLAY() {
        return (int)16L;
    }
    public static int CAIRO_OPERATOR_DARKEN() {
        return (int)17L;
    }
    public static int CAIRO_OPERATOR_LIGHTEN() {
        return (int)18L;
    }
    public static int CAIRO_OPERATOR_COLOR_DODGE() {
        return (int)19L;
    }
    public static int CAIRO_OPERATOR_COLOR_BURN() {
        return (int)20L;
    }
    public static int CAIRO_OPERATOR_HARD_LIGHT() {
        return (int)21L;
    }
    public static int CAIRO_OPERATOR_SOFT_LIGHT() {
        return (int)22L;
    }
    public static int CAIRO_OPERATOR_DIFFERENCE() {
        return (int)23L;
    }
    public static int CAIRO_OPERATOR_EXCLUSION() {
        return (int)24L;
    }
    public static int CAIRO_OPERATOR_HSL_HUE() {
        return (int)25L;
    }
    public static int CAIRO_OPERATOR_HSL_SATURATION() {
        return (int)26L;
    }
    public static int CAIRO_OPERATOR_HSL_COLOR() {
        return (int)27L;
    }
    public static int CAIRO_OPERATOR_HSL_LUMINOSITY() {
        return (int)28L;
    }
    public static MethodHandle cairo_set_operator$MH() {
        return RuntimeHelper.requireNonNull(constants$1081.cairo_set_operator$MH,"cairo_set_operator");
    }
    public static void cairo_set_operator ( Addressable cr,  int op) {
        var mh$ = cairo_set_operator$MH();
        try {
            mh$.invokeExact(cr, op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_set_source$MH() {
        return RuntimeHelper.requireNonNull(constants$1081.cairo_set_source$MH,"cairo_set_source");
    }
    public static void cairo_set_source ( Addressable cr,  Addressable source) {
        var mh$ = cairo_set_source$MH();
        try {
            mh$.invokeExact(cr, source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_set_source_rgb$MH() {
        return RuntimeHelper.requireNonNull(constants$1081.cairo_set_source_rgb$MH,"cairo_set_source_rgb");
    }
    public static void cairo_set_source_rgb ( Addressable cr,  double red,  double green,  double blue) {
        var mh$ = cairo_set_source_rgb$MH();
        try {
            mh$.invokeExact(cr, red, green, blue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_set_source_rgba$MH() {
        return RuntimeHelper.requireNonNull(constants$1081.cairo_set_source_rgba$MH,"cairo_set_source_rgba");
    }
    public static void cairo_set_source_rgba ( Addressable cr,  double red,  double green,  double blue,  double alpha) {
        var mh$ = cairo_set_source_rgba$MH();
        try {
            mh$.invokeExact(cr, red, green, blue, alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_set_source_surface$MH() {
        return RuntimeHelper.requireNonNull(constants$1081.cairo_set_source_surface$MH,"cairo_set_source_surface");
    }
    public static void cairo_set_source_surface ( Addressable cr,  Addressable surface,  double x,  double y) {
        var mh$ = cairo_set_source_surface$MH();
        try {
            mh$.invokeExact(cr, surface, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_set_tolerance$MH() {
        return RuntimeHelper.requireNonNull(constants$1082.cairo_set_tolerance$MH,"cairo_set_tolerance");
    }
    public static void cairo_set_tolerance ( Addressable cr,  double tolerance) {
        var mh$ = cairo_set_tolerance$MH();
        try {
            mh$.invokeExact(cr, tolerance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int CAIRO_ANTIALIAS_DEFAULT() {
        return (int)0L;
    }
    public static int CAIRO_ANTIALIAS_NONE() {
        return (int)1L;
    }
    public static int CAIRO_ANTIALIAS_GRAY() {
        return (int)2L;
    }
    public static int CAIRO_ANTIALIAS_SUBPIXEL() {
        return (int)3L;
    }
    public static int CAIRO_ANTIALIAS_FAST() {
        return (int)4L;
    }
    public static int CAIRO_ANTIALIAS_GOOD() {
        return (int)5L;
    }
    public static int CAIRO_ANTIALIAS_BEST() {
        return (int)6L;
    }
    public static MethodHandle cairo_set_antialias$MH() {
        return RuntimeHelper.requireNonNull(constants$1082.cairo_set_antialias$MH,"cairo_set_antialias");
    }
    public static void cairo_set_antialias ( Addressable cr,  int antialias) {
        var mh$ = cairo_set_antialias$MH();
        try {
            mh$.invokeExact(cr, antialias);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int CAIRO_FILL_RULE_WINDING() {
        return (int)0L;
    }
    public static int CAIRO_FILL_RULE_EVEN_ODD() {
        return (int)1L;
    }
    public static MethodHandle cairo_set_fill_rule$MH() {
        return RuntimeHelper.requireNonNull(constants$1082.cairo_set_fill_rule$MH,"cairo_set_fill_rule");
    }
    public static void cairo_set_fill_rule ( Addressable cr,  int fill_rule) {
        var mh$ = cairo_set_fill_rule$MH();
        try {
            mh$.invokeExact(cr, fill_rule);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_set_line_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1082.cairo_set_line_width$MH,"cairo_set_line_width");
    }
    public static void cairo_set_line_width ( Addressable cr,  double width) {
        var mh$ = cairo_set_line_width$MH();
        try {
            mh$.invokeExact(cr, width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_set_hairline$MH() {
        return RuntimeHelper.requireNonNull(constants$1082.cairo_set_hairline$MH,"cairo_set_hairline");
    }
    public static void cairo_set_hairline ( Addressable cr,  int set_hairline) {
        var mh$ = cairo_set_hairline$MH();
        try {
            mh$.invokeExact(cr, set_hairline);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int CAIRO_LINE_CAP_BUTT() {
        return (int)0L;
    }
    public static int CAIRO_LINE_CAP_ROUND() {
        return (int)1L;
    }
    public static int CAIRO_LINE_CAP_SQUARE() {
        return (int)2L;
    }
    public static MethodHandle cairo_set_line_cap$MH() {
        return RuntimeHelper.requireNonNull(constants$1082.cairo_set_line_cap$MH,"cairo_set_line_cap");
    }
    public static void cairo_set_line_cap ( Addressable cr,  int line_cap) {
        var mh$ = cairo_set_line_cap$MH();
        try {
            mh$.invokeExact(cr, line_cap);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int CAIRO_LINE_JOIN_MITER() {
        return (int)0L;
    }
    public static int CAIRO_LINE_JOIN_ROUND() {
        return (int)1L;
    }
    public static int CAIRO_LINE_JOIN_BEVEL() {
        return (int)2L;
    }
    public static MethodHandle cairo_set_line_join$MH() {
        return RuntimeHelper.requireNonNull(constants$1083.cairo_set_line_join$MH,"cairo_set_line_join");
    }
    public static void cairo_set_line_join ( Addressable cr,  int line_join) {
        var mh$ = cairo_set_line_join$MH();
        try {
            mh$.invokeExact(cr, line_join);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_set_dash$MH() {
        return RuntimeHelper.requireNonNull(constants$1083.cairo_set_dash$MH,"cairo_set_dash");
    }
    public static void cairo_set_dash ( Addressable cr,  Addressable dashes,  int num_dashes,  double offset) {
        var mh$ = cairo_set_dash$MH();
        try {
            mh$.invokeExact(cr, dashes, num_dashes, offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_set_miter_limit$MH() {
        return RuntimeHelper.requireNonNull(constants$1083.cairo_set_miter_limit$MH,"cairo_set_miter_limit");
    }
    public static void cairo_set_miter_limit ( Addressable cr,  double limit) {
        var mh$ = cairo_set_miter_limit$MH();
        try {
            mh$.invokeExact(cr, limit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_translate$MH() {
        return RuntimeHelper.requireNonNull(constants$1083.cairo_translate$MH,"cairo_translate");
    }
    public static void cairo_translate ( Addressable cr,  double tx,  double ty) {
        var mh$ = cairo_translate$MH();
        try {
            mh$.invokeExact(cr, tx, ty);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$1083.cairo_scale$MH,"cairo_scale");
    }
    public static void cairo_scale ( Addressable cr,  double sx,  double sy) {
        var mh$ = cairo_scale$MH();
        try {
            mh$.invokeExact(cr, sx, sy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_rotate$MH() {
        return RuntimeHelper.requireNonNull(constants$1083.cairo_rotate$MH,"cairo_rotate");
    }
    public static void cairo_rotate ( Addressable cr,  double angle) {
        var mh$ = cairo_rotate$MH();
        try {
            mh$.invokeExact(cr, angle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_transform$MH() {
        return RuntimeHelper.requireNonNull(constants$1084.cairo_transform$MH,"cairo_transform");
    }
    public static void cairo_transform ( Addressable cr,  Addressable matrix) {
        var mh$ = cairo_transform$MH();
        try {
            mh$.invokeExact(cr, matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_set_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$1084.cairo_set_matrix$MH,"cairo_set_matrix");
    }
    public static void cairo_set_matrix ( Addressable cr,  Addressable matrix) {
        var mh$ = cairo_set_matrix$MH();
        try {
            mh$.invokeExact(cr, matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_identity_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$1084.cairo_identity_matrix$MH,"cairo_identity_matrix");
    }
    public static void cairo_identity_matrix ( Addressable cr) {
        var mh$ = cairo_identity_matrix$MH();
        try {
            mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_user_to_device$MH() {
        return RuntimeHelper.requireNonNull(constants$1084.cairo_user_to_device$MH,"cairo_user_to_device");
    }
    public static void cairo_user_to_device ( Addressable cr,  Addressable x,  Addressable y) {
        var mh$ = cairo_user_to_device$MH();
        try {
            mh$.invokeExact(cr, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_user_to_device_distance$MH() {
        return RuntimeHelper.requireNonNull(constants$1084.cairo_user_to_device_distance$MH,"cairo_user_to_device_distance");
    }
    public static void cairo_user_to_device_distance ( Addressable cr,  Addressable dx,  Addressable dy) {
        var mh$ = cairo_user_to_device_distance$MH();
        try {
            mh$.invokeExact(cr, dx, dy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_device_to_user$MH() {
        return RuntimeHelper.requireNonNull(constants$1084.cairo_device_to_user$MH,"cairo_device_to_user");
    }
    public static void cairo_device_to_user ( Addressable cr,  Addressable x,  Addressable y) {
        var mh$ = cairo_device_to_user$MH();
        try {
            mh$.invokeExact(cr, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_device_to_user_distance$MH() {
        return RuntimeHelper.requireNonNull(constants$1085.cairo_device_to_user_distance$MH,"cairo_device_to_user_distance");
    }
    public static void cairo_device_to_user_distance ( Addressable cr,  Addressable dx,  Addressable dy) {
        var mh$ = cairo_device_to_user_distance$MH();
        try {
            mh$.invokeExact(cr, dx, dy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_new_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1085.cairo_new_path$MH,"cairo_new_path");
    }
    public static void cairo_new_path ( Addressable cr) {
        var mh$ = cairo_new_path$MH();
        try {
            mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_move_to$MH() {
        return RuntimeHelper.requireNonNull(constants$1085.cairo_move_to$MH,"cairo_move_to");
    }
    public static void cairo_move_to ( Addressable cr,  double x,  double y) {
        var mh$ = cairo_move_to$MH();
        try {
            mh$.invokeExact(cr, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_new_sub_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1085.cairo_new_sub_path$MH,"cairo_new_sub_path");
    }
    public static void cairo_new_sub_path ( Addressable cr) {
        var mh$ = cairo_new_sub_path$MH();
        try {
            mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_line_to$MH() {
        return RuntimeHelper.requireNonNull(constants$1085.cairo_line_to$MH,"cairo_line_to");
    }
    public static void cairo_line_to ( Addressable cr,  double x,  double y) {
        var mh$ = cairo_line_to$MH();
        try {
            mh$.invokeExact(cr, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_curve_to$MH() {
        return RuntimeHelper.requireNonNull(constants$1085.cairo_curve_to$MH,"cairo_curve_to");
    }
    public static void cairo_curve_to ( Addressable cr,  double x1,  double y1,  double x2,  double y2,  double x3,  double y3) {
        var mh$ = cairo_curve_to$MH();
        try {
            mh$.invokeExact(cr, x1, y1, x2, y2, x3, y3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_arc$MH() {
        return RuntimeHelper.requireNonNull(constants$1086.cairo_arc$MH,"cairo_arc");
    }
    public static void cairo_arc ( Addressable cr,  double xc,  double yc,  double radius,  double angle1,  double angle2) {
        var mh$ = cairo_arc$MH();
        try {
            mh$.invokeExact(cr, xc, yc, radius, angle1, angle2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_arc_negative$MH() {
        return RuntimeHelper.requireNonNull(constants$1086.cairo_arc_negative$MH,"cairo_arc_negative");
    }
    public static void cairo_arc_negative ( Addressable cr,  double xc,  double yc,  double radius,  double angle1,  double angle2) {
        var mh$ = cairo_arc_negative$MH();
        try {
            mh$.invokeExact(cr, xc, yc, radius, angle1, angle2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_rel_move_to$MH() {
        return RuntimeHelper.requireNonNull(constants$1086.cairo_rel_move_to$MH,"cairo_rel_move_to");
    }
    public static void cairo_rel_move_to ( Addressable cr,  double dx,  double dy) {
        var mh$ = cairo_rel_move_to$MH();
        try {
            mh$.invokeExact(cr, dx, dy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_rel_line_to$MH() {
        return RuntimeHelper.requireNonNull(constants$1086.cairo_rel_line_to$MH,"cairo_rel_line_to");
    }
    public static void cairo_rel_line_to ( Addressable cr,  double dx,  double dy) {
        var mh$ = cairo_rel_line_to$MH();
        try {
            mh$.invokeExact(cr, dx, dy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_rel_curve_to$MH() {
        return RuntimeHelper.requireNonNull(constants$1086.cairo_rel_curve_to$MH,"cairo_rel_curve_to");
    }
    public static void cairo_rel_curve_to ( Addressable cr,  double dx1,  double dy1,  double dx2,  double dy2,  double dx3,  double dy3) {
        var mh$ = cairo_rel_curve_to$MH();
        try {
            mh$.invokeExact(cr, dx1, dy1, dx2, dy2, dx3, dy3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_rectangle$MH() {
        return RuntimeHelper.requireNonNull(constants$1086.cairo_rectangle$MH,"cairo_rectangle");
    }
    public static void cairo_rectangle ( Addressable cr,  double x,  double y,  double width,  double height) {
        var mh$ = cairo_rectangle$MH();
        try {
            mh$.invokeExact(cr, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_close_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1087.cairo_close_path$MH,"cairo_close_path");
    }
    public static void cairo_close_path ( Addressable cr) {
        var mh$ = cairo_close_path$MH();
        try {
            mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_path_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1087.cairo_path_extents$MH,"cairo_path_extents");
    }
    public static void cairo_path_extents ( Addressable cr,  Addressable x1,  Addressable y1,  Addressable x2,  Addressable y2) {
        var mh$ = cairo_path_extents$MH();
        try {
            mh$.invokeExact(cr, x1, y1, x2, y2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_paint$MH() {
        return RuntimeHelper.requireNonNull(constants$1087.cairo_paint$MH,"cairo_paint");
    }
    public static void cairo_paint ( Addressable cr) {
        var mh$ = cairo_paint$MH();
        try {
            mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_paint_with_alpha$MH() {
        return RuntimeHelper.requireNonNull(constants$1087.cairo_paint_with_alpha$MH,"cairo_paint_with_alpha");
    }
    public static void cairo_paint_with_alpha ( Addressable cr,  double alpha) {
        var mh$ = cairo_paint_with_alpha$MH();
        try {
            mh$.invokeExact(cr, alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_mask$MH() {
        return RuntimeHelper.requireNonNull(constants$1087.cairo_mask$MH,"cairo_mask");
    }
    public static void cairo_mask ( Addressable cr,  Addressable pattern) {
        var mh$ = cairo_mask$MH();
        try {
            mh$.invokeExact(cr, pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_mask_surface$MH() {
        return RuntimeHelper.requireNonNull(constants$1087.cairo_mask_surface$MH,"cairo_mask_surface");
    }
    public static void cairo_mask_surface ( Addressable cr,  Addressable surface,  double surface_x,  double surface_y) {
        var mh$ = cairo_mask_surface$MH();
        try {
            mh$.invokeExact(cr, surface, surface_x, surface_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_stroke$MH() {
        return RuntimeHelper.requireNonNull(constants$1088.cairo_stroke$MH,"cairo_stroke");
    }
    public static void cairo_stroke ( Addressable cr) {
        var mh$ = cairo_stroke$MH();
        try {
            mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_stroke_preserve$MH() {
        return RuntimeHelper.requireNonNull(constants$1088.cairo_stroke_preserve$MH,"cairo_stroke_preserve");
    }
    public static void cairo_stroke_preserve ( Addressable cr) {
        var mh$ = cairo_stroke_preserve$MH();
        try {
            mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_fill$MH() {
        return RuntimeHelper.requireNonNull(constants$1088.cairo_fill$MH,"cairo_fill");
    }
    public static void cairo_fill ( Addressable cr) {
        var mh$ = cairo_fill$MH();
        try {
            mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_fill_preserve$MH() {
        return RuntimeHelper.requireNonNull(constants$1088.cairo_fill_preserve$MH,"cairo_fill_preserve");
    }
    public static void cairo_fill_preserve ( Addressable cr) {
        var mh$ = cairo_fill_preserve$MH();
        try {
            mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_copy_page$MH() {
        return RuntimeHelper.requireNonNull(constants$1088.cairo_copy_page$MH,"cairo_copy_page");
    }
    public static void cairo_copy_page ( Addressable cr) {
        var mh$ = cairo_copy_page$MH();
        try {
            mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_show_page$MH() {
        return RuntimeHelper.requireNonNull(constants$1088.cairo_show_page$MH,"cairo_show_page");
    }
    public static void cairo_show_page ( Addressable cr) {
        var mh$ = cairo_show_page$MH();
        try {
            mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_in_stroke$MH() {
        return RuntimeHelper.requireNonNull(constants$1089.cairo_in_stroke$MH,"cairo_in_stroke");
    }
    public static int cairo_in_stroke ( Addressable cr,  double x,  double y) {
        var mh$ = cairo_in_stroke$MH();
        try {
            return (int)mh$.invokeExact(cr, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_in_fill$MH() {
        return RuntimeHelper.requireNonNull(constants$1089.cairo_in_fill$MH,"cairo_in_fill");
    }
    public static int cairo_in_fill ( Addressable cr,  double x,  double y) {
        var mh$ = cairo_in_fill$MH();
        try {
            return (int)mh$.invokeExact(cr, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_in_clip$MH() {
        return RuntimeHelper.requireNonNull(constants$1089.cairo_in_clip$MH,"cairo_in_clip");
    }
    public static int cairo_in_clip ( Addressable cr,  double x,  double y) {
        var mh$ = cairo_in_clip$MH();
        try {
            return (int)mh$.invokeExact(cr, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_stroke_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1089.cairo_stroke_extents$MH,"cairo_stroke_extents");
    }
    public static void cairo_stroke_extents ( Addressable cr,  Addressable x1,  Addressable y1,  Addressable x2,  Addressable y2) {
        var mh$ = cairo_stroke_extents$MH();
        try {
            mh$.invokeExact(cr, x1, y1, x2, y2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_fill_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1089.cairo_fill_extents$MH,"cairo_fill_extents");
    }
    public static void cairo_fill_extents ( Addressable cr,  Addressable x1,  Addressable y1,  Addressable x2,  Addressable y2) {
        var mh$ = cairo_fill_extents$MH();
        try {
            mh$.invokeExact(cr, x1, y1, x2, y2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_reset_clip$MH() {
        return RuntimeHelper.requireNonNull(constants$1089.cairo_reset_clip$MH,"cairo_reset_clip");
    }
    public static void cairo_reset_clip ( Addressable cr) {
        var mh$ = cairo_reset_clip$MH();
        try {
            mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_clip$MH() {
        return RuntimeHelper.requireNonNull(constants$1090.cairo_clip$MH,"cairo_clip");
    }
    public static void cairo_clip ( Addressable cr) {
        var mh$ = cairo_clip$MH();
        try {
            mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_clip_preserve$MH() {
        return RuntimeHelper.requireNonNull(constants$1090.cairo_clip_preserve$MH,"cairo_clip_preserve");
    }
    public static void cairo_clip_preserve ( Addressable cr) {
        var mh$ = cairo_clip_preserve$MH();
        try {
            mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_clip_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1090.cairo_clip_extents$MH,"cairo_clip_extents");
    }
    public static void cairo_clip_extents ( Addressable cr,  Addressable x1,  Addressable y1,  Addressable x2,  Addressable y2) {
        var mh$ = cairo_clip_extents$MH();
        try {
            mh$.invokeExact(cr, x1, y1, x2, y2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_copy_clip_rectangle_list$MH() {
        return RuntimeHelper.requireNonNull(constants$1090.cairo_copy_clip_rectangle_list$MH,"cairo_copy_clip_rectangle_list");
    }
    public static MemoryAddress cairo_copy_clip_rectangle_list ( Addressable cr) {
        var mh$ = cairo_copy_clip_rectangle_list$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_rectangle_list_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$1090.cairo_rectangle_list_destroy$MH,"cairo_rectangle_list_destroy");
    }
    public static void cairo_rectangle_list_destroy ( Addressable rectangle_list) {
        var mh$ = cairo_rectangle_list_destroy$MH();
        try {
            mh$.invokeExact(rectangle_list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_tag_begin$MH() {
        return RuntimeHelper.requireNonNull(constants$1090.cairo_tag_begin$MH,"cairo_tag_begin");
    }
    public static void cairo_tag_begin ( Addressable cr,  Addressable tag_name,  Addressable attributes) {
        var mh$ = cairo_tag_begin$MH();
        try {
            mh$.invokeExact(cr, tag_name, attributes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_tag_end$MH() {
        return RuntimeHelper.requireNonNull(constants$1091.cairo_tag_end$MH,"cairo_tag_end");
    }
    public static void cairo_tag_end ( Addressable cr,  Addressable tag_name) {
        var mh$ = cairo_tag_end$MH();
        try {
            mh$.invokeExact(cr, tag_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_glyph_allocate$MH() {
        return RuntimeHelper.requireNonNull(constants$1091.cairo_glyph_allocate$MH,"cairo_glyph_allocate");
    }
    public static MemoryAddress cairo_glyph_allocate ( int num_glyphs) {
        var mh$ = cairo_glyph_allocate$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(num_glyphs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_glyph_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1091.cairo_glyph_free$MH,"cairo_glyph_free");
    }
    public static void cairo_glyph_free ( Addressable glyphs) {
        var mh$ = cairo_glyph_free$MH();
        try {
            mh$.invokeExact(glyphs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_text_cluster_allocate$MH() {
        return RuntimeHelper.requireNonNull(constants$1091.cairo_text_cluster_allocate$MH,"cairo_text_cluster_allocate");
    }
    public static MemoryAddress cairo_text_cluster_allocate ( int num_clusters) {
        var mh$ = cairo_text_cluster_allocate$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(num_clusters);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_text_cluster_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1091.cairo_text_cluster_free$MH,"cairo_text_cluster_free");
    }
    public static void cairo_text_cluster_free ( Addressable clusters) {
        var mh$ = cairo_text_cluster_free$MH();
        try {
            mh$.invokeExact(clusters);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int CAIRO_TEXT_CLUSTER_FLAG_BACKWARD() {
        return (int)1L;
    }
    public static int CAIRO_FONT_SLANT_NORMAL() {
        return (int)0L;
    }
    public static int CAIRO_FONT_SLANT_ITALIC() {
        return (int)1L;
    }
    public static int CAIRO_FONT_SLANT_OBLIQUE() {
        return (int)2L;
    }
    public static int CAIRO_FONT_WEIGHT_NORMAL() {
        return (int)0L;
    }
    public static int CAIRO_FONT_WEIGHT_BOLD() {
        return (int)1L;
    }
    public static int CAIRO_SUBPIXEL_ORDER_DEFAULT() {
        return (int)0L;
    }
    public static int CAIRO_SUBPIXEL_ORDER_RGB() {
        return (int)1L;
    }
    public static int CAIRO_SUBPIXEL_ORDER_BGR() {
        return (int)2L;
    }
    public static int CAIRO_SUBPIXEL_ORDER_VRGB() {
        return (int)3L;
    }
    public static int CAIRO_SUBPIXEL_ORDER_VBGR() {
        return (int)4L;
    }
    public static int CAIRO_HINT_STYLE_DEFAULT() {
        return (int)0L;
    }
    public static int CAIRO_HINT_STYLE_NONE() {
        return (int)1L;
    }
    public static int CAIRO_HINT_STYLE_SLIGHT() {
        return (int)2L;
    }
    public static int CAIRO_HINT_STYLE_MEDIUM() {
        return (int)3L;
    }
    public static int CAIRO_HINT_STYLE_FULL() {
        return (int)4L;
    }
    public static int CAIRO_HINT_METRICS_DEFAULT() {
        return (int)0L;
    }
    public static int CAIRO_HINT_METRICS_OFF() {
        return (int)1L;
    }
    public static int CAIRO_HINT_METRICS_ON() {
        return (int)2L;
    }
    public static MethodHandle cairo_font_options_create$MH() {
        return RuntimeHelper.requireNonNull(constants$1091.cairo_font_options_create$MH,"cairo_font_options_create");
    }
    public static MemoryAddress cairo_font_options_create () {
        var mh$ = cairo_font_options_create$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_options_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1092.cairo_font_options_copy$MH,"cairo_font_options_copy");
    }
    public static MemoryAddress cairo_font_options_copy ( Addressable original) {
        var mh$ = cairo_font_options_copy$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(original);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_options_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$1092.cairo_font_options_destroy$MH,"cairo_font_options_destroy");
    }
    public static void cairo_font_options_destroy ( Addressable options) {
        var mh$ = cairo_font_options_destroy$MH();
        try {
            mh$.invokeExact(options);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_options_status$MH() {
        return RuntimeHelper.requireNonNull(constants$1092.cairo_font_options_status$MH,"cairo_font_options_status");
    }
    public static int cairo_font_options_status ( Addressable options) {
        var mh$ = cairo_font_options_status$MH();
        try {
            return (int)mh$.invokeExact(options);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_options_merge$MH() {
        return RuntimeHelper.requireNonNull(constants$1092.cairo_font_options_merge$MH,"cairo_font_options_merge");
    }
    public static void cairo_font_options_merge ( Addressable options,  Addressable other) {
        var mh$ = cairo_font_options_merge$MH();
        try {
            mh$.invokeExact(options, other);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_options_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$1092.cairo_font_options_equal$MH,"cairo_font_options_equal");
    }
    public static int cairo_font_options_equal ( Addressable options,  Addressable other) {
        var mh$ = cairo_font_options_equal$MH();
        try {
            return (int)mh$.invokeExact(options, other);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_options_hash$MH() {
        return RuntimeHelper.requireNonNull(constants$1092.cairo_font_options_hash$MH,"cairo_font_options_hash");
    }
    public static long cairo_font_options_hash ( Addressable options) {
        var mh$ = cairo_font_options_hash$MH();
        try {
            return (long)mh$.invokeExact(options);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_options_set_antialias$MH() {
        return RuntimeHelper.requireNonNull(constants$1093.cairo_font_options_set_antialias$MH,"cairo_font_options_set_antialias");
    }
    public static void cairo_font_options_set_antialias ( Addressable options,  int antialias) {
        var mh$ = cairo_font_options_set_antialias$MH();
        try {
            mh$.invokeExact(options, antialias);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_options_get_antialias$MH() {
        return RuntimeHelper.requireNonNull(constants$1093.cairo_font_options_get_antialias$MH,"cairo_font_options_get_antialias");
    }
    public static int cairo_font_options_get_antialias ( Addressable options) {
        var mh$ = cairo_font_options_get_antialias$MH();
        try {
            return (int)mh$.invokeExact(options);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_options_set_subpixel_order$MH() {
        return RuntimeHelper.requireNonNull(constants$1093.cairo_font_options_set_subpixel_order$MH,"cairo_font_options_set_subpixel_order");
    }
    public static void cairo_font_options_set_subpixel_order ( Addressable options,  int subpixel_order) {
        var mh$ = cairo_font_options_set_subpixel_order$MH();
        try {
            mh$.invokeExact(options, subpixel_order);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_options_get_subpixel_order$MH() {
        return RuntimeHelper.requireNonNull(constants$1093.cairo_font_options_get_subpixel_order$MH,"cairo_font_options_get_subpixel_order");
    }
    public static int cairo_font_options_get_subpixel_order ( Addressable options) {
        var mh$ = cairo_font_options_get_subpixel_order$MH();
        try {
            return (int)mh$.invokeExact(options);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_options_set_hint_style$MH() {
        return RuntimeHelper.requireNonNull(constants$1093.cairo_font_options_set_hint_style$MH,"cairo_font_options_set_hint_style");
    }
    public static void cairo_font_options_set_hint_style ( Addressable options,  int hint_style) {
        var mh$ = cairo_font_options_set_hint_style$MH();
        try {
            mh$.invokeExact(options, hint_style);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_options_get_hint_style$MH() {
        return RuntimeHelper.requireNonNull(constants$1093.cairo_font_options_get_hint_style$MH,"cairo_font_options_get_hint_style");
    }
    public static int cairo_font_options_get_hint_style ( Addressable options) {
        var mh$ = cairo_font_options_get_hint_style$MH();
        try {
            return (int)mh$.invokeExact(options);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_options_set_hint_metrics$MH() {
        return RuntimeHelper.requireNonNull(constants$1094.cairo_font_options_set_hint_metrics$MH,"cairo_font_options_set_hint_metrics");
    }
    public static void cairo_font_options_set_hint_metrics ( Addressable options,  int hint_metrics) {
        var mh$ = cairo_font_options_set_hint_metrics$MH();
        try {
            mh$.invokeExact(options, hint_metrics);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_options_get_hint_metrics$MH() {
        return RuntimeHelper.requireNonNull(constants$1094.cairo_font_options_get_hint_metrics$MH,"cairo_font_options_get_hint_metrics");
    }
    public static int cairo_font_options_get_hint_metrics ( Addressable options) {
        var mh$ = cairo_font_options_get_hint_metrics$MH();
        try {
            return (int)mh$.invokeExact(options);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_options_get_variations$MH() {
        return RuntimeHelper.requireNonNull(constants$1094.cairo_font_options_get_variations$MH,"cairo_font_options_get_variations");
    }
    public static MemoryAddress cairo_font_options_get_variations ( Addressable options) {
        var mh$ = cairo_font_options_get_variations$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(options);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_options_set_variations$MH() {
        return RuntimeHelper.requireNonNull(constants$1094.cairo_font_options_set_variations$MH,"cairo_font_options_set_variations");
    }
    public static void cairo_font_options_set_variations ( Addressable options,  Addressable variations) {
        var mh$ = cairo_font_options_set_variations$MH();
        try {
            mh$.invokeExact(options, variations);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_select_font_face$MH() {
        return RuntimeHelper.requireNonNull(constants$1094.cairo_select_font_face$MH,"cairo_select_font_face");
    }
    public static void cairo_select_font_face ( Addressable cr,  Addressable family,  int slant,  int weight) {
        var mh$ = cairo_select_font_face$MH();
        try {
            mh$.invokeExact(cr, family, slant, weight);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_set_font_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1094.cairo_set_font_size$MH,"cairo_set_font_size");
    }
    public static void cairo_set_font_size ( Addressable cr,  double size) {
        var mh$ = cairo_set_font_size$MH();
        try {
            mh$.invokeExact(cr, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_set_font_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$1095.cairo_set_font_matrix$MH,"cairo_set_font_matrix");
    }
    public static void cairo_set_font_matrix ( Addressable cr,  Addressable matrix) {
        var mh$ = cairo_set_font_matrix$MH();
        try {
            mh$.invokeExact(cr, matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_font_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$1095.cairo_get_font_matrix$MH,"cairo_get_font_matrix");
    }
    public static void cairo_get_font_matrix ( Addressable cr,  Addressable matrix) {
        var mh$ = cairo_get_font_matrix$MH();
        try {
            mh$.invokeExact(cr, matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_set_font_options$MH() {
        return RuntimeHelper.requireNonNull(constants$1095.cairo_set_font_options$MH,"cairo_set_font_options");
    }
    public static void cairo_set_font_options ( Addressable cr,  Addressable options) {
        var mh$ = cairo_set_font_options$MH();
        try {
            mh$.invokeExact(cr, options);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_font_options$MH() {
        return RuntimeHelper.requireNonNull(constants$1095.cairo_get_font_options$MH,"cairo_get_font_options");
    }
    public static void cairo_get_font_options ( Addressable cr,  Addressable options) {
        var mh$ = cairo_get_font_options$MH();
        try {
            mh$.invokeExact(cr, options);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_set_font_face$MH() {
        return RuntimeHelper.requireNonNull(constants$1095.cairo_set_font_face$MH,"cairo_set_font_face");
    }
    public static void cairo_set_font_face ( Addressable cr,  Addressable font_face) {
        var mh$ = cairo_set_font_face$MH();
        try {
            mh$.invokeExact(cr, font_face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_font_face$MH() {
        return RuntimeHelper.requireNonNull(constants$1095.cairo_get_font_face$MH,"cairo_get_font_face");
    }
    public static MemoryAddress cairo_get_font_face ( Addressable cr) {
        var mh$ = cairo_get_font_face$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_set_scaled_font$MH() {
        return RuntimeHelper.requireNonNull(constants$1096.cairo_set_scaled_font$MH,"cairo_set_scaled_font");
    }
    public static void cairo_set_scaled_font ( Addressable cr,  Addressable scaled_font) {
        var mh$ = cairo_set_scaled_font$MH();
        try {
            mh$.invokeExact(cr, scaled_font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_scaled_font$MH() {
        return RuntimeHelper.requireNonNull(constants$1096.cairo_get_scaled_font$MH,"cairo_get_scaled_font");
    }
    public static MemoryAddress cairo_get_scaled_font ( Addressable cr) {
        var mh$ = cairo_get_scaled_font$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_show_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1096.cairo_show_text$MH,"cairo_show_text");
    }
    public static void cairo_show_text ( Addressable cr,  Addressable utf8) {
        var mh$ = cairo_show_text$MH();
        try {
            mh$.invokeExact(cr, utf8);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_show_glyphs$MH() {
        return RuntimeHelper.requireNonNull(constants$1096.cairo_show_glyphs$MH,"cairo_show_glyphs");
    }
    public static void cairo_show_glyphs ( Addressable cr,  Addressable glyphs,  int num_glyphs) {
        var mh$ = cairo_show_glyphs$MH();
        try {
            mh$.invokeExact(cr, glyphs, num_glyphs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_show_text_glyphs$MH() {
        return RuntimeHelper.requireNonNull(constants$1096.cairo_show_text_glyphs$MH,"cairo_show_text_glyphs");
    }
    public static void cairo_show_text_glyphs ( Addressable cr,  Addressable utf8,  int utf8_len,  Addressable glyphs,  int num_glyphs,  Addressable clusters,  int num_clusters,  int cluster_flags) {
        var mh$ = cairo_show_text_glyphs$MH();
        try {
            mh$.invokeExact(cr, utf8, utf8_len, glyphs, num_glyphs, clusters, num_clusters, cluster_flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_text_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1096.cairo_text_path$MH,"cairo_text_path");
    }
    public static void cairo_text_path ( Addressable cr,  Addressable utf8) {
        var mh$ = cairo_text_path$MH();
        try {
            mh$.invokeExact(cr, utf8);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_glyph_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1097.cairo_glyph_path$MH,"cairo_glyph_path");
    }
    public static void cairo_glyph_path ( Addressable cr,  Addressable glyphs,  int num_glyphs) {
        var mh$ = cairo_glyph_path$MH();
        try {
            mh$.invokeExact(cr, glyphs, num_glyphs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_text_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1097.cairo_text_extents$MH,"cairo_text_extents");
    }
    public static void cairo_text_extents ( Addressable cr,  Addressable utf8,  Addressable extents) {
        var mh$ = cairo_text_extents$MH();
        try {
            mh$.invokeExact(cr, utf8, extents);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_glyph_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1097.cairo_glyph_extents$MH,"cairo_glyph_extents");
    }
    public static void cairo_glyph_extents ( Addressable cr,  Addressable glyphs,  int num_glyphs,  Addressable extents) {
        var mh$ = cairo_glyph_extents$MH();
        try {
            mh$.invokeExact(cr, glyphs, num_glyphs, extents);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1097.cairo_font_extents$MH,"cairo_font_extents");
    }
    public static void cairo_font_extents ( Addressable cr,  Addressable extents) {
        var mh$ = cairo_font_extents$MH();
        try {
            mh$.invokeExact(cr, extents);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_face_reference$MH() {
        return RuntimeHelper.requireNonNull(constants$1097.cairo_font_face_reference$MH,"cairo_font_face_reference");
    }
    public static MemoryAddress cairo_font_face_reference ( Addressable font_face) {
        var mh$ = cairo_font_face_reference$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(font_face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_face_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$1097.cairo_font_face_destroy$MH,"cairo_font_face_destroy");
    }
    public static void cairo_font_face_destroy ( Addressable font_face) {
        var mh$ = cairo_font_face_destroy$MH();
        try {
            mh$.invokeExact(font_face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_face_get_reference_count$MH() {
        return RuntimeHelper.requireNonNull(constants$1098.cairo_font_face_get_reference_count$MH,"cairo_font_face_get_reference_count");
    }
    public static int cairo_font_face_get_reference_count ( Addressable font_face) {
        var mh$ = cairo_font_face_get_reference_count$MH();
        try {
            return (int)mh$.invokeExact(font_face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_face_status$MH() {
        return RuntimeHelper.requireNonNull(constants$1098.cairo_font_face_status$MH,"cairo_font_face_status");
    }
    public static int cairo_font_face_status ( Addressable font_face) {
        var mh$ = cairo_font_face_status$MH();
        try {
            return (int)mh$.invokeExact(font_face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int CAIRO_FONT_TYPE_TOY() {
        return (int)0L;
    }
    public static int CAIRO_FONT_TYPE_FT() {
        return (int)1L;
    }
    public static int CAIRO_FONT_TYPE_WIN32() {
        return (int)2L;
    }
    public static int CAIRO_FONT_TYPE_QUARTZ() {
        return (int)3L;
    }
    public static int CAIRO_FONT_TYPE_USER() {
        return (int)4L;
    }
    public static int CAIRO_FONT_TYPE_DWRITE() {
        return (int)5L;
    }
    public static MethodHandle cairo_font_face_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1098.cairo_font_face_get_type$MH,"cairo_font_face_get_type");
    }
    public static int cairo_font_face_get_type ( Addressable font_face) {
        var mh$ = cairo_font_face_get_type$MH();
        try {
            return (int)mh$.invokeExact(font_face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_face_get_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1098.cairo_font_face_get_user_data$MH,"cairo_font_face_get_user_data");
    }
    public static MemoryAddress cairo_font_face_get_user_data ( Addressable font_face,  Addressable key) {
        var mh$ = cairo_font_face_get_user_data$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(font_face, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_face_set_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1098.cairo_font_face_set_user_data$MH,"cairo_font_face_set_user_data");
    }
    public static int cairo_font_face_set_user_data ( Addressable font_face,  Addressable key,  Addressable user_data,  Addressable destroy) {
        var mh$ = cairo_font_face_set_user_data$MH();
        try {
            return (int)mh$.invokeExact(font_face, key, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_scaled_font_create$MH() {
        return RuntimeHelper.requireNonNull(constants$1098.cairo_scaled_font_create$MH,"cairo_scaled_font_create");
    }
    public static MemoryAddress cairo_scaled_font_create ( Addressable font_face,  Addressable font_matrix,  Addressable ctm,  Addressable options) {
        var mh$ = cairo_scaled_font_create$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(font_face, font_matrix, ctm, options);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_scaled_font_reference$MH() {
        return RuntimeHelper.requireNonNull(constants$1099.cairo_scaled_font_reference$MH,"cairo_scaled_font_reference");
    }
    public static MemoryAddress cairo_scaled_font_reference ( Addressable scaled_font) {
        var mh$ = cairo_scaled_font_reference$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(scaled_font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_scaled_font_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$1099.cairo_scaled_font_destroy$MH,"cairo_scaled_font_destroy");
    }
    public static void cairo_scaled_font_destroy ( Addressable scaled_font) {
        var mh$ = cairo_scaled_font_destroy$MH();
        try {
            mh$.invokeExact(scaled_font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_scaled_font_get_reference_count$MH() {
        return RuntimeHelper.requireNonNull(constants$1099.cairo_scaled_font_get_reference_count$MH,"cairo_scaled_font_get_reference_count");
    }
    public static int cairo_scaled_font_get_reference_count ( Addressable scaled_font) {
        var mh$ = cairo_scaled_font_get_reference_count$MH();
        try {
            return (int)mh$.invokeExact(scaled_font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_scaled_font_status$MH() {
        return RuntimeHelper.requireNonNull(constants$1099.cairo_scaled_font_status$MH,"cairo_scaled_font_status");
    }
    public static int cairo_scaled_font_status ( Addressable scaled_font) {
        var mh$ = cairo_scaled_font_status$MH();
        try {
            return (int)mh$.invokeExact(scaled_font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_scaled_font_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1099.cairo_scaled_font_get_type$MH,"cairo_scaled_font_get_type");
    }
    public static int cairo_scaled_font_get_type ( Addressable scaled_font) {
        var mh$ = cairo_scaled_font_get_type$MH();
        try {
            return (int)mh$.invokeExact(scaled_font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_scaled_font_get_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1099.cairo_scaled_font_get_user_data$MH,"cairo_scaled_font_get_user_data");
    }
    public static MemoryAddress cairo_scaled_font_get_user_data ( Addressable scaled_font,  Addressable key) {
        var mh$ = cairo_scaled_font_get_user_data$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(scaled_font, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_scaled_font_set_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1100.cairo_scaled_font_set_user_data$MH,"cairo_scaled_font_set_user_data");
    }
    public static int cairo_scaled_font_set_user_data ( Addressable scaled_font,  Addressable key,  Addressable user_data,  Addressable destroy) {
        var mh$ = cairo_scaled_font_set_user_data$MH();
        try {
            return (int)mh$.invokeExact(scaled_font, key, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_scaled_font_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1100.cairo_scaled_font_extents$MH,"cairo_scaled_font_extents");
    }
    public static void cairo_scaled_font_extents ( Addressable scaled_font,  Addressable extents) {
        var mh$ = cairo_scaled_font_extents$MH();
        try {
            mh$.invokeExact(scaled_font, extents);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_scaled_font_text_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1100.cairo_scaled_font_text_extents$MH,"cairo_scaled_font_text_extents");
    }
    public static void cairo_scaled_font_text_extents ( Addressable scaled_font,  Addressable utf8,  Addressable extents) {
        var mh$ = cairo_scaled_font_text_extents$MH();
        try {
            mh$.invokeExact(scaled_font, utf8, extents);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_scaled_font_glyph_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1100.cairo_scaled_font_glyph_extents$MH,"cairo_scaled_font_glyph_extents");
    }
    public static void cairo_scaled_font_glyph_extents ( Addressable scaled_font,  Addressable glyphs,  int num_glyphs,  Addressable extents) {
        var mh$ = cairo_scaled_font_glyph_extents$MH();
        try {
            mh$.invokeExact(scaled_font, glyphs, num_glyphs, extents);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_scaled_font_text_to_glyphs$MH() {
        return RuntimeHelper.requireNonNull(constants$1100.cairo_scaled_font_text_to_glyphs$MH,"cairo_scaled_font_text_to_glyphs");
    }
    public static int cairo_scaled_font_text_to_glyphs ( Addressable scaled_font,  double x,  double y,  Addressable utf8,  int utf8_len,  Addressable glyphs,  Addressable num_glyphs,  Addressable clusters,  Addressable num_clusters,  Addressable cluster_flags) {
        var mh$ = cairo_scaled_font_text_to_glyphs$MH();
        try {
            return (int)mh$.invokeExact(scaled_font, x, y, utf8, utf8_len, glyphs, num_glyphs, clusters, num_clusters, cluster_flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_scaled_font_get_font_face$MH() {
        return RuntimeHelper.requireNonNull(constants$1100.cairo_scaled_font_get_font_face$MH,"cairo_scaled_font_get_font_face");
    }
    public static MemoryAddress cairo_scaled_font_get_font_face ( Addressable scaled_font) {
        var mh$ = cairo_scaled_font_get_font_face$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(scaled_font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_scaled_font_get_font_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$1101.cairo_scaled_font_get_font_matrix$MH,"cairo_scaled_font_get_font_matrix");
    }
    public static void cairo_scaled_font_get_font_matrix ( Addressable scaled_font,  Addressable font_matrix) {
        var mh$ = cairo_scaled_font_get_font_matrix$MH();
        try {
            mh$.invokeExact(scaled_font, font_matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_scaled_font_get_ctm$MH() {
        return RuntimeHelper.requireNonNull(constants$1101.cairo_scaled_font_get_ctm$MH,"cairo_scaled_font_get_ctm");
    }
    public static void cairo_scaled_font_get_ctm ( Addressable scaled_font,  Addressable ctm) {
        var mh$ = cairo_scaled_font_get_ctm$MH();
        try {
            mh$.invokeExact(scaled_font, ctm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_scaled_font_get_scale_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$1101.cairo_scaled_font_get_scale_matrix$MH,"cairo_scaled_font_get_scale_matrix");
    }
    public static void cairo_scaled_font_get_scale_matrix ( Addressable scaled_font,  Addressable scale_matrix) {
        var mh$ = cairo_scaled_font_get_scale_matrix$MH();
        try {
            mh$.invokeExact(scaled_font, scale_matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_scaled_font_get_font_options$MH() {
        return RuntimeHelper.requireNonNull(constants$1101.cairo_scaled_font_get_font_options$MH,"cairo_scaled_font_get_font_options");
    }
    public static void cairo_scaled_font_get_font_options ( Addressable scaled_font,  Addressable options) {
        var mh$ = cairo_scaled_font_get_font_options$MH();
        try {
            mh$.invokeExact(scaled_font, options);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_toy_font_face_create$MH() {
        return RuntimeHelper.requireNonNull(constants$1101.cairo_toy_font_face_create$MH,"cairo_toy_font_face_create");
    }
    public static MemoryAddress cairo_toy_font_face_create ( Addressable family,  int slant,  int weight) {
        var mh$ = cairo_toy_font_face_create$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(family, slant, weight);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_toy_font_face_get_family$MH() {
        return RuntimeHelper.requireNonNull(constants$1101.cairo_toy_font_face_get_family$MH,"cairo_toy_font_face_get_family");
    }
    public static MemoryAddress cairo_toy_font_face_get_family ( Addressable font_face) {
        var mh$ = cairo_toy_font_face_get_family$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(font_face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_toy_font_face_get_slant$MH() {
        return RuntimeHelper.requireNonNull(constants$1102.cairo_toy_font_face_get_slant$MH,"cairo_toy_font_face_get_slant");
    }
    public static int cairo_toy_font_face_get_slant ( Addressable font_face) {
        var mh$ = cairo_toy_font_face_get_slant$MH();
        try {
            return (int)mh$.invokeExact(font_face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_toy_font_face_get_weight$MH() {
        return RuntimeHelper.requireNonNull(constants$1102.cairo_toy_font_face_get_weight$MH,"cairo_toy_font_face_get_weight");
    }
    public static int cairo_toy_font_face_get_weight ( Addressable font_face) {
        var mh$ = cairo_toy_font_face_get_weight$MH();
        try {
            return (int)mh$.invokeExact(font_face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_user_font_face_create$MH() {
        return RuntimeHelper.requireNonNull(constants$1102.cairo_user_font_face_create$MH,"cairo_user_font_face_create");
    }
    public static MemoryAddress cairo_user_font_face_create () {
        var mh$ = cairo_user_font_face_create$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_user_font_face_set_init_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1103.cairo_user_font_face_set_init_func$MH,"cairo_user_font_face_set_init_func");
    }
    public static void cairo_user_font_face_set_init_func ( Addressable font_face,  Addressable init_func) {
        var mh$ = cairo_user_font_face_set_init_func$MH();
        try {
            mh$.invokeExact(font_face, init_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_user_font_face_set_render_glyph_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1104.cairo_user_font_face_set_render_glyph_func$MH,"cairo_user_font_face_set_render_glyph_func");
    }
    public static void cairo_user_font_face_set_render_glyph_func ( Addressable font_face,  Addressable render_glyph_func) {
        var mh$ = cairo_user_font_face_set_render_glyph_func$MH();
        try {
            mh$.invokeExact(font_face, render_glyph_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_user_font_face_set_render_color_glyph_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1104.cairo_user_font_face_set_render_color_glyph_func$MH,"cairo_user_font_face_set_render_color_glyph_func");
    }
    public static void cairo_user_font_face_set_render_color_glyph_func ( Addressable font_face,  Addressable render_glyph_func) {
        var mh$ = cairo_user_font_face_set_render_color_glyph_func$MH();
        try {
            mh$.invokeExact(font_face, render_glyph_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_user_font_face_set_text_to_glyphs_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1104.cairo_user_font_face_set_text_to_glyphs_func$MH,"cairo_user_font_face_set_text_to_glyphs_func");
    }
    public static void cairo_user_font_face_set_text_to_glyphs_func ( Addressable font_face,  Addressable text_to_glyphs_func) {
        var mh$ = cairo_user_font_face_set_text_to_glyphs_func$MH();
        try {
            mh$.invokeExact(font_face, text_to_glyphs_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_user_font_face_set_unicode_to_glyph_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1104.cairo_user_font_face_set_unicode_to_glyph_func$MH,"cairo_user_font_face_set_unicode_to_glyph_func");
    }
    public static void cairo_user_font_face_set_unicode_to_glyph_func ( Addressable font_face,  Addressable unicode_to_glyph_func) {
        var mh$ = cairo_user_font_face_set_unicode_to_glyph_func$MH();
        try {
            mh$.invokeExact(font_face, unicode_to_glyph_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_user_font_face_get_init_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1104.cairo_user_font_face_get_init_func$MH,"cairo_user_font_face_get_init_func");
    }
    public static MemoryAddress cairo_user_font_face_get_init_func ( Addressable font_face) {
        var mh$ = cairo_user_font_face_get_init_func$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(font_face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_user_font_face_get_render_glyph_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1104.cairo_user_font_face_get_render_glyph_func$MH,"cairo_user_font_face_get_render_glyph_func");
    }
    public static MemoryAddress cairo_user_font_face_get_render_glyph_func ( Addressable font_face) {
        var mh$ = cairo_user_font_face_get_render_glyph_func$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(font_face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_user_font_face_get_render_color_glyph_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1105.cairo_user_font_face_get_render_color_glyph_func$MH,"cairo_user_font_face_get_render_color_glyph_func");
    }
    public static MemoryAddress cairo_user_font_face_get_render_color_glyph_func ( Addressable font_face) {
        var mh$ = cairo_user_font_face_get_render_color_glyph_func$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(font_face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_user_font_face_get_text_to_glyphs_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1105.cairo_user_font_face_get_text_to_glyphs_func$MH,"cairo_user_font_face_get_text_to_glyphs_func");
    }
    public static MemoryAddress cairo_user_font_face_get_text_to_glyphs_func ( Addressable font_face) {
        var mh$ = cairo_user_font_face_get_text_to_glyphs_func$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(font_face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_user_font_face_get_unicode_to_glyph_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1105.cairo_user_font_face_get_unicode_to_glyph_func$MH,"cairo_user_font_face_get_unicode_to_glyph_func");
    }
    public static MemoryAddress cairo_user_font_face_get_unicode_to_glyph_func ( Addressable font_face) {
        var mh$ = cairo_user_font_face_get_unicode_to_glyph_func$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(font_face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_operator$MH() {
        return RuntimeHelper.requireNonNull(constants$1105.cairo_get_operator$MH,"cairo_get_operator");
    }
    public static int cairo_get_operator ( Addressable cr) {
        var mh$ = cairo_get_operator$MH();
        try {
            return (int)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_source$MH() {
        return RuntimeHelper.requireNonNull(constants$1105.cairo_get_source$MH,"cairo_get_source");
    }
    public static MemoryAddress cairo_get_source ( Addressable cr) {
        var mh$ = cairo_get_source$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_tolerance$MH() {
        return RuntimeHelper.requireNonNull(constants$1105.cairo_get_tolerance$MH,"cairo_get_tolerance");
    }
    public static double cairo_get_tolerance ( Addressable cr) {
        var mh$ = cairo_get_tolerance$MH();
        try {
            return (double)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_antialias$MH() {
        return RuntimeHelper.requireNonNull(constants$1106.cairo_get_antialias$MH,"cairo_get_antialias");
    }
    public static int cairo_get_antialias ( Addressable cr) {
        var mh$ = cairo_get_antialias$MH();
        try {
            return (int)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_has_current_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1106.cairo_has_current_point$MH,"cairo_has_current_point");
    }
    public static int cairo_has_current_point ( Addressable cr) {
        var mh$ = cairo_has_current_point$MH();
        try {
            return (int)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_current_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1106.cairo_get_current_point$MH,"cairo_get_current_point");
    }
    public static void cairo_get_current_point ( Addressable cr,  Addressable x,  Addressable y) {
        var mh$ = cairo_get_current_point$MH();
        try {
            mh$.invokeExact(cr, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_fill_rule$MH() {
        return RuntimeHelper.requireNonNull(constants$1106.cairo_get_fill_rule$MH,"cairo_get_fill_rule");
    }
    public static int cairo_get_fill_rule ( Addressable cr) {
        var mh$ = cairo_get_fill_rule$MH();
        try {
            return (int)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_line_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1106.cairo_get_line_width$MH,"cairo_get_line_width");
    }
    public static double cairo_get_line_width ( Addressable cr) {
        var mh$ = cairo_get_line_width$MH();
        try {
            return (double)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_hairline$MH() {
        return RuntimeHelper.requireNonNull(constants$1106.cairo_get_hairline$MH,"cairo_get_hairline");
    }
    public static int cairo_get_hairline ( Addressable cr) {
        var mh$ = cairo_get_hairline$MH();
        try {
            return (int)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_line_cap$MH() {
        return RuntimeHelper.requireNonNull(constants$1107.cairo_get_line_cap$MH,"cairo_get_line_cap");
    }
    public static int cairo_get_line_cap ( Addressable cr) {
        var mh$ = cairo_get_line_cap$MH();
        try {
            return (int)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_line_join$MH() {
        return RuntimeHelper.requireNonNull(constants$1107.cairo_get_line_join$MH,"cairo_get_line_join");
    }
    public static int cairo_get_line_join ( Addressable cr) {
        var mh$ = cairo_get_line_join$MH();
        try {
            return (int)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_miter_limit$MH() {
        return RuntimeHelper.requireNonNull(constants$1107.cairo_get_miter_limit$MH,"cairo_get_miter_limit");
    }
    public static double cairo_get_miter_limit ( Addressable cr) {
        var mh$ = cairo_get_miter_limit$MH();
        try {
            return (double)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_dash_count$MH() {
        return RuntimeHelper.requireNonNull(constants$1107.cairo_get_dash_count$MH,"cairo_get_dash_count");
    }
    public static int cairo_get_dash_count ( Addressable cr) {
        var mh$ = cairo_get_dash_count$MH();
        try {
            return (int)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_dash$MH() {
        return RuntimeHelper.requireNonNull(constants$1107.cairo_get_dash$MH,"cairo_get_dash");
    }
    public static void cairo_get_dash ( Addressable cr,  Addressable dashes,  Addressable offset) {
        var mh$ = cairo_get_dash$MH();
        try {
            mh$.invokeExact(cr, dashes, offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$1107.cairo_get_matrix$MH,"cairo_get_matrix");
    }
    public static void cairo_get_matrix ( Addressable cr,  Addressable matrix) {
        var mh$ = cairo_get_matrix$MH();
        try {
            mh$.invokeExact(cr, matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_target$MH() {
        return RuntimeHelper.requireNonNull(constants$1108.cairo_get_target$MH,"cairo_get_target");
    }
    public static MemoryAddress cairo_get_target ( Addressable cr) {
        var mh$ = cairo_get_target$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_group_target$MH() {
        return RuntimeHelper.requireNonNull(constants$1108.cairo_get_group_target$MH,"cairo_get_group_target");
    }
    public static MemoryAddress cairo_get_group_target ( Addressable cr) {
        var mh$ = cairo_get_group_target$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int CAIRO_PATH_MOVE_TO() {
        return (int)0L;
    }
    public static int CAIRO_PATH_LINE_TO() {
        return (int)1L;
    }
    public static int CAIRO_PATH_CURVE_TO() {
        return (int)2L;
    }
    public static int CAIRO_PATH_CLOSE_PATH() {
        return (int)3L;
    }
    public static MethodHandle cairo_copy_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1108.cairo_copy_path$MH,"cairo_copy_path");
    }
    public static MemoryAddress cairo_copy_path ( Addressable cr) {
        var mh$ = cairo_copy_path$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_copy_path_flat$MH() {
        return RuntimeHelper.requireNonNull(constants$1108.cairo_copy_path_flat$MH,"cairo_copy_path_flat");
    }
    public static MemoryAddress cairo_copy_path_flat ( Addressable cr) {
        var mh$ = cairo_copy_path_flat$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_append_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1108.cairo_append_path$MH,"cairo_append_path");
    }
    public static void cairo_append_path ( Addressable cr,  Addressable path) {
        var mh$ = cairo_append_path$MH();
        try {
            mh$.invokeExact(cr, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_path_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$1108.cairo_path_destroy$MH,"cairo_path_destroy");
    }
    public static void cairo_path_destroy ( Addressable path) {
        var mh$ = cairo_path_destroy$MH();
        try {
            mh$.invokeExact(path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_status$MH() {
        return RuntimeHelper.requireNonNull(constants$1109.cairo_status$MH,"cairo_status");
    }
    public static int cairo_status ( Addressable cr) {
        var mh$ = cairo_status$MH();
        try {
            return (int)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_status_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1109.cairo_status_to_string$MH,"cairo_status_to_string");
    }
    public static MemoryAddress cairo_status_to_string ( int status) {
        var mh$ = cairo_status_to_string$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(status);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_device_reference$MH() {
        return RuntimeHelper.requireNonNull(constants$1109.cairo_device_reference$MH,"cairo_device_reference");
    }
    public static MemoryAddress cairo_device_reference ( Addressable device) {
        var mh$ = cairo_device_reference$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int CAIRO_DEVICE_TYPE_DRM() {
        return (int)0L;
    }
    public static int CAIRO_DEVICE_TYPE_GL() {
        return (int)1L;
    }
    public static int CAIRO_DEVICE_TYPE_SCRIPT() {
        return (int)2L;
    }
    public static int CAIRO_DEVICE_TYPE_XCB() {
        return (int)3L;
    }
    public static int CAIRO_DEVICE_TYPE_XLIB() {
        return (int)4L;
    }
    public static int CAIRO_DEVICE_TYPE_XML() {
        return (int)5L;
    }
    public static int CAIRO_DEVICE_TYPE_COGL() {
        return (int)6L;
    }
    public static int CAIRO_DEVICE_TYPE_WIN32() {
        return (int)7L;
    }
    public static int CAIRO_DEVICE_TYPE_INVALID() {
        return (int)-1L;
    }
    public static MethodHandle cairo_device_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1109.cairo_device_get_type$MH,"cairo_device_get_type");
    }
    public static int cairo_device_get_type ( Addressable device) {
        var mh$ = cairo_device_get_type$MH();
        try {
            return (int)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_device_status$MH() {
        return RuntimeHelper.requireNonNull(constants$1109.cairo_device_status$MH,"cairo_device_status");
    }
    public static int cairo_device_status ( Addressable device) {
        var mh$ = cairo_device_status$MH();
        try {
            return (int)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_device_acquire$MH() {
        return RuntimeHelper.requireNonNull(constants$1109.cairo_device_acquire$MH,"cairo_device_acquire");
    }
    public static int cairo_device_acquire ( Addressable device) {
        var mh$ = cairo_device_acquire$MH();
        try {
            return (int)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_device_release$MH() {
        return RuntimeHelper.requireNonNull(constants$1110.cairo_device_release$MH,"cairo_device_release");
    }
    public static void cairo_device_release ( Addressable device) {
        var mh$ = cairo_device_release$MH();
        try {
            mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_device_flush$MH() {
        return RuntimeHelper.requireNonNull(constants$1110.cairo_device_flush$MH,"cairo_device_flush");
    }
    public static void cairo_device_flush ( Addressable device) {
        var mh$ = cairo_device_flush$MH();
        try {
            mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_device_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1110.cairo_device_finish$MH,"cairo_device_finish");
    }
    public static void cairo_device_finish ( Addressable device) {
        var mh$ = cairo_device_finish$MH();
        try {
            mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_device_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$1110.cairo_device_destroy$MH,"cairo_device_destroy");
    }
    public static void cairo_device_destroy ( Addressable device) {
        var mh$ = cairo_device_destroy$MH();
        try {
            mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_device_get_reference_count$MH() {
        return RuntimeHelper.requireNonNull(constants$1110.cairo_device_get_reference_count$MH,"cairo_device_get_reference_count");
    }
    public static int cairo_device_get_reference_count ( Addressable device) {
        var mh$ = cairo_device_get_reference_count$MH();
        try {
            return (int)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_device_get_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1110.cairo_device_get_user_data$MH,"cairo_device_get_user_data");
    }
    public static MemoryAddress cairo_device_get_user_data ( Addressable device,  Addressable key) {
        var mh$ = cairo_device_get_user_data$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(device, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_device_set_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1111.cairo_device_set_user_data$MH,"cairo_device_set_user_data");
    }
    public static int cairo_device_set_user_data ( Addressable device,  Addressable key,  Addressable user_data,  Addressable destroy) {
        var mh$ = cairo_device_set_user_data$MH();
        try {
            return (int)mh$.invokeExact(device, key, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_create_similar$MH() {
        return RuntimeHelper.requireNonNull(constants$1111.cairo_surface_create_similar$MH,"cairo_surface_create_similar");
    }
    public static MemoryAddress cairo_surface_create_similar ( Addressable other,  int content,  int width,  int height) {
        var mh$ = cairo_surface_create_similar$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(other, content, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_create_similar_image$MH() {
        return RuntimeHelper.requireNonNull(constants$1111.cairo_surface_create_similar_image$MH,"cairo_surface_create_similar_image");
    }
    public static MemoryAddress cairo_surface_create_similar_image ( Addressable other,  int format,  int width,  int height) {
        var mh$ = cairo_surface_create_similar_image$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(other, format, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_map_to_image$MH() {
        return RuntimeHelper.requireNonNull(constants$1111.cairo_surface_map_to_image$MH,"cairo_surface_map_to_image");
    }
    public static MemoryAddress cairo_surface_map_to_image ( Addressable surface,  Addressable extents) {
        var mh$ = cairo_surface_map_to_image$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(surface, extents);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_unmap_image$MH() {
        return RuntimeHelper.requireNonNull(constants$1111.cairo_surface_unmap_image$MH,"cairo_surface_unmap_image");
    }
    public static void cairo_surface_unmap_image ( Addressable surface,  Addressable image) {
        var mh$ = cairo_surface_unmap_image$MH();
        try {
            mh$.invokeExact(surface, image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_create_for_rectangle$MH() {
        return RuntimeHelper.requireNonNull(constants$1111.cairo_surface_create_for_rectangle$MH,"cairo_surface_create_for_rectangle");
    }
    public static MemoryAddress cairo_surface_create_for_rectangle ( Addressable target,  double x,  double y,  double width,  double height) {
        var mh$ = cairo_surface_create_for_rectangle$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(target, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int CAIRO_SURFACE_OBSERVER_NORMAL() {
        return (int)0L;
    }
    public static int CAIRO_SURFACE_OBSERVER_RECORD_OPERATIONS() {
        return (int)1L;
    }
    public static MethodHandle cairo_surface_create_observer$MH() {
        return RuntimeHelper.requireNonNull(constants$1112.cairo_surface_create_observer$MH,"cairo_surface_create_observer");
    }
    public static MemoryAddress cairo_surface_create_observer ( Addressable target,  int mode) {
        var mh$ = cairo_surface_create_observer$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(target, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_observer_add_paint_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$1112.cairo_surface_observer_add_paint_callback$MH,"cairo_surface_observer_add_paint_callback");
    }
    public static int cairo_surface_observer_add_paint_callback ( Addressable abstract_surface,  Addressable func,  Addressable data) {
        var mh$ = cairo_surface_observer_add_paint_callback$MH();
        try {
            return (int)mh$.invokeExact(abstract_surface, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_observer_add_mask_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$1112.cairo_surface_observer_add_mask_callback$MH,"cairo_surface_observer_add_mask_callback");
    }
    public static int cairo_surface_observer_add_mask_callback ( Addressable abstract_surface,  Addressable func,  Addressable data) {
        var mh$ = cairo_surface_observer_add_mask_callback$MH();
        try {
            return (int)mh$.invokeExact(abstract_surface, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_observer_add_fill_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$1112.cairo_surface_observer_add_fill_callback$MH,"cairo_surface_observer_add_fill_callback");
    }
    public static int cairo_surface_observer_add_fill_callback ( Addressable abstract_surface,  Addressable func,  Addressable data) {
        var mh$ = cairo_surface_observer_add_fill_callback$MH();
        try {
            return (int)mh$.invokeExact(abstract_surface, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_observer_add_stroke_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$1113.cairo_surface_observer_add_stroke_callback$MH,"cairo_surface_observer_add_stroke_callback");
    }
    public static int cairo_surface_observer_add_stroke_callback ( Addressable abstract_surface,  Addressable func,  Addressable data) {
        var mh$ = cairo_surface_observer_add_stroke_callback$MH();
        try {
            return (int)mh$.invokeExact(abstract_surface, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_observer_add_glyphs_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$1113.cairo_surface_observer_add_glyphs_callback$MH,"cairo_surface_observer_add_glyphs_callback");
    }
    public static int cairo_surface_observer_add_glyphs_callback ( Addressable abstract_surface,  Addressable func,  Addressable data) {
        var mh$ = cairo_surface_observer_add_glyphs_callback$MH();
        try {
            return (int)mh$.invokeExact(abstract_surface, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_observer_add_flush_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$1113.cairo_surface_observer_add_flush_callback$MH,"cairo_surface_observer_add_flush_callback");
    }
    public static int cairo_surface_observer_add_flush_callback ( Addressable abstract_surface,  Addressable func,  Addressable data) {
        var mh$ = cairo_surface_observer_add_flush_callback$MH();
        try {
            return (int)mh$.invokeExact(abstract_surface, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_observer_add_finish_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$1113.cairo_surface_observer_add_finish_callback$MH,"cairo_surface_observer_add_finish_callback");
    }
    public static int cairo_surface_observer_add_finish_callback ( Addressable abstract_surface,  Addressable func,  Addressable data) {
        var mh$ = cairo_surface_observer_add_finish_callback$MH();
        try {
            return (int)mh$.invokeExact(abstract_surface, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_observer_print$MH() {
        return RuntimeHelper.requireNonNull(constants$1113.cairo_surface_observer_print$MH,"cairo_surface_observer_print");
    }
    public static int cairo_surface_observer_print ( Addressable surface,  Addressable write_func,  Addressable closure) {
        var mh$ = cairo_surface_observer_print$MH();
        try {
            return (int)mh$.invokeExact(surface, write_func, closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_observer_elapsed$MH() {
        return RuntimeHelper.requireNonNull(constants$1113.cairo_surface_observer_elapsed$MH,"cairo_surface_observer_elapsed");
    }
    public static double cairo_surface_observer_elapsed ( Addressable surface) {
        var mh$ = cairo_surface_observer_elapsed$MH();
        try {
            return (double)mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_device_observer_print$MH() {
        return RuntimeHelper.requireNonNull(constants$1114.cairo_device_observer_print$MH,"cairo_device_observer_print");
    }
    public static int cairo_device_observer_print ( Addressable device,  Addressable write_func,  Addressable closure) {
        var mh$ = cairo_device_observer_print$MH();
        try {
            return (int)mh$.invokeExact(device, write_func, closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_device_observer_elapsed$MH() {
        return RuntimeHelper.requireNonNull(constants$1114.cairo_device_observer_elapsed$MH,"cairo_device_observer_elapsed");
    }
    public static double cairo_device_observer_elapsed ( Addressable device) {
        var mh$ = cairo_device_observer_elapsed$MH();
        try {
            return (double)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_device_observer_paint_elapsed$MH() {
        return RuntimeHelper.requireNonNull(constants$1114.cairo_device_observer_paint_elapsed$MH,"cairo_device_observer_paint_elapsed");
    }
    public static double cairo_device_observer_paint_elapsed ( Addressable device) {
        var mh$ = cairo_device_observer_paint_elapsed$MH();
        try {
            return (double)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_device_observer_mask_elapsed$MH() {
        return RuntimeHelper.requireNonNull(constants$1114.cairo_device_observer_mask_elapsed$MH,"cairo_device_observer_mask_elapsed");
    }
    public static double cairo_device_observer_mask_elapsed ( Addressable device) {
        var mh$ = cairo_device_observer_mask_elapsed$MH();
        try {
            return (double)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_device_observer_fill_elapsed$MH() {
        return RuntimeHelper.requireNonNull(constants$1114.cairo_device_observer_fill_elapsed$MH,"cairo_device_observer_fill_elapsed");
    }
    public static double cairo_device_observer_fill_elapsed ( Addressable device) {
        var mh$ = cairo_device_observer_fill_elapsed$MH();
        try {
            return (double)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_device_observer_stroke_elapsed$MH() {
        return RuntimeHelper.requireNonNull(constants$1114.cairo_device_observer_stroke_elapsed$MH,"cairo_device_observer_stroke_elapsed");
    }
    public static double cairo_device_observer_stroke_elapsed ( Addressable device) {
        var mh$ = cairo_device_observer_stroke_elapsed$MH();
        try {
            return (double)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_device_observer_glyphs_elapsed$MH() {
        return RuntimeHelper.requireNonNull(constants$1115.cairo_device_observer_glyphs_elapsed$MH,"cairo_device_observer_glyphs_elapsed");
    }
    public static double cairo_device_observer_glyphs_elapsed ( Addressable device) {
        var mh$ = cairo_device_observer_glyphs_elapsed$MH();
        try {
            return (double)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_reference$MH() {
        return RuntimeHelper.requireNonNull(constants$1115.cairo_surface_reference$MH,"cairo_surface_reference");
    }
    public static MemoryAddress cairo_surface_reference ( Addressable surface) {
        var mh$ = cairo_surface_reference$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1115.cairo_surface_finish$MH,"cairo_surface_finish");
    }
    public static void cairo_surface_finish ( Addressable surface) {
        var mh$ = cairo_surface_finish$MH();
        try {
            mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$1115.cairo_surface_destroy$MH,"cairo_surface_destroy");
    }
    public static void cairo_surface_destroy ( Addressable surface) {
        var mh$ = cairo_surface_destroy$MH();
        try {
            mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_get_device$MH() {
        return RuntimeHelper.requireNonNull(constants$1115.cairo_surface_get_device$MH,"cairo_surface_get_device");
    }
    public static MemoryAddress cairo_surface_get_device ( Addressable surface) {
        var mh$ = cairo_surface_get_device$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_get_reference_count$MH() {
        return RuntimeHelper.requireNonNull(constants$1115.cairo_surface_get_reference_count$MH,"cairo_surface_get_reference_count");
    }
    public static int cairo_surface_get_reference_count ( Addressable surface) {
        var mh$ = cairo_surface_get_reference_count$MH();
        try {
            return (int)mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_status$MH() {
        return RuntimeHelper.requireNonNull(constants$1116.cairo_surface_status$MH,"cairo_surface_status");
    }
    public static int cairo_surface_status ( Addressable surface) {
        var mh$ = cairo_surface_status$MH();
        try {
            return (int)mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int CAIRO_SURFACE_TYPE_IMAGE() {
        return (int)0L;
    }
    public static int CAIRO_SURFACE_TYPE_PDF() {
        return (int)1L;
    }
    public static int CAIRO_SURFACE_TYPE_PS() {
        return (int)2L;
    }
    public static int CAIRO_SURFACE_TYPE_XLIB() {
        return (int)3L;
    }
    public static int CAIRO_SURFACE_TYPE_XCB() {
        return (int)4L;
    }
    public static int CAIRO_SURFACE_TYPE_GLITZ() {
        return (int)5L;
    }
    public static int CAIRO_SURFACE_TYPE_QUARTZ() {
        return (int)6L;
    }
    public static int CAIRO_SURFACE_TYPE_WIN32() {
        return (int)7L;
    }
    public static int CAIRO_SURFACE_TYPE_BEOS() {
        return (int)8L;
    }
    public static int CAIRO_SURFACE_TYPE_DIRECTFB() {
        return (int)9L;
    }
    public static int CAIRO_SURFACE_TYPE_SVG() {
        return (int)10L;
    }
    public static int CAIRO_SURFACE_TYPE_OS2() {
        return (int)11L;
    }
    public static int CAIRO_SURFACE_TYPE_WIN32_PRINTING() {
        return (int)12L;
    }
    public static int CAIRO_SURFACE_TYPE_QUARTZ_IMAGE() {
        return (int)13L;
    }
    public static int CAIRO_SURFACE_TYPE_SCRIPT() {
        return (int)14L;
    }
    public static int CAIRO_SURFACE_TYPE_QT() {
        return (int)15L;
    }
    public static int CAIRO_SURFACE_TYPE_RECORDING() {
        return (int)16L;
    }
    public static int CAIRO_SURFACE_TYPE_VG() {
        return (int)17L;
    }
    public static int CAIRO_SURFACE_TYPE_GL() {
        return (int)18L;
    }
    public static int CAIRO_SURFACE_TYPE_DRM() {
        return (int)19L;
    }
    public static int CAIRO_SURFACE_TYPE_TEE() {
        return (int)20L;
    }
    public static int CAIRO_SURFACE_TYPE_XML() {
        return (int)21L;
    }
    public static int CAIRO_SURFACE_TYPE_SKIA() {
        return (int)22L;
    }
    public static int CAIRO_SURFACE_TYPE_SUBSURFACE() {
        return (int)23L;
    }
    public static int CAIRO_SURFACE_TYPE_COGL() {
        return (int)24L;
    }
    public static MethodHandle cairo_surface_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1116.cairo_surface_get_type$MH,"cairo_surface_get_type");
    }
    public static int cairo_surface_get_type ( Addressable surface) {
        var mh$ = cairo_surface_get_type$MH();
        try {
            return (int)mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_get_content$MH() {
        return RuntimeHelper.requireNonNull(constants$1116.cairo_surface_get_content$MH,"cairo_surface_get_content");
    }
    public static int cairo_surface_get_content ( Addressable surface) {
        var mh$ = cairo_surface_get_content$MH();
        try {
            return (int)mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_write_to_png$MH() {
        return RuntimeHelper.requireNonNull(constants$1116.cairo_surface_write_to_png$MH,"cairo_surface_write_to_png");
    }
    public static int cairo_surface_write_to_png ( Addressable surface,  Addressable filename) {
        var mh$ = cairo_surface_write_to_png$MH();
        try {
            return (int)mh$.invokeExact(surface, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_write_to_png_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$1116.cairo_surface_write_to_png_stream$MH,"cairo_surface_write_to_png_stream");
    }
    public static int cairo_surface_write_to_png_stream ( Addressable surface,  Addressable write_func,  Addressable closure) {
        var mh$ = cairo_surface_write_to_png_stream$MH();
        try {
            return (int)mh$.invokeExact(surface, write_func, closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_get_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1116.cairo_surface_get_user_data$MH,"cairo_surface_get_user_data");
    }
    public static MemoryAddress cairo_surface_get_user_data ( Addressable surface,  Addressable key) {
        var mh$ = cairo_surface_get_user_data$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(surface, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_set_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1117.cairo_surface_set_user_data$MH,"cairo_surface_set_user_data");
    }
    public static int cairo_surface_set_user_data ( Addressable surface,  Addressable key,  Addressable user_data,  Addressable destroy) {
        var mh$ = cairo_surface_set_user_data$MH();
        try {
            return (int)mh$.invokeExact(surface, key, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_get_mime_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1117.cairo_surface_get_mime_data$MH,"cairo_surface_get_mime_data");
    }
    public static void cairo_surface_get_mime_data ( Addressable surface,  Addressable mime_type,  Addressable data,  Addressable length) {
        var mh$ = cairo_surface_get_mime_data$MH();
        try {
            mh$.invokeExact(surface, mime_type, data, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_set_mime_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1117.cairo_surface_set_mime_data$MH,"cairo_surface_set_mime_data");
    }
    public static int cairo_surface_set_mime_data ( Addressable surface,  Addressable mime_type,  Addressable data,  long length,  Addressable destroy,  Addressable closure) {
        var mh$ = cairo_surface_set_mime_data$MH();
        try {
            return (int)mh$.invokeExact(surface, mime_type, data, length, destroy, closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_supports_mime_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1117.cairo_surface_supports_mime_type$MH,"cairo_surface_supports_mime_type");
    }
    public static int cairo_surface_supports_mime_type ( Addressable surface,  Addressable mime_type) {
        var mh$ = cairo_surface_supports_mime_type$MH();
        try {
            return (int)mh$.invokeExact(surface, mime_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_get_font_options$MH() {
        return RuntimeHelper.requireNonNull(constants$1117.cairo_surface_get_font_options$MH,"cairo_surface_get_font_options");
    }
    public static void cairo_surface_get_font_options ( Addressable surface,  Addressable options) {
        var mh$ = cairo_surface_get_font_options$MH();
        try {
            mh$.invokeExact(surface, options);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_flush$MH() {
        return RuntimeHelper.requireNonNull(constants$1117.cairo_surface_flush$MH,"cairo_surface_flush");
    }
    public static void cairo_surface_flush ( Addressable surface) {
        var mh$ = cairo_surface_flush$MH();
        try {
            mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_mark_dirty$MH() {
        return RuntimeHelper.requireNonNull(constants$1118.cairo_surface_mark_dirty$MH,"cairo_surface_mark_dirty");
    }
    public static void cairo_surface_mark_dirty ( Addressable surface) {
        var mh$ = cairo_surface_mark_dirty$MH();
        try {
            mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_mark_dirty_rectangle$MH() {
        return RuntimeHelper.requireNonNull(constants$1118.cairo_surface_mark_dirty_rectangle$MH,"cairo_surface_mark_dirty_rectangle");
    }
    public static void cairo_surface_mark_dirty_rectangle ( Addressable surface,  int x,  int y,  int width,  int height) {
        var mh$ = cairo_surface_mark_dirty_rectangle$MH();
        try {
            mh$.invokeExact(surface, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_set_device_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$1118.cairo_surface_set_device_scale$MH,"cairo_surface_set_device_scale");
    }
    public static void cairo_surface_set_device_scale ( Addressable surface,  double x_scale,  double y_scale) {
        var mh$ = cairo_surface_set_device_scale$MH();
        try {
            mh$.invokeExact(surface, x_scale, y_scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_get_device_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$1118.cairo_surface_get_device_scale$MH,"cairo_surface_get_device_scale");
    }
    public static void cairo_surface_get_device_scale ( Addressable surface,  Addressable x_scale,  Addressable y_scale) {
        var mh$ = cairo_surface_get_device_scale$MH();
        try {
            mh$.invokeExact(surface, x_scale, y_scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_set_device_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1118.cairo_surface_set_device_offset$MH,"cairo_surface_set_device_offset");
    }
    public static void cairo_surface_set_device_offset ( Addressable surface,  double x_offset,  double y_offset) {
        var mh$ = cairo_surface_set_device_offset$MH();
        try {
            mh$.invokeExact(surface, x_offset, y_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_get_device_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1118.cairo_surface_get_device_offset$MH,"cairo_surface_get_device_offset");
    }
    public static void cairo_surface_get_device_offset ( Addressable surface,  Addressable x_offset,  Addressable y_offset) {
        var mh$ = cairo_surface_get_device_offset$MH();
        try {
            mh$.invokeExact(surface, x_offset, y_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_set_fallback_resolution$MH() {
        return RuntimeHelper.requireNonNull(constants$1119.cairo_surface_set_fallback_resolution$MH,"cairo_surface_set_fallback_resolution");
    }
    public static void cairo_surface_set_fallback_resolution ( Addressable surface,  double x_pixels_per_inch,  double y_pixels_per_inch) {
        var mh$ = cairo_surface_set_fallback_resolution$MH();
        try {
            mh$.invokeExact(surface, x_pixels_per_inch, y_pixels_per_inch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_get_fallback_resolution$MH() {
        return RuntimeHelper.requireNonNull(constants$1119.cairo_surface_get_fallback_resolution$MH,"cairo_surface_get_fallback_resolution");
    }
    public static void cairo_surface_get_fallback_resolution ( Addressable surface,  Addressable x_pixels_per_inch,  Addressable y_pixels_per_inch) {
        var mh$ = cairo_surface_get_fallback_resolution$MH();
        try {
            mh$.invokeExact(surface, x_pixels_per_inch, y_pixels_per_inch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_copy_page$MH() {
        return RuntimeHelper.requireNonNull(constants$1119.cairo_surface_copy_page$MH,"cairo_surface_copy_page");
    }
    public static void cairo_surface_copy_page ( Addressable surface) {
        var mh$ = cairo_surface_copy_page$MH();
        try {
            mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_show_page$MH() {
        return RuntimeHelper.requireNonNull(constants$1119.cairo_surface_show_page$MH,"cairo_surface_show_page");
    }
    public static void cairo_surface_show_page ( Addressable surface) {
        var mh$ = cairo_surface_show_page$MH();
        try {
            mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_has_show_text_glyphs$MH() {
        return RuntimeHelper.requireNonNull(constants$1119.cairo_surface_has_show_text_glyphs$MH,"cairo_surface_has_show_text_glyphs");
    }
    public static int cairo_surface_has_show_text_glyphs ( Addressable surface) {
        var mh$ = cairo_surface_has_show_text_glyphs$MH();
        try {
            return (int)mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_image_surface_create$MH() {
        return RuntimeHelper.requireNonNull(constants$1119.cairo_image_surface_create$MH,"cairo_image_surface_create");
    }
    public static MemoryAddress cairo_image_surface_create ( int format,  int width,  int height) {
        var mh$ = cairo_image_surface_create$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(format, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_format_stride_for_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1120.cairo_format_stride_for_width$MH,"cairo_format_stride_for_width");
    }
    public static int cairo_format_stride_for_width ( int format,  int width) {
        var mh$ = cairo_format_stride_for_width$MH();
        try {
            return (int)mh$.invokeExact(format, width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_image_surface_create_for_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1120.cairo_image_surface_create_for_data$MH,"cairo_image_surface_create_for_data");
    }
    public static MemoryAddress cairo_image_surface_create_for_data ( Addressable data,  int format,  int width,  int height,  int stride) {
        var mh$ = cairo_image_surface_create_for_data$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(data, format, width, height, stride);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_image_surface_get_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1120.cairo_image_surface_get_data$MH,"cairo_image_surface_get_data");
    }
    public static MemoryAddress cairo_image_surface_get_data ( Addressable surface) {
        var mh$ = cairo_image_surface_get_data$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_image_surface_get_format$MH() {
        return RuntimeHelper.requireNonNull(constants$1120.cairo_image_surface_get_format$MH,"cairo_image_surface_get_format");
    }
    public static int cairo_image_surface_get_format ( Addressable surface) {
        var mh$ = cairo_image_surface_get_format$MH();
        try {
            return (int)mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_image_surface_get_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1120.cairo_image_surface_get_width$MH,"cairo_image_surface_get_width");
    }
    public static int cairo_image_surface_get_width ( Addressable surface) {
        var mh$ = cairo_image_surface_get_width$MH();
        try {
            return (int)mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_image_surface_get_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1120.cairo_image_surface_get_height$MH,"cairo_image_surface_get_height");
    }
    public static int cairo_image_surface_get_height ( Addressable surface) {
        var mh$ = cairo_image_surface_get_height$MH();
        try {
            return (int)mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_image_surface_get_stride$MH() {
        return RuntimeHelper.requireNonNull(constants$1121.cairo_image_surface_get_stride$MH,"cairo_image_surface_get_stride");
    }
    public static int cairo_image_surface_get_stride ( Addressable surface) {
        var mh$ = cairo_image_surface_get_stride$MH();
        try {
            return (int)mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_image_surface_create_from_png$MH() {
        return RuntimeHelper.requireNonNull(constants$1121.cairo_image_surface_create_from_png$MH,"cairo_image_surface_create_from_png");
    }
    public static MemoryAddress cairo_image_surface_create_from_png ( Addressable filename) {
        var mh$ = cairo_image_surface_create_from_png$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_image_surface_create_from_png_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$1121.cairo_image_surface_create_from_png_stream$MH,"cairo_image_surface_create_from_png_stream");
    }
    public static MemoryAddress cairo_image_surface_create_from_png_stream ( Addressable read_func,  Addressable closure) {
        var mh$ = cairo_image_surface_create_from_png_stream$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(read_func, closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_recording_surface_create$MH() {
        return RuntimeHelper.requireNonNull(constants$1121.cairo_recording_surface_create$MH,"cairo_recording_surface_create");
    }
    public static MemoryAddress cairo_recording_surface_create ( int content,  Addressable extents) {
        var mh$ = cairo_recording_surface_create$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(content, extents);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_recording_surface_ink_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1121.cairo_recording_surface_ink_extents$MH,"cairo_recording_surface_ink_extents");
    }
    public static void cairo_recording_surface_ink_extents ( Addressable surface,  Addressable x0,  Addressable y0,  Addressable width,  Addressable height) {
        var mh$ = cairo_recording_surface_ink_extents$MH();
        try {
            mh$.invokeExact(surface, x0, y0, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_recording_surface_get_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1121.cairo_recording_surface_get_extents$MH,"cairo_recording_surface_get_extents");
    }
    public static int cairo_recording_surface_get_extents ( Addressable surface,  Addressable extents) {
        var mh$ = cairo_recording_surface_get_extents$MH();
        try {
            return (int)mh$.invokeExact(surface, extents);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_create_raster_source$MH() {
        return RuntimeHelper.requireNonNull(constants$1123.cairo_pattern_create_raster_source$MH,"cairo_pattern_create_raster_source");
    }
    public static MemoryAddress cairo_pattern_create_raster_source ( Addressable user_data,  int content,  int width,  int height) {
        var mh$ = cairo_pattern_create_raster_source$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(user_data, content, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_raster_source_pattern_set_callback_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1123.cairo_raster_source_pattern_set_callback_data$MH,"cairo_raster_source_pattern_set_callback_data");
    }
    public static void cairo_raster_source_pattern_set_callback_data ( Addressable pattern,  Addressable data) {
        var mh$ = cairo_raster_source_pattern_set_callback_data$MH();
        try {
            mh$.invokeExact(pattern, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_raster_source_pattern_get_callback_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1124.cairo_raster_source_pattern_get_callback_data$MH,"cairo_raster_source_pattern_get_callback_data");
    }
    public static MemoryAddress cairo_raster_source_pattern_get_callback_data ( Addressable pattern) {
        var mh$ = cairo_raster_source_pattern_get_callback_data$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_raster_source_pattern_set_acquire$MH() {
        return RuntimeHelper.requireNonNull(constants$1124.cairo_raster_source_pattern_set_acquire$MH,"cairo_raster_source_pattern_set_acquire");
    }
    public static void cairo_raster_source_pattern_set_acquire ( Addressable pattern,  Addressable acquire,  Addressable release) {
        var mh$ = cairo_raster_source_pattern_set_acquire$MH();
        try {
            mh$.invokeExact(pattern, acquire, release);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_raster_source_pattern_get_acquire$MH() {
        return RuntimeHelper.requireNonNull(constants$1124.cairo_raster_source_pattern_get_acquire$MH,"cairo_raster_source_pattern_get_acquire");
    }
    public static void cairo_raster_source_pattern_get_acquire ( Addressable pattern,  Addressable acquire,  Addressable release) {
        var mh$ = cairo_raster_source_pattern_get_acquire$MH();
        try {
            mh$.invokeExact(pattern, acquire, release);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_raster_source_pattern_set_snapshot$MH() {
        return RuntimeHelper.requireNonNull(constants$1124.cairo_raster_source_pattern_set_snapshot$MH,"cairo_raster_source_pattern_set_snapshot");
    }
    public static void cairo_raster_source_pattern_set_snapshot ( Addressable pattern,  Addressable snapshot) {
        var mh$ = cairo_raster_source_pattern_set_snapshot$MH();
        try {
            mh$.invokeExact(pattern, snapshot);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_raster_source_pattern_get_snapshot$MH() {
        return RuntimeHelper.requireNonNull(constants$1124.cairo_raster_source_pattern_get_snapshot$MH,"cairo_raster_source_pattern_get_snapshot");
    }
    public static MemoryAddress cairo_raster_source_pattern_get_snapshot ( Addressable pattern) {
        var mh$ = cairo_raster_source_pattern_get_snapshot$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_raster_source_pattern_set_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1124.cairo_raster_source_pattern_set_copy$MH,"cairo_raster_source_pattern_set_copy");
    }
    public static void cairo_raster_source_pattern_set_copy ( Addressable pattern,  Addressable copy) {
        var mh$ = cairo_raster_source_pattern_set_copy$MH();
        try {
            mh$.invokeExact(pattern, copy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_raster_source_pattern_get_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1125.cairo_raster_source_pattern_get_copy$MH,"cairo_raster_source_pattern_get_copy");
    }
    public static MemoryAddress cairo_raster_source_pattern_get_copy ( Addressable pattern) {
        var mh$ = cairo_raster_source_pattern_get_copy$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_raster_source_pattern_set_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1125.cairo_raster_source_pattern_set_finish$MH,"cairo_raster_source_pattern_set_finish");
    }
    public static void cairo_raster_source_pattern_set_finish ( Addressable pattern,  Addressable finish) {
        var mh$ = cairo_raster_source_pattern_set_finish$MH();
        try {
            mh$.invokeExact(pattern, finish);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_raster_source_pattern_get_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1125.cairo_raster_source_pattern_get_finish$MH,"cairo_raster_source_pattern_get_finish");
    }
    public static MemoryAddress cairo_raster_source_pattern_get_finish ( Addressable pattern) {
        var mh$ = cairo_raster_source_pattern_get_finish$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_create_rgb$MH() {
        return RuntimeHelper.requireNonNull(constants$1125.cairo_pattern_create_rgb$MH,"cairo_pattern_create_rgb");
    }
    public static MemoryAddress cairo_pattern_create_rgb ( double red,  double green,  double blue) {
        var mh$ = cairo_pattern_create_rgb$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(red, green, blue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_create_rgba$MH() {
        return RuntimeHelper.requireNonNull(constants$1125.cairo_pattern_create_rgba$MH,"cairo_pattern_create_rgba");
    }
    public static MemoryAddress cairo_pattern_create_rgba ( double red,  double green,  double blue,  double alpha) {
        var mh$ = cairo_pattern_create_rgba$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(red, green, blue, alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_create_for_surface$MH() {
        return RuntimeHelper.requireNonNull(constants$1125.cairo_pattern_create_for_surface$MH,"cairo_pattern_create_for_surface");
    }
    public static MemoryAddress cairo_pattern_create_for_surface ( Addressable surface) {
        var mh$ = cairo_pattern_create_for_surface$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_create_linear$MH() {
        return RuntimeHelper.requireNonNull(constants$1126.cairo_pattern_create_linear$MH,"cairo_pattern_create_linear");
    }
    public static MemoryAddress cairo_pattern_create_linear ( double x0,  double y0,  double x1,  double y1) {
        var mh$ = cairo_pattern_create_linear$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(x0, y0, x1, y1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_create_radial$MH() {
        return RuntimeHelper.requireNonNull(constants$1126.cairo_pattern_create_radial$MH,"cairo_pattern_create_radial");
    }
    public static MemoryAddress cairo_pattern_create_radial ( double cx0,  double cy0,  double radius0,  double cx1,  double cy1,  double radius1) {
        var mh$ = cairo_pattern_create_radial$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(cx0, cy0, radius0, cx1, cy1, radius1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_create_mesh$MH() {
        return RuntimeHelper.requireNonNull(constants$1126.cairo_pattern_create_mesh$MH,"cairo_pattern_create_mesh");
    }
    public static MemoryAddress cairo_pattern_create_mesh () {
        var mh$ = cairo_pattern_create_mesh$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_reference$MH() {
        return RuntimeHelper.requireNonNull(constants$1126.cairo_pattern_reference$MH,"cairo_pattern_reference");
    }
    public static MemoryAddress cairo_pattern_reference ( Addressable pattern) {
        var mh$ = cairo_pattern_reference$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$1126.cairo_pattern_destroy$MH,"cairo_pattern_destroy");
    }
    public static void cairo_pattern_destroy ( Addressable pattern) {
        var mh$ = cairo_pattern_destroy$MH();
        try {
            mh$.invokeExact(pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_get_reference_count$MH() {
        return RuntimeHelper.requireNonNull(constants$1126.cairo_pattern_get_reference_count$MH,"cairo_pattern_get_reference_count");
    }
    public static int cairo_pattern_get_reference_count ( Addressable pattern) {
        var mh$ = cairo_pattern_get_reference_count$MH();
        try {
            return (int)mh$.invokeExact(pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_status$MH() {
        return RuntimeHelper.requireNonNull(constants$1127.cairo_pattern_status$MH,"cairo_pattern_status");
    }
    public static int cairo_pattern_status ( Addressable pattern) {
        var mh$ = cairo_pattern_status$MH();
        try {
            return (int)mh$.invokeExact(pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_get_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1127.cairo_pattern_get_user_data$MH,"cairo_pattern_get_user_data");
    }
    public static MemoryAddress cairo_pattern_get_user_data ( Addressable pattern,  Addressable key) {
        var mh$ = cairo_pattern_get_user_data$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pattern, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_set_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1127.cairo_pattern_set_user_data$MH,"cairo_pattern_set_user_data");
    }
    public static int cairo_pattern_set_user_data ( Addressable pattern,  Addressable key,  Addressable user_data,  Addressable destroy) {
        var mh$ = cairo_pattern_set_user_data$MH();
        try {
            return (int)mh$.invokeExact(pattern, key, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int CAIRO_PATTERN_TYPE_SOLID() {
        return (int)0L;
    }
    public static int CAIRO_PATTERN_TYPE_SURFACE() {
        return (int)1L;
    }
    public static int CAIRO_PATTERN_TYPE_LINEAR() {
        return (int)2L;
    }
    public static int CAIRO_PATTERN_TYPE_RADIAL() {
        return (int)3L;
    }
    public static int CAIRO_PATTERN_TYPE_MESH() {
        return (int)4L;
    }
    public static int CAIRO_PATTERN_TYPE_RASTER_SOURCE() {
        return (int)5L;
    }
    public static MethodHandle cairo_pattern_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1127.cairo_pattern_get_type$MH,"cairo_pattern_get_type");
    }
    public static int cairo_pattern_get_type ( Addressable pattern) {
        var mh$ = cairo_pattern_get_type$MH();
        try {
            return (int)mh$.invokeExact(pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_add_color_stop_rgb$MH() {
        return RuntimeHelper.requireNonNull(constants$1127.cairo_pattern_add_color_stop_rgb$MH,"cairo_pattern_add_color_stop_rgb");
    }
    public static void cairo_pattern_add_color_stop_rgb ( Addressable pattern,  double offset,  double red,  double green,  double blue) {
        var mh$ = cairo_pattern_add_color_stop_rgb$MH();
        try {
            mh$.invokeExact(pattern, offset, red, green, blue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_add_color_stop_rgba$MH() {
        return RuntimeHelper.requireNonNull(constants$1127.cairo_pattern_add_color_stop_rgba$MH,"cairo_pattern_add_color_stop_rgba");
    }
    public static void cairo_pattern_add_color_stop_rgba ( Addressable pattern,  double offset,  double red,  double green,  double blue,  double alpha) {
        var mh$ = cairo_pattern_add_color_stop_rgba$MH();
        try {
            mh$.invokeExact(pattern, offset, red, green, blue, alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_mesh_pattern_begin_patch$MH() {
        return RuntimeHelper.requireNonNull(constants$1128.cairo_mesh_pattern_begin_patch$MH,"cairo_mesh_pattern_begin_patch");
    }
    public static void cairo_mesh_pattern_begin_patch ( Addressable pattern) {
        var mh$ = cairo_mesh_pattern_begin_patch$MH();
        try {
            mh$.invokeExact(pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_mesh_pattern_end_patch$MH() {
        return RuntimeHelper.requireNonNull(constants$1128.cairo_mesh_pattern_end_patch$MH,"cairo_mesh_pattern_end_patch");
    }
    public static void cairo_mesh_pattern_end_patch ( Addressable pattern) {
        var mh$ = cairo_mesh_pattern_end_patch$MH();
        try {
            mh$.invokeExact(pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_mesh_pattern_curve_to$MH() {
        return RuntimeHelper.requireNonNull(constants$1128.cairo_mesh_pattern_curve_to$MH,"cairo_mesh_pattern_curve_to");
    }
    public static void cairo_mesh_pattern_curve_to ( Addressable pattern,  double x1,  double y1,  double x2,  double y2,  double x3,  double y3) {
        var mh$ = cairo_mesh_pattern_curve_to$MH();
        try {
            mh$.invokeExact(pattern, x1, y1, x2, y2, x3, y3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_mesh_pattern_line_to$MH() {
        return RuntimeHelper.requireNonNull(constants$1128.cairo_mesh_pattern_line_to$MH,"cairo_mesh_pattern_line_to");
    }
    public static void cairo_mesh_pattern_line_to ( Addressable pattern,  double x,  double y) {
        var mh$ = cairo_mesh_pattern_line_to$MH();
        try {
            mh$.invokeExact(pattern, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_mesh_pattern_move_to$MH() {
        return RuntimeHelper.requireNonNull(constants$1128.cairo_mesh_pattern_move_to$MH,"cairo_mesh_pattern_move_to");
    }
    public static void cairo_mesh_pattern_move_to ( Addressable pattern,  double x,  double y) {
        var mh$ = cairo_mesh_pattern_move_to$MH();
        try {
            mh$.invokeExact(pattern, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_mesh_pattern_set_control_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1128.cairo_mesh_pattern_set_control_point$MH,"cairo_mesh_pattern_set_control_point");
    }
    public static void cairo_mesh_pattern_set_control_point ( Addressable pattern,  int point_num,  double x,  double y) {
        var mh$ = cairo_mesh_pattern_set_control_point$MH();
        try {
            mh$.invokeExact(pattern, point_num, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_mesh_pattern_set_corner_color_rgb$MH() {
        return RuntimeHelper.requireNonNull(constants$1129.cairo_mesh_pattern_set_corner_color_rgb$MH,"cairo_mesh_pattern_set_corner_color_rgb");
    }
    public static void cairo_mesh_pattern_set_corner_color_rgb ( Addressable pattern,  int corner_num,  double red,  double green,  double blue) {
        var mh$ = cairo_mesh_pattern_set_corner_color_rgb$MH();
        try {
            mh$.invokeExact(pattern, corner_num, red, green, blue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_mesh_pattern_set_corner_color_rgba$MH() {
        return RuntimeHelper.requireNonNull(constants$1129.cairo_mesh_pattern_set_corner_color_rgba$MH,"cairo_mesh_pattern_set_corner_color_rgba");
    }
    public static void cairo_mesh_pattern_set_corner_color_rgba ( Addressable pattern,  int corner_num,  double red,  double green,  double blue,  double alpha) {
        var mh$ = cairo_mesh_pattern_set_corner_color_rgba$MH();
        try {
            mh$.invokeExact(pattern, corner_num, red, green, blue, alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_set_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$1129.cairo_pattern_set_matrix$MH,"cairo_pattern_set_matrix");
    }
    public static void cairo_pattern_set_matrix ( Addressable pattern,  Addressable matrix) {
        var mh$ = cairo_pattern_set_matrix$MH();
        try {
            mh$.invokeExact(pattern, matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_get_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$1129.cairo_pattern_get_matrix$MH,"cairo_pattern_get_matrix");
    }
    public static void cairo_pattern_get_matrix ( Addressable pattern,  Addressable matrix) {
        var mh$ = cairo_pattern_get_matrix$MH();
        try {
            mh$.invokeExact(pattern, matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int CAIRO_EXTEND_NONE() {
        return (int)0L;
    }
    public static int CAIRO_EXTEND_REPEAT() {
        return (int)1L;
    }
    public static int CAIRO_EXTEND_REFLECT() {
        return (int)2L;
    }
    public static int CAIRO_EXTEND_PAD() {
        return (int)3L;
    }
    public static MethodHandle cairo_pattern_set_extend$MH() {
        return RuntimeHelper.requireNonNull(constants$1129.cairo_pattern_set_extend$MH,"cairo_pattern_set_extend");
    }
    public static void cairo_pattern_set_extend ( Addressable pattern,  int extend) {
        var mh$ = cairo_pattern_set_extend$MH();
        try {
            mh$.invokeExact(pattern, extend);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_get_extend$MH() {
        return RuntimeHelper.requireNonNull(constants$1129.cairo_pattern_get_extend$MH,"cairo_pattern_get_extend");
    }
    public static int cairo_pattern_get_extend ( Addressable pattern) {
        var mh$ = cairo_pattern_get_extend$MH();
        try {
            return (int)mh$.invokeExact(pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int CAIRO_FILTER_FAST() {
        return (int)0L;
    }
    public static int CAIRO_FILTER_GOOD() {
        return (int)1L;
    }
    public static int CAIRO_FILTER_BEST() {
        return (int)2L;
    }
    public static int CAIRO_FILTER_NEAREST() {
        return (int)3L;
    }
    public static int CAIRO_FILTER_BILINEAR() {
        return (int)4L;
    }
    public static int CAIRO_FILTER_GAUSSIAN() {
        return (int)5L;
    }
    public static MethodHandle cairo_pattern_set_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$1130.cairo_pattern_set_filter$MH,"cairo_pattern_set_filter");
    }
    public static void cairo_pattern_set_filter ( Addressable pattern,  int filter) {
        var mh$ = cairo_pattern_set_filter$MH();
        try {
            mh$.invokeExact(pattern, filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_get_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$1130.cairo_pattern_get_filter$MH,"cairo_pattern_get_filter");
    }
    public static int cairo_pattern_get_filter ( Addressable pattern) {
        var mh$ = cairo_pattern_get_filter$MH();
        try {
            return (int)mh$.invokeExact(pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_get_rgba$MH() {
        return RuntimeHelper.requireNonNull(constants$1130.cairo_pattern_get_rgba$MH,"cairo_pattern_get_rgba");
    }
    public static int cairo_pattern_get_rgba ( Addressable pattern,  Addressable red,  Addressable green,  Addressable blue,  Addressable alpha) {
        var mh$ = cairo_pattern_get_rgba$MH();
        try {
            return (int)mh$.invokeExact(pattern, red, green, blue, alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_get_surface$MH() {
        return RuntimeHelper.requireNonNull(constants$1130.cairo_pattern_get_surface$MH,"cairo_pattern_get_surface");
    }
    public static int cairo_pattern_get_surface ( Addressable pattern,  Addressable surface) {
        var mh$ = cairo_pattern_get_surface$MH();
        try {
            return (int)mh$.invokeExact(pattern, surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_get_color_stop_rgba$MH() {
        return RuntimeHelper.requireNonNull(constants$1130.cairo_pattern_get_color_stop_rgba$MH,"cairo_pattern_get_color_stop_rgba");
    }
    public static int cairo_pattern_get_color_stop_rgba ( Addressable pattern,  int index,  Addressable offset,  Addressable red,  Addressable green,  Addressable blue,  Addressable alpha) {
        var mh$ = cairo_pattern_get_color_stop_rgba$MH();
        try {
            return (int)mh$.invokeExact(pattern, index, offset, red, green, blue, alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_get_color_stop_count$MH() {
        return RuntimeHelper.requireNonNull(constants$1130.cairo_pattern_get_color_stop_count$MH,"cairo_pattern_get_color_stop_count");
    }
    public static int cairo_pattern_get_color_stop_count ( Addressable pattern,  Addressable count) {
        var mh$ = cairo_pattern_get_color_stop_count$MH();
        try {
            return (int)mh$.invokeExact(pattern, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_get_linear_points$MH() {
        return RuntimeHelper.requireNonNull(constants$1131.cairo_pattern_get_linear_points$MH,"cairo_pattern_get_linear_points");
    }
    public static int cairo_pattern_get_linear_points ( Addressable pattern,  Addressable x0,  Addressable y0,  Addressable x1,  Addressable y1) {
        var mh$ = cairo_pattern_get_linear_points$MH();
        try {
            return (int)mh$.invokeExact(pattern, x0, y0, x1, y1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_get_radial_circles$MH() {
        return RuntimeHelper.requireNonNull(constants$1131.cairo_pattern_get_radial_circles$MH,"cairo_pattern_get_radial_circles");
    }
    public static int cairo_pattern_get_radial_circles ( Addressable pattern,  Addressable x0,  Addressable y0,  Addressable r0,  Addressable x1,  Addressable y1,  Addressable r1) {
        var mh$ = cairo_pattern_get_radial_circles$MH();
        try {
            return (int)mh$.invokeExact(pattern, x0, y0, r0, x1, y1, r1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_mesh_pattern_get_patch_count$MH() {
        return RuntimeHelper.requireNonNull(constants$1131.cairo_mesh_pattern_get_patch_count$MH,"cairo_mesh_pattern_get_patch_count");
    }
    public static int cairo_mesh_pattern_get_patch_count ( Addressable pattern,  Addressable count) {
        var mh$ = cairo_mesh_pattern_get_patch_count$MH();
        try {
            return (int)mh$.invokeExact(pattern, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_mesh_pattern_get_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1131.cairo_mesh_pattern_get_path$MH,"cairo_mesh_pattern_get_path");
    }
    public static MemoryAddress cairo_mesh_pattern_get_path ( Addressable pattern,  int patch_num) {
        var mh$ = cairo_mesh_pattern_get_path$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pattern, patch_num);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_mesh_pattern_get_corner_color_rgba$MH() {
        return RuntimeHelper.requireNonNull(constants$1131.cairo_mesh_pattern_get_corner_color_rgba$MH,"cairo_mesh_pattern_get_corner_color_rgba");
    }
    public static int cairo_mesh_pattern_get_corner_color_rgba ( Addressable pattern,  int patch_num,  int corner_num,  Addressable red,  Addressable green,  Addressable blue,  Addressable alpha) {
        var mh$ = cairo_mesh_pattern_get_corner_color_rgba$MH();
        try {
            return (int)mh$.invokeExact(pattern, patch_num, corner_num, red, green, blue, alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_mesh_pattern_get_control_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1131.cairo_mesh_pattern_get_control_point$MH,"cairo_mesh_pattern_get_control_point");
    }
    public static int cairo_mesh_pattern_get_control_point ( Addressable pattern,  int patch_num,  int point_num,  Addressable x,  Addressable y) {
        var mh$ = cairo_mesh_pattern_get_control_point$MH();
        try {
            return (int)mh$.invokeExact(pattern, patch_num, point_num, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_matrix_init$MH() {
        return RuntimeHelper.requireNonNull(constants$1132.cairo_matrix_init$MH,"cairo_matrix_init");
    }
    public static void cairo_matrix_init ( Addressable matrix,  double xx,  double yx,  double xy,  double yy,  double x0,  double y0) {
        var mh$ = cairo_matrix_init$MH();
        try {
            mh$.invokeExact(matrix, xx, yx, xy, yy, x0, y0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_matrix_init_identity$MH() {
        return RuntimeHelper.requireNonNull(constants$1132.cairo_matrix_init_identity$MH,"cairo_matrix_init_identity");
    }
    public static void cairo_matrix_init_identity ( Addressable matrix) {
        var mh$ = cairo_matrix_init_identity$MH();
        try {
            mh$.invokeExact(matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


