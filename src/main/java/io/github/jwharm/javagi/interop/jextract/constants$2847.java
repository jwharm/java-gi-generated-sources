// Generated by jextract

package io.github.jwharm.javagi.interop.jextract;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$2847 {

    static final FunctionDescriptor adw_tab_bar_set_inverted$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle adw_tab_bar_set_inverted$MH = RuntimeHelper.downcallHandle(
        "adw_tab_bar_set_inverted",
        constants$2847.adw_tab_bar_set_inverted$FUNC
    );
    static final FunctionDescriptor adw_tab_bar_setup_extra_drop_target$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle adw_tab_bar_setup_extra_drop_target$MH = RuntimeHelper.downcallHandle(
        "adw_tab_bar_setup_extra_drop_target",
        constants$2847.adw_tab_bar_setup_extra_drop_target$FUNC
    );
    static final FunctionDescriptor adw_tab_bar_get_is_overflowing$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle adw_tab_bar_get_is_overflowing$MH = RuntimeHelper.downcallHandle(
        "adw_tab_bar_get_is_overflowing",
        constants$2847.adw_tab_bar_get_is_overflowing$FUNC
    );
    static final FunctionDescriptor adw_timed_animation_get_type$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT);
    static final MethodHandle adw_timed_animation_get_type$MH = RuntimeHelper.downcallHandle(
        "adw_timed_animation_get_type",
        constants$2847.adw_timed_animation_get_type$FUNC
    );
    static final FunctionDescriptor glib_autoptr_clear_AdwTimedAnimation$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glib_autoptr_clear_AdwTimedAnimation$MH = RuntimeHelper.downcallHandle(
        "glib_autoptr_clear_AdwTimedAnimation",
        constants$2847.glib_autoptr_clear_AdwTimedAnimation$FUNC
    );
    static final FunctionDescriptor glib_autoptr_cleanup_AdwTimedAnimation$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glib_autoptr_cleanup_AdwTimedAnimation$MH = RuntimeHelper.downcallHandle(
        "glib_autoptr_cleanup_AdwTimedAnimation",
        constants$2847.glib_autoptr_cleanup_AdwTimedAnimation$FUNC
    );
}


