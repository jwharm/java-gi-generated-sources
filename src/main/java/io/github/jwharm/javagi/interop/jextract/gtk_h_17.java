// Generated by jextract

package io.github.jwharm.javagi.interop.jextract;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
 class gtk_h_17 extends gtk_h_16 {

    public static MethodHandle graphene_sphere_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$1631.graphene_sphere_equal$MH,"graphene_sphere_equal");
    }
    public static boolean graphene_sphere_equal ( Addressable a,  Addressable b) {
        var mh$ = graphene_sphere_equal$MH();
        try {
            return (boolean)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_sphere_contains_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1631.graphene_sphere_contains_point$MH,"graphene_sphere_contains_point");
    }
    public static boolean graphene_sphere_contains_point ( Addressable s,  Addressable point) {
        var mh$ = graphene_sphere_contains_point$MH();
        try {
            return (boolean)mh$.invokeExact(s, point);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_sphere_distance$MH() {
        return RuntimeHelper.requireNonNull(constants$1631.graphene_sphere_distance$MH,"graphene_sphere_distance");
    }
    public static float graphene_sphere_distance ( Addressable s,  Addressable point) {
        var mh$ = graphene_sphere_distance$MH();
        try {
            return (float)mh$.invokeExact(s, point);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_sphere_get_bounding_box$MH() {
        return RuntimeHelper.requireNonNull(constants$1631.graphene_sphere_get_bounding_box$MH,"graphene_sphere_get_bounding_box");
    }
    public static void graphene_sphere_get_bounding_box ( Addressable s,  Addressable box) {
        var mh$ = graphene_sphere_get_bounding_box$MH();
        try {
            mh$.invokeExact(s, box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_sphere_translate$MH() {
        return RuntimeHelper.requireNonNull(constants$1631.graphene_sphere_translate$MH,"graphene_sphere_translate");
    }
    public static void graphene_sphere_translate ( Addressable s,  Addressable point,  Addressable res) {
        var mh$ = graphene_sphere_translate$MH();
        try {
            mh$.invokeExact(s, point, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_box_alloc$MH() {
        return RuntimeHelper.requireNonNull(constants$1632.graphene_box_alloc$MH,"graphene_box_alloc");
    }
    public static MemoryAddress graphene_box_alloc () {
        var mh$ = graphene_box_alloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_box_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1632.graphene_box_free$MH,"graphene_box_free");
    }
    public static void graphene_box_free ( Addressable box) {
        var mh$ = graphene_box_free$MH();
        try {
            mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_box_init$MH() {
        return RuntimeHelper.requireNonNull(constants$1632.graphene_box_init$MH,"graphene_box_init");
    }
    public static MemoryAddress graphene_box_init ( Addressable box,  Addressable min,  Addressable max) {
        var mh$ = graphene_box_init$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(box, min, max);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_box_init_from_points$MH() {
        return RuntimeHelper.requireNonNull(constants$1632.graphene_box_init_from_points$MH,"graphene_box_init_from_points");
    }
    public static MemoryAddress graphene_box_init_from_points ( Addressable box,  int n_points,  Addressable points) {
        var mh$ = graphene_box_init_from_points$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(box, n_points, points);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_box_init_from_vectors$MH() {
        return RuntimeHelper.requireNonNull(constants$1632.graphene_box_init_from_vectors$MH,"graphene_box_init_from_vectors");
    }
    public static MemoryAddress graphene_box_init_from_vectors ( Addressable box,  int n_vectors,  Addressable vectors) {
        var mh$ = graphene_box_init_from_vectors$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(box, n_vectors, vectors);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_box_init_from_box$MH() {
        return RuntimeHelper.requireNonNull(constants$1632.graphene_box_init_from_box$MH,"graphene_box_init_from_box");
    }
    public static MemoryAddress graphene_box_init_from_box ( Addressable box,  Addressable src) {
        var mh$ = graphene_box_init_from_box$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(box, src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_box_init_from_vec3$MH() {
        return RuntimeHelper.requireNonNull(constants$1633.graphene_box_init_from_vec3$MH,"graphene_box_init_from_vec3");
    }
    public static MemoryAddress graphene_box_init_from_vec3 ( Addressable box,  Addressable min,  Addressable max) {
        var mh$ = graphene_box_init_from_vec3$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(box, min, max);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_box_expand$MH() {
        return RuntimeHelper.requireNonNull(constants$1633.graphene_box_expand$MH,"graphene_box_expand");
    }
    public static void graphene_box_expand ( Addressable box,  Addressable point,  Addressable res) {
        var mh$ = graphene_box_expand$MH();
        try {
            mh$.invokeExact(box, point, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_box_expand_vec3$MH() {
        return RuntimeHelper.requireNonNull(constants$1633.graphene_box_expand_vec3$MH,"graphene_box_expand_vec3");
    }
    public static void graphene_box_expand_vec3 ( Addressable box,  Addressable vec,  Addressable res) {
        var mh$ = graphene_box_expand_vec3$MH();
        try {
            mh$.invokeExact(box, vec, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_box_expand_scalar$MH() {
        return RuntimeHelper.requireNonNull(constants$1633.graphene_box_expand_scalar$MH,"graphene_box_expand_scalar");
    }
    public static void graphene_box_expand_scalar ( Addressable box,  float scalar,  Addressable res) {
        var mh$ = graphene_box_expand_scalar$MH();
        try {
            mh$.invokeExact(box, scalar, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_box_union$MH() {
        return RuntimeHelper.requireNonNull(constants$1633.graphene_box_union$MH,"graphene_box_union");
    }
    public static void graphene_box_union ( Addressable a,  Addressable b,  Addressable res) {
        var mh$ = graphene_box_union$MH();
        try {
            mh$.invokeExact(a, b, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_box_intersection$MH() {
        return RuntimeHelper.requireNonNull(constants$1633.graphene_box_intersection$MH,"graphene_box_intersection");
    }
    public static boolean graphene_box_intersection ( Addressable a,  Addressable b,  Addressable res) {
        var mh$ = graphene_box_intersection$MH();
        try {
            return (boolean)mh$.invokeExact(a, b, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_box_get_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1634.graphene_box_get_width$MH,"graphene_box_get_width");
    }
    public static float graphene_box_get_width ( Addressable box) {
        var mh$ = graphene_box_get_width$MH();
        try {
            return (float)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_box_get_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1634.graphene_box_get_height$MH,"graphene_box_get_height");
    }
    public static float graphene_box_get_height ( Addressable box) {
        var mh$ = graphene_box_get_height$MH();
        try {
            return (float)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_box_get_depth$MH() {
        return RuntimeHelper.requireNonNull(constants$1634.graphene_box_get_depth$MH,"graphene_box_get_depth");
    }
    public static float graphene_box_get_depth ( Addressable box) {
        var mh$ = graphene_box_get_depth$MH();
        try {
            return (float)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_box_get_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1634.graphene_box_get_size$MH,"graphene_box_get_size");
    }
    public static void graphene_box_get_size ( Addressable box,  Addressable size) {
        var mh$ = graphene_box_get_size$MH();
        try {
            mh$.invokeExact(box, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_box_get_center$MH() {
        return RuntimeHelper.requireNonNull(constants$1634.graphene_box_get_center$MH,"graphene_box_get_center");
    }
    public static void graphene_box_get_center ( Addressable box,  Addressable center) {
        var mh$ = graphene_box_get_center$MH();
        try {
            mh$.invokeExact(box, center);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_box_get_min$MH() {
        return RuntimeHelper.requireNonNull(constants$1634.graphene_box_get_min$MH,"graphene_box_get_min");
    }
    public static void graphene_box_get_min ( Addressable box,  Addressable min) {
        var mh$ = graphene_box_get_min$MH();
        try {
            mh$.invokeExact(box, min);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_box_get_max$MH() {
        return RuntimeHelper.requireNonNull(constants$1635.graphene_box_get_max$MH,"graphene_box_get_max");
    }
    public static void graphene_box_get_max ( Addressable box,  Addressable max) {
        var mh$ = graphene_box_get_max$MH();
        try {
            mh$.invokeExact(box, max);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_box_get_vertices$MH() {
        return RuntimeHelper.requireNonNull(constants$1635.graphene_box_get_vertices$MH,"graphene_box_get_vertices");
    }
    public static void graphene_box_get_vertices ( Addressable box,  Addressable vertices) {
        var mh$ = graphene_box_get_vertices$MH();
        try {
            mh$.invokeExact(box, vertices);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_box_get_bounding_sphere$MH() {
        return RuntimeHelper.requireNonNull(constants$1635.graphene_box_get_bounding_sphere$MH,"graphene_box_get_bounding_sphere");
    }
    public static void graphene_box_get_bounding_sphere ( Addressable box,  Addressable sphere) {
        var mh$ = graphene_box_get_bounding_sphere$MH();
        try {
            mh$.invokeExact(box, sphere);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_box_contains_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1635.graphene_box_contains_point$MH,"graphene_box_contains_point");
    }
    public static boolean graphene_box_contains_point ( Addressable box,  Addressable point) {
        var mh$ = graphene_box_contains_point$MH();
        try {
            return (boolean)mh$.invokeExact(box, point);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_box_contains_box$MH() {
        return RuntimeHelper.requireNonNull(constants$1635.graphene_box_contains_box$MH,"graphene_box_contains_box");
    }
    public static boolean graphene_box_contains_box ( Addressable a,  Addressable b) {
        var mh$ = graphene_box_contains_box$MH();
        try {
            return (boolean)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_box_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$1635.graphene_box_equal$MH,"graphene_box_equal");
    }
    public static boolean graphene_box_equal ( Addressable a,  Addressable b) {
        var mh$ = graphene_box_equal$MH();
        try {
            return (boolean)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_box_zero$MH() {
        return RuntimeHelper.requireNonNull(constants$1636.graphene_box_zero$MH,"graphene_box_zero");
    }
    public static MemoryAddress graphene_box_zero () {
        var mh$ = graphene_box_zero$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_box_one$MH() {
        return RuntimeHelper.requireNonNull(constants$1636.graphene_box_one$MH,"graphene_box_one");
    }
    public static MemoryAddress graphene_box_one () {
        var mh$ = graphene_box_one$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_box_minus_one$MH() {
        return RuntimeHelper.requireNonNull(constants$1636.graphene_box_minus_one$MH,"graphene_box_minus_one");
    }
    public static MemoryAddress graphene_box_minus_one () {
        var mh$ = graphene_box_minus_one$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_box_one_minus_one$MH() {
        return RuntimeHelper.requireNonNull(constants$1636.graphene_box_one_minus_one$MH,"graphene_box_one_minus_one");
    }
    public static MemoryAddress graphene_box_one_minus_one () {
        var mh$ = graphene_box_one_minus_one$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_box_infinite$MH() {
        return RuntimeHelper.requireNonNull(constants$1636.graphene_box_infinite$MH,"graphene_box_infinite");
    }
    public static MemoryAddress graphene_box_infinite () {
        var mh$ = graphene_box_infinite$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_box_empty$MH() {
        return RuntimeHelper.requireNonNull(constants$1636.graphene_box_empty$MH,"graphene_box_empty");
    }
    public static MemoryAddress graphene_box_empty () {
        var mh$ = graphene_box_empty$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_triangle_alloc$MH() {
        return RuntimeHelper.requireNonNull(constants$1637.graphene_triangle_alloc$MH,"graphene_triangle_alloc");
    }
    public static MemoryAddress graphene_triangle_alloc () {
        var mh$ = graphene_triangle_alloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_triangle_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1637.graphene_triangle_free$MH,"graphene_triangle_free");
    }
    public static void graphene_triangle_free ( Addressable t) {
        var mh$ = graphene_triangle_free$MH();
        try {
            mh$.invokeExact(t);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_triangle_init_from_point3d$MH() {
        return RuntimeHelper.requireNonNull(constants$1637.graphene_triangle_init_from_point3d$MH,"graphene_triangle_init_from_point3d");
    }
    public static MemoryAddress graphene_triangle_init_from_point3d ( Addressable t,  Addressable a,  Addressable b,  Addressable c) {
        var mh$ = graphene_triangle_init_from_point3d$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(t, a, b, c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_triangle_init_from_vec3$MH() {
        return RuntimeHelper.requireNonNull(constants$1637.graphene_triangle_init_from_vec3$MH,"graphene_triangle_init_from_vec3");
    }
    public static MemoryAddress graphene_triangle_init_from_vec3 ( Addressable t,  Addressable a,  Addressable b,  Addressable c) {
        var mh$ = graphene_triangle_init_from_vec3$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(t, a, b, c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_triangle_init_from_float$MH() {
        return RuntimeHelper.requireNonNull(constants$1637.graphene_triangle_init_from_float$MH,"graphene_triangle_init_from_float");
    }
    public static MemoryAddress graphene_triangle_init_from_float ( Addressable t,  Addressable a,  Addressable b,  Addressable c) {
        var mh$ = graphene_triangle_init_from_float$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(t, a, b, c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_triangle_get_points$MH() {
        return RuntimeHelper.requireNonNull(constants$1637.graphene_triangle_get_points$MH,"graphene_triangle_get_points");
    }
    public static void graphene_triangle_get_points ( Addressable t,  Addressable a,  Addressable b,  Addressable c) {
        var mh$ = graphene_triangle_get_points$MH();
        try {
            mh$.invokeExact(t, a, b, c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_triangle_get_vertices$MH() {
        return RuntimeHelper.requireNonNull(constants$1638.graphene_triangle_get_vertices$MH,"graphene_triangle_get_vertices");
    }
    public static void graphene_triangle_get_vertices ( Addressable t,  Addressable a,  Addressable b,  Addressable c) {
        var mh$ = graphene_triangle_get_vertices$MH();
        try {
            mh$.invokeExact(t, a, b, c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_triangle_get_area$MH() {
        return RuntimeHelper.requireNonNull(constants$1638.graphene_triangle_get_area$MH,"graphene_triangle_get_area");
    }
    public static float graphene_triangle_get_area ( Addressable t) {
        var mh$ = graphene_triangle_get_area$MH();
        try {
            return (float)mh$.invokeExact(t);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_triangle_get_midpoint$MH() {
        return RuntimeHelper.requireNonNull(constants$1638.graphene_triangle_get_midpoint$MH,"graphene_triangle_get_midpoint");
    }
    public static void graphene_triangle_get_midpoint ( Addressable t,  Addressable res) {
        var mh$ = graphene_triangle_get_midpoint$MH();
        try {
            mh$.invokeExact(t, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_triangle_get_normal$MH() {
        return RuntimeHelper.requireNonNull(constants$1638.graphene_triangle_get_normal$MH,"graphene_triangle_get_normal");
    }
    public static void graphene_triangle_get_normal ( Addressable t,  Addressable res) {
        var mh$ = graphene_triangle_get_normal$MH();
        try {
            mh$.invokeExact(t, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_triangle_get_plane$MH() {
        return RuntimeHelper.requireNonNull(constants$1638.graphene_triangle_get_plane$MH,"graphene_triangle_get_plane");
    }
    public static void graphene_triangle_get_plane ( Addressable t,  Addressable res) {
        var mh$ = graphene_triangle_get_plane$MH();
        try {
            mh$.invokeExact(t, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_triangle_get_bounding_box$MH() {
        return RuntimeHelper.requireNonNull(constants$1638.graphene_triangle_get_bounding_box$MH,"graphene_triangle_get_bounding_box");
    }
    public static void graphene_triangle_get_bounding_box ( Addressable t,  Addressable res) {
        var mh$ = graphene_triangle_get_bounding_box$MH();
        try {
            mh$.invokeExact(t, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_triangle_get_barycoords$MH() {
        return RuntimeHelper.requireNonNull(constants$1639.graphene_triangle_get_barycoords$MH,"graphene_triangle_get_barycoords");
    }
    public static boolean graphene_triangle_get_barycoords ( Addressable t,  Addressable p,  Addressable res) {
        var mh$ = graphene_triangle_get_barycoords$MH();
        try {
            return (boolean)mh$.invokeExact(t, p, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_triangle_get_uv$MH() {
        return RuntimeHelper.requireNonNull(constants$1639.graphene_triangle_get_uv$MH,"graphene_triangle_get_uv");
    }
    public static boolean graphene_triangle_get_uv ( Addressable t,  Addressable p,  Addressable uv_a,  Addressable uv_b,  Addressable uv_c,  Addressable res) {
        var mh$ = graphene_triangle_get_uv$MH();
        try {
            return (boolean)mh$.invokeExact(t, p, uv_a, uv_b, uv_c, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_triangle_contains_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1639.graphene_triangle_contains_point$MH,"graphene_triangle_contains_point");
    }
    public static boolean graphene_triangle_contains_point ( Addressable t,  Addressable p) {
        var mh$ = graphene_triangle_contains_point$MH();
        try {
            return (boolean)mh$.invokeExact(t, p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_triangle_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$1639.graphene_triangle_equal$MH,"graphene_triangle_equal");
    }
    public static boolean graphene_triangle_equal ( Addressable a,  Addressable b) {
        var mh$ = graphene_triangle_equal$MH();
        try {
            return (boolean)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GRAPHENE_RAY_INTERSECTION_KIND_NONE() {
        return (int)0L;
    }
    public static int GRAPHENE_RAY_INTERSECTION_KIND_ENTER() {
        return (int)1L;
    }
    public static int GRAPHENE_RAY_INTERSECTION_KIND_LEAVE() {
        return (int)2L;
    }
    public static MethodHandle graphene_ray_alloc$MH() {
        return RuntimeHelper.requireNonNull(constants$1639.graphene_ray_alloc$MH,"graphene_ray_alloc");
    }
    public static MemoryAddress graphene_ray_alloc () {
        var mh$ = graphene_ray_alloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_ray_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1639.graphene_ray_free$MH,"graphene_ray_free");
    }
    public static void graphene_ray_free ( Addressable r) {
        var mh$ = graphene_ray_free$MH();
        try {
            mh$.invokeExact(r);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_ray_init$MH() {
        return RuntimeHelper.requireNonNull(constants$1640.graphene_ray_init$MH,"graphene_ray_init");
    }
    public static MemoryAddress graphene_ray_init ( Addressable r,  Addressable origin,  Addressable direction) {
        var mh$ = graphene_ray_init$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(r, origin, direction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_ray_init_from_ray$MH() {
        return RuntimeHelper.requireNonNull(constants$1640.graphene_ray_init_from_ray$MH,"graphene_ray_init_from_ray");
    }
    public static MemoryAddress graphene_ray_init_from_ray ( Addressable r,  Addressable src) {
        var mh$ = graphene_ray_init_from_ray$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(r, src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_ray_init_from_vec3$MH() {
        return RuntimeHelper.requireNonNull(constants$1640.graphene_ray_init_from_vec3$MH,"graphene_ray_init_from_vec3");
    }
    public static MemoryAddress graphene_ray_init_from_vec3 ( Addressable r,  Addressable origin,  Addressable direction) {
        var mh$ = graphene_ray_init_from_vec3$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(r, origin, direction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_ray_get_origin$MH() {
        return RuntimeHelper.requireNonNull(constants$1640.graphene_ray_get_origin$MH,"graphene_ray_get_origin");
    }
    public static void graphene_ray_get_origin ( Addressable r,  Addressable origin) {
        var mh$ = graphene_ray_get_origin$MH();
        try {
            mh$.invokeExact(r, origin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_ray_get_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$1640.graphene_ray_get_direction$MH,"graphene_ray_get_direction");
    }
    public static void graphene_ray_get_direction ( Addressable r,  Addressable direction) {
        var mh$ = graphene_ray_get_direction$MH();
        try {
            mh$.invokeExact(r, direction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_ray_get_position_at$MH() {
        return RuntimeHelper.requireNonNull(constants$1640.graphene_ray_get_position_at$MH,"graphene_ray_get_position_at");
    }
    public static void graphene_ray_get_position_at ( Addressable r,  float t,  Addressable position) {
        var mh$ = graphene_ray_get_position_at$MH();
        try {
            mh$.invokeExact(r, t, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_ray_get_distance_to_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1641.graphene_ray_get_distance_to_point$MH,"graphene_ray_get_distance_to_point");
    }
    public static float graphene_ray_get_distance_to_point ( Addressable r,  Addressable p) {
        var mh$ = graphene_ray_get_distance_to_point$MH();
        try {
            return (float)mh$.invokeExact(r, p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_ray_get_distance_to_plane$MH() {
        return RuntimeHelper.requireNonNull(constants$1641.graphene_ray_get_distance_to_plane$MH,"graphene_ray_get_distance_to_plane");
    }
    public static float graphene_ray_get_distance_to_plane ( Addressable r,  Addressable p) {
        var mh$ = graphene_ray_get_distance_to_plane$MH();
        try {
            return (float)mh$.invokeExact(r, p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_ray_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$1641.graphene_ray_equal$MH,"graphene_ray_equal");
    }
    public static boolean graphene_ray_equal ( Addressable a,  Addressable b) {
        var mh$ = graphene_ray_equal$MH();
        try {
            return (boolean)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_ray_get_closest_point_to_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1641.graphene_ray_get_closest_point_to_point$MH,"graphene_ray_get_closest_point_to_point");
    }
    public static void graphene_ray_get_closest_point_to_point ( Addressable r,  Addressable p,  Addressable res) {
        var mh$ = graphene_ray_get_closest_point_to_point$MH();
        try {
            mh$.invokeExact(r, p, res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_ray_intersect_sphere$MH() {
        return RuntimeHelper.requireNonNull(constants$1641.graphene_ray_intersect_sphere$MH,"graphene_ray_intersect_sphere");
    }
    public static int graphene_ray_intersect_sphere ( Addressable r,  Addressable s,  Addressable t_out) {
        var mh$ = graphene_ray_intersect_sphere$MH();
        try {
            return (int)mh$.invokeExact(r, s, t_out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_ray_intersects_sphere$MH() {
        return RuntimeHelper.requireNonNull(constants$1641.graphene_ray_intersects_sphere$MH,"graphene_ray_intersects_sphere");
    }
    public static boolean graphene_ray_intersects_sphere ( Addressable r,  Addressable s) {
        var mh$ = graphene_ray_intersects_sphere$MH();
        try {
            return (boolean)mh$.invokeExact(r, s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_ray_intersect_box$MH() {
        return RuntimeHelper.requireNonNull(constants$1642.graphene_ray_intersect_box$MH,"graphene_ray_intersect_box");
    }
    public static int graphene_ray_intersect_box ( Addressable r,  Addressable b,  Addressable t_out) {
        var mh$ = graphene_ray_intersect_box$MH();
        try {
            return (int)mh$.invokeExact(r, b, t_out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_ray_intersects_box$MH() {
        return RuntimeHelper.requireNonNull(constants$1642.graphene_ray_intersects_box$MH,"graphene_ray_intersects_box");
    }
    public static boolean graphene_ray_intersects_box ( Addressable r,  Addressable b) {
        var mh$ = graphene_ray_intersects_box$MH();
        try {
            return (boolean)mh$.invokeExact(r, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_ray_intersect_triangle$MH() {
        return RuntimeHelper.requireNonNull(constants$1642.graphene_ray_intersect_triangle$MH,"graphene_ray_intersect_triangle");
    }
    public static int graphene_ray_intersect_triangle ( Addressable r,  Addressable t,  Addressable t_out) {
        var mh$ = graphene_ray_intersect_triangle$MH();
        try {
            return (int)mh$.invokeExact(r, t, t_out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle graphene_ray_intersects_triangle$MH() {
        return RuntimeHelper.requireNonNull(constants$1642.graphene_ray_intersects_triangle$MH,"graphene_ray_intersects_triangle");
    }
    public static boolean graphene_ray_intersects_triangle ( Addressable r,  Addressable t) {
        var mh$ = graphene_ray_intersects_triangle$MH();
        try {
            return (boolean)mh$.invokeExact(r, t);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_rounded_rect_init$MH() {
        return RuntimeHelper.requireNonNull(constants$1642.gsk_rounded_rect_init$MH,"gsk_rounded_rect_init");
    }
    public static MemoryAddress gsk_rounded_rect_init ( Addressable self,  Addressable bounds,  Addressable top_left,  Addressable top_right,  Addressable bottom_right,  Addressable bottom_left) {
        var mh$ = gsk_rounded_rect_init$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self, bounds, top_left, top_right, bottom_right, bottom_left);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_rounded_rect_init_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1642.gsk_rounded_rect_init_copy$MH,"gsk_rounded_rect_init_copy");
    }
    public static MemoryAddress gsk_rounded_rect_init_copy ( Addressable self,  Addressable src) {
        var mh$ = gsk_rounded_rect_init_copy$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self, src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_rounded_rect_init_from_rect$MH() {
        return RuntimeHelper.requireNonNull(constants$1643.gsk_rounded_rect_init_from_rect$MH,"gsk_rounded_rect_init_from_rect");
    }
    public static MemoryAddress gsk_rounded_rect_init_from_rect ( Addressable self,  Addressable bounds,  float radius) {
        var mh$ = gsk_rounded_rect_init_from_rect$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self, bounds, radius);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_rounded_rect_normalize$MH() {
        return RuntimeHelper.requireNonNull(constants$1643.gsk_rounded_rect_normalize$MH,"gsk_rounded_rect_normalize");
    }
    public static MemoryAddress gsk_rounded_rect_normalize ( Addressable self) {
        var mh$ = gsk_rounded_rect_normalize$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_rounded_rect_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1643.gsk_rounded_rect_offset$MH,"gsk_rounded_rect_offset");
    }
    public static MemoryAddress gsk_rounded_rect_offset ( Addressable self,  float dx,  float dy) {
        var mh$ = gsk_rounded_rect_offset$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self, dx, dy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_rounded_rect_shrink$MH() {
        return RuntimeHelper.requireNonNull(constants$1643.gsk_rounded_rect_shrink$MH,"gsk_rounded_rect_shrink");
    }
    public static MemoryAddress gsk_rounded_rect_shrink ( Addressable self,  float top,  float right,  float bottom,  float left) {
        var mh$ = gsk_rounded_rect_shrink$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self, top, right, bottom, left);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_rounded_rect_is_rectilinear$MH() {
        return RuntimeHelper.requireNonNull(constants$1643.gsk_rounded_rect_is_rectilinear$MH,"gsk_rounded_rect_is_rectilinear");
    }
    public static int gsk_rounded_rect_is_rectilinear ( Addressable self) {
        var mh$ = gsk_rounded_rect_is_rectilinear$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_rounded_rect_contains_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1643.gsk_rounded_rect_contains_point$MH,"gsk_rounded_rect_contains_point");
    }
    public static int gsk_rounded_rect_contains_point ( Addressable self,  Addressable point) {
        var mh$ = gsk_rounded_rect_contains_point$MH();
        try {
            return (int)mh$.invokeExact(self, point);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_rounded_rect_contains_rect$MH() {
        return RuntimeHelper.requireNonNull(constants$1644.gsk_rounded_rect_contains_rect$MH,"gsk_rounded_rect_contains_rect");
    }
    public static int gsk_rounded_rect_contains_rect ( Addressable self,  Addressable rect) {
        var mh$ = gsk_rounded_rect_contains_rect$MH();
        try {
            return (int)mh$.invokeExact(self, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_rounded_rect_intersects_rect$MH() {
        return RuntimeHelper.requireNonNull(constants$1644.gsk_rounded_rect_intersects_rect$MH,"gsk_rounded_rect_intersects_rect");
    }
    public static int gsk_rounded_rect_intersects_rect ( Addressable self,  Addressable rect) {
        var mh$ = gsk_rounded_rect_intersects_rect$MH();
        try {
            return (int)mh$.invokeExact(self, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1644.gsk_gl_shader_get_type$MH,"gsk_gl_shader_get_type");
    }
    public static long gsk_gl_shader_get_type () {
        var mh$ = gsk_gl_shader_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GskGLShader_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GskGLShader_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GskGLShader_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GskGLShader_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GskGLShader$MH() {
        return RuntimeHelper.requireNonNull(constants$1644.glib_autoptr_clear_GskGLShader$MH,"glib_autoptr_clear_GskGLShader");
    }
    public static void glib_autoptr_clear_GskGLShader ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GskGLShader$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GskGLShader$MH() {
        return RuntimeHelper.requireNonNull(constants$1644.glib_autoptr_cleanup_GskGLShader$MH,"glib_autoptr_cleanup_GskGLShader");
    }
    public static void glib_autoptr_cleanup_GskGLShader ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GskGLShader$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GskGLShader$MH() {
        return RuntimeHelper.requireNonNull(constants$1644.glib_listautoptr_cleanup_GskGLShader$MH,"glib_listautoptr_cleanup_GskGLShader");
    }
    public static void glib_listautoptr_cleanup_GskGLShader ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GskGLShader$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GskGLShader$MH() {
        return RuntimeHelper.requireNonNull(constants$1645.glib_slistautoptr_cleanup_GskGLShader$MH,"glib_slistautoptr_cleanup_GskGLShader");
    }
    public static void glib_slistautoptr_cleanup_GskGLShader ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GskGLShader$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GskGLShader$MH() {
        return RuntimeHelper.requireNonNull(constants$1645.glib_queueautoptr_cleanup_GskGLShader$MH,"glib_queueautoptr_cleanup_GskGLShader");
    }
    public static void glib_queueautoptr_cleanup_GskGLShader ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GskGLShader$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GskGLShaderClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GskGLShaderClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GskGLShaderClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GskGLShaderClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GskGLShaderClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1645.glib_autoptr_clear_GskGLShaderClass$MH,"glib_autoptr_clear_GskGLShaderClass");
    }
    public static void glib_autoptr_clear_GskGLShaderClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GskGLShaderClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GskGLShaderClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1645.glib_autoptr_cleanup_GskGLShaderClass$MH,"glib_autoptr_cleanup_GskGLShaderClass");
    }
    public static void glib_autoptr_cleanup_GskGLShaderClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GskGLShaderClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GskGLShaderClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1645.glib_listautoptr_cleanup_GskGLShaderClass$MH,"glib_listautoptr_cleanup_GskGLShaderClass");
    }
    public static void glib_listautoptr_cleanup_GskGLShaderClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GskGLShaderClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GskGLShaderClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1645.glib_slistautoptr_cleanup_GskGLShaderClass$MH,"glib_slistautoptr_cleanup_GskGLShaderClass");
    }
    public static void glib_slistautoptr_cleanup_GskGLShaderClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GskGLShaderClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GskGLShaderClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1646.glib_queueautoptr_cleanup_GskGLShaderClass$MH,"glib_queueautoptr_cleanup_GskGLShaderClass");
    }
    public static void glib_queueautoptr_cleanup_GskGLShaderClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GskGLShaderClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GSK_GL_SHADER$MH() {
        return RuntimeHelper.requireNonNull(constants$1646.GSK_GL_SHADER$MH,"GSK_GL_SHADER");
    }
    public static MemoryAddress GSK_GL_SHADER ( Addressable ptr) {
        var mh$ = GSK_GL_SHADER$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GSK_IS_GL_SHADER$MH() {
        return RuntimeHelper.requireNonNull(constants$1646.GSK_IS_GL_SHADER$MH,"GSK_IS_GL_SHADER");
    }
    public static int GSK_IS_GL_SHADER ( Addressable ptr) {
        var mh$ = GSK_IS_GL_SHADER$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_new_from_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$1646.gsk_gl_shader_new_from_bytes$MH,"gsk_gl_shader_new_from_bytes");
    }
    public static MemoryAddress gsk_gl_shader_new_from_bytes ( Addressable sourcecode) {
        var mh$ = gsk_gl_shader_new_from_bytes$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(sourcecode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_new_from_resource$MH() {
        return RuntimeHelper.requireNonNull(constants$1646.gsk_gl_shader_new_from_resource$MH,"gsk_gl_shader_new_from_resource");
    }
    public static MemoryAddress gsk_gl_shader_new_from_resource ( Addressable resource_path) {
        var mh$ = gsk_gl_shader_new_from_resource$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(resource_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_compile$MH() {
        return RuntimeHelper.requireNonNull(constants$1646.gsk_gl_shader_compile$MH,"gsk_gl_shader_compile");
    }
    public static int gsk_gl_shader_compile ( Addressable shader,  Addressable renderer,  Addressable error) {
        var mh$ = gsk_gl_shader_compile$MH();
        try {
            return (int)mh$.invokeExact(shader, renderer, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_get_source$MH() {
        return RuntimeHelper.requireNonNull(constants$1647.gsk_gl_shader_get_source$MH,"gsk_gl_shader_get_source");
    }
    public static MemoryAddress gsk_gl_shader_get_source ( Addressable shader) {
        var mh$ = gsk_gl_shader_get_source$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(shader);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_get_resource$MH() {
        return RuntimeHelper.requireNonNull(constants$1647.gsk_gl_shader_get_resource$MH,"gsk_gl_shader_get_resource");
    }
    public static MemoryAddress gsk_gl_shader_get_resource ( Addressable shader) {
        var mh$ = gsk_gl_shader_get_resource$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(shader);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_get_n_textures$MH() {
        return RuntimeHelper.requireNonNull(constants$1647.gsk_gl_shader_get_n_textures$MH,"gsk_gl_shader_get_n_textures");
    }
    public static int gsk_gl_shader_get_n_textures ( Addressable shader) {
        var mh$ = gsk_gl_shader_get_n_textures$MH();
        try {
            return (int)mh$.invokeExact(shader);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_get_n_uniforms$MH() {
        return RuntimeHelper.requireNonNull(constants$1647.gsk_gl_shader_get_n_uniforms$MH,"gsk_gl_shader_get_n_uniforms");
    }
    public static int gsk_gl_shader_get_n_uniforms ( Addressable shader) {
        var mh$ = gsk_gl_shader_get_n_uniforms$MH();
        try {
            return (int)mh$.invokeExact(shader);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_get_uniform_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1647.gsk_gl_shader_get_uniform_name$MH,"gsk_gl_shader_get_uniform_name");
    }
    public static MemoryAddress gsk_gl_shader_get_uniform_name ( Addressable shader,  int idx) {
        var mh$ = gsk_gl_shader_get_uniform_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(shader, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_find_uniform_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1647.gsk_gl_shader_find_uniform_by_name$MH,"gsk_gl_shader_find_uniform_by_name");
    }
    public static int gsk_gl_shader_find_uniform_by_name ( Addressable shader,  Addressable name) {
        var mh$ = gsk_gl_shader_find_uniform_by_name$MH();
        try {
            return (int)mh$.invokeExact(shader, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_get_uniform_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1648.gsk_gl_shader_get_uniform_type$MH,"gsk_gl_shader_get_uniform_type");
    }
    public static int gsk_gl_shader_get_uniform_type ( Addressable shader,  int idx) {
        var mh$ = gsk_gl_shader_get_uniform_type$MH();
        try {
            return (int)mh$.invokeExact(shader, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_get_uniform_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1648.gsk_gl_shader_get_uniform_offset$MH,"gsk_gl_shader_get_uniform_offset");
    }
    public static int gsk_gl_shader_get_uniform_offset ( Addressable shader,  int idx) {
        var mh$ = gsk_gl_shader_get_uniform_offset$MH();
        try {
            return (int)mh$.invokeExact(shader, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_get_args_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1648.gsk_gl_shader_get_args_size$MH,"gsk_gl_shader_get_args_size");
    }
    public static long gsk_gl_shader_get_args_size ( Addressable shader) {
        var mh$ = gsk_gl_shader_get_args_size$MH();
        try {
            return (long)mh$.invokeExact(shader);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_format_args_va$MH() {
        return RuntimeHelper.requireNonNull(constants$1648.gsk_gl_shader_format_args_va$MH,"gsk_gl_shader_format_args_va");
    }
    public static MemoryAddress gsk_gl_shader_format_args_va ( Addressable shader,  Addressable uniforms) {
        var mh$ = gsk_gl_shader_format_args_va$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(shader, uniforms);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_format_args$MH() {
        return RuntimeHelper.requireNonNull(constants$1648.gsk_gl_shader_format_args$MH,"gsk_gl_shader_format_args");
    }
    public static MemoryAddress gsk_gl_shader_format_args ( Addressable shader, Object... x1) {
        var mh$ = gsk_gl_shader_format_args$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(shader, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_get_arg_float$MH() {
        return RuntimeHelper.requireNonNull(constants$1648.gsk_gl_shader_get_arg_float$MH,"gsk_gl_shader_get_arg_float");
    }
    public static float gsk_gl_shader_get_arg_float ( Addressable shader,  Addressable args,  int idx) {
        var mh$ = gsk_gl_shader_get_arg_float$MH();
        try {
            return (float)mh$.invokeExact(shader, args, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_get_arg_int$MH() {
        return RuntimeHelper.requireNonNull(constants$1649.gsk_gl_shader_get_arg_int$MH,"gsk_gl_shader_get_arg_int");
    }
    public static int gsk_gl_shader_get_arg_int ( Addressable shader,  Addressable args,  int idx) {
        var mh$ = gsk_gl_shader_get_arg_int$MH();
        try {
            return (int)mh$.invokeExact(shader, args, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_get_arg_uint$MH() {
        return RuntimeHelper.requireNonNull(constants$1649.gsk_gl_shader_get_arg_uint$MH,"gsk_gl_shader_get_arg_uint");
    }
    public static int gsk_gl_shader_get_arg_uint ( Addressable shader,  Addressable args,  int idx) {
        var mh$ = gsk_gl_shader_get_arg_uint$MH();
        try {
            return (int)mh$.invokeExact(shader, args, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_get_arg_bool$MH() {
        return RuntimeHelper.requireNonNull(constants$1649.gsk_gl_shader_get_arg_bool$MH,"gsk_gl_shader_get_arg_bool");
    }
    public static int gsk_gl_shader_get_arg_bool ( Addressable shader,  Addressable args,  int idx) {
        var mh$ = gsk_gl_shader_get_arg_bool$MH();
        try {
            return (int)mh$.invokeExact(shader, args, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_get_arg_vec2$MH() {
        return RuntimeHelper.requireNonNull(constants$1649.gsk_gl_shader_get_arg_vec2$MH,"gsk_gl_shader_get_arg_vec2");
    }
    public static void gsk_gl_shader_get_arg_vec2 ( Addressable shader,  Addressable args,  int idx,  Addressable out_value) {
        var mh$ = gsk_gl_shader_get_arg_vec2$MH();
        try {
            mh$.invokeExact(shader, args, idx, out_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_get_arg_vec3$MH() {
        return RuntimeHelper.requireNonNull(constants$1649.gsk_gl_shader_get_arg_vec3$MH,"gsk_gl_shader_get_arg_vec3");
    }
    public static void gsk_gl_shader_get_arg_vec3 ( Addressable shader,  Addressable args,  int idx,  Addressable out_value) {
        var mh$ = gsk_gl_shader_get_arg_vec3$MH();
        try {
            mh$.invokeExact(shader, args, idx, out_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_get_arg_vec4$MH() {
        return RuntimeHelper.requireNonNull(constants$1649.gsk_gl_shader_get_arg_vec4$MH,"gsk_gl_shader_get_arg_vec4");
    }
    public static void gsk_gl_shader_get_arg_vec4 ( Addressable shader,  Addressable args,  int idx,  Addressable out_value) {
        var mh$ = gsk_gl_shader_get_arg_vec4$MH();
        try {
            mh$.invokeExact(shader, args, idx, out_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_shader_args_builder_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1650.gsk_shader_args_builder_get_type$MH,"gsk_shader_args_builder_get_type");
    }
    public static long gsk_shader_args_builder_get_type () {
        var mh$ = gsk_shader_args_builder_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_shader_args_builder_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1650.gsk_shader_args_builder_new$MH,"gsk_shader_args_builder_new");
    }
    public static MemoryAddress gsk_shader_args_builder_new ( Addressable shader,  Addressable initial_values) {
        var mh$ = gsk_shader_args_builder_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(shader, initial_values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_shader_args_builder_to_args$MH() {
        return RuntimeHelper.requireNonNull(constants$1650.gsk_shader_args_builder_to_args$MH,"gsk_shader_args_builder_to_args");
    }
    public static MemoryAddress gsk_shader_args_builder_to_args ( Addressable builder) {
        var mh$ = gsk_shader_args_builder_to_args$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(builder);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_shader_args_builder_free_to_args$MH() {
        return RuntimeHelper.requireNonNull(constants$1650.gsk_shader_args_builder_free_to_args$MH,"gsk_shader_args_builder_free_to_args");
    }
    public static MemoryAddress gsk_shader_args_builder_free_to_args ( Addressable builder) {
        var mh$ = gsk_shader_args_builder_free_to_args$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(builder);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_shader_args_builder_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$1650.gsk_shader_args_builder_ref$MH,"gsk_shader_args_builder_ref");
    }
    public static MemoryAddress gsk_shader_args_builder_ref ( Addressable builder) {
        var mh$ = gsk_shader_args_builder_ref$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(builder);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_shader_args_builder_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$1650.gsk_shader_args_builder_unref$MH,"gsk_shader_args_builder_unref");
    }
    public static void gsk_shader_args_builder_unref ( Addressable builder) {
        var mh$ = gsk_shader_args_builder_unref$MH();
        try {
            mh$.invokeExact(builder);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_shader_args_builder_set_float$MH() {
        return RuntimeHelper.requireNonNull(constants$1651.gsk_shader_args_builder_set_float$MH,"gsk_shader_args_builder_set_float");
    }
    public static void gsk_shader_args_builder_set_float ( Addressable builder,  int idx,  float value) {
        var mh$ = gsk_shader_args_builder_set_float$MH();
        try {
            mh$.invokeExact(builder, idx, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_shader_args_builder_set_int$MH() {
        return RuntimeHelper.requireNonNull(constants$1651.gsk_shader_args_builder_set_int$MH,"gsk_shader_args_builder_set_int");
    }
    public static void gsk_shader_args_builder_set_int ( Addressable builder,  int idx,  int value) {
        var mh$ = gsk_shader_args_builder_set_int$MH();
        try {
            mh$.invokeExact(builder, idx, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_shader_args_builder_set_uint$MH() {
        return RuntimeHelper.requireNonNull(constants$1651.gsk_shader_args_builder_set_uint$MH,"gsk_shader_args_builder_set_uint");
    }
    public static void gsk_shader_args_builder_set_uint ( Addressable builder,  int idx,  int value) {
        var mh$ = gsk_shader_args_builder_set_uint$MH();
        try {
            mh$.invokeExact(builder, idx, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_shader_args_builder_set_bool$MH() {
        return RuntimeHelper.requireNonNull(constants$1651.gsk_shader_args_builder_set_bool$MH,"gsk_shader_args_builder_set_bool");
    }
    public static void gsk_shader_args_builder_set_bool ( Addressable builder,  int idx,  int value) {
        var mh$ = gsk_shader_args_builder_set_bool$MH();
        try {
            mh$.invokeExact(builder, idx, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_shader_args_builder_set_vec2$MH() {
        return RuntimeHelper.requireNonNull(constants$1651.gsk_shader_args_builder_set_vec2$MH,"gsk_shader_args_builder_set_vec2");
    }
    public static void gsk_shader_args_builder_set_vec2 ( Addressable builder,  int idx,  Addressable value) {
        var mh$ = gsk_shader_args_builder_set_vec2$MH();
        try {
            mh$.invokeExact(builder, idx, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_shader_args_builder_set_vec3$MH() {
        return RuntimeHelper.requireNonNull(constants$1651.gsk_shader_args_builder_set_vec3$MH,"gsk_shader_args_builder_set_vec3");
    }
    public static void gsk_shader_args_builder_set_vec3 ( Addressable builder,  int idx,  Addressable value) {
        var mh$ = gsk_shader_args_builder_set_vec3$MH();
        try {
            mh$.invokeExact(builder, idx, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_shader_args_builder_set_vec4$MH() {
        return RuntimeHelper.requireNonNull(constants$1652.gsk_shader_args_builder_set_vec4$MH,"gsk_shader_args_builder_set_vec4");
    }
    public static void gsk_shader_args_builder_set_vec4 ( Addressable builder,  int idx,  Addressable value) {
        var mh$ = gsk_shader_args_builder_set_vec4$MH();
        try {
            mh$.invokeExact(builder, idx, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_render_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1652.gsk_render_node_get_type$MH,"gsk_render_node_get_type");
    }
    public static long gsk_render_node_get_type () {
        var mh$ = gsk_render_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_serialization_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$1652.gsk_serialization_error_quark$MH,"gsk_serialization_error_quark");
    }
    public static int gsk_serialization_error_quark () {
        var mh$ = gsk_serialization_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_render_node_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$1652.gsk_render_node_ref$MH,"gsk_render_node_ref");
    }
    public static MemoryAddress gsk_render_node_ref ( Addressable node) {
        var mh$ = gsk_render_node_ref$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_render_node_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$1653.gsk_render_node_unref$MH,"gsk_render_node_unref");
    }
    public static void gsk_render_node_unref ( Addressable node) {
        var mh$ = gsk_render_node_unref$MH();
        try {
            mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_render_node_get_node_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1653.gsk_render_node_get_node_type$MH,"gsk_render_node_get_node_type");
    }
    public static int gsk_render_node_get_node_type ( Addressable node) {
        var mh$ = gsk_render_node_get_node_type$MH();
        try {
            return (int)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_render_node_get_bounds$MH() {
        return RuntimeHelper.requireNonNull(constants$1653.gsk_render_node_get_bounds$MH,"gsk_render_node_get_bounds");
    }
    public static void gsk_render_node_get_bounds ( Addressable node,  Addressable bounds) {
        var mh$ = gsk_render_node_get_bounds$MH();
        try {
            mh$.invokeExact(node, bounds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_render_node_draw$MH() {
        return RuntimeHelper.requireNonNull(constants$1653.gsk_render_node_draw$MH,"gsk_render_node_draw");
    }
    public static void gsk_render_node_draw ( Addressable node,  Addressable cr) {
        var mh$ = gsk_render_node_draw$MH();
        try {
            mh$.invokeExact(node, cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_render_node_serialize$MH() {
        return RuntimeHelper.requireNonNull(constants$1653.gsk_render_node_serialize$MH,"gsk_render_node_serialize");
    }
    public static MemoryAddress gsk_render_node_serialize ( Addressable node) {
        var mh$ = gsk_render_node_serialize$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_render_node_write_to_file$MH() {
        return RuntimeHelper.requireNonNull(constants$1653.gsk_render_node_write_to_file$MH,"gsk_render_node_write_to_file");
    }
    public static int gsk_render_node_write_to_file ( Addressable node,  Addressable filename,  Addressable error) {
        var mh$ = gsk_render_node_write_to_file$MH();
        try {
            return (int)mh$.invokeExact(node, filename, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_render_node_deserialize$MH() {
        return RuntimeHelper.requireNonNull(constants$1654.gsk_render_node_deserialize$MH,"gsk_render_node_deserialize");
    }
    public static MemoryAddress gsk_render_node_deserialize ( Addressable bytes,  Addressable error_func,  Addressable user_data) {
        var mh$ = gsk_render_node_deserialize$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(bytes, error_func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_debug_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1654.gsk_debug_node_get_type$MH,"gsk_debug_node_get_type");
    }
    public static long gsk_debug_node_get_type () {
        var mh$ = gsk_debug_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_debug_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1654.gsk_debug_node_new$MH,"gsk_debug_node_new");
    }
    public static MemoryAddress gsk_debug_node_new ( Addressable child,  Addressable message) {
        var mh$ = gsk_debug_node_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(child, message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_debug_node_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1654.gsk_debug_node_get_child$MH,"gsk_debug_node_get_child");
    }
    public static MemoryAddress gsk_debug_node_get_child ( Addressable node) {
        var mh$ = gsk_debug_node_get_child$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_debug_node_get_message$MH() {
        return RuntimeHelper.requireNonNull(constants$1654.gsk_debug_node_get_message$MH,"gsk_debug_node_get_message");
    }
    public static MemoryAddress gsk_debug_node_get_message ( Addressable node) {
        var mh$ = gsk_debug_node_get_message$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_color_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1654.gsk_color_node_get_type$MH,"gsk_color_node_get_type");
    }
    public static long gsk_color_node_get_type () {
        var mh$ = gsk_color_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_color_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1655.gsk_color_node_new$MH,"gsk_color_node_new");
    }
    public static MemoryAddress gsk_color_node_new ( Addressable rgba,  Addressable bounds) {
        var mh$ = gsk_color_node_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(rgba, bounds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_color_node_get_color$MH() {
        return RuntimeHelper.requireNonNull(constants$1655.gsk_color_node_get_color$MH,"gsk_color_node_get_color");
    }
    public static MemoryAddress gsk_color_node_get_color ( Addressable node) {
        var mh$ = gsk_color_node_get_color$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_texture_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1655.gsk_texture_node_get_type$MH,"gsk_texture_node_get_type");
    }
    public static long gsk_texture_node_get_type () {
        var mh$ = gsk_texture_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_texture_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1655.gsk_texture_node_new$MH,"gsk_texture_node_new");
    }
    public static MemoryAddress gsk_texture_node_new ( Addressable texture,  Addressable bounds) {
        var mh$ = gsk_texture_node_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(texture, bounds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_texture_node_get_texture$MH() {
        return RuntimeHelper.requireNonNull(constants$1655.gsk_texture_node_get_texture$MH,"gsk_texture_node_get_texture");
    }
    public static MemoryAddress gsk_texture_node_get_texture ( Addressable node) {
        var mh$ = gsk_texture_node_get_texture$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_linear_gradient_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1655.gsk_linear_gradient_node_get_type$MH,"gsk_linear_gradient_node_get_type");
    }
    public static long gsk_linear_gradient_node_get_type () {
        var mh$ = gsk_linear_gradient_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_linear_gradient_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1656.gsk_linear_gradient_node_new$MH,"gsk_linear_gradient_node_new");
    }
    public static MemoryAddress gsk_linear_gradient_node_new ( Addressable bounds,  Addressable start,  Addressable end,  Addressable color_stops,  long n_color_stops) {
        var mh$ = gsk_linear_gradient_node_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(bounds, start, end, color_stops, n_color_stops);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_linear_gradient_node_get_start$MH() {
        return RuntimeHelper.requireNonNull(constants$1656.gsk_linear_gradient_node_get_start$MH,"gsk_linear_gradient_node_get_start");
    }
    public static MemoryAddress gsk_linear_gradient_node_get_start ( Addressable node) {
        var mh$ = gsk_linear_gradient_node_get_start$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_linear_gradient_node_get_end$MH() {
        return RuntimeHelper.requireNonNull(constants$1656.gsk_linear_gradient_node_get_end$MH,"gsk_linear_gradient_node_get_end");
    }
    public static MemoryAddress gsk_linear_gradient_node_get_end ( Addressable node) {
        var mh$ = gsk_linear_gradient_node_get_end$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_linear_gradient_node_get_n_color_stops$MH() {
        return RuntimeHelper.requireNonNull(constants$1656.gsk_linear_gradient_node_get_n_color_stops$MH,"gsk_linear_gradient_node_get_n_color_stops");
    }
    public static long gsk_linear_gradient_node_get_n_color_stops ( Addressable node) {
        var mh$ = gsk_linear_gradient_node_get_n_color_stops$MH();
        try {
            return (long)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_linear_gradient_node_get_color_stops$MH() {
        return RuntimeHelper.requireNonNull(constants$1656.gsk_linear_gradient_node_get_color_stops$MH,"gsk_linear_gradient_node_get_color_stops");
    }
    public static MemoryAddress gsk_linear_gradient_node_get_color_stops ( Addressable node,  Addressable n_stops) {
        var mh$ = gsk_linear_gradient_node_get_color_stops$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node, n_stops);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_repeating_linear_gradient_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1656.gsk_repeating_linear_gradient_node_get_type$MH,"gsk_repeating_linear_gradient_node_get_type");
    }
    public static long gsk_repeating_linear_gradient_node_get_type () {
        var mh$ = gsk_repeating_linear_gradient_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_repeating_linear_gradient_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1657.gsk_repeating_linear_gradient_node_new$MH,"gsk_repeating_linear_gradient_node_new");
    }
    public static MemoryAddress gsk_repeating_linear_gradient_node_new ( Addressable bounds,  Addressable start,  Addressable end,  Addressable color_stops,  long n_color_stops) {
        var mh$ = gsk_repeating_linear_gradient_node_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(bounds, start, end, color_stops, n_color_stops);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_conic_gradient_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1657.gsk_conic_gradient_node_get_type$MH,"gsk_conic_gradient_node_get_type");
    }
    public static long gsk_conic_gradient_node_get_type () {
        var mh$ = gsk_conic_gradient_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_conic_gradient_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1657.gsk_conic_gradient_node_new$MH,"gsk_conic_gradient_node_new");
    }
    public static MemoryAddress gsk_conic_gradient_node_new ( Addressable bounds,  Addressable center,  float rotation,  Addressable color_stops,  long n_color_stops) {
        var mh$ = gsk_conic_gradient_node_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(bounds, center, rotation, color_stops, n_color_stops);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_conic_gradient_node_get_center$MH() {
        return RuntimeHelper.requireNonNull(constants$1657.gsk_conic_gradient_node_get_center$MH,"gsk_conic_gradient_node_get_center");
    }
    public static MemoryAddress gsk_conic_gradient_node_get_center ( Addressable node) {
        var mh$ = gsk_conic_gradient_node_get_center$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_conic_gradient_node_get_rotation$MH() {
        return RuntimeHelper.requireNonNull(constants$1657.gsk_conic_gradient_node_get_rotation$MH,"gsk_conic_gradient_node_get_rotation");
    }
    public static float gsk_conic_gradient_node_get_rotation ( Addressable node) {
        var mh$ = gsk_conic_gradient_node_get_rotation$MH();
        try {
            return (float)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_conic_gradient_node_get_angle$MH() {
        return RuntimeHelper.requireNonNull(constants$1657.gsk_conic_gradient_node_get_angle$MH,"gsk_conic_gradient_node_get_angle");
    }
    public static float gsk_conic_gradient_node_get_angle ( Addressable node) {
        var mh$ = gsk_conic_gradient_node_get_angle$MH();
        try {
            return (float)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_conic_gradient_node_get_n_color_stops$MH() {
        return RuntimeHelper.requireNonNull(constants$1658.gsk_conic_gradient_node_get_n_color_stops$MH,"gsk_conic_gradient_node_get_n_color_stops");
    }
    public static long gsk_conic_gradient_node_get_n_color_stops ( Addressable node) {
        var mh$ = gsk_conic_gradient_node_get_n_color_stops$MH();
        try {
            return (long)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_conic_gradient_node_get_color_stops$MH() {
        return RuntimeHelper.requireNonNull(constants$1658.gsk_conic_gradient_node_get_color_stops$MH,"gsk_conic_gradient_node_get_color_stops");
    }
    public static MemoryAddress gsk_conic_gradient_node_get_color_stops ( Addressable node,  Addressable n_stops) {
        var mh$ = gsk_conic_gradient_node_get_color_stops$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node, n_stops);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_radial_gradient_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1658.gsk_radial_gradient_node_get_type$MH,"gsk_radial_gradient_node_get_type");
    }
    public static long gsk_radial_gradient_node_get_type () {
        var mh$ = gsk_radial_gradient_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_radial_gradient_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1658.gsk_radial_gradient_node_new$MH,"gsk_radial_gradient_node_new");
    }
    public static MemoryAddress gsk_radial_gradient_node_new ( Addressable bounds,  Addressable center,  float hradius,  float vradius,  float start,  float end,  Addressable color_stops,  long n_color_stops) {
        var mh$ = gsk_radial_gradient_node_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(bounds, center, hradius, vradius, start, end, color_stops, n_color_stops);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_radial_gradient_node_get_n_color_stops$MH() {
        return RuntimeHelper.requireNonNull(constants$1658.gsk_radial_gradient_node_get_n_color_stops$MH,"gsk_radial_gradient_node_get_n_color_stops");
    }
    public static long gsk_radial_gradient_node_get_n_color_stops ( Addressable node) {
        var mh$ = gsk_radial_gradient_node_get_n_color_stops$MH();
        try {
            return (long)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_radial_gradient_node_get_color_stops$MH() {
        return RuntimeHelper.requireNonNull(constants$1658.gsk_radial_gradient_node_get_color_stops$MH,"gsk_radial_gradient_node_get_color_stops");
    }
    public static MemoryAddress gsk_radial_gradient_node_get_color_stops ( Addressable node,  Addressable n_stops) {
        var mh$ = gsk_radial_gradient_node_get_color_stops$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node, n_stops);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_radial_gradient_node_get_center$MH() {
        return RuntimeHelper.requireNonNull(constants$1659.gsk_radial_gradient_node_get_center$MH,"gsk_radial_gradient_node_get_center");
    }
    public static MemoryAddress gsk_radial_gradient_node_get_center ( Addressable node) {
        var mh$ = gsk_radial_gradient_node_get_center$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_radial_gradient_node_get_hradius$MH() {
        return RuntimeHelper.requireNonNull(constants$1659.gsk_radial_gradient_node_get_hradius$MH,"gsk_radial_gradient_node_get_hradius");
    }
    public static float gsk_radial_gradient_node_get_hradius ( Addressable node) {
        var mh$ = gsk_radial_gradient_node_get_hradius$MH();
        try {
            return (float)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_radial_gradient_node_get_vradius$MH() {
        return RuntimeHelper.requireNonNull(constants$1659.gsk_radial_gradient_node_get_vradius$MH,"gsk_radial_gradient_node_get_vradius");
    }
    public static float gsk_radial_gradient_node_get_vradius ( Addressable node) {
        var mh$ = gsk_radial_gradient_node_get_vradius$MH();
        try {
            return (float)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_radial_gradient_node_get_start$MH() {
        return RuntimeHelper.requireNonNull(constants$1659.gsk_radial_gradient_node_get_start$MH,"gsk_radial_gradient_node_get_start");
    }
    public static float gsk_radial_gradient_node_get_start ( Addressable node) {
        var mh$ = gsk_radial_gradient_node_get_start$MH();
        try {
            return (float)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_radial_gradient_node_get_end$MH() {
        return RuntimeHelper.requireNonNull(constants$1659.gsk_radial_gradient_node_get_end$MH,"gsk_radial_gradient_node_get_end");
    }
    public static float gsk_radial_gradient_node_get_end ( Addressable node) {
        var mh$ = gsk_radial_gradient_node_get_end$MH();
        try {
            return (float)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_repeating_radial_gradient_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1659.gsk_repeating_radial_gradient_node_get_type$MH,"gsk_repeating_radial_gradient_node_get_type");
    }
    public static long gsk_repeating_radial_gradient_node_get_type () {
        var mh$ = gsk_repeating_radial_gradient_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_repeating_radial_gradient_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1660.gsk_repeating_radial_gradient_node_new$MH,"gsk_repeating_radial_gradient_node_new");
    }
    public static MemoryAddress gsk_repeating_radial_gradient_node_new ( Addressable bounds,  Addressable center,  float hradius,  float vradius,  float start,  float end,  Addressable color_stops,  long n_color_stops) {
        var mh$ = gsk_repeating_radial_gradient_node_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(bounds, center, hradius, vradius, start, end, color_stops, n_color_stops);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_border_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1660.gsk_border_node_get_type$MH,"gsk_border_node_get_type");
    }
    public static long gsk_border_node_get_type () {
        var mh$ = gsk_border_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_border_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1660.gsk_border_node_new$MH,"gsk_border_node_new");
    }
    public static MemoryAddress gsk_border_node_new ( Addressable outline,  Addressable border_width,  Addressable border_color) {
        var mh$ = gsk_border_node_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(outline, border_width, border_color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_border_node_get_outline$MH() {
        return RuntimeHelper.requireNonNull(constants$1660.gsk_border_node_get_outline$MH,"gsk_border_node_get_outline");
    }
    public static MemoryAddress gsk_border_node_get_outline ( Addressable node) {
        var mh$ = gsk_border_node_get_outline$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_border_node_get_widths$MH() {
        return RuntimeHelper.requireNonNull(constants$1660.gsk_border_node_get_widths$MH,"gsk_border_node_get_widths");
    }
    public static MemoryAddress gsk_border_node_get_widths ( Addressable node) {
        var mh$ = gsk_border_node_get_widths$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_border_node_get_colors$MH() {
        return RuntimeHelper.requireNonNull(constants$1660.gsk_border_node_get_colors$MH,"gsk_border_node_get_colors");
    }
    public static MemoryAddress gsk_border_node_get_colors ( Addressable node) {
        var mh$ = gsk_border_node_get_colors$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_inset_shadow_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1661.gsk_inset_shadow_node_get_type$MH,"gsk_inset_shadow_node_get_type");
    }
    public static long gsk_inset_shadow_node_get_type () {
        var mh$ = gsk_inset_shadow_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_inset_shadow_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1661.gsk_inset_shadow_node_new$MH,"gsk_inset_shadow_node_new");
    }
    public static MemoryAddress gsk_inset_shadow_node_new ( Addressable outline,  Addressable color,  float dx,  float dy,  float spread,  float blur_radius) {
        var mh$ = gsk_inset_shadow_node_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(outline, color, dx, dy, spread, blur_radius);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_inset_shadow_node_get_outline$MH() {
        return RuntimeHelper.requireNonNull(constants$1661.gsk_inset_shadow_node_get_outline$MH,"gsk_inset_shadow_node_get_outline");
    }
    public static MemoryAddress gsk_inset_shadow_node_get_outline ( Addressable node) {
        var mh$ = gsk_inset_shadow_node_get_outline$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_inset_shadow_node_get_color$MH() {
        return RuntimeHelper.requireNonNull(constants$1661.gsk_inset_shadow_node_get_color$MH,"gsk_inset_shadow_node_get_color");
    }
    public static MemoryAddress gsk_inset_shadow_node_get_color ( Addressable node) {
        var mh$ = gsk_inset_shadow_node_get_color$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_inset_shadow_node_get_dx$MH() {
        return RuntimeHelper.requireNonNull(constants$1661.gsk_inset_shadow_node_get_dx$MH,"gsk_inset_shadow_node_get_dx");
    }
    public static float gsk_inset_shadow_node_get_dx ( Addressable node) {
        var mh$ = gsk_inset_shadow_node_get_dx$MH();
        try {
            return (float)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_inset_shadow_node_get_dy$MH() {
        return RuntimeHelper.requireNonNull(constants$1661.gsk_inset_shadow_node_get_dy$MH,"gsk_inset_shadow_node_get_dy");
    }
    public static float gsk_inset_shadow_node_get_dy ( Addressable node) {
        var mh$ = gsk_inset_shadow_node_get_dy$MH();
        try {
            return (float)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_inset_shadow_node_get_spread$MH() {
        return RuntimeHelper.requireNonNull(constants$1662.gsk_inset_shadow_node_get_spread$MH,"gsk_inset_shadow_node_get_spread");
    }
    public static float gsk_inset_shadow_node_get_spread ( Addressable node) {
        var mh$ = gsk_inset_shadow_node_get_spread$MH();
        try {
            return (float)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_inset_shadow_node_get_blur_radius$MH() {
        return RuntimeHelper.requireNonNull(constants$1662.gsk_inset_shadow_node_get_blur_radius$MH,"gsk_inset_shadow_node_get_blur_radius");
    }
    public static float gsk_inset_shadow_node_get_blur_radius ( Addressable node) {
        var mh$ = gsk_inset_shadow_node_get_blur_radius$MH();
        try {
            return (float)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_outset_shadow_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1662.gsk_outset_shadow_node_get_type$MH,"gsk_outset_shadow_node_get_type");
    }
    public static long gsk_outset_shadow_node_get_type () {
        var mh$ = gsk_outset_shadow_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_outset_shadow_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1662.gsk_outset_shadow_node_new$MH,"gsk_outset_shadow_node_new");
    }
    public static MemoryAddress gsk_outset_shadow_node_new ( Addressable outline,  Addressable color,  float dx,  float dy,  float spread,  float blur_radius) {
        var mh$ = gsk_outset_shadow_node_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(outline, color, dx, dy, spread, blur_radius);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_outset_shadow_node_get_outline$MH() {
        return RuntimeHelper.requireNonNull(constants$1662.gsk_outset_shadow_node_get_outline$MH,"gsk_outset_shadow_node_get_outline");
    }
    public static MemoryAddress gsk_outset_shadow_node_get_outline ( Addressable node) {
        var mh$ = gsk_outset_shadow_node_get_outline$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_outset_shadow_node_get_color$MH() {
        return RuntimeHelper.requireNonNull(constants$1662.gsk_outset_shadow_node_get_color$MH,"gsk_outset_shadow_node_get_color");
    }
    public static MemoryAddress gsk_outset_shadow_node_get_color ( Addressable node) {
        var mh$ = gsk_outset_shadow_node_get_color$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_outset_shadow_node_get_dx$MH() {
        return RuntimeHelper.requireNonNull(constants$1663.gsk_outset_shadow_node_get_dx$MH,"gsk_outset_shadow_node_get_dx");
    }
    public static float gsk_outset_shadow_node_get_dx ( Addressable node) {
        var mh$ = gsk_outset_shadow_node_get_dx$MH();
        try {
            return (float)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_outset_shadow_node_get_dy$MH() {
        return RuntimeHelper.requireNonNull(constants$1663.gsk_outset_shadow_node_get_dy$MH,"gsk_outset_shadow_node_get_dy");
    }
    public static float gsk_outset_shadow_node_get_dy ( Addressable node) {
        var mh$ = gsk_outset_shadow_node_get_dy$MH();
        try {
            return (float)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_outset_shadow_node_get_spread$MH() {
        return RuntimeHelper.requireNonNull(constants$1663.gsk_outset_shadow_node_get_spread$MH,"gsk_outset_shadow_node_get_spread");
    }
    public static float gsk_outset_shadow_node_get_spread ( Addressable node) {
        var mh$ = gsk_outset_shadow_node_get_spread$MH();
        try {
            return (float)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_outset_shadow_node_get_blur_radius$MH() {
        return RuntimeHelper.requireNonNull(constants$1663.gsk_outset_shadow_node_get_blur_radius$MH,"gsk_outset_shadow_node_get_blur_radius");
    }
    public static float gsk_outset_shadow_node_get_blur_radius ( Addressable node) {
        var mh$ = gsk_outset_shadow_node_get_blur_radius$MH();
        try {
            return (float)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_cairo_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1663.gsk_cairo_node_get_type$MH,"gsk_cairo_node_get_type");
    }
    public static long gsk_cairo_node_get_type () {
        var mh$ = gsk_cairo_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_cairo_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1663.gsk_cairo_node_new$MH,"gsk_cairo_node_new");
    }
    public static MemoryAddress gsk_cairo_node_new ( Addressable bounds) {
        var mh$ = gsk_cairo_node_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(bounds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_cairo_node_get_draw_context$MH() {
        return RuntimeHelper.requireNonNull(constants$1664.gsk_cairo_node_get_draw_context$MH,"gsk_cairo_node_get_draw_context");
    }
    public static MemoryAddress gsk_cairo_node_get_draw_context ( Addressable node) {
        var mh$ = gsk_cairo_node_get_draw_context$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_cairo_node_get_surface$MH() {
        return RuntimeHelper.requireNonNull(constants$1664.gsk_cairo_node_get_surface$MH,"gsk_cairo_node_get_surface");
    }
    public static MemoryAddress gsk_cairo_node_get_surface ( Addressable node) {
        var mh$ = gsk_cairo_node_get_surface$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_container_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1664.gsk_container_node_get_type$MH,"gsk_container_node_get_type");
    }
    public static long gsk_container_node_get_type () {
        var mh$ = gsk_container_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_container_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1664.gsk_container_node_new$MH,"gsk_container_node_new");
    }
    public static MemoryAddress gsk_container_node_new ( Addressable children,  int n_children) {
        var mh$ = gsk_container_node_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(children, n_children);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_container_node_get_n_children$MH() {
        return RuntimeHelper.requireNonNull(constants$1664.gsk_container_node_get_n_children$MH,"gsk_container_node_get_n_children");
    }
    public static int gsk_container_node_get_n_children ( Addressable node) {
        var mh$ = gsk_container_node_get_n_children$MH();
        try {
            return (int)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_container_node_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1664.gsk_container_node_get_child$MH,"gsk_container_node_get_child");
    }
    public static MemoryAddress gsk_container_node_get_child ( Addressable node,  int idx) {
        var mh$ = gsk_container_node_get_child$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1665.gsk_transform_node_get_type$MH,"gsk_transform_node_get_type");
    }
    public static long gsk_transform_node_get_type () {
        var mh$ = gsk_transform_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1665.gsk_transform_node_new$MH,"gsk_transform_node_new");
    }
    public static MemoryAddress gsk_transform_node_new ( Addressable child,  Addressable transform) {
        var mh$ = gsk_transform_node_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(child, transform);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_node_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1665.gsk_transform_node_get_child$MH,"gsk_transform_node_get_child");
    }
    public static MemoryAddress gsk_transform_node_get_child ( Addressable node) {
        var mh$ = gsk_transform_node_get_child$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_node_get_transform$MH() {
        return RuntimeHelper.requireNonNull(constants$1665.gsk_transform_node_get_transform$MH,"gsk_transform_node_get_transform");
    }
    public static MemoryAddress gsk_transform_node_get_transform ( Addressable node) {
        var mh$ = gsk_transform_node_get_transform$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_opacity_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1665.gsk_opacity_node_get_type$MH,"gsk_opacity_node_get_type");
    }
    public static long gsk_opacity_node_get_type () {
        var mh$ = gsk_opacity_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_opacity_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1665.gsk_opacity_node_new$MH,"gsk_opacity_node_new");
    }
    public static MemoryAddress gsk_opacity_node_new ( Addressable child,  float opacity) {
        var mh$ = gsk_opacity_node_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(child, opacity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_opacity_node_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1666.gsk_opacity_node_get_child$MH,"gsk_opacity_node_get_child");
    }
    public static MemoryAddress gsk_opacity_node_get_child ( Addressable node) {
        var mh$ = gsk_opacity_node_get_child$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_opacity_node_get_opacity$MH() {
        return RuntimeHelper.requireNonNull(constants$1666.gsk_opacity_node_get_opacity$MH,"gsk_opacity_node_get_opacity");
    }
    public static float gsk_opacity_node_get_opacity ( Addressable node) {
        var mh$ = gsk_opacity_node_get_opacity$MH();
        try {
            return (float)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_color_matrix_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1666.gsk_color_matrix_node_get_type$MH,"gsk_color_matrix_node_get_type");
    }
    public static long gsk_color_matrix_node_get_type () {
        var mh$ = gsk_color_matrix_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_color_matrix_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1666.gsk_color_matrix_node_new$MH,"gsk_color_matrix_node_new");
    }
    public static MemoryAddress gsk_color_matrix_node_new ( Addressable child,  Addressable color_matrix,  Addressable color_offset) {
        var mh$ = gsk_color_matrix_node_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(child, color_matrix, color_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_color_matrix_node_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1666.gsk_color_matrix_node_get_child$MH,"gsk_color_matrix_node_get_child");
    }
    public static MemoryAddress gsk_color_matrix_node_get_child ( Addressable node) {
        var mh$ = gsk_color_matrix_node_get_child$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_color_matrix_node_get_color_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$1666.gsk_color_matrix_node_get_color_matrix$MH,"gsk_color_matrix_node_get_color_matrix");
    }
    public static MemoryAddress gsk_color_matrix_node_get_color_matrix ( Addressable node) {
        var mh$ = gsk_color_matrix_node_get_color_matrix$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_color_matrix_node_get_color_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1667.gsk_color_matrix_node_get_color_offset$MH,"gsk_color_matrix_node_get_color_offset");
    }
    public static MemoryAddress gsk_color_matrix_node_get_color_offset ( Addressable node) {
        var mh$ = gsk_color_matrix_node_get_color_offset$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_repeat_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1667.gsk_repeat_node_get_type$MH,"gsk_repeat_node_get_type");
    }
    public static long gsk_repeat_node_get_type () {
        var mh$ = gsk_repeat_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_repeat_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1667.gsk_repeat_node_new$MH,"gsk_repeat_node_new");
    }
    public static MemoryAddress gsk_repeat_node_new ( Addressable bounds,  Addressable child,  Addressable child_bounds) {
        var mh$ = gsk_repeat_node_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(bounds, child, child_bounds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_repeat_node_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1667.gsk_repeat_node_get_child$MH,"gsk_repeat_node_get_child");
    }
    public static MemoryAddress gsk_repeat_node_get_child ( Addressable node) {
        var mh$ = gsk_repeat_node_get_child$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_repeat_node_get_child_bounds$MH() {
        return RuntimeHelper.requireNonNull(constants$1667.gsk_repeat_node_get_child_bounds$MH,"gsk_repeat_node_get_child_bounds");
    }
    public static MemoryAddress gsk_repeat_node_get_child_bounds ( Addressable node) {
        var mh$ = gsk_repeat_node_get_child_bounds$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_clip_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1667.gsk_clip_node_get_type$MH,"gsk_clip_node_get_type");
    }
    public static long gsk_clip_node_get_type () {
        var mh$ = gsk_clip_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_clip_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1668.gsk_clip_node_new$MH,"gsk_clip_node_new");
    }
    public static MemoryAddress gsk_clip_node_new ( Addressable child,  Addressable clip) {
        var mh$ = gsk_clip_node_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(child, clip);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_clip_node_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1668.gsk_clip_node_get_child$MH,"gsk_clip_node_get_child");
    }
    public static MemoryAddress gsk_clip_node_get_child ( Addressable node) {
        var mh$ = gsk_clip_node_get_child$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_clip_node_get_clip$MH() {
        return RuntimeHelper.requireNonNull(constants$1668.gsk_clip_node_get_clip$MH,"gsk_clip_node_get_clip");
    }
    public static MemoryAddress gsk_clip_node_get_clip ( Addressable node) {
        var mh$ = gsk_clip_node_get_clip$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_rounded_clip_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1668.gsk_rounded_clip_node_get_type$MH,"gsk_rounded_clip_node_get_type");
    }
    public static long gsk_rounded_clip_node_get_type () {
        var mh$ = gsk_rounded_clip_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_rounded_clip_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1668.gsk_rounded_clip_node_new$MH,"gsk_rounded_clip_node_new");
    }
    public static MemoryAddress gsk_rounded_clip_node_new ( Addressable child,  Addressable clip) {
        var mh$ = gsk_rounded_clip_node_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(child, clip);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_rounded_clip_node_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1668.gsk_rounded_clip_node_get_child$MH,"gsk_rounded_clip_node_get_child");
    }
    public static MemoryAddress gsk_rounded_clip_node_get_child ( Addressable node) {
        var mh$ = gsk_rounded_clip_node_get_child$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_rounded_clip_node_get_clip$MH() {
        return RuntimeHelper.requireNonNull(constants$1669.gsk_rounded_clip_node_get_clip$MH,"gsk_rounded_clip_node_get_clip");
    }
    public static MemoryAddress gsk_rounded_clip_node_get_clip ( Addressable node) {
        var mh$ = gsk_rounded_clip_node_get_clip$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_shadow_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1669.gsk_shadow_node_get_type$MH,"gsk_shadow_node_get_type");
    }
    public static long gsk_shadow_node_get_type () {
        var mh$ = gsk_shadow_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_shadow_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1669.gsk_shadow_node_new$MH,"gsk_shadow_node_new");
    }
    public static MemoryAddress gsk_shadow_node_new ( Addressable child,  Addressable shadows,  long n_shadows) {
        var mh$ = gsk_shadow_node_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(child, shadows, n_shadows);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_shadow_node_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1669.gsk_shadow_node_get_child$MH,"gsk_shadow_node_get_child");
    }
    public static MemoryAddress gsk_shadow_node_get_child ( Addressable node) {
        var mh$ = gsk_shadow_node_get_child$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_shadow_node_get_shadow$MH() {
        return RuntimeHelper.requireNonNull(constants$1669.gsk_shadow_node_get_shadow$MH,"gsk_shadow_node_get_shadow");
    }
    public static MemoryAddress gsk_shadow_node_get_shadow ( Addressable node,  long i) {
        var mh$ = gsk_shadow_node_get_shadow$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node, i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_shadow_node_get_n_shadows$MH() {
        return RuntimeHelper.requireNonNull(constants$1669.gsk_shadow_node_get_n_shadows$MH,"gsk_shadow_node_get_n_shadows");
    }
    public static long gsk_shadow_node_get_n_shadows ( Addressable node) {
        var mh$ = gsk_shadow_node_get_n_shadows$MH();
        try {
            return (long)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_blend_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1670.gsk_blend_node_get_type$MH,"gsk_blend_node_get_type");
    }
    public static long gsk_blend_node_get_type () {
        var mh$ = gsk_blend_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_blend_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1670.gsk_blend_node_new$MH,"gsk_blend_node_new");
    }
    public static MemoryAddress gsk_blend_node_new ( Addressable bottom,  Addressable top,  int blend_mode) {
        var mh$ = gsk_blend_node_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(bottom, top, blend_mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_blend_node_get_bottom_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1670.gsk_blend_node_get_bottom_child$MH,"gsk_blend_node_get_bottom_child");
    }
    public static MemoryAddress gsk_blend_node_get_bottom_child ( Addressable node) {
        var mh$ = gsk_blend_node_get_bottom_child$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_blend_node_get_top_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1670.gsk_blend_node_get_top_child$MH,"gsk_blend_node_get_top_child");
    }
    public static MemoryAddress gsk_blend_node_get_top_child ( Addressable node) {
        var mh$ = gsk_blend_node_get_top_child$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_blend_node_get_blend_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1670.gsk_blend_node_get_blend_mode$MH,"gsk_blend_node_get_blend_mode");
    }
    public static int gsk_blend_node_get_blend_mode ( Addressable node) {
        var mh$ = gsk_blend_node_get_blend_mode$MH();
        try {
            return (int)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_cross_fade_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1670.gsk_cross_fade_node_get_type$MH,"gsk_cross_fade_node_get_type");
    }
    public static long gsk_cross_fade_node_get_type () {
        var mh$ = gsk_cross_fade_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_cross_fade_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1671.gsk_cross_fade_node_new$MH,"gsk_cross_fade_node_new");
    }
    public static MemoryAddress gsk_cross_fade_node_new ( Addressable start,  Addressable end,  float progress) {
        var mh$ = gsk_cross_fade_node_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(start, end, progress);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_cross_fade_node_get_start_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1671.gsk_cross_fade_node_get_start_child$MH,"gsk_cross_fade_node_get_start_child");
    }
    public static MemoryAddress gsk_cross_fade_node_get_start_child ( Addressable node) {
        var mh$ = gsk_cross_fade_node_get_start_child$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_cross_fade_node_get_end_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1671.gsk_cross_fade_node_get_end_child$MH,"gsk_cross_fade_node_get_end_child");
    }
    public static MemoryAddress gsk_cross_fade_node_get_end_child ( Addressable node) {
        var mh$ = gsk_cross_fade_node_get_end_child$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_cross_fade_node_get_progress$MH() {
        return RuntimeHelper.requireNonNull(constants$1671.gsk_cross_fade_node_get_progress$MH,"gsk_cross_fade_node_get_progress");
    }
    public static float gsk_cross_fade_node_get_progress ( Addressable node) {
        var mh$ = gsk_cross_fade_node_get_progress$MH();
        try {
            return (float)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_text_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1671.gsk_text_node_get_type$MH,"gsk_text_node_get_type");
    }
    public static long gsk_text_node_get_type () {
        var mh$ = gsk_text_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_text_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1671.gsk_text_node_new$MH,"gsk_text_node_new");
    }
    public static MemoryAddress gsk_text_node_new ( Addressable font,  Addressable glyphs,  Addressable color,  Addressable offset) {
        var mh$ = gsk_text_node_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(font, glyphs, color, offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_text_node_get_font$MH() {
        return RuntimeHelper.requireNonNull(constants$1672.gsk_text_node_get_font$MH,"gsk_text_node_get_font");
    }
    public static MemoryAddress gsk_text_node_get_font ( Addressable node) {
        var mh$ = gsk_text_node_get_font$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_text_node_has_color_glyphs$MH() {
        return RuntimeHelper.requireNonNull(constants$1672.gsk_text_node_has_color_glyphs$MH,"gsk_text_node_has_color_glyphs");
    }
    public static int gsk_text_node_has_color_glyphs ( Addressable node) {
        var mh$ = gsk_text_node_has_color_glyphs$MH();
        try {
            return (int)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_text_node_get_num_glyphs$MH() {
        return RuntimeHelper.requireNonNull(constants$1672.gsk_text_node_get_num_glyphs$MH,"gsk_text_node_get_num_glyphs");
    }
    public static int gsk_text_node_get_num_glyphs ( Addressable node) {
        var mh$ = gsk_text_node_get_num_glyphs$MH();
        try {
            return (int)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_text_node_get_glyphs$MH() {
        return RuntimeHelper.requireNonNull(constants$1672.gsk_text_node_get_glyphs$MH,"gsk_text_node_get_glyphs");
    }
    public static MemoryAddress gsk_text_node_get_glyphs ( Addressable node,  Addressable n_glyphs) {
        var mh$ = gsk_text_node_get_glyphs$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node, n_glyphs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_text_node_get_color$MH() {
        return RuntimeHelper.requireNonNull(constants$1672.gsk_text_node_get_color$MH,"gsk_text_node_get_color");
    }
    public static MemoryAddress gsk_text_node_get_color ( Addressable node) {
        var mh$ = gsk_text_node_get_color$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_text_node_get_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1672.gsk_text_node_get_offset$MH,"gsk_text_node_get_offset");
    }
    public static MemoryAddress gsk_text_node_get_offset ( Addressable node) {
        var mh$ = gsk_text_node_get_offset$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_blur_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1673.gsk_blur_node_get_type$MH,"gsk_blur_node_get_type");
    }
    public static long gsk_blur_node_get_type () {
        var mh$ = gsk_blur_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_blur_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1673.gsk_blur_node_new$MH,"gsk_blur_node_new");
    }
    public static MemoryAddress gsk_blur_node_new ( Addressable child,  float radius) {
        var mh$ = gsk_blur_node_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(child, radius);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_blur_node_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1673.gsk_blur_node_get_child$MH,"gsk_blur_node_get_child");
    }
    public static MemoryAddress gsk_blur_node_get_child ( Addressable node) {
        var mh$ = gsk_blur_node_get_child$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_blur_node_get_radius$MH() {
        return RuntimeHelper.requireNonNull(constants$1673.gsk_blur_node_get_radius$MH,"gsk_blur_node_get_radius");
    }
    public static float gsk_blur_node_get_radius ( Addressable node) {
        var mh$ = gsk_blur_node_get_radius$MH();
        try {
            return (float)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_node_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1673.gsk_gl_shader_node_get_type$MH,"gsk_gl_shader_node_get_type");
    }
    public static long gsk_gl_shader_node_get_type () {
        var mh$ = gsk_gl_shader_node_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1673.gsk_gl_shader_node_new$MH,"gsk_gl_shader_node_new");
    }
    public static MemoryAddress gsk_gl_shader_node_new ( Addressable shader,  Addressable bounds,  Addressable args,  Addressable children,  int n_children) {
        var mh$ = gsk_gl_shader_node_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(shader, bounds, args, children, n_children);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_node_get_n_children$MH() {
        return RuntimeHelper.requireNonNull(constants$1674.gsk_gl_shader_node_get_n_children$MH,"gsk_gl_shader_node_get_n_children");
    }
    public static int gsk_gl_shader_node_get_n_children ( Addressable node) {
        var mh$ = gsk_gl_shader_node_get_n_children$MH();
        try {
            return (int)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_node_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$1674.gsk_gl_shader_node_get_child$MH,"gsk_gl_shader_node_get_child");
    }
    public static MemoryAddress gsk_gl_shader_node_get_child ( Addressable node,  int idx) {
        var mh$ = gsk_gl_shader_node_get_child$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_node_get_args$MH() {
        return RuntimeHelper.requireNonNull(constants$1674.gsk_gl_shader_node_get_args$MH,"gsk_gl_shader_node_get_args");
    }
    public static MemoryAddress gsk_gl_shader_node_get_args ( Addressable node) {
        var mh$ = gsk_gl_shader_node_get_args$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_shader_node_get_shader$MH() {
        return RuntimeHelper.requireNonNull(constants$1674.gsk_gl_shader_node_get_shader$MH,"gsk_gl_shader_node_get_shader");
    }
    public static MemoryAddress gsk_gl_shader_node_get_shader ( Addressable node) {
        var mh$ = gsk_gl_shader_node_get_shader$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_value_set_render_node$MH() {
        return RuntimeHelper.requireNonNull(constants$1674.gsk_value_set_render_node$MH,"gsk_value_set_render_node");
    }
    public static void gsk_value_set_render_node ( Addressable value,  Addressable node) {
        var mh$ = gsk_value_set_render_node$MH();
        try {
            mh$.invokeExact(value, node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_value_take_render_node$MH() {
        return RuntimeHelper.requireNonNull(constants$1674.gsk_value_take_render_node$MH,"gsk_value_take_render_node");
    }
    public static void gsk_value_take_render_node ( Addressable value,  Addressable node) {
        var mh$ = gsk_value_take_render_node$MH();
        try {
            mh$.invokeExact(value, node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_value_get_render_node$MH() {
        return RuntimeHelper.requireNonNull(constants$1675.gsk_value_get_render_node$MH,"gsk_value_get_render_node");
    }
    public static MemoryAddress gsk_value_get_render_node ( Addressable value) {
        var mh$ = gsk_value_get_render_node$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_value_dup_render_node$MH() {
        return RuntimeHelper.requireNonNull(constants$1675.gsk_value_dup_render_node$MH,"gsk_value_dup_render_node");
    }
    public static MemoryAddress gsk_value_dup_render_node ( Addressable value) {
        var mh$ = gsk_value_dup_render_node$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_renderer_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1675.gsk_renderer_get_type$MH,"gsk_renderer_get_type");
    }
    public static long gsk_renderer_get_type () {
        var mh$ = gsk_renderer_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_renderer_new_for_surface$MH() {
        return RuntimeHelper.requireNonNull(constants$1675.gsk_renderer_new_for_surface$MH,"gsk_renderer_new_for_surface");
    }
    public static MemoryAddress gsk_renderer_new_for_surface ( Addressable surface) {
        var mh$ = gsk_renderer_new_for_surface$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_renderer_get_surface$MH() {
        return RuntimeHelper.requireNonNull(constants$1675.gsk_renderer_get_surface$MH,"gsk_renderer_get_surface");
    }
    public static MemoryAddress gsk_renderer_get_surface ( Addressable renderer) {
        var mh$ = gsk_renderer_get_surface$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(renderer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_renderer_realize$MH() {
        return RuntimeHelper.requireNonNull(constants$1675.gsk_renderer_realize$MH,"gsk_renderer_realize");
    }
    public static int gsk_renderer_realize ( Addressable renderer,  Addressable surface,  Addressable error) {
        var mh$ = gsk_renderer_realize$MH();
        try {
            return (int)mh$.invokeExact(renderer, surface, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_renderer_unrealize$MH() {
        return RuntimeHelper.requireNonNull(constants$1676.gsk_renderer_unrealize$MH,"gsk_renderer_unrealize");
    }
    public static void gsk_renderer_unrealize ( Addressable renderer) {
        var mh$ = gsk_renderer_unrealize$MH();
        try {
            mh$.invokeExact(renderer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_renderer_is_realized$MH() {
        return RuntimeHelper.requireNonNull(constants$1676.gsk_renderer_is_realized$MH,"gsk_renderer_is_realized");
    }
    public static int gsk_renderer_is_realized ( Addressable renderer) {
        var mh$ = gsk_renderer_is_realized$MH();
        try {
            return (int)mh$.invokeExact(renderer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_renderer_render_texture$MH() {
        return RuntimeHelper.requireNonNull(constants$1676.gsk_renderer_render_texture$MH,"gsk_renderer_render_texture");
    }
    public static MemoryAddress gsk_renderer_render_texture ( Addressable renderer,  Addressable root,  Addressable viewport) {
        var mh$ = gsk_renderer_render_texture$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(renderer, root, viewport);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_renderer_render$MH() {
        return RuntimeHelper.requireNonNull(constants$1676.gsk_renderer_render$MH,"gsk_renderer_render");
    }
    public static void gsk_renderer_render ( Addressable renderer,  Addressable root,  Addressable region) {
        var mh$ = gsk_renderer_render$MH();
        try {
            mh$.invokeExact(renderer, root, region);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1676.gsk_transform_get_type$MH,"gsk_transform_get_type");
    }
    public static long gsk_transform_get_type () {
        var mh$ = gsk_transform_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$1676.gsk_transform_ref$MH,"gsk_transform_ref");
    }
    public static MemoryAddress gsk_transform_ref ( Addressable self) {
        var mh$ = gsk_transform_ref$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$1677.gsk_transform_unref$MH,"gsk_transform_unref");
    }
    public static void gsk_transform_unref ( Addressable self) {
        var mh$ = gsk_transform_unref$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_print$MH() {
        return RuntimeHelper.requireNonNull(constants$1677.gsk_transform_print$MH,"gsk_transform_print");
    }
    public static void gsk_transform_print ( Addressable self,  Addressable string) {
        var mh$ = gsk_transform_print$MH();
        try {
            mh$.invokeExact(self, string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1677.gsk_transform_to_string$MH,"gsk_transform_to_string");
    }
    public static MemoryAddress gsk_transform_to_string ( Addressable self) {
        var mh$ = gsk_transform_to_string$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_parse$MH() {
        return RuntimeHelper.requireNonNull(constants$1677.gsk_transform_parse$MH,"gsk_transform_parse");
    }
    public static int gsk_transform_parse ( Addressable string,  Addressable out_transform) {
        var mh$ = gsk_transform_parse$MH();
        try {
            return (int)mh$.invokeExact(string, out_transform);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_to_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$1677.gsk_transform_to_matrix$MH,"gsk_transform_to_matrix");
    }
    public static void gsk_transform_to_matrix ( Addressable self,  Addressable out_matrix) {
        var mh$ = gsk_transform_to_matrix$MH();
        try {
            mh$.invokeExact(self, out_matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_to_2d$MH() {
        return RuntimeHelper.requireNonNull(constants$1677.gsk_transform_to_2d$MH,"gsk_transform_to_2d");
    }
    public static void gsk_transform_to_2d ( Addressable self,  Addressable out_xx,  Addressable out_yx,  Addressable out_xy,  Addressable out_yy,  Addressable out_dx,  Addressable out_dy) {
        var mh$ = gsk_transform_to_2d$MH();
        try {
            mh$.invokeExact(self, out_xx, out_yx, out_xy, out_yy, out_dx, out_dy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_to_2d_components$MH() {
        return RuntimeHelper.requireNonNull(constants$1678.gsk_transform_to_2d_components$MH,"gsk_transform_to_2d_components");
    }
    public static void gsk_transform_to_2d_components ( Addressable self,  Addressable out_skew_x,  Addressable out_skew_y,  Addressable out_scale_x,  Addressable out_scale_y,  Addressable out_angle,  Addressable out_dx,  Addressable out_dy) {
        var mh$ = gsk_transform_to_2d_components$MH();
        try {
            mh$.invokeExact(self, out_skew_x, out_skew_y, out_scale_x, out_scale_y, out_angle, out_dx, out_dy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_to_affine$MH() {
        return RuntimeHelper.requireNonNull(constants$1678.gsk_transform_to_affine$MH,"gsk_transform_to_affine");
    }
    public static void gsk_transform_to_affine ( Addressable self,  Addressable out_scale_x,  Addressable out_scale_y,  Addressable out_dx,  Addressable out_dy) {
        var mh$ = gsk_transform_to_affine$MH();
        try {
            mh$.invokeExact(self, out_scale_x, out_scale_y, out_dx, out_dy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_to_translate$MH() {
        return RuntimeHelper.requireNonNull(constants$1678.gsk_transform_to_translate$MH,"gsk_transform_to_translate");
    }
    public static void gsk_transform_to_translate ( Addressable self,  Addressable out_dx,  Addressable out_dy) {
        var mh$ = gsk_transform_to_translate$MH();
        try {
            mh$.invokeExact(self, out_dx, out_dy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_get_category$MH() {
        return RuntimeHelper.requireNonNull(constants$1678.gsk_transform_get_category$MH,"gsk_transform_get_category");
    }
    public static int gsk_transform_get_category ( Addressable self) {
        var mh$ = gsk_transform_get_category$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$1678.gsk_transform_equal$MH,"gsk_transform_equal");
    }
    public static int gsk_transform_equal ( Addressable first,  Addressable second) {
        var mh$ = gsk_transform_equal$MH();
        try {
            return (int)mh$.invokeExact(first, second);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1678.gsk_transform_new$MH,"gsk_transform_new");
    }
    public static MemoryAddress gsk_transform_new () {
        var mh$ = gsk_transform_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_transform$MH() {
        return RuntimeHelper.requireNonNull(constants$1679.gsk_transform_transform$MH,"gsk_transform_transform");
    }
    public static MemoryAddress gsk_transform_transform ( Addressable next,  Addressable other) {
        var mh$ = gsk_transform_transform$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(next, other);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_invert$MH() {
        return RuntimeHelper.requireNonNull(constants$1679.gsk_transform_invert$MH,"gsk_transform_invert");
    }
    public static MemoryAddress gsk_transform_invert ( Addressable self) {
        var mh$ = gsk_transform_invert$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$1679.gsk_transform_matrix$MH,"gsk_transform_matrix");
    }
    public static MemoryAddress gsk_transform_matrix ( Addressable next,  Addressable matrix) {
        var mh$ = gsk_transform_matrix$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(next, matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_translate$MH() {
        return RuntimeHelper.requireNonNull(constants$1679.gsk_transform_translate$MH,"gsk_transform_translate");
    }
    public static MemoryAddress gsk_transform_translate ( Addressable next,  Addressable point) {
        var mh$ = gsk_transform_translate$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(next, point);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_translate_3d$MH() {
        return RuntimeHelper.requireNonNull(constants$1679.gsk_transform_translate_3d$MH,"gsk_transform_translate_3d");
    }
    public static MemoryAddress gsk_transform_translate_3d ( Addressable next,  Addressable point) {
        var mh$ = gsk_transform_translate_3d$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(next, point);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_skew$MH() {
        return RuntimeHelper.requireNonNull(constants$1679.gsk_transform_skew$MH,"gsk_transform_skew");
    }
    public static MemoryAddress gsk_transform_skew ( Addressable next,  float skew_x,  float skew_y) {
        var mh$ = gsk_transform_skew$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(next, skew_x, skew_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_rotate$MH() {
        return RuntimeHelper.requireNonNull(constants$1680.gsk_transform_rotate$MH,"gsk_transform_rotate");
    }
    public static MemoryAddress gsk_transform_rotate ( Addressable next,  float angle) {
        var mh$ = gsk_transform_rotate$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(next, angle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_rotate_3d$MH() {
        return RuntimeHelper.requireNonNull(constants$1680.gsk_transform_rotate_3d$MH,"gsk_transform_rotate_3d");
    }
    public static MemoryAddress gsk_transform_rotate_3d ( Addressable next,  float angle,  Addressable axis) {
        var mh$ = gsk_transform_rotate_3d$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(next, angle, axis);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$1680.gsk_transform_scale$MH,"gsk_transform_scale");
    }
    public static MemoryAddress gsk_transform_scale ( Addressable next,  float factor_x,  float factor_y) {
        var mh$ = gsk_transform_scale$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(next, factor_x, factor_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_scale_3d$MH() {
        return RuntimeHelper.requireNonNull(constants$1680.gsk_transform_scale_3d$MH,"gsk_transform_scale_3d");
    }
    public static MemoryAddress gsk_transform_scale_3d ( Addressable next,  float factor_x,  float factor_y,  float factor_z) {
        var mh$ = gsk_transform_scale_3d$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(next, factor_x, factor_y, factor_z);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_perspective$MH() {
        return RuntimeHelper.requireNonNull(constants$1680.gsk_transform_perspective$MH,"gsk_transform_perspective");
    }
    public static MemoryAddress gsk_transform_perspective ( Addressable next,  float depth) {
        var mh$ = gsk_transform_perspective$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(next, depth);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_transform_bounds$MH() {
        return RuntimeHelper.requireNonNull(constants$1680.gsk_transform_transform_bounds$MH,"gsk_transform_transform_bounds");
    }
    public static void gsk_transform_transform_bounds ( Addressable self,  Addressable rect,  Addressable out_rect) {
        var mh$ = gsk_transform_transform_bounds$MH();
        try {
            mh$.invokeExact(self, rect, out_rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_transform_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1681.gsk_transform_transform_point$MH,"gsk_transform_transform_point");
    }
    public static void gsk_transform_transform_point ( Addressable self,  Addressable point,  Addressable out_point) {
        var mh$ = gsk_transform_transform_point$MH();
        try {
            mh$.invokeExact(self, point, out_point);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_cairo_renderer_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1681.gsk_cairo_renderer_get_type$MH,"gsk_cairo_renderer_get_type");
    }
    public static long gsk_cairo_renderer_get_type () {
        var mh$ = gsk_cairo_renderer_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_cairo_renderer_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1681.gsk_cairo_renderer_new$MH,"gsk_cairo_renderer_new");
    }
    public static MemoryAddress gsk_cairo_renderer_new () {
        var mh$ = gsk_cairo_renderer_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_render_node_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1681.gsk_render_node_type_get_type$MH,"gsk_render_node_type_get_type");
    }
    public static long gsk_render_node_type_get_type () {
        var mh$ = gsk_render_node_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_scaling_filter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1681.gsk_scaling_filter_get_type$MH,"gsk_scaling_filter_get_type");
    }
    public static long gsk_scaling_filter_get_type () {
        var mh$ = gsk_scaling_filter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_blend_mode_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1681.gsk_blend_mode_get_type$MH,"gsk_blend_mode_get_type");
    }
    public static long gsk_blend_mode_get_type () {
        var mh$ = gsk_blend_mode_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_corner_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1682.gsk_corner_get_type$MH,"gsk_corner_get_type");
    }
    public static long gsk_corner_get_type () {
        var mh$ = gsk_corner_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_serialization_error_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1682.gsk_serialization_error_get_type$MH,"gsk_serialization_error_get_type");
    }
    public static long gsk_serialization_error_get_type () {
        var mh$ = gsk_serialization_error_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_transform_category_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1682.gsk_transform_category_get_type$MH,"gsk_transform_category_get_type");
    }
    public static long gsk_transform_category_get_type () {
        var mh$ = gsk_transform_category_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_uniform_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1682.gsk_gl_uniform_type_get_type$MH,"gsk_gl_uniform_type_get_type");
    }
    public static long gsk_gl_uniform_type_get_type () {
        var mh$ = gsk_gl_uniform_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GskRenderer_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GskRenderer_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GskRenderer_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GskRenderer_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GskRenderer$MH() {
        return RuntimeHelper.requireNonNull(constants$1682.glib_autoptr_clear_GskRenderer$MH,"glib_autoptr_clear_GskRenderer");
    }
    public static void glib_autoptr_clear_GskRenderer ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GskRenderer$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GskRenderer$MH() {
        return RuntimeHelper.requireNonNull(constants$1682.glib_autoptr_cleanup_GskRenderer$MH,"glib_autoptr_cleanup_GskRenderer");
    }
    public static void glib_autoptr_cleanup_GskRenderer ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GskRenderer$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GskRenderer$MH() {
        return RuntimeHelper.requireNonNull(constants$1683.glib_listautoptr_cleanup_GskRenderer$MH,"glib_listautoptr_cleanup_GskRenderer");
    }
    public static void glib_listautoptr_cleanup_GskRenderer ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GskRenderer$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GskRenderer$MH() {
        return RuntimeHelper.requireNonNull(constants$1683.glib_slistautoptr_cleanup_GskRenderer$MH,"glib_slistautoptr_cleanup_GskRenderer");
    }
    public static void glib_slistautoptr_cleanup_GskRenderer ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GskRenderer$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GskRenderer$MH() {
        return RuntimeHelper.requireNonNull(constants$1683.glib_queueautoptr_cleanup_GskRenderer$MH,"glib_queueautoptr_cleanup_GskRenderer");
    }
    public static void glib_queueautoptr_cleanup_GskRenderer ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GskRenderer$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GskRenderNode_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GskRenderNode_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GskRenderNode_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GskRenderNode_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GskRenderNode$MH() {
        return RuntimeHelper.requireNonNull(constants$1683.glib_autoptr_clear_GskRenderNode$MH,"glib_autoptr_clear_GskRenderNode");
    }
    public static void glib_autoptr_clear_GskRenderNode ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GskRenderNode$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GskRenderNode$MH() {
        return RuntimeHelper.requireNonNull(constants$1683.glib_autoptr_cleanup_GskRenderNode$MH,"glib_autoptr_cleanup_GskRenderNode");
    }
    public static void glib_autoptr_cleanup_GskRenderNode ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GskRenderNode$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GskRenderNode$MH() {
        return RuntimeHelper.requireNonNull(constants$1683.glib_listautoptr_cleanup_GskRenderNode$MH,"glib_listautoptr_cleanup_GskRenderNode");
    }
    public static void glib_listautoptr_cleanup_GskRenderNode ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GskRenderNode$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GskRenderNode$MH() {
        return RuntimeHelper.requireNonNull(constants$1684.glib_slistautoptr_cleanup_GskRenderNode$MH,"glib_slistautoptr_cleanup_GskRenderNode");
    }
    public static void glib_slistautoptr_cleanup_GskRenderNode ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GskRenderNode$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GskRenderNode$MH() {
        return RuntimeHelper.requireNonNull(constants$1684.glib_queueautoptr_cleanup_GskRenderNode$MH,"glib_queueautoptr_cleanup_GskRenderNode");
    }
    public static void glib_queueautoptr_cleanup_GskRenderNode ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GskRenderNode$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GskTransform_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GskTransform_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GskTransform_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GskTransform_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GskTransform$MH() {
        return RuntimeHelper.requireNonNull(constants$1684.glib_autoptr_clear_GskTransform$MH,"glib_autoptr_clear_GskTransform");
    }
    public static void glib_autoptr_clear_GskTransform ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GskTransform$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GskTransform$MH() {
        return RuntimeHelper.requireNonNull(constants$1684.glib_autoptr_cleanup_GskTransform$MH,"glib_autoptr_cleanup_GskTransform");
    }
    public static void glib_autoptr_cleanup_GskTransform ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GskTransform$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GskTransform$MH() {
        return RuntimeHelper.requireNonNull(constants$1684.glib_listautoptr_cleanup_GskTransform$MH,"glib_listautoptr_cleanup_GskTransform");
    }
    public static void glib_listautoptr_cleanup_GskTransform ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GskTransform$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GskTransform$MH() {
        return RuntimeHelper.requireNonNull(constants$1684.glib_slistautoptr_cleanup_GskTransform$MH,"glib_slistautoptr_cleanup_GskTransform");
    }
    public static void glib_slistautoptr_cleanup_GskTransform ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GskTransform$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GskTransform$MH() {
        return RuntimeHelper.requireNonNull(constants$1685.glib_queueautoptr_cleanup_GskTransform$MH,"glib_queueautoptr_cleanup_GskTransform");
    }
    public static void glib_queueautoptr_cleanup_GskTransform ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GskTransform$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GTK_ALIGN_FILL() {
        return (int)0L;
    }
    public static int GTK_ALIGN_START() {
        return (int)1L;
    }
    public static int GTK_ALIGN_END() {
        return (int)2L;
    }
    public static int GTK_ALIGN_CENTER() {
        return (int)3L;
    }
    public static int GTK_ALIGN_BASELINE() {
        return (int)4L;
    }
    public static int GTK_ARROW_UP() {
        return (int)0L;
    }
    public static int GTK_ARROW_DOWN() {
        return (int)1L;
    }
    public static int GTK_ARROW_LEFT() {
        return (int)2L;
    }
    public static int GTK_ARROW_RIGHT() {
        return (int)3L;
    }
    public static int GTK_ARROW_NONE() {
        return (int)4L;
    }
    public static int GTK_BASELINE_POSITION_TOP() {
        return (int)0L;
    }
    public static int GTK_BASELINE_POSITION_CENTER() {
        return (int)1L;
    }
    public static int GTK_BASELINE_POSITION_BOTTOM() {
        return (int)2L;
    }
    public static int GTK_DELETE_CHARS() {
        return (int)0L;
    }
    public static int GTK_DELETE_WORD_ENDS() {
        return (int)1L;
    }
    public static int GTK_DELETE_WORDS() {
        return (int)2L;
    }
    public static int GTK_DELETE_DISPLAY_LINES() {
        return (int)3L;
    }
    public static int GTK_DELETE_DISPLAY_LINE_ENDS() {
        return (int)4L;
    }
    public static int GTK_DELETE_PARAGRAPH_ENDS() {
        return (int)5L;
    }
    public static int GTK_DELETE_PARAGRAPHS() {
        return (int)6L;
    }
    public static int GTK_DELETE_WHITESPACE() {
        return (int)7L;
    }
    public static int GTK_DIR_TAB_FORWARD() {
        return (int)0L;
    }
    public static int GTK_DIR_TAB_BACKWARD() {
        return (int)1L;
    }
    public static int GTK_DIR_UP() {
        return (int)2L;
    }
    public static int GTK_DIR_DOWN() {
        return (int)3L;
    }
    public static int GTK_DIR_LEFT() {
        return (int)4L;
    }
    public static int GTK_DIR_RIGHT() {
        return (int)5L;
    }
    public static int GTK_ICON_SIZE_INHERIT() {
        return (int)0L;
    }
    public static int GTK_ICON_SIZE_NORMAL() {
        return (int)1L;
    }
    public static int GTK_ICON_SIZE_LARGE() {
        return (int)2L;
    }
    public static int GTK_SENSITIVITY_AUTO() {
        return (int)0L;
    }
    public static int GTK_SENSITIVITY_ON() {
        return (int)1L;
    }
    public static int GTK_SENSITIVITY_OFF() {
        return (int)2L;
    }
    public static int GTK_TEXT_DIR_NONE() {
        return (int)0L;
    }
    public static int GTK_TEXT_DIR_LTR() {
        return (int)1L;
    }
    public static int GTK_TEXT_DIR_RTL() {
        return (int)2L;
    }
    public static int GTK_JUSTIFY_LEFT() {
        return (int)0L;
    }
    public static int GTK_JUSTIFY_RIGHT() {
        return (int)1L;
    }
    public static int GTK_JUSTIFY_CENTER() {
        return (int)2L;
    }
    public static int GTK_JUSTIFY_FILL() {
        return (int)3L;
    }
    public static int GTK_MESSAGE_INFO() {
        return (int)0L;
    }
    public static int GTK_MESSAGE_WARNING() {
        return (int)1L;
    }
    public static int GTK_MESSAGE_QUESTION() {
        return (int)2L;
    }
    public static int GTK_MESSAGE_ERROR() {
        return (int)3L;
    }
    public static int GTK_MESSAGE_OTHER() {
        return (int)4L;
    }
    public static int GTK_MOVEMENT_LOGICAL_POSITIONS() {
        return (int)0L;
    }
    public static int GTK_MOVEMENT_VISUAL_POSITIONS() {
        return (int)1L;
    }
    public static int GTK_MOVEMENT_WORDS() {
        return (int)2L;
    }
    public static int GTK_MOVEMENT_DISPLAY_LINES() {
        return (int)3L;
    }
    public static int GTK_MOVEMENT_DISPLAY_LINE_ENDS() {
        return (int)4L;
    }
    public static int GTK_MOVEMENT_PARAGRAPHS() {
        return (int)5L;
    }
    public static int GTK_MOVEMENT_PARAGRAPH_ENDS() {
        return (int)6L;
    }
    public static int GTK_MOVEMENT_PAGES() {
        return (int)7L;
    }
    public static int GTK_MOVEMENT_BUFFER_ENDS() {
        return (int)8L;
    }
    public static int GTK_MOVEMENT_HORIZONTAL_PAGES() {
        return (int)9L;
    }
    public static int GTK_NATURAL_WRAP_INHERIT() {
        return (int)0L;
    }
    public static int GTK_NATURAL_WRAP_NONE() {
        return (int)1L;
    }
    public static int GTK_NATURAL_WRAP_WORD() {
        return (int)2L;
    }
    public static int GTK_SCROLL_STEPS() {
        return (int)0L;
    }
    public static int GTK_SCROLL_PAGES() {
        return (int)1L;
    }
    public static int GTK_SCROLL_ENDS() {
        return (int)2L;
    }
    public static int GTK_SCROLL_HORIZONTAL_STEPS() {
        return (int)3L;
    }
    public static int GTK_SCROLL_HORIZONTAL_PAGES() {
        return (int)4L;
    }
    public static int GTK_SCROLL_HORIZONTAL_ENDS() {
        return (int)5L;
    }
    public static int GTK_ORIENTATION_HORIZONTAL() {
        return (int)0L;
    }
    public static int GTK_ORIENTATION_VERTICAL() {
        return (int)1L;
    }
    public static int GTK_OVERFLOW_VISIBLE() {
        return (int)0L;
    }
    public static int GTK_OVERFLOW_HIDDEN() {
        return (int)1L;
    }
    public static int GTK_PACK_START() {
        return (int)0L;
    }
    public static int GTK_PACK_END() {
        return (int)1L;
    }
    public static int GTK_POS_LEFT() {
        return (int)0L;
    }
    public static int GTK_POS_RIGHT() {
        return (int)1L;
    }
    public static int GTK_POS_TOP() {
        return (int)2L;
    }
    public static int GTK_POS_BOTTOM() {
        return (int)3L;
    }
    public static int GTK_SCROLL_NONE() {
        return (int)0L;
    }
    public static int GTK_SCROLL_JUMP() {
        return (int)1L;
    }
    public static int GTK_SCROLL_STEP_BACKWARD() {
        return (int)2L;
    }
    public static int GTK_SCROLL_STEP_FORWARD() {
        return (int)3L;
    }
    public static int GTK_SCROLL_PAGE_BACKWARD() {
        return (int)4L;
    }
    public static int GTK_SCROLL_PAGE_FORWARD() {
        return (int)5L;
    }
    public static int GTK_SCROLL_STEP_UP() {
        return (int)6L;
    }
    public static int GTK_SCROLL_STEP_DOWN() {
        return (int)7L;
    }
    public static int GTK_SCROLL_PAGE_UP() {
        return (int)8L;
    }
    public static int GTK_SCROLL_PAGE_DOWN() {
        return (int)9L;
    }
    public static int GTK_SCROLL_STEP_LEFT() {
        return (int)10L;
    }
    public static int GTK_SCROLL_STEP_RIGHT() {
        return (int)11L;
    }
    public static int GTK_SCROLL_PAGE_LEFT() {
        return (int)12L;
    }
    public static int GTK_SCROLL_PAGE_RIGHT() {
        return (int)13L;
    }
    public static int GTK_SCROLL_START() {
        return (int)14L;
    }
    public static int GTK_SCROLL_END() {
        return (int)15L;
    }
    public static int GTK_SELECTION_NONE() {
        return (int)0L;
    }
    public static int GTK_SELECTION_SINGLE() {
        return (int)1L;
    }
    public static int GTK_SELECTION_BROWSE() {
        return (int)2L;
    }
    public static int GTK_SELECTION_MULTIPLE() {
        return (int)3L;
    }
    public static int GTK_WRAP_NONE() {
        return (int)0L;
    }
    public static int GTK_WRAP_CHAR() {
        return (int)1L;
    }
    public static int GTK_WRAP_WORD() {
        return (int)2L;
    }
    public static int GTK_WRAP_WORD_CHAR() {
        return (int)3L;
    }
    public static int GTK_SORT_ASCENDING() {
        return (int)0L;
    }
    public static int GTK_SORT_DESCENDING() {
        return (int)1L;
    }
    public static int GTK_PRINT_PAGES_ALL() {
        return (int)0L;
    }
    public static int GTK_PRINT_PAGES_CURRENT() {
        return (int)1L;
    }
    public static int GTK_PRINT_PAGES_RANGES() {
        return (int)2L;
    }
    public static int GTK_PRINT_PAGES_SELECTION() {
        return (int)3L;
    }
    public static int GTK_PAGE_SET_ALL() {
        return (int)0L;
    }
    public static int GTK_PAGE_SET_EVEN() {
        return (int)1L;
    }
    public static int GTK_PAGE_SET_ODD() {
        return (int)2L;
    }
    public static int GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_TOP_TO_BOTTOM() {
        return (int)0L;
    }
    public static int GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_BOTTOM_TO_TOP() {
        return (int)1L;
    }
    public static int GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_TOP_TO_BOTTOM() {
        return (int)2L;
    }
    public static int GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_BOTTOM_TO_TOP() {
        return (int)3L;
    }
    public static int GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_LEFT_TO_RIGHT() {
        return (int)4L;
    }
    public static int GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_RIGHT_TO_LEFT() {
        return (int)5L;
    }
    public static int GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_LEFT_TO_RIGHT() {
        return (int)6L;
    }
    public static int GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_RIGHT_TO_LEFT() {
        return (int)7L;
    }
    public static int GTK_ORDERING_SMALLER() {
        return (int)-1L;
    }
    public static int GTK_ORDERING_EQUAL() {
        return (int)0L;
    }
    public static int GTK_ORDERING_LARGER() {
        return (int)1L;
    }
    public static MethodHandle gtk_ordering_from_cmpfunc$MH() {
        return RuntimeHelper.requireNonNull(constants$1685.gtk_ordering_from_cmpfunc$MH,"gtk_ordering_from_cmpfunc");
    }
    public static int gtk_ordering_from_cmpfunc ( int cmpfunc_result) {
        var mh$ = gtk_ordering_from_cmpfunc$MH();
        try {
            return (int)mh$.invokeExact(cmpfunc_result);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GTK_PAGE_ORIENTATION_PORTRAIT() {
        return (int)0L;
    }
    public static int GTK_PAGE_ORIENTATION_LANDSCAPE() {
        return (int)1L;
    }
    public static int GTK_PAGE_ORIENTATION_REVERSE_PORTRAIT() {
        return (int)2L;
    }
    public static int GTK_PAGE_ORIENTATION_REVERSE_LANDSCAPE() {
        return (int)3L;
    }
    public static int GTK_PRINT_QUALITY_LOW() {
        return (int)0L;
    }
    public static int GTK_PRINT_QUALITY_NORMAL() {
        return (int)1L;
    }
    public static int GTK_PRINT_QUALITY_HIGH() {
        return (int)2L;
    }
    public static int GTK_PRINT_QUALITY_DRAFT() {
        return (int)3L;
    }
    public static int GTK_PRINT_DUPLEX_SIMPLEX() {
        return (int)0L;
    }
    public static int GTK_PRINT_DUPLEX_HORIZONTAL() {
        return (int)1L;
    }
    public static int GTK_PRINT_DUPLEX_VERTICAL() {
        return (int)2L;
    }
    public static int GTK_UNIT_NONE() {
        return (int)0L;
    }
    public static int GTK_UNIT_POINTS() {
        return (int)1L;
    }
    public static int GTK_UNIT_INCH() {
        return (int)2L;
    }
    public static int GTK_UNIT_MM() {
        return (int)3L;
    }
    public static int GTK_TREE_VIEW_GRID_LINES_NONE() {
        return (int)0L;
    }
    public static int GTK_TREE_VIEW_GRID_LINES_HORIZONTAL() {
        return (int)1L;
    }
    public static int GTK_TREE_VIEW_GRID_LINES_VERTICAL() {
        return (int)2L;
    }
    public static int GTK_TREE_VIEW_GRID_LINES_BOTH() {
        return (int)3L;
    }
    public static int GTK_SIZE_GROUP_NONE() {
        return (int)0L;
    }
    public static int GTK_SIZE_GROUP_HORIZONTAL() {
        return (int)1L;
    }
    public static int GTK_SIZE_GROUP_VERTICAL() {
        return (int)2L;
    }
    public static int GTK_SIZE_GROUP_BOTH() {
        return (int)3L;
    }
    public static int GTK_SIZE_REQUEST_HEIGHT_FOR_WIDTH() {
        return (int)0L;
    }
    public static int GTK_SIZE_REQUEST_WIDTH_FOR_HEIGHT() {
        return (int)1L;
    }
    public static int GTK_SIZE_REQUEST_CONSTANT_SIZE() {
        return (int)2L;
    }
    public static int GTK_SCROLL_MINIMUM() {
        return (int)0L;
    }
    public static int GTK_SCROLL_NATURAL() {
        return (int)1L;
    }
    public static int GTK_STATE_FLAG_NORMAL() {
        return (int)0L;
    }
    public static int GTK_STATE_FLAG_ACTIVE() {
        return (int)1L;
    }
    public static int GTK_STATE_FLAG_PRELIGHT() {
        return (int)2L;
    }
    public static int GTK_STATE_FLAG_SELECTED() {
        return (int)4L;
    }
    public static int GTK_STATE_FLAG_INSENSITIVE() {
        return (int)8L;
    }
    public static int GTK_STATE_FLAG_INCONSISTENT() {
        return (int)16L;
    }
    public static int GTK_STATE_FLAG_FOCUSED() {
        return (int)32L;
    }
    public static int GTK_STATE_FLAG_BACKDROP() {
        return (int)64L;
    }
    public static int GTK_STATE_FLAG_DIR_LTR() {
        return (int)128L;
    }
    public static int GTK_STATE_FLAG_DIR_RTL() {
        return (int)256L;
    }
    public static int GTK_STATE_FLAG_LINK() {
        return (int)512L;
    }
    public static int GTK_STATE_FLAG_VISITED() {
        return (int)1024L;
    }
    public static int GTK_STATE_FLAG_CHECKED() {
        return (int)2048L;
    }
    public static int GTK_STATE_FLAG_DROP_ACTIVE() {
        return (int)4096L;
    }
    public static int GTK_STATE_FLAG_FOCUS_VISIBLE() {
        return (int)8192L;
    }
    public static int GTK_STATE_FLAG_FOCUS_WITHIN() {
        return (int)16384L;
    }
    public static int GTK_BORDER_STYLE_NONE() {
        return (int)0L;
    }
    public static int GTK_BORDER_STYLE_HIDDEN() {
        return (int)1L;
    }
    public static int GTK_BORDER_STYLE_SOLID() {
        return (int)2L;
    }
    public static int GTK_BORDER_STYLE_INSET() {
        return (int)3L;
    }
    public static int GTK_BORDER_STYLE_OUTSET() {
        return (int)4L;
    }
    public static int GTK_BORDER_STYLE_DOTTED() {
        return (int)5L;
    }
    public static int GTK_BORDER_STYLE_DASHED() {
        return (int)6L;
    }
    public static int GTK_BORDER_STYLE_DOUBLE() {
        return (int)7L;
    }
    public static int GTK_BORDER_STYLE_GROOVE() {
        return (int)8L;
    }
    public static int GTK_BORDER_STYLE_RIDGE() {
        return (int)9L;
    }
    public static int GTK_LEVEL_BAR_MODE_CONTINUOUS() {
        return (int)0L;
    }
    public static int GTK_LEVEL_BAR_MODE_DISCRETE() {
        return (int)1L;
    }
    public static int GTK_INPUT_PURPOSE_FREE_FORM() {
        return (int)0L;
    }
    public static int GTK_INPUT_PURPOSE_ALPHA() {
        return (int)1L;
    }
    public static int GTK_INPUT_PURPOSE_DIGITS() {
        return (int)2L;
    }
    public static int GTK_INPUT_PURPOSE_NUMBER() {
        return (int)3L;
    }
    public static int GTK_INPUT_PURPOSE_PHONE() {
        return (int)4L;
    }
    public static int GTK_INPUT_PURPOSE_URL() {
        return (int)5L;
    }
    public static int GTK_INPUT_PURPOSE_EMAIL() {
        return (int)6L;
    }
    public static int GTK_INPUT_PURPOSE_NAME() {
        return (int)7L;
    }
    public static int GTK_INPUT_PURPOSE_PASSWORD() {
        return (int)8L;
    }
    public static int GTK_INPUT_PURPOSE_PIN() {
        return (int)9L;
    }
    public static int GTK_INPUT_PURPOSE_TERMINAL() {
        return (int)10L;
    }
    public static int GTK_INPUT_HINT_NONE() {
        return (int)0L;
    }
    public static int GTK_INPUT_HINT_SPELLCHECK() {
        return (int)1L;
    }
    public static int GTK_INPUT_HINT_NO_SPELLCHECK() {
        return (int)2L;
    }
    public static int GTK_INPUT_HINT_WORD_COMPLETION() {
        return (int)4L;
    }
    public static int GTK_INPUT_HINT_LOWERCASE() {
        return (int)8L;
    }
    public static int GTK_INPUT_HINT_UPPERCASE_CHARS() {
        return (int)16L;
    }
    public static int GTK_INPUT_HINT_UPPERCASE_WORDS() {
        return (int)32L;
    }
    public static int GTK_INPUT_HINT_UPPERCASE_SENTENCES() {
        return (int)64L;
    }
    public static int GTK_INPUT_HINT_INHIBIT_OSK() {
        return (int)128L;
    }
    public static int GTK_INPUT_HINT_VERTICAL_WRITING() {
        return (int)256L;
    }
    public static int GTK_INPUT_HINT_EMOJI() {
        return (int)512L;
    }
    public static int GTK_INPUT_HINT_NO_EMOJI() {
        return (int)1024L;
    }
    public static int GTK_INPUT_HINT_PRIVATE() {
        return (int)2048L;
    }
    public static int GTK_PHASE_NONE() {
        return (int)0L;
    }
    public static int GTK_PHASE_CAPTURE() {
        return (int)1L;
    }
    public static int GTK_PHASE_BUBBLE() {
        return (int)2L;
    }
    public static int GTK_PHASE_TARGET() {
        return (int)3L;
    }
    public static int GTK_LIMIT_NONE() {
        return (int)0L;
    }
    public static int GTK_LIMIT_SAME_NATIVE() {
        return (int)1L;
    }
    public static int GTK_EVENT_SEQUENCE_NONE() {
        return (int)0L;
    }
    public static int GTK_EVENT_SEQUENCE_CLAIMED() {
        return (int)1L;
    }
    public static int GTK_EVENT_SEQUENCE_DENIED() {
        return (int)2L;
    }
    public static int GTK_PAN_DIRECTION_LEFT() {
        return (int)0L;
    }
    public static int GTK_PAN_DIRECTION_RIGHT() {
        return (int)1L;
    }
    public static int GTK_PAN_DIRECTION_UP() {
        return (int)2L;
    }
    public static int GTK_PAN_DIRECTION_DOWN() {
        return (int)3L;
    }
    public static int GTK_SHORTCUT_SCOPE_LOCAL() {
        return (int)0L;
    }
    public static int GTK_SHORTCUT_SCOPE_MANAGED() {
        return (int)1L;
    }
    public static int GTK_SHORTCUT_SCOPE_GLOBAL() {
        return (int)2L;
    }
    public static int GTK_PICK_DEFAULT() {
        return (int)0L;
    }
    public static int GTK_PICK_INSENSITIVE() {
        return (int)1L;
    }
    public static int GTK_PICK_NON_TARGETABLE() {
        return (int)2L;
    }
    public static int GTK_CONSTRAINT_RELATION_LE() {
        return (int)-1L;
    }
    public static int GTK_CONSTRAINT_RELATION_EQ() {
        return (int)0L;
    }
    public static int GTK_CONSTRAINT_RELATION_GE() {
        return (int)1L;
    }
    public static int GTK_CONSTRAINT_STRENGTH_REQUIRED() {
        return (int)1001001000L;
    }
    public static int GTK_CONSTRAINT_STRENGTH_STRONG() {
        return (int)1000000000L;
    }
    public static int GTK_CONSTRAINT_STRENGTH_MEDIUM() {
        return (int)1000L;
    }
    public static int GTK_CONSTRAINT_STRENGTH_WEAK() {
        return (int)1L;
    }
    public static int GTK_CONSTRAINT_ATTRIBUTE_NONE() {
        return (int)0L;
    }
    public static int GTK_CONSTRAINT_ATTRIBUTE_LEFT() {
        return (int)1L;
    }
    public static int GTK_CONSTRAINT_ATTRIBUTE_RIGHT() {
        return (int)2L;
    }
    public static int GTK_CONSTRAINT_ATTRIBUTE_TOP() {
        return (int)3L;
    }
    public static int GTK_CONSTRAINT_ATTRIBUTE_BOTTOM() {
        return (int)4L;
    }
    public static int GTK_CONSTRAINT_ATTRIBUTE_START() {
        return (int)5L;
    }
    public static int GTK_CONSTRAINT_ATTRIBUTE_END() {
        return (int)6L;
    }
    public static int GTK_CONSTRAINT_ATTRIBUTE_WIDTH() {
        return (int)7L;
    }
    public static int GTK_CONSTRAINT_ATTRIBUTE_HEIGHT() {
        return (int)8L;
    }
    public static int GTK_CONSTRAINT_ATTRIBUTE_CENTER_X() {
        return (int)9L;
    }
    public static int GTK_CONSTRAINT_ATTRIBUTE_CENTER_Y() {
        return (int)10L;
    }
    public static int GTK_CONSTRAINT_ATTRIBUTE_BASELINE() {
        return (int)11L;
    }
    public static int GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_SYMBOL() {
        return (int)0L;
    }
    public static int GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_ATTRIBUTE() {
        return (int)1L;
    }
    public static int GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_VIEW() {
        return (int)2L;
    }
    public static int GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_METRIC() {
        return (int)3L;
    }
    public static int GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_PRIORITY() {
        return (int)4L;
    }
    public static int GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_RELATION() {
        return (int)5L;
    }
    public static int GTK_SYSTEM_SETTING_DPI() {
        return (int)0L;
    }
    public static int GTK_SYSTEM_SETTING_FONT_NAME() {
        return (int)1L;
    }
    public static int GTK_SYSTEM_SETTING_FONT_CONFIG() {
        return (int)2L;
    }
    public static int GTK_SYSTEM_SETTING_DISPLAY() {
        return (int)3L;
    }
    public static int GTK_SYSTEM_SETTING_ICON_THEME() {
        return (int)4L;
    }
    public static int GTK_SYMBOLIC_COLOR_FOREGROUND() {
        return (int)0L;
    }
    public static int GTK_SYMBOLIC_COLOR_ERROR() {
        return (int)1L;
    }
    public static int GTK_SYMBOLIC_COLOR_WARNING() {
        return (int)2L;
    }
    public static int GTK_SYMBOLIC_COLOR_SUCCESS() {
        return (int)3L;
    }
    public static int GTK_ACCESSIBLE_ROLE_ALERT() {
        return (int)0L;
    }
    public static int GTK_ACCESSIBLE_ROLE_ALERT_DIALOG() {
        return (int)1L;
    }
    public static int GTK_ACCESSIBLE_ROLE_BANNER() {
        return (int)2L;
    }
    public static int GTK_ACCESSIBLE_ROLE_BUTTON() {
        return (int)3L;
    }
    public static int GTK_ACCESSIBLE_ROLE_CAPTION() {
        return (int)4L;
    }
    public static int GTK_ACCESSIBLE_ROLE_CELL() {
        return (int)5L;
    }
    public static int GTK_ACCESSIBLE_ROLE_CHECKBOX() {
        return (int)6L;
    }
    public static int GTK_ACCESSIBLE_ROLE_COLUMN_HEADER() {
        return (int)7L;
    }
    public static int GTK_ACCESSIBLE_ROLE_COMBO_BOX() {
        return (int)8L;
    }
    public static int GTK_ACCESSIBLE_ROLE_COMMAND() {
        return (int)9L;
    }
    public static int GTK_ACCESSIBLE_ROLE_COMPOSITE() {
        return (int)10L;
    }
    public static int GTK_ACCESSIBLE_ROLE_DIALOG() {
        return (int)11L;
    }
    public static int GTK_ACCESSIBLE_ROLE_DOCUMENT() {
        return (int)12L;
    }
    public static int GTK_ACCESSIBLE_ROLE_FEED() {
        return (int)13L;
    }
    public static int GTK_ACCESSIBLE_ROLE_FORM() {
        return (int)14L;
    }
    public static int GTK_ACCESSIBLE_ROLE_GENERIC() {
        return (int)15L;
    }
    public static int GTK_ACCESSIBLE_ROLE_GRID() {
        return (int)16L;
    }
    public static int GTK_ACCESSIBLE_ROLE_GRID_CELL() {
        return (int)17L;
    }
    public static int GTK_ACCESSIBLE_ROLE_GROUP() {
        return (int)18L;
    }
    public static int GTK_ACCESSIBLE_ROLE_HEADING() {
        return (int)19L;
    }
    public static int GTK_ACCESSIBLE_ROLE_IMG() {
        return (int)20L;
    }
    public static int GTK_ACCESSIBLE_ROLE_INPUT() {
        return (int)21L;
    }
    public static int GTK_ACCESSIBLE_ROLE_LABEL() {
        return (int)22L;
    }
    public static int GTK_ACCESSIBLE_ROLE_LANDMARK() {
        return (int)23L;
    }
    public static int GTK_ACCESSIBLE_ROLE_LEGEND() {
        return (int)24L;
    }
    public static int GTK_ACCESSIBLE_ROLE_LINK() {
        return (int)25L;
    }
    public static int GTK_ACCESSIBLE_ROLE_LIST() {
        return (int)26L;
    }
    public static int GTK_ACCESSIBLE_ROLE_LIST_BOX() {
        return (int)27L;
    }
    public static int GTK_ACCESSIBLE_ROLE_LIST_ITEM() {
        return (int)28L;
    }
    public static int GTK_ACCESSIBLE_ROLE_LOG() {
        return (int)29L;
    }
    public static int GTK_ACCESSIBLE_ROLE_MAIN() {
        return (int)30L;
    }
    public static int GTK_ACCESSIBLE_ROLE_MARQUEE() {
        return (int)31L;
    }
    public static int GTK_ACCESSIBLE_ROLE_MATH() {
        return (int)32L;
    }
    public static int GTK_ACCESSIBLE_ROLE_METER() {
        return (int)33L;
    }
    public static int GTK_ACCESSIBLE_ROLE_MENU() {
        return (int)34L;
    }
    public static int GTK_ACCESSIBLE_ROLE_MENU_BAR() {
        return (int)35L;
    }
    public static int GTK_ACCESSIBLE_ROLE_MENU_ITEM() {
        return (int)36L;
    }
    public static int GTK_ACCESSIBLE_ROLE_MENU_ITEM_CHECKBOX() {
        return (int)37L;
    }
    public static int GTK_ACCESSIBLE_ROLE_MENU_ITEM_RADIO() {
        return (int)38L;
    }
    public static int GTK_ACCESSIBLE_ROLE_NAVIGATION() {
        return (int)39L;
    }
    public static int GTK_ACCESSIBLE_ROLE_NONE() {
        return (int)40L;
    }
    public static int GTK_ACCESSIBLE_ROLE_NOTE() {
        return (int)41L;
    }
    public static int GTK_ACCESSIBLE_ROLE_OPTION() {
        return (int)42L;
    }
    public static int GTK_ACCESSIBLE_ROLE_PRESENTATION() {
        return (int)43L;
    }
    public static int GTK_ACCESSIBLE_ROLE_PROGRESS_BAR() {
        return (int)44L;
    }
    public static int GTK_ACCESSIBLE_ROLE_RADIO() {
        return (int)45L;
    }
    public static int GTK_ACCESSIBLE_ROLE_RADIO_GROUP() {
        return (int)46L;
    }
    public static int GTK_ACCESSIBLE_ROLE_RANGE() {
        return (int)47L;
    }
    public static int GTK_ACCESSIBLE_ROLE_REGION() {
        return (int)48L;
    }
    public static int GTK_ACCESSIBLE_ROLE_ROW() {
        return (int)49L;
    }
    public static int GTK_ACCESSIBLE_ROLE_ROW_GROUP() {
        return (int)50L;
    }
    public static int GTK_ACCESSIBLE_ROLE_ROW_HEADER() {
        return (int)51L;
    }
    public static int GTK_ACCESSIBLE_ROLE_SCROLLBAR() {
        return (int)52L;
    }
    public static int GTK_ACCESSIBLE_ROLE_SEARCH() {
        return (int)53L;
    }
    public static int GTK_ACCESSIBLE_ROLE_SEARCH_BOX() {
        return (int)54L;
    }
    public static int GTK_ACCESSIBLE_ROLE_SECTION() {
        return (int)55L;
    }
    public static int GTK_ACCESSIBLE_ROLE_SECTION_HEAD() {
        return (int)56L;
    }
    public static int GTK_ACCESSIBLE_ROLE_SELECT() {
        return (int)57L;
    }
    public static int GTK_ACCESSIBLE_ROLE_SEPARATOR() {
        return (int)58L;
    }
    public static int GTK_ACCESSIBLE_ROLE_SLIDER() {
        return (int)59L;
    }
    public static int GTK_ACCESSIBLE_ROLE_SPIN_BUTTON() {
        return (int)60L;
    }
    public static int GTK_ACCESSIBLE_ROLE_STATUS() {
        return (int)61L;
    }
    public static int GTK_ACCESSIBLE_ROLE_STRUCTURE() {
        return (int)62L;
    }
    public static int GTK_ACCESSIBLE_ROLE_SWITCH() {
        return (int)63L;
    }
    public static int GTK_ACCESSIBLE_ROLE_TAB() {
        return (int)64L;
    }
    public static int GTK_ACCESSIBLE_ROLE_TABLE() {
        return (int)65L;
    }
    public static int GTK_ACCESSIBLE_ROLE_TAB_LIST() {
        return (int)66L;
    }
    public static int GTK_ACCESSIBLE_ROLE_TAB_PANEL() {
        return (int)67L;
    }
    public static int GTK_ACCESSIBLE_ROLE_TEXT_BOX() {
        return (int)68L;
    }
    public static int GTK_ACCESSIBLE_ROLE_TIME() {
        return (int)69L;
    }
    public static int GTK_ACCESSIBLE_ROLE_TIMER() {
        return (int)70L;
    }
    public static int GTK_ACCESSIBLE_ROLE_TOOLBAR() {
        return (int)71L;
    }
    public static int GTK_ACCESSIBLE_ROLE_TOOLTIP() {
        return (int)72L;
    }
    public static int GTK_ACCESSIBLE_ROLE_TREE() {
        return (int)73L;
    }
    public static int GTK_ACCESSIBLE_ROLE_TREE_GRID() {
        return (int)74L;
    }
    public static int GTK_ACCESSIBLE_ROLE_TREE_ITEM() {
        return (int)75L;
    }
    public static int GTK_ACCESSIBLE_ROLE_WIDGET() {
        return (int)76L;
    }
    public static int GTK_ACCESSIBLE_ROLE_WINDOW() {
        return (int)77L;
    }
    public static int GTK_ACCESSIBLE_STATE_BUSY() {
        return (int)0L;
    }
    public static int GTK_ACCESSIBLE_STATE_CHECKED() {
        return (int)1L;
    }
    public static int GTK_ACCESSIBLE_STATE_DISABLED() {
        return (int)2L;
    }
    public static int GTK_ACCESSIBLE_STATE_EXPANDED() {
        return (int)3L;
    }
    public static int GTK_ACCESSIBLE_STATE_HIDDEN() {
        return (int)4L;
    }
    public static int GTK_ACCESSIBLE_STATE_INVALID() {
        return (int)5L;
    }
    public static int GTK_ACCESSIBLE_STATE_PRESSED() {
        return (int)6L;
    }
    public static int GTK_ACCESSIBLE_STATE_SELECTED() {
        return (int)7L;
    }
    public static int GTK_ACCESSIBLE_PROPERTY_AUTOCOMPLETE() {
        return (int)0L;
    }
    public static int GTK_ACCESSIBLE_PROPERTY_DESCRIPTION() {
        return (int)1L;
    }
    public static int GTK_ACCESSIBLE_PROPERTY_HAS_POPUP() {
        return (int)2L;
    }
    public static int GTK_ACCESSIBLE_PROPERTY_KEY_SHORTCUTS() {
        return (int)3L;
    }
    public static int GTK_ACCESSIBLE_PROPERTY_LABEL() {
        return (int)4L;
    }
    public static int GTK_ACCESSIBLE_PROPERTY_LEVEL() {
        return (int)5L;
    }
    public static int GTK_ACCESSIBLE_PROPERTY_MODAL() {
        return (int)6L;
    }
    public static int GTK_ACCESSIBLE_PROPERTY_MULTI_LINE() {
        return (int)7L;
    }
    public static int GTK_ACCESSIBLE_PROPERTY_MULTI_SELECTABLE() {
        return (int)8L;
    }
    public static int GTK_ACCESSIBLE_PROPERTY_ORIENTATION() {
        return (int)9L;
    }
    public static int GTK_ACCESSIBLE_PROPERTY_PLACEHOLDER() {
        return (int)10L;
    }
    public static int GTK_ACCESSIBLE_PROPERTY_READ_ONLY() {
        return (int)11L;
    }
    public static int GTK_ACCESSIBLE_PROPERTY_REQUIRED() {
        return (int)12L;
    }
    public static int GTK_ACCESSIBLE_PROPERTY_ROLE_DESCRIPTION() {
        return (int)13L;
    }
    public static int GTK_ACCESSIBLE_PROPERTY_SORT() {
        return (int)14L;
    }
    public static int GTK_ACCESSIBLE_PROPERTY_VALUE_MAX() {
        return (int)15L;
    }
    public static int GTK_ACCESSIBLE_PROPERTY_VALUE_MIN() {
        return (int)16L;
    }
    public static int GTK_ACCESSIBLE_PROPERTY_VALUE_NOW() {
        return (int)17L;
    }
    public static int GTK_ACCESSIBLE_PROPERTY_VALUE_TEXT() {
        return (int)18L;
    }
    public static int GTK_ACCESSIBLE_RELATION_ACTIVE_DESCENDANT() {
        return (int)0L;
    }
    public static int GTK_ACCESSIBLE_RELATION_COL_COUNT() {
        return (int)1L;
    }
    public static int GTK_ACCESSIBLE_RELATION_COL_INDEX() {
        return (int)2L;
    }
    public static int GTK_ACCESSIBLE_RELATION_COL_INDEX_TEXT() {
        return (int)3L;
    }
    public static int GTK_ACCESSIBLE_RELATION_COL_SPAN() {
        return (int)4L;
    }
    public static int GTK_ACCESSIBLE_RELATION_CONTROLS() {
        return (int)5L;
    }
    public static int GTK_ACCESSIBLE_RELATION_DESCRIBED_BY() {
        return (int)6L;
    }
    public static int GTK_ACCESSIBLE_RELATION_DETAILS() {
        return (int)7L;
    }
    public static int GTK_ACCESSIBLE_RELATION_ERROR_MESSAGE() {
        return (int)8L;
    }
    public static int GTK_ACCESSIBLE_RELATION_FLOW_TO() {
        return (int)9L;
    }
    public static int GTK_ACCESSIBLE_RELATION_LABELLED_BY() {
        return (int)10L;
    }
    public static int GTK_ACCESSIBLE_RELATION_OWNS() {
        return (int)11L;
    }
    public static int GTK_ACCESSIBLE_RELATION_POS_IN_SET() {
        return (int)12L;
    }
    public static int GTK_ACCESSIBLE_RELATION_ROW_COUNT() {
        return (int)13L;
    }
    public static int GTK_ACCESSIBLE_RELATION_ROW_INDEX() {
        return (int)14L;
    }
    public static int GTK_ACCESSIBLE_RELATION_ROW_INDEX_TEXT() {
        return (int)15L;
    }
    public static int GTK_ACCESSIBLE_RELATION_ROW_SPAN() {
        return (int)16L;
    }
    public static int GTK_ACCESSIBLE_RELATION_SET_SIZE() {
        return (int)17L;
    }
    public static int GTK_ACCESSIBLE_TRISTATE_FALSE() {
        return (int)0L;
    }
    public static int GTK_ACCESSIBLE_TRISTATE_TRUE() {
        return (int)1L;
    }
    public static int GTK_ACCESSIBLE_TRISTATE_MIXED() {
        return (int)2L;
    }
    public static int GTK_ACCESSIBLE_INVALID_FALSE() {
        return (int)0L;
    }
    public static int GTK_ACCESSIBLE_INVALID_TRUE() {
        return (int)1L;
    }
    public static int GTK_ACCESSIBLE_INVALID_GRAMMAR() {
        return (int)2L;
    }
    public static int GTK_ACCESSIBLE_INVALID_SPELLING() {
        return (int)3L;
    }
    public static int GTK_ACCESSIBLE_AUTOCOMPLETE_NONE() {
        return (int)0L;
    }
    public static int GTK_ACCESSIBLE_AUTOCOMPLETE_INLINE() {
        return (int)1L;
    }
    public static int GTK_ACCESSIBLE_AUTOCOMPLETE_LIST() {
        return (int)2L;
    }
    public static int GTK_ACCESSIBLE_AUTOCOMPLETE_BOTH() {
        return (int)3L;
    }
    public static int GTK_ACCESSIBLE_SORT_NONE() {
        return (int)0L;
    }
    public static int GTK_ACCESSIBLE_SORT_ASCENDING() {
        return (int)1L;
    }
    public static int GTK_ACCESSIBLE_SORT_DESCENDING() {
        return (int)2L;
    }
    public static int GTK_ACCESSIBLE_SORT_OTHER() {
        return (int)3L;
    }
    public static MethodHandle gtk_accelerator_valid$MH() {
        return RuntimeHelper.requireNonNull(constants$1685.gtk_accelerator_valid$MH,"gtk_accelerator_valid");
    }
    public static int gtk_accelerator_valid ( int keyval,  int modifiers) {
        var mh$ = gtk_accelerator_valid$MH();
        try {
            return (int)mh$.invokeExact(keyval, modifiers);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accelerator_parse$MH() {
        return RuntimeHelper.requireNonNull(constants$1685.gtk_accelerator_parse$MH,"gtk_accelerator_parse");
    }
    public static int gtk_accelerator_parse ( Addressable accelerator,  Addressable accelerator_key,  Addressable accelerator_mods) {
        var mh$ = gtk_accelerator_parse$MH();
        try {
            return (int)mh$.invokeExact(accelerator, accelerator_key, accelerator_mods);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accelerator_parse_with_keycode$MH() {
        return RuntimeHelper.requireNonNull(constants$1685.gtk_accelerator_parse_with_keycode$MH,"gtk_accelerator_parse_with_keycode");
    }
    public static int gtk_accelerator_parse_with_keycode ( Addressable accelerator,  Addressable display,  Addressable accelerator_key,  Addressable accelerator_codes,  Addressable accelerator_mods) {
        var mh$ = gtk_accelerator_parse_with_keycode$MH();
        try {
            return (int)mh$.invokeExact(accelerator, display, accelerator_key, accelerator_codes, accelerator_mods);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accelerator_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1685.gtk_accelerator_name$MH,"gtk_accelerator_name");
    }
    public static MemoryAddress gtk_accelerator_name ( int accelerator_key,  int accelerator_mods) {
        var mh$ = gtk_accelerator_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(accelerator_key, accelerator_mods);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accelerator_name_with_keycode$MH() {
        return RuntimeHelper.requireNonNull(constants$1686.gtk_accelerator_name_with_keycode$MH,"gtk_accelerator_name_with_keycode");
    }
    public static MemoryAddress gtk_accelerator_name_with_keycode ( Addressable display,  int accelerator_key,  int keycode,  int accelerator_mods) {
        var mh$ = gtk_accelerator_name_with_keycode$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(display, accelerator_key, keycode, accelerator_mods);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accelerator_get_label$MH() {
        return RuntimeHelper.requireNonNull(constants$1686.gtk_accelerator_get_label$MH,"gtk_accelerator_get_label");
    }
    public static MemoryAddress gtk_accelerator_get_label ( int accelerator_key,  int accelerator_mods) {
        var mh$ = gtk_accelerator_get_label$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(accelerator_key, accelerator_mods);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accelerator_get_label_with_keycode$MH() {
        return RuntimeHelper.requireNonNull(constants$1686.gtk_accelerator_get_label_with_keycode$MH,"gtk_accelerator_get_label_with_keycode");
    }
    public static MemoryAddress gtk_accelerator_get_label_with_keycode ( Addressable display,  int accelerator_key,  int keycode,  int accelerator_mods) {
        var mh$ = gtk_accelerator_get_label_with_keycode$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(display, accelerator_key, keycode, accelerator_mods);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accelerator_get_default_mod_mask$MH() {
        return RuntimeHelper.requireNonNull(constants$1686.gtk_accelerator_get_default_mod_mask$MH,"gtk_accelerator_get_default_mod_mask");
    }
    public static int gtk_accelerator_get_default_mod_mask () {
        var mh$ = gtk_accelerator_get_default_mod_mask$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_border_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1686.gtk_border_get_type$MH,"gtk_border_get_type");
    }
    public static long gtk_border_get_type () {
        var mh$ = gtk_border_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_border_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1686.gtk_border_new$MH,"gtk_border_new");
    }
    public static MemoryAddress gtk_border_new () {
        var mh$ = gtk_border_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_border_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1687.gtk_border_copy$MH,"gtk_border_copy");
    }
    public static MemoryAddress gtk_border_copy ( Addressable border_) {
        var mh$ = gtk_border_copy$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(border_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_border_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1687.gtk_border_free$MH,"gtk_border_free");
    }
    public static void gtk_border_free ( Addressable border_) {
        var mh$ = gtk_border_free$MH();
        try {
            mh$.invokeExact(border_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkBorder_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkBorder_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkBorder_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkBorder_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkBorder$MH() {
        return RuntimeHelper.requireNonNull(constants$1687.glib_autoptr_clear_GtkBorder$MH,"glib_autoptr_clear_GtkBorder");
    }
    public static void glib_autoptr_clear_GtkBorder ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkBorder$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkBorder$MH() {
        return RuntimeHelper.requireNonNull(constants$1687.glib_autoptr_cleanup_GtkBorder$MH,"glib_autoptr_cleanup_GtkBorder");
    }
    public static void glib_autoptr_cleanup_GtkBorder ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkBorder$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkBorder$MH() {
        return RuntimeHelper.requireNonNull(constants$1687.glib_listautoptr_cleanup_GtkBorder$MH,"glib_listautoptr_cleanup_GtkBorder");
    }
    public static void glib_listautoptr_cleanup_GtkBorder ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkBorder$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkBorder$MH() {
        return RuntimeHelper.requireNonNull(constants$1687.glib_slistautoptr_cleanup_GtkBorder$MH,"glib_slistautoptr_cleanup_GtkBorder");
    }
    public static void glib_slistautoptr_cleanup_GtkBorder ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkBorder$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkBorder$MH() {
        return RuntimeHelper.requireNonNull(constants$1688.glib_queueautoptr_cleanup_GtkBorder$MH,"glib_queueautoptr_cleanup_GtkBorder");
    }
    public static void glib_queueautoptr_cleanup_GtkBorder ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkBorder$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1688.gtk_shortcut_get_type$MH,"gtk_shortcut_get_type");
    }
    public static long gtk_shortcut_get_type () {
        var mh$ = gtk_shortcut_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkShortcut_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkShortcut_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkShortcut_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkShortcut_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkShortcut$MH() {
        return RuntimeHelper.requireNonNull(constants$1688.glib_autoptr_clear_GtkShortcut$MH,"glib_autoptr_clear_GtkShortcut");
    }
    public static void glib_autoptr_clear_GtkShortcut ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkShortcut$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkShortcut$MH() {
        return RuntimeHelper.requireNonNull(constants$1688.glib_autoptr_cleanup_GtkShortcut$MH,"glib_autoptr_cleanup_GtkShortcut");
    }
    public static void glib_autoptr_cleanup_GtkShortcut ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkShortcut$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkShortcut$MH() {
        return RuntimeHelper.requireNonNull(constants$1688.glib_listautoptr_cleanup_GtkShortcut$MH,"glib_listautoptr_cleanup_GtkShortcut");
    }
    public static void glib_listautoptr_cleanup_GtkShortcut ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkShortcut$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkShortcut$MH() {
        return RuntimeHelper.requireNonNull(constants$1688.glib_slistautoptr_cleanup_GtkShortcut$MH,"glib_slistautoptr_cleanup_GtkShortcut");
    }
    public static void glib_slistautoptr_cleanup_GtkShortcut ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkShortcut$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkShortcut$MH() {
        return RuntimeHelper.requireNonNull(constants$1689.glib_queueautoptr_cleanup_GtkShortcut$MH,"glib_queueautoptr_cleanup_GtkShortcut");
    }
    public static void glib_queueautoptr_cleanup_GtkShortcut ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkShortcut$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkShortcutClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkShortcutClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkShortcutClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkShortcutClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkShortcutClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1689.glib_autoptr_clear_GtkShortcutClass$MH,"glib_autoptr_clear_GtkShortcutClass");
    }
    public static void glib_autoptr_clear_GtkShortcutClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkShortcutClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkShortcutClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1689.glib_autoptr_cleanup_GtkShortcutClass$MH,"glib_autoptr_cleanup_GtkShortcutClass");
    }
    public static void glib_autoptr_cleanup_GtkShortcutClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkShortcutClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkShortcutClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1689.glib_listautoptr_cleanup_GtkShortcutClass$MH,"glib_listautoptr_cleanup_GtkShortcutClass");
    }
    public static void glib_listautoptr_cleanup_GtkShortcutClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkShortcutClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkShortcutClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1689.glib_slistautoptr_cleanup_GtkShortcutClass$MH,"glib_slistautoptr_cleanup_GtkShortcutClass");
    }
    public static void glib_slistautoptr_cleanup_GtkShortcutClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkShortcutClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkShortcutClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1689.glib_queueautoptr_cleanup_GtkShortcutClass$MH,"glib_queueautoptr_cleanup_GtkShortcutClass");
    }
    public static void glib_queueautoptr_cleanup_GtkShortcutClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkShortcutClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_SHORTCUT$MH() {
        return RuntimeHelper.requireNonNull(constants$1690.GTK_SHORTCUT$MH,"GTK_SHORTCUT");
    }
    public static MemoryAddress GTK_SHORTCUT ( Addressable ptr) {
        var mh$ = GTK_SHORTCUT$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_SHORTCUT$MH() {
        return RuntimeHelper.requireNonNull(constants$1690.GTK_IS_SHORTCUT$MH,"GTK_IS_SHORTCUT");
    }
    public static int GTK_IS_SHORTCUT ( Addressable ptr) {
        var mh$ = GTK_IS_SHORTCUT$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1690.gtk_shortcut_new$MH,"gtk_shortcut_new");
    }
    public static MemoryAddress gtk_shortcut_new ( Addressable trigger,  Addressable action) {
        var mh$ = gtk_shortcut_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(trigger, action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_new_with_arguments$MH() {
        return RuntimeHelper.requireNonNull(constants$1690.gtk_shortcut_new_with_arguments$MH,"gtk_shortcut_new_with_arguments");
    }
    public static MemoryAddress gtk_shortcut_new_with_arguments ( Addressable trigger,  Addressable action,  Addressable format_string, Object... x3) {
        var mh$ = gtk_shortcut_new_with_arguments$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(trigger, action, format_string, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_get_trigger$MH() {
        return RuntimeHelper.requireNonNull(constants$1690.gtk_shortcut_get_trigger$MH,"gtk_shortcut_get_trigger");
    }
    public static MemoryAddress gtk_shortcut_get_trigger ( Addressable self) {
        var mh$ = gtk_shortcut_get_trigger$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_set_trigger$MH() {
        return RuntimeHelper.requireNonNull(constants$1690.gtk_shortcut_set_trigger$MH,"gtk_shortcut_set_trigger");
    }
    public static void gtk_shortcut_set_trigger ( Addressable self,  Addressable trigger) {
        var mh$ = gtk_shortcut_set_trigger$MH();
        try {
            mh$.invokeExact(self, trigger);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_get_action$MH() {
        return RuntimeHelper.requireNonNull(constants$1691.gtk_shortcut_get_action$MH,"gtk_shortcut_get_action");
    }
    public static MemoryAddress gtk_shortcut_get_action ( Addressable self) {
        var mh$ = gtk_shortcut_get_action$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_set_action$MH() {
        return RuntimeHelper.requireNonNull(constants$1691.gtk_shortcut_set_action$MH,"gtk_shortcut_set_action");
    }
    public static void gtk_shortcut_set_action ( Addressable self,  Addressable action) {
        var mh$ = gtk_shortcut_set_action$MH();
        try {
            mh$.invokeExact(self, action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_get_arguments$MH() {
        return RuntimeHelper.requireNonNull(constants$1691.gtk_shortcut_get_arguments$MH,"gtk_shortcut_get_arguments");
    }
    public static MemoryAddress gtk_shortcut_get_arguments ( Addressable self) {
        var mh$ = gtk_shortcut_get_arguments$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_set_arguments$MH() {
        return RuntimeHelper.requireNonNull(constants$1691.gtk_shortcut_set_arguments$MH,"gtk_shortcut_set_arguments");
    }
    public static void gtk_shortcut_set_arguments ( Addressable self,  Addressable args) {
        var mh$ = gtk_shortcut_set_arguments$MH();
        try {
            mh$.invokeExact(self, args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GTK_SHORTCUT_ACTION_EXCLUSIVE() {
        return (int)1L;
    }
    public static MethodHandle gtk_shortcut_action_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1692.gtk_shortcut_action_get_type$MH,"gtk_shortcut_action_get_type");
    }
    public static long gtk_shortcut_action_get_type () {
        var mh$ = gtk_shortcut_action_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkShortcutAction_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkShortcutAction_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkShortcutAction_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkShortcutAction_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkShortcutAction$MH() {
        return RuntimeHelper.requireNonNull(constants$1692.glib_autoptr_clear_GtkShortcutAction$MH,"glib_autoptr_clear_GtkShortcutAction");
    }
    public static void glib_autoptr_clear_GtkShortcutAction ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkShortcutAction$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkShortcutAction$MH() {
        return RuntimeHelper.requireNonNull(constants$1692.glib_autoptr_cleanup_GtkShortcutAction$MH,"glib_autoptr_cleanup_GtkShortcutAction");
    }
    public static void glib_autoptr_cleanup_GtkShortcutAction ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkShortcutAction$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkShortcutAction$MH() {
        return RuntimeHelper.requireNonNull(constants$1692.glib_listautoptr_cleanup_GtkShortcutAction$MH,"glib_listautoptr_cleanup_GtkShortcutAction");
    }
    public static void glib_listautoptr_cleanup_GtkShortcutAction ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkShortcutAction$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkShortcutAction$MH() {
        return RuntimeHelper.requireNonNull(constants$1692.glib_slistautoptr_cleanup_GtkShortcutAction$MH,"glib_slistautoptr_cleanup_GtkShortcutAction");
    }
    public static void glib_slistautoptr_cleanup_GtkShortcutAction ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkShortcutAction$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkShortcutAction$MH() {
        return RuntimeHelper.requireNonNull(constants$1692.glib_queueautoptr_cleanup_GtkShortcutAction$MH,"glib_queueautoptr_cleanup_GtkShortcutAction");
    }
    public static void glib_queueautoptr_cleanup_GtkShortcutAction ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkShortcutAction$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkShortcutActionClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkShortcutActionClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkShortcutActionClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkShortcutActionClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkShortcutActionClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1693.glib_autoptr_clear_GtkShortcutActionClass$MH,"glib_autoptr_clear_GtkShortcutActionClass");
    }
    public static void glib_autoptr_clear_GtkShortcutActionClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkShortcutActionClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkShortcutActionClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1693.glib_autoptr_cleanup_GtkShortcutActionClass$MH,"glib_autoptr_cleanup_GtkShortcutActionClass");
    }
    public static void glib_autoptr_cleanup_GtkShortcutActionClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkShortcutActionClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkShortcutActionClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1693.glib_listautoptr_cleanup_GtkShortcutActionClass$MH,"glib_listautoptr_cleanup_GtkShortcutActionClass");
    }
    public static void glib_listautoptr_cleanup_GtkShortcutActionClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkShortcutActionClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkShortcutActionClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1693.glib_slistautoptr_cleanup_GtkShortcutActionClass$MH,"glib_slistautoptr_cleanup_GtkShortcutActionClass");
    }
    public static void glib_slistautoptr_cleanup_GtkShortcutActionClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkShortcutActionClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkShortcutActionClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1693.glib_queueautoptr_cleanup_GtkShortcutActionClass$MH,"glib_queueautoptr_cleanup_GtkShortcutActionClass");
    }
    public static void glib_queueautoptr_cleanup_GtkShortcutActionClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkShortcutActionClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_SHORTCUT_ACTION$MH() {
        return RuntimeHelper.requireNonNull(constants$1693.GTK_SHORTCUT_ACTION$MH,"GTK_SHORTCUT_ACTION");
    }
    public static MemoryAddress GTK_SHORTCUT_ACTION ( Addressable ptr) {
        var mh$ = GTK_SHORTCUT_ACTION$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_SHORTCUT_ACTION_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$1694.GTK_SHORTCUT_ACTION_CLASS$MH,"GTK_SHORTCUT_ACTION_CLASS");
    }
    public static MemoryAddress GTK_SHORTCUT_ACTION_CLASS ( Addressable ptr) {
        var mh$ = GTK_SHORTCUT_ACTION_CLASS$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_SHORTCUT_ACTION$MH() {
        return RuntimeHelper.requireNonNull(constants$1694.GTK_IS_SHORTCUT_ACTION$MH,"GTK_IS_SHORTCUT_ACTION");
    }
    public static int GTK_IS_SHORTCUT_ACTION ( Addressable ptr) {
        var mh$ = GTK_IS_SHORTCUT_ACTION$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_SHORTCUT_ACTION_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$1694.GTK_IS_SHORTCUT_ACTION_CLASS$MH,"GTK_IS_SHORTCUT_ACTION_CLASS");
    }
    public static int GTK_IS_SHORTCUT_ACTION_CLASS ( Addressable ptr) {
        var mh$ = GTK_IS_SHORTCUT_ACTION_CLASS$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_SHORTCUT_ACTION_GET_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$1694.GTK_SHORTCUT_ACTION_GET_CLASS$MH,"GTK_SHORTCUT_ACTION_GET_CLASS");
    }
    public static MemoryAddress GTK_SHORTCUT_ACTION_GET_CLASS ( Addressable ptr) {
        var mh$ = GTK_SHORTCUT_ACTION_GET_CLASS$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_action_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1694.gtk_shortcut_action_to_string$MH,"gtk_shortcut_action_to_string");
    }
    public static MemoryAddress gtk_shortcut_action_to_string ( Addressable self) {
        var mh$ = gtk_shortcut_action_to_string$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_action_parse_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1694.gtk_shortcut_action_parse_string$MH,"gtk_shortcut_action_parse_string");
    }
    public static MemoryAddress gtk_shortcut_action_parse_string ( Addressable string) {
        var mh$ = gtk_shortcut_action_parse_string$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_action_print$MH() {
        return RuntimeHelper.requireNonNull(constants$1695.gtk_shortcut_action_print$MH,"gtk_shortcut_action_print");
    }
    public static void gtk_shortcut_action_print ( Addressable self,  Addressable string) {
        var mh$ = gtk_shortcut_action_print$MH();
        try {
            mh$.invokeExact(self, string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_shortcut_action_activate$MH() {
        return RuntimeHelper.requireNonNull(constants$1695.gtk_shortcut_action_activate$MH,"gtk_shortcut_action_activate");
    }
    public static int gtk_shortcut_action_activate ( Addressable self,  int flags,  Addressable widget,  Addressable args) {
        var mh$ = gtk_shortcut_action_activate$MH();
        try {
            return (int)mh$.invokeExact(self, flags, widget, args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_nothing_action_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1695.gtk_nothing_action_get_type$MH,"gtk_nothing_action_get_type");
    }
    public static long gtk_nothing_action_get_type () {
        var mh$ = gtk_nothing_action_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkNothingAction_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkNothingAction_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkNothingAction_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkNothingAction_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkNothingAction$MH() {
        return RuntimeHelper.requireNonNull(constants$1695.glib_autoptr_clear_GtkNothingAction$MH,"glib_autoptr_clear_GtkNothingAction");
    }
    public static void glib_autoptr_clear_GtkNothingAction ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkNothingAction$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkNothingAction$MH() {
        return RuntimeHelper.requireNonNull(constants$1695.glib_autoptr_cleanup_GtkNothingAction$MH,"glib_autoptr_cleanup_GtkNothingAction");
    }
    public static void glib_autoptr_cleanup_GtkNothingAction ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkNothingAction$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkNothingAction$MH() {
        return RuntimeHelper.requireNonNull(constants$1695.glib_listautoptr_cleanup_GtkNothingAction$MH,"glib_listautoptr_cleanup_GtkNothingAction");
    }
    public static void glib_listautoptr_cleanup_GtkNothingAction ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkNothingAction$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkNothingAction$MH() {
        return RuntimeHelper.requireNonNull(constants$1696.glib_slistautoptr_cleanup_GtkNothingAction$MH,"glib_slistautoptr_cleanup_GtkNothingAction");
    }
    public static void glib_slistautoptr_cleanup_GtkNothingAction ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkNothingAction$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkNothingAction$MH() {
        return RuntimeHelper.requireNonNull(constants$1696.glib_queueautoptr_cleanup_GtkNothingAction$MH,"glib_queueautoptr_cleanup_GtkNothingAction");
    }
    public static void glib_queueautoptr_cleanup_GtkNothingAction ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkNothingAction$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkNothingActionClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkNothingActionClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkNothingActionClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkNothingActionClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkNothingActionClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1696.glib_autoptr_clear_GtkNothingActionClass$MH,"glib_autoptr_clear_GtkNothingActionClass");
    }
    public static void glib_autoptr_clear_GtkNothingActionClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkNothingActionClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkNothingActionClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1696.glib_autoptr_cleanup_GtkNothingActionClass$MH,"glib_autoptr_cleanup_GtkNothingActionClass");
    }
    public static void glib_autoptr_cleanup_GtkNothingActionClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkNothingActionClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkNothingActionClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1696.glib_listautoptr_cleanup_GtkNothingActionClass$MH,"glib_listautoptr_cleanup_GtkNothingActionClass");
    }
    public static void glib_listautoptr_cleanup_GtkNothingActionClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkNothingActionClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkNothingActionClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1696.glib_slistautoptr_cleanup_GtkNothingActionClass$MH,"glib_slistautoptr_cleanup_GtkNothingActionClass");
    }
    public static void glib_slistautoptr_cleanup_GtkNothingActionClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkNothingActionClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkNothingActionClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1697.glib_queueautoptr_cleanup_GtkNothingActionClass$MH,"glib_queueautoptr_cleanup_GtkNothingActionClass");
    }
    public static void glib_queueautoptr_cleanup_GtkNothingActionClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkNothingActionClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_NOTHING_ACTION$MH() {
        return RuntimeHelper.requireNonNull(constants$1697.GTK_NOTHING_ACTION$MH,"GTK_NOTHING_ACTION");
    }
    public static MemoryAddress GTK_NOTHING_ACTION ( Addressable ptr) {
        var mh$ = GTK_NOTHING_ACTION$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_NOTHING_ACTION_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$1697.GTK_NOTHING_ACTION_CLASS$MH,"GTK_NOTHING_ACTION_CLASS");
    }
    public static MemoryAddress GTK_NOTHING_ACTION_CLASS ( Addressable ptr) {
        var mh$ = GTK_NOTHING_ACTION_CLASS$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_NOTHING_ACTION$MH() {
        return RuntimeHelper.requireNonNull(constants$1697.GTK_IS_NOTHING_ACTION$MH,"GTK_IS_NOTHING_ACTION");
    }
    public static int GTK_IS_NOTHING_ACTION ( Addressable ptr) {
        var mh$ = GTK_IS_NOTHING_ACTION$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_NOTHING_ACTION_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$1697.GTK_IS_NOTHING_ACTION_CLASS$MH,"GTK_IS_NOTHING_ACTION_CLASS");
    }
    public static int GTK_IS_NOTHING_ACTION_CLASS ( Addressable ptr) {
        var mh$ = GTK_IS_NOTHING_ACTION_CLASS$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_NOTHING_ACTION_GET_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$1697.GTK_NOTHING_ACTION_GET_CLASS$MH,"GTK_NOTHING_ACTION_GET_CLASS");
    }
    public static MemoryAddress GTK_NOTHING_ACTION_GET_CLASS ( Addressable ptr) {
        var mh$ = GTK_NOTHING_ACTION_GET_CLASS$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_nothing_action_get$MH() {
        return RuntimeHelper.requireNonNull(constants$1698.gtk_nothing_action_get$MH,"gtk_nothing_action_get");
    }
    public static MemoryAddress gtk_nothing_action_get () {
        var mh$ = gtk_nothing_action_get$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_callback_action_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1698.gtk_callback_action_get_type$MH,"gtk_callback_action_get_type");
    }
    public static long gtk_callback_action_get_type () {
        var mh$ = gtk_callback_action_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCallbackAction_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCallbackAction_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCallbackAction_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCallbackAction_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCallbackAction$MH() {
        return RuntimeHelper.requireNonNull(constants$1698.glib_autoptr_clear_GtkCallbackAction$MH,"glib_autoptr_clear_GtkCallbackAction");
    }
    public static void glib_autoptr_clear_GtkCallbackAction ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkCallbackAction$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCallbackAction$MH() {
        return RuntimeHelper.requireNonNull(constants$1698.glib_autoptr_cleanup_GtkCallbackAction$MH,"glib_autoptr_cleanup_GtkCallbackAction");
    }
    public static void glib_autoptr_cleanup_GtkCallbackAction ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkCallbackAction$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCallbackAction$MH() {
        return RuntimeHelper.requireNonNull(constants$1698.glib_listautoptr_cleanup_GtkCallbackAction$MH,"glib_listautoptr_cleanup_GtkCallbackAction");
    }
    public static void glib_listautoptr_cleanup_GtkCallbackAction ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkCallbackAction$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCallbackAction$MH() {
        return RuntimeHelper.requireNonNull(constants$1698.glib_slistautoptr_cleanup_GtkCallbackAction$MH,"glib_slistautoptr_cleanup_GtkCallbackAction");
    }
    public static void glib_slistautoptr_cleanup_GtkCallbackAction ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkCallbackAction$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCallbackAction$MH() {
        return RuntimeHelper.requireNonNull(constants$1699.glib_queueautoptr_cleanup_GtkCallbackAction$MH,"glib_queueautoptr_cleanup_GtkCallbackAction");
    }
    public static void glib_queueautoptr_cleanup_GtkCallbackAction ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkCallbackAction$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCallbackActionClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCallbackActionClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCallbackActionClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCallbackActionClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCallbackActionClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1699.glib_autoptr_clear_GtkCallbackActionClass$MH,"glib_autoptr_clear_GtkCallbackActionClass");
    }
    public static void glib_autoptr_clear_GtkCallbackActionClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkCallbackActionClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCallbackActionClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1699.glib_autoptr_cleanup_GtkCallbackActionClass$MH,"glib_autoptr_cleanup_GtkCallbackActionClass");
    }
    public static void glib_autoptr_cleanup_GtkCallbackActionClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkCallbackActionClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCallbackActionClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1699.glib_listautoptr_cleanup_GtkCallbackActionClass$MH,"glib_listautoptr_cleanup_GtkCallbackActionClass");
    }
    public static void glib_listautoptr_cleanup_GtkCallbackActionClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkCallbackActionClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCallbackActionClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1699.glib_slistautoptr_cleanup_GtkCallbackActionClass$MH,"glib_slistautoptr_cleanup_GtkCallbackActionClass");
    }
    public static void glib_slistautoptr_cleanup_GtkCallbackActionClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkCallbackActionClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCallbackActionClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1699.glib_queueautoptr_cleanup_GtkCallbackActionClass$MH,"glib_queueautoptr_cleanup_GtkCallbackActionClass");
    }
    public static void glib_queueautoptr_cleanup_GtkCallbackActionClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkCallbackActionClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_CALLBACK_ACTION$MH() {
        return RuntimeHelper.requireNonNull(constants$1700.GTK_CALLBACK_ACTION$MH,"GTK_CALLBACK_ACTION");
    }
    public static MemoryAddress GTK_CALLBACK_ACTION ( Addressable ptr) {
        var mh$ = GTK_CALLBACK_ACTION$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_CALLBACK_ACTION_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$1700.GTK_CALLBACK_ACTION_CLASS$MH,"GTK_CALLBACK_ACTION_CLASS");
    }
    public static MemoryAddress GTK_CALLBACK_ACTION_CLASS ( Addressable ptr) {
        var mh$ = GTK_CALLBACK_ACTION_CLASS$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_CALLBACK_ACTION$MH() {
        return RuntimeHelper.requireNonNull(constants$1700.GTK_IS_CALLBACK_ACTION$MH,"GTK_IS_CALLBACK_ACTION");
    }
    public static int GTK_IS_CALLBACK_ACTION ( Addressable ptr) {
        var mh$ = GTK_IS_CALLBACK_ACTION$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_CALLBACK_ACTION_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$1700.GTK_IS_CALLBACK_ACTION_CLASS$MH,"GTK_IS_CALLBACK_ACTION_CLASS");
    }
    public static int GTK_IS_CALLBACK_ACTION_CLASS ( Addressable ptr) {
        var mh$ = GTK_IS_CALLBACK_ACTION_CLASS$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_CALLBACK_ACTION_GET_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$1700.GTK_CALLBACK_ACTION_GET_CLASS$MH,"GTK_CALLBACK_ACTION_GET_CLASS");
    }
    public static MemoryAddress GTK_CALLBACK_ACTION_GET_CLASS ( Addressable ptr) {
        var mh$ = GTK_CALLBACK_ACTION_GET_CLASS$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_callback_action_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1700.gtk_callback_action_new$MH,"gtk_callback_action_new");
    }
    public static MemoryAddress gtk_callback_action_new ( Addressable callback,  Addressable data,  Addressable destroy) {
        var mh$ = gtk_callback_action_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(callback, data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_mnemonic_action_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1701.gtk_mnemonic_action_get_type$MH,"gtk_mnemonic_action_get_type");
    }
    public static long gtk_mnemonic_action_get_type () {
        var mh$ = gtk_mnemonic_action_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkMnemonicAction_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMnemonicAction_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMnemonicAction_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMnemonicAction_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkMnemonicAction$MH() {
        return RuntimeHelper.requireNonNull(constants$1701.glib_autoptr_clear_GtkMnemonicAction$MH,"glib_autoptr_clear_GtkMnemonicAction");
    }
    public static void glib_autoptr_clear_GtkMnemonicAction ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkMnemonicAction$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkMnemonicAction$MH() {
        return RuntimeHelper.requireNonNull(constants$1701.glib_autoptr_cleanup_GtkMnemonicAction$MH,"glib_autoptr_cleanup_GtkMnemonicAction");
    }
    public static void glib_autoptr_cleanup_GtkMnemonicAction ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkMnemonicAction$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkMnemonicAction$MH() {
        return RuntimeHelper.requireNonNull(constants$1701.glib_listautoptr_cleanup_GtkMnemonicAction$MH,"glib_listautoptr_cleanup_GtkMnemonicAction");
    }
    public static void glib_listautoptr_cleanup_GtkMnemonicAction ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkMnemonicAction$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkMnemonicAction$MH() {
        return RuntimeHelper.requireNonNull(constants$1701.glib_slistautoptr_cleanup_GtkMnemonicAction$MH,"glib_slistautoptr_cleanup_GtkMnemonicAction");
    }
    public static void glib_slistautoptr_cleanup_GtkMnemonicAction ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkMnemonicAction$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkMnemonicAction$MH() {
        return RuntimeHelper.requireNonNull(constants$1701.glib_queueautoptr_cleanup_GtkMnemonicAction$MH,"glib_queueautoptr_cleanup_GtkMnemonicAction");
    }
    public static void glib_queueautoptr_cleanup_GtkMnemonicAction ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkMnemonicAction$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkMnemonicActionClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMnemonicActionClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMnemonicActionClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMnemonicActionClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkMnemonicActionClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1702.glib_autoptr_clear_GtkMnemonicActionClass$MH,"glib_autoptr_clear_GtkMnemonicActionClass");
    }
    public static void glib_autoptr_clear_GtkMnemonicActionClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkMnemonicActionClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkMnemonicActionClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1702.glib_autoptr_cleanup_GtkMnemonicActionClass$MH,"glib_autoptr_cleanup_GtkMnemonicActionClass");
    }
    public static void glib_autoptr_cleanup_GtkMnemonicActionClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkMnemonicActionClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkMnemonicActionClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1702.glib_listautoptr_cleanup_GtkMnemonicActionClass$MH,"glib_listautoptr_cleanup_GtkMnemonicActionClass");
    }
    public static void glib_listautoptr_cleanup_GtkMnemonicActionClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkMnemonicActionClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkMnemonicActionClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1702.glib_slistautoptr_cleanup_GtkMnemonicActionClass$MH,"glib_slistautoptr_cleanup_GtkMnemonicActionClass");
    }
    public static void glib_slistautoptr_cleanup_GtkMnemonicActionClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkMnemonicActionClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkMnemonicActionClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1702.glib_queueautoptr_cleanup_GtkMnemonicActionClass$MH,"glib_queueautoptr_cleanup_GtkMnemonicActionClass");
    }
    public static void glib_queueautoptr_cleanup_GtkMnemonicActionClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkMnemonicActionClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_MNEMONIC_ACTION$MH() {
        return RuntimeHelper.requireNonNull(constants$1702.GTK_MNEMONIC_ACTION$MH,"GTK_MNEMONIC_ACTION");
    }
    public static MemoryAddress GTK_MNEMONIC_ACTION ( Addressable ptr) {
        var mh$ = GTK_MNEMONIC_ACTION$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_MNEMONIC_ACTION_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$1703.GTK_MNEMONIC_ACTION_CLASS$MH,"GTK_MNEMONIC_ACTION_CLASS");
    }
    public static MemoryAddress GTK_MNEMONIC_ACTION_CLASS ( Addressable ptr) {
        var mh$ = GTK_MNEMONIC_ACTION_CLASS$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_MNEMONIC_ACTION$MH() {
        return RuntimeHelper.requireNonNull(constants$1703.GTK_IS_MNEMONIC_ACTION$MH,"GTK_IS_MNEMONIC_ACTION");
    }
    public static int GTK_IS_MNEMONIC_ACTION ( Addressable ptr) {
        var mh$ = GTK_IS_MNEMONIC_ACTION$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_MNEMONIC_ACTION_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$1703.GTK_IS_MNEMONIC_ACTION_CLASS$MH,"GTK_IS_MNEMONIC_ACTION_CLASS");
    }
    public static int GTK_IS_MNEMONIC_ACTION_CLASS ( Addressable ptr) {
        var mh$ = GTK_IS_MNEMONIC_ACTION_CLASS$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_MNEMONIC_ACTION_GET_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$1703.GTK_MNEMONIC_ACTION_GET_CLASS$MH,"GTK_MNEMONIC_ACTION_GET_CLASS");
    }
    public static MemoryAddress GTK_MNEMONIC_ACTION_GET_CLASS ( Addressable ptr) {
        var mh$ = GTK_MNEMONIC_ACTION_GET_CLASS$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_mnemonic_action_get$MH() {
        return RuntimeHelper.requireNonNull(constants$1703.gtk_mnemonic_action_get$MH,"gtk_mnemonic_action_get");
    }
    public static MemoryAddress gtk_mnemonic_action_get () {
        var mh$ = gtk_mnemonic_action_get$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_activate_action_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1703.gtk_activate_action_get_type$MH,"gtk_activate_action_get_type");
    }
    public static long gtk_activate_action_get_type () {
        var mh$ = gtk_activate_action_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkActivateAction_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkActivateAction_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkActivateAction_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkActivateAction_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkActivateAction$MH() {
        return RuntimeHelper.requireNonNull(constants$1704.glib_autoptr_clear_GtkActivateAction$MH,"glib_autoptr_clear_GtkActivateAction");
    }
    public static void glib_autoptr_clear_GtkActivateAction ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkActivateAction$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkActivateAction$MH() {
        return RuntimeHelper.requireNonNull(constants$1704.glib_autoptr_cleanup_GtkActivateAction$MH,"glib_autoptr_cleanup_GtkActivateAction");
    }
    public static void glib_autoptr_cleanup_GtkActivateAction ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkActivateAction$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkActivateAction$MH() {
        return RuntimeHelper.requireNonNull(constants$1704.glib_listautoptr_cleanup_GtkActivateAction$MH,"glib_listautoptr_cleanup_GtkActivateAction");
    }
    public static void glib_listautoptr_cleanup_GtkActivateAction ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkActivateAction$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkActivateAction$MH() {
        return RuntimeHelper.requireNonNull(constants$1704.glib_slistautoptr_cleanup_GtkActivateAction$MH,"glib_slistautoptr_cleanup_GtkActivateAction");
    }
    public static void glib_slistautoptr_cleanup_GtkActivateAction ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkActivateAction$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkActivateAction$MH() {
        return RuntimeHelper.requireNonNull(constants$1704.glib_queueautoptr_cleanup_GtkActivateAction$MH,"glib_queueautoptr_cleanup_GtkActivateAction");
    }
    public static void glib_queueautoptr_cleanup_GtkActivateAction ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkActivateAction$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkActivateActionClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkActivateActionClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkActivateActionClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkActivateActionClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkActivateActionClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1704.glib_autoptr_clear_GtkActivateActionClass$MH,"glib_autoptr_clear_GtkActivateActionClass");
    }
    public static void glib_autoptr_clear_GtkActivateActionClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkActivateActionClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkActivateActionClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1705.glib_autoptr_cleanup_GtkActivateActionClass$MH,"glib_autoptr_cleanup_GtkActivateActionClass");
    }
    public static void glib_autoptr_cleanup_GtkActivateActionClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkActivateActionClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkActivateActionClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1705.glib_listautoptr_cleanup_GtkActivateActionClass$MH,"glib_listautoptr_cleanup_GtkActivateActionClass");
    }
    public static void glib_listautoptr_cleanup_GtkActivateActionClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkActivateActionClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkActivateActionClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1705.glib_slistautoptr_cleanup_GtkActivateActionClass$MH,"glib_slistautoptr_cleanup_GtkActivateActionClass");
    }
    public static void glib_slistautoptr_cleanup_GtkActivateActionClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkActivateActionClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkActivateActionClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1705.glib_queueautoptr_cleanup_GtkActivateActionClass$MH,"glib_queueautoptr_cleanup_GtkActivateActionClass");
    }
    public static void glib_queueautoptr_cleanup_GtkActivateActionClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkActivateActionClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_ACTIVATE_ACTION$MH() {
        return RuntimeHelper.requireNonNull(constants$1705.GTK_ACTIVATE_ACTION$MH,"GTK_ACTIVATE_ACTION");
    }
    public static MemoryAddress GTK_ACTIVATE_ACTION ( Addressable ptr) {
        var mh$ = GTK_ACTIVATE_ACTION$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_ACTIVATE_ACTION_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$1705.GTK_ACTIVATE_ACTION_CLASS$MH,"GTK_ACTIVATE_ACTION_CLASS");
    }
    public static MemoryAddress GTK_ACTIVATE_ACTION_CLASS ( Addressable ptr) {
        var mh$ = GTK_ACTIVATE_ACTION_CLASS$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_ACTIVATE_ACTION$MH() {
        return RuntimeHelper.requireNonNull(constants$1706.GTK_IS_ACTIVATE_ACTION$MH,"GTK_IS_ACTIVATE_ACTION");
    }
    public static int GTK_IS_ACTIVATE_ACTION ( Addressable ptr) {
        var mh$ = GTK_IS_ACTIVATE_ACTION$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_ACTIVATE_ACTION_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$1706.GTK_IS_ACTIVATE_ACTION_CLASS$MH,"GTK_IS_ACTIVATE_ACTION_CLASS");
    }
    public static int GTK_IS_ACTIVATE_ACTION_CLASS ( Addressable ptr) {
        var mh$ = GTK_IS_ACTIVATE_ACTION_CLASS$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_ACTIVATE_ACTION_GET_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$1706.GTK_ACTIVATE_ACTION_GET_CLASS$MH,"GTK_ACTIVATE_ACTION_GET_CLASS");
    }
    public static MemoryAddress GTK_ACTIVATE_ACTION_GET_CLASS ( Addressable ptr) {
        var mh$ = GTK_ACTIVATE_ACTION_GET_CLASS$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_activate_action_get$MH() {
        return RuntimeHelper.requireNonNull(constants$1706.gtk_activate_action_get$MH,"gtk_activate_action_get");
    }
    public static MemoryAddress gtk_activate_action_get () {
        var mh$ = gtk_activate_action_get$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_signal_action_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1706.gtk_signal_action_get_type$MH,"gtk_signal_action_get_type");
    }
    public static long gtk_signal_action_get_type () {
        var mh$ = gtk_signal_action_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkSignalAction_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSignalAction_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSignalAction_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSignalAction_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkSignalAction$MH() {
        return RuntimeHelper.requireNonNull(constants$1706.glib_autoptr_clear_GtkSignalAction$MH,"glib_autoptr_clear_GtkSignalAction");
    }
    public static void glib_autoptr_clear_GtkSignalAction ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkSignalAction$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkSignalAction$MH() {
        return RuntimeHelper.requireNonNull(constants$1707.glib_autoptr_cleanup_GtkSignalAction$MH,"glib_autoptr_cleanup_GtkSignalAction");
    }
    public static void glib_autoptr_cleanup_GtkSignalAction ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkSignalAction$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkSignalAction$MH() {
        return RuntimeHelper.requireNonNull(constants$1707.glib_listautoptr_cleanup_GtkSignalAction$MH,"glib_listautoptr_cleanup_GtkSignalAction");
    }
    public static void glib_listautoptr_cleanup_GtkSignalAction ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkSignalAction$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkSignalAction$MH() {
        return RuntimeHelper.requireNonNull(constants$1707.glib_slistautoptr_cleanup_GtkSignalAction$MH,"glib_slistautoptr_cleanup_GtkSignalAction");
    }
    public static void glib_slistautoptr_cleanup_GtkSignalAction ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkSignalAction$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkSignalAction$MH() {
        return RuntimeHelper.requireNonNull(constants$1707.glib_queueautoptr_cleanup_GtkSignalAction$MH,"glib_queueautoptr_cleanup_GtkSignalAction");
    }
    public static void glib_queueautoptr_cleanup_GtkSignalAction ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkSignalAction$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkSignalActionClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSignalActionClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSignalActionClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSignalActionClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkSignalActionClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1707.glib_autoptr_clear_GtkSignalActionClass$MH,"glib_autoptr_clear_GtkSignalActionClass");
    }
    public static void glib_autoptr_clear_GtkSignalActionClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkSignalActionClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkSignalActionClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1707.glib_autoptr_cleanup_GtkSignalActionClass$MH,"glib_autoptr_cleanup_GtkSignalActionClass");
    }
    public static void glib_autoptr_cleanup_GtkSignalActionClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkSignalActionClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkSignalActionClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1708.glib_listautoptr_cleanup_GtkSignalActionClass$MH,"glib_listautoptr_cleanup_GtkSignalActionClass");
    }
    public static void glib_listautoptr_cleanup_GtkSignalActionClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkSignalActionClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkSignalActionClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1708.glib_slistautoptr_cleanup_GtkSignalActionClass$MH,"glib_slistautoptr_cleanup_GtkSignalActionClass");
    }
    public static void glib_slistautoptr_cleanup_GtkSignalActionClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkSignalActionClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkSignalActionClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1708.glib_queueautoptr_cleanup_GtkSignalActionClass$MH,"glib_queueautoptr_cleanup_GtkSignalActionClass");
    }
    public static void glib_queueautoptr_cleanup_GtkSignalActionClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkSignalActionClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_SIGNAL_ACTION$MH() {
        return RuntimeHelper.requireNonNull(constants$1708.GTK_SIGNAL_ACTION$MH,"GTK_SIGNAL_ACTION");
    }
    public static MemoryAddress GTK_SIGNAL_ACTION ( Addressable ptr) {
        var mh$ = GTK_SIGNAL_ACTION$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_SIGNAL_ACTION_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$1708.GTK_SIGNAL_ACTION_CLASS$MH,"GTK_SIGNAL_ACTION_CLASS");
    }
    public static MemoryAddress GTK_SIGNAL_ACTION_CLASS ( Addressable ptr) {
        var mh$ = GTK_SIGNAL_ACTION_CLASS$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_SIGNAL_ACTION$MH() {
        return RuntimeHelper.requireNonNull(constants$1708.GTK_IS_SIGNAL_ACTION$MH,"GTK_IS_SIGNAL_ACTION");
    }
    public static int GTK_IS_SIGNAL_ACTION ( Addressable ptr) {
        var mh$ = GTK_IS_SIGNAL_ACTION$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_SIGNAL_ACTION_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$1709.GTK_IS_SIGNAL_ACTION_CLASS$MH,"GTK_IS_SIGNAL_ACTION_CLASS");
    }
    public static int GTK_IS_SIGNAL_ACTION_CLASS ( Addressable ptr) {
        var mh$ = GTK_IS_SIGNAL_ACTION_CLASS$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_SIGNAL_ACTION_GET_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$1709.GTK_SIGNAL_ACTION_GET_CLASS$MH,"GTK_SIGNAL_ACTION_GET_CLASS");
    }
    public static MemoryAddress GTK_SIGNAL_ACTION_GET_CLASS ( Addressable ptr) {
        var mh$ = GTK_SIGNAL_ACTION_GET_CLASS$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_signal_action_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1709.gtk_signal_action_new$MH,"gtk_signal_action_new");
    }
    public static MemoryAddress gtk_signal_action_new ( Addressable signal_name) {
        var mh$ = gtk_signal_action_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(signal_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_signal_action_get_signal_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1709.gtk_signal_action_get_signal_name$MH,"gtk_signal_action_get_signal_name");
    }
    public static MemoryAddress gtk_signal_action_get_signal_name ( Addressable self) {
        var mh$ = gtk_signal_action_get_signal_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_named_action_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1709.gtk_named_action_get_type$MH,"gtk_named_action_get_type");
    }
    public static long gtk_named_action_get_type () {
        var mh$ = gtk_named_action_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkNamedAction_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkNamedAction_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkNamedAction_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkNamedAction_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkNamedAction$MH() {
        return RuntimeHelper.requireNonNull(constants$1709.glib_autoptr_clear_GtkNamedAction$MH,"glib_autoptr_clear_GtkNamedAction");
    }
    public static void glib_autoptr_clear_GtkNamedAction ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkNamedAction$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkNamedAction$MH() {
        return RuntimeHelper.requireNonNull(constants$1710.glib_autoptr_cleanup_GtkNamedAction$MH,"glib_autoptr_cleanup_GtkNamedAction");
    }
    public static void glib_autoptr_cleanup_GtkNamedAction ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkNamedAction$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkNamedAction$MH() {
        return RuntimeHelper.requireNonNull(constants$1710.glib_listautoptr_cleanup_GtkNamedAction$MH,"glib_listautoptr_cleanup_GtkNamedAction");
    }
    public static void glib_listautoptr_cleanup_GtkNamedAction ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkNamedAction$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkNamedAction$MH() {
        return RuntimeHelper.requireNonNull(constants$1710.glib_slistautoptr_cleanup_GtkNamedAction$MH,"glib_slistautoptr_cleanup_GtkNamedAction");
    }
    public static void glib_slistautoptr_cleanup_GtkNamedAction ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkNamedAction$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkNamedAction$MH() {
        return RuntimeHelper.requireNonNull(constants$1710.glib_queueautoptr_cleanup_GtkNamedAction$MH,"glib_queueautoptr_cleanup_GtkNamedAction");
    }
    public static void glib_queueautoptr_cleanup_GtkNamedAction ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkNamedAction$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkNamedActionClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkNamedActionClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkNamedActionClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkNamedActionClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkNamedActionClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1710.glib_autoptr_clear_GtkNamedActionClass$MH,"glib_autoptr_clear_GtkNamedActionClass");
    }
    public static void glib_autoptr_clear_GtkNamedActionClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkNamedActionClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkNamedActionClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1710.glib_autoptr_cleanup_GtkNamedActionClass$MH,"glib_autoptr_cleanup_GtkNamedActionClass");
    }
    public static void glib_autoptr_cleanup_GtkNamedActionClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkNamedActionClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkNamedActionClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1711.glib_listautoptr_cleanup_GtkNamedActionClass$MH,"glib_listautoptr_cleanup_GtkNamedActionClass");
    }
    public static void glib_listautoptr_cleanup_GtkNamedActionClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkNamedActionClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkNamedActionClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1711.glib_slistautoptr_cleanup_GtkNamedActionClass$MH,"glib_slistautoptr_cleanup_GtkNamedActionClass");
    }
    public static void glib_slistautoptr_cleanup_GtkNamedActionClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkNamedActionClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkNamedActionClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1711.glib_queueautoptr_cleanup_GtkNamedActionClass$MH,"glib_queueautoptr_cleanup_GtkNamedActionClass");
    }
    public static void glib_queueautoptr_cleanup_GtkNamedActionClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkNamedActionClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_NAMED_ACTION$MH() {
        return RuntimeHelper.requireNonNull(constants$1711.GTK_NAMED_ACTION$MH,"GTK_NAMED_ACTION");
    }
    public static MemoryAddress GTK_NAMED_ACTION ( Addressable ptr) {
        var mh$ = GTK_NAMED_ACTION$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_NAMED_ACTION_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$1711.GTK_NAMED_ACTION_CLASS$MH,"GTK_NAMED_ACTION_CLASS");
    }
    public static MemoryAddress GTK_NAMED_ACTION_CLASS ( Addressable ptr) {
        var mh$ = GTK_NAMED_ACTION_CLASS$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_NAMED_ACTION$MH() {
        return RuntimeHelper.requireNonNull(constants$1711.GTK_IS_NAMED_ACTION$MH,"GTK_IS_NAMED_ACTION");
    }
    public static int GTK_IS_NAMED_ACTION ( Addressable ptr) {
        var mh$ = GTK_IS_NAMED_ACTION$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_NAMED_ACTION_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$1712.GTK_IS_NAMED_ACTION_CLASS$MH,"GTK_IS_NAMED_ACTION_CLASS");
    }
    public static int GTK_IS_NAMED_ACTION_CLASS ( Addressable ptr) {
        var mh$ = GTK_IS_NAMED_ACTION_CLASS$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_NAMED_ACTION_GET_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$1712.GTK_NAMED_ACTION_GET_CLASS$MH,"GTK_NAMED_ACTION_GET_CLASS");
    }
    public static MemoryAddress GTK_NAMED_ACTION_GET_CLASS ( Addressable ptr) {
        var mh$ = GTK_NAMED_ACTION_GET_CLASS$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_named_action_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1712.gtk_named_action_new$MH,"gtk_named_action_new");
    }
    public static MemoryAddress gtk_named_action_new ( Addressable name) {
        var mh$ = gtk_named_action_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_named_action_get_action_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1712.gtk_named_action_get_action_name$MH,"gtk_named_action_get_action_name");
    }
    public static MemoryAddress gtk_named_action_get_action_name ( Addressable self) {
        var mh$ = gtk_named_action_get_action_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1713.gtk_widget_get_type$MH,"gtk_widget_get_type");
    }
    public static long gtk_widget_get_type () {
        var mh$ = gtk_widget_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_unparent$MH() {
        return RuntimeHelper.requireNonNull(constants$1713.gtk_widget_unparent$MH,"gtk_widget_unparent");
    }
    public static void gtk_widget_unparent ( Addressable widget) {
        var mh$ = gtk_widget_unparent$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_show$MH() {
        return RuntimeHelper.requireNonNull(constants$1713.gtk_widget_show$MH,"gtk_widget_show");
    }
    public static void gtk_widget_show ( Addressable widget) {
        var mh$ = gtk_widget_show$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_hide$MH() {
        return RuntimeHelper.requireNonNull(constants$1713.gtk_widget_hide$MH,"gtk_widget_hide");
    }
    public static void gtk_widget_hide ( Addressable widget) {
        var mh$ = gtk_widget_hide$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_map$MH() {
        return RuntimeHelper.requireNonNull(constants$1713.gtk_widget_map$MH,"gtk_widget_map");
    }
    public static void gtk_widget_map ( Addressable widget) {
        var mh$ = gtk_widget_map$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_unmap$MH() {
        return RuntimeHelper.requireNonNull(constants$1713.gtk_widget_unmap$MH,"gtk_widget_unmap");
    }
    public static void gtk_widget_unmap ( Addressable widget) {
        var mh$ = gtk_widget_unmap$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_realize$MH() {
        return RuntimeHelper.requireNonNull(constants$1714.gtk_widget_realize$MH,"gtk_widget_realize");
    }
    public static void gtk_widget_realize ( Addressable widget) {
        var mh$ = gtk_widget_realize$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_unrealize$MH() {
        return RuntimeHelper.requireNonNull(constants$1714.gtk_widget_unrealize$MH,"gtk_widget_unrealize");
    }
    public static void gtk_widget_unrealize ( Addressable widget) {
        var mh$ = gtk_widget_unrealize$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_queue_draw$MH() {
        return RuntimeHelper.requireNonNull(constants$1714.gtk_widget_queue_draw$MH,"gtk_widget_queue_draw");
    }
    public static void gtk_widget_queue_draw ( Addressable widget) {
        var mh$ = gtk_widget_queue_draw$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_queue_resize$MH() {
        return RuntimeHelper.requireNonNull(constants$1714.gtk_widget_queue_resize$MH,"gtk_widget_queue_resize");
    }
    public static void gtk_widget_queue_resize ( Addressable widget) {
        var mh$ = gtk_widget_queue_resize$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_queue_allocate$MH() {
        return RuntimeHelper.requireNonNull(constants$1714.gtk_widget_queue_allocate$MH,"gtk_widget_queue_allocate");
    }
    public static void gtk_widget_queue_allocate ( Addressable widget) {
        var mh$ = gtk_widget_queue_allocate$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_frame_clock$MH() {
        return RuntimeHelper.requireNonNull(constants$1714.gtk_widget_get_frame_clock$MH,"gtk_widget_get_frame_clock");
    }
    public static MemoryAddress gtk_widget_get_frame_clock ( Addressable widget) {
        var mh$ = gtk_widget_get_frame_clock$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_size_allocate$MH() {
        return RuntimeHelper.requireNonNull(constants$1715.gtk_widget_size_allocate$MH,"gtk_widget_size_allocate");
    }
    public static void gtk_widget_size_allocate ( Addressable widget,  Addressable allocation,  int baseline) {
        var mh$ = gtk_widget_size_allocate$MH();
        try {
            mh$.invokeExact(widget, allocation, baseline);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_allocate$MH() {
        return RuntimeHelper.requireNonNull(constants$1715.gtk_widget_allocate$MH,"gtk_widget_allocate");
    }
    public static void gtk_widget_allocate ( Addressable widget,  int width,  int height,  int baseline,  Addressable transform) {
        var mh$ = gtk_widget_allocate$MH();
        try {
            mh$.invokeExact(widget, width, height, baseline, transform);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_request_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1715.gtk_widget_get_request_mode$MH,"gtk_widget_get_request_mode");
    }
    public static int gtk_widget_get_request_mode ( Addressable widget) {
        var mh$ = gtk_widget_get_request_mode$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_measure$MH() {
        return RuntimeHelper.requireNonNull(constants$1715.gtk_widget_measure$MH,"gtk_widget_measure");
    }
    public static void gtk_widget_measure ( Addressable widget,  int orientation,  int for_size,  Addressable minimum,  Addressable natural,  Addressable minimum_baseline,  Addressable natural_baseline) {
        var mh$ = gtk_widget_measure$MH();
        try {
            mh$.invokeExact(widget, orientation, for_size, minimum, natural, minimum_baseline, natural_baseline);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_preferred_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1715.gtk_widget_get_preferred_size$MH,"gtk_widget_get_preferred_size");
    }
    public static void gtk_widget_get_preferred_size ( Addressable widget,  Addressable minimum_size,  Addressable natural_size) {
        var mh$ = gtk_widget_get_preferred_size$MH();
        try {
            mh$.invokeExact(widget, minimum_size, natural_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_layout_manager$MH() {
        return RuntimeHelper.requireNonNull(constants$1715.gtk_widget_set_layout_manager$MH,"gtk_widget_set_layout_manager");
    }
    public static void gtk_widget_set_layout_manager ( Addressable widget,  Addressable layout_manager) {
        var mh$ = gtk_widget_set_layout_manager$MH();
        try {
            mh$.invokeExact(widget, layout_manager);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_layout_manager$MH() {
        return RuntimeHelper.requireNonNull(constants$1716.gtk_widget_get_layout_manager$MH,"gtk_widget_get_layout_manager");
    }
    public static MemoryAddress gtk_widget_get_layout_manager ( Addressable widget) {
        var mh$ = gtk_widget_get_layout_manager$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_set_layout_manager_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1716.gtk_widget_class_set_layout_manager_type$MH,"gtk_widget_class_set_layout_manager_type");
    }
    public static void gtk_widget_class_set_layout_manager_type ( Addressable widget_class,  long type) {
        var mh$ = gtk_widget_class_set_layout_manager_type$MH();
        try {
            mh$.invokeExact(widget_class, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_get_layout_manager_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1716.gtk_widget_class_get_layout_manager_type$MH,"gtk_widget_class_get_layout_manager_type");
    }
    public static long gtk_widget_class_get_layout_manager_type ( Addressable widget_class) {
        var mh$ = gtk_widget_class_get_layout_manager_type$MH();
        try {
            return (long)mh$.invokeExact(widget_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_add_binding$MH() {
        return RuntimeHelper.requireNonNull(constants$1716.gtk_widget_class_add_binding$MH,"gtk_widget_class_add_binding");
    }
    public static void gtk_widget_class_add_binding ( Addressable widget_class,  int keyval,  int mods,  Addressable callback,  Addressable format_string, Object... x5) {
        var mh$ = gtk_widget_class_add_binding$MH();
        try {
            mh$.invokeExact(widget_class, keyval, mods, callback, format_string, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_add_binding_signal$MH() {
        return RuntimeHelper.requireNonNull(constants$1716.gtk_widget_class_add_binding_signal$MH,"gtk_widget_class_add_binding_signal");
    }
    public static void gtk_widget_class_add_binding_signal ( Addressable widget_class,  int keyval,  int mods,  Addressable signal,  Addressable format_string, Object... x5) {
        var mh$ = gtk_widget_class_add_binding_signal$MH();
        try {
            mh$.invokeExact(widget_class, keyval, mods, signal, format_string, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_add_binding_action$MH() {
        return RuntimeHelper.requireNonNull(constants$1716.gtk_widget_class_add_binding_action$MH,"gtk_widget_class_add_binding_action");
    }
    public static void gtk_widget_class_add_binding_action ( Addressable widget_class,  int keyval,  int mods,  Addressable action_name,  Addressable format_string, Object... x5) {
        var mh$ = gtk_widget_class_add_binding_action$MH();
        try {
            mh$.invokeExact(widget_class, keyval, mods, action_name, format_string, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_add_shortcut$MH() {
        return RuntimeHelper.requireNonNull(constants$1717.gtk_widget_class_add_shortcut$MH,"gtk_widget_class_add_shortcut");
    }
    public static void gtk_widget_class_add_shortcut ( Addressable widget_class,  Addressable shortcut) {
        var mh$ = gtk_widget_class_add_shortcut$MH();
        try {
            mh$.invokeExact(widget_class, shortcut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_set_activate_signal$MH() {
        return RuntimeHelper.requireNonNull(constants$1717.gtk_widget_class_set_activate_signal$MH,"gtk_widget_class_set_activate_signal");
    }
    public static void gtk_widget_class_set_activate_signal ( Addressable widget_class,  int signal_id) {
        var mh$ = gtk_widget_class_set_activate_signal$MH();
        try {
            mh$.invokeExact(widget_class, signal_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_set_activate_signal_from_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1717.gtk_widget_class_set_activate_signal_from_name$MH,"gtk_widget_class_set_activate_signal_from_name");
    }
    public static void gtk_widget_class_set_activate_signal_from_name ( Addressable widget_class,  Addressable signal_name) {
        var mh$ = gtk_widget_class_set_activate_signal_from_name$MH();
        try {
            mh$.invokeExact(widget_class, signal_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_get_activate_signal$MH() {
        return RuntimeHelper.requireNonNull(constants$1717.gtk_widget_class_get_activate_signal$MH,"gtk_widget_class_get_activate_signal");
    }
    public static int gtk_widget_class_get_activate_signal ( Addressable widget_class) {
        var mh$ = gtk_widget_class_get_activate_signal$MH();
        try {
            return (int)mh$.invokeExact(widget_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_mnemonic_activate$MH() {
        return RuntimeHelper.requireNonNull(constants$1717.gtk_widget_mnemonic_activate$MH,"gtk_widget_mnemonic_activate");
    }
    public static int gtk_widget_mnemonic_activate ( Addressable widget,  int group_cycling) {
        var mh$ = gtk_widget_mnemonic_activate$MH();
        try {
            return (int)mh$.invokeExact(widget, group_cycling);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_activate$MH() {
        return RuntimeHelper.requireNonNull(constants$1717.gtk_widget_activate$MH,"gtk_widget_activate");
    }
    public static int gtk_widget_activate ( Addressable widget) {
        var mh$ = gtk_widget_activate$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_can_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$1718.gtk_widget_set_can_focus$MH,"gtk_widget_set_can_focus");
    }
    public static void gtk_widget_set_can_focus ( Addressable widget,  int can_focus) {
        var mh$ = gtk_widget_set_can_focus$MH();
        try {
            mh$.invokeExact(widget, can_focus);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_can_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$1718.gtk_widget_get_can_focus$MH,"gtk_widget_get_can_focus");
    }
    public static int gtk_widget_get_can_focus ( Addressable widget) {
        var mh$ = gtk_widget_get_can_focus$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_focusable$MH() {
        return RuntimeHelper.requireNonNull(constants$1718.gtk_widget_set_focusable$MH,"gtk_widget_set_focusable");
    }
    public static void gtk_widget_set_focusable ( Addressable widget,  int focusable) {
        var mh$ = gtk_widget_set_focusable$MH();
        try {
            mh$.invokeExact(widget, focusable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_focusable$MH() {
        return RuntimeHelper.requireNonNull(constants$1718.gtk_widget_get_focusable$MH,"gtk_widget_get_focusable");
    }
    public static int gtk_widget_get_focusable ( Addressable widget) {
        var mh$ = gtk_widget_get_focusable$MH();
        try {
            return (int)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


