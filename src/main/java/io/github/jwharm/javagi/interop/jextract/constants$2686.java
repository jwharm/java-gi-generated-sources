// Generated by jextract

package io.github.jwharm.javagi.interop.jextract;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$2686 {

    static final FunctionDescriptor ADW_ANIMATION_TARGET_CLASS$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ADW_ANIMATION_TARGET_CLASS$MH = RuntimeHelper.downcallHandle(
        "ADW_ANIMATION_TARGET_CLASS",
        constants$2686.ADW_ANIMATION_TARGET_CLASS$FUNC
    );
    static final FunctionDescriptor ADW_IS_ANIMATION_TARGET$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ADW_IS_ANIMATION_TARGET$MH = RuntimeHelper.downcallHandle(
        "ADW_IS_ANIMATION_TARGET",
        constants$2686.ADW_IS_ANIMATION_TARGET$FUNC
    );
    static final FunctionDescriptor ADW_IS_ANIMATION_TARGET_CLASS$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ADW_IS_ANIMATION_TARGET_CLASS$MH = RuntimeHelper.downcallHandle(
        "ADW_IS_ANIMATION_TARGET_CLASS",
        constants$2686.ADW_IS_ANIMATION_TARGET_CLASS$FUNC
    );
    static final FunctionDescriptor ADW_ANIMATION_TARGET_GET_CLASS$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ADW_ANIMATION_TARGET_GET_CLASS$MH = RuntimeHelper.downcallHandle(
        "ADW_ANIMATION_TARGET_GET_CLASS",
        constants$2686.ADW_ANIMATION_TARGET_GET_CLASS$FUNC
    );
    static final FunctionDescriptor AdwAnimationTargetFunc$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle AdwAnimationTargetFunc$MH = RuntimeHelper.downcallHandle(
        constants$2686.AdwAnimationTargetFunc$FUNC
    );
}


