// Generated by jextract

package io.github.jwharm.javagi.interop.jextract;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
 class gtk_h_20 extends gtk_h_19 {

    public static MethodHandle gtk_string_filter_match_mode_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2011.gtk_string_filter_match_mode_get_type$MH,"gtk_string_filter_match_mode_get_type");
    }
    public static long gtk_string_filter_match_mode_get_type () {
        var mh$ = gtk_string_filter_match_mode_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_print_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2011.gtk_style_context_print_flags_get_type$MH,"gtk_style_context_print_flags_get_type");
    }
    public static long gtk_style_context_print_flags_get_type () {
        var mh$ = gtk_style_context_print_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_search_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2011.gtk_text_search_flags_get_type$MH,"gtk_text_search_flags_get_type");
    }
    public static long gtk_text_search_flags_get_type () {
        var mh$ = gtk_text_search_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_window_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2012.gtk_text_window_type_get_type$MH,"gtk_text_window_type_get_type");
    }
    public static long gtk_text_window_type_get_type () {
        var mh$ = gtk_text_window_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_view_layer_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2012.gtk_text_view_layer_get_type$MH,"gtk_text_view_layer_get_type");
    }
    public static long gtk_text_view_layer_get_type () {
        var mh$ = gtk_text_view_layer_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_extend_selection_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2012.gtk_text_extend_selection_get_type$MH,"gtk_text_extend_selection_get_type");
    }
    public static long gtk_text_extend_selection_get_type () {
        var mh$ = gtk_text_extend_selection_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2012.gtk_tree_model_flags_get_type$MH,"gtk_tree_model_flags_get_type");
    }
    public static long gtk_tree_model_flags_get_type () {
        var mh$ = gtk_tree_model_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_drop_position_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2012.gtk_tree_view_drop_position_get_type$MH,"gtk_tree_view_drop_position_get_type");
    }
    public static long gtk_tree_view_drop_position_get_type () {
        var mh$ = gtk_tree_view_drop_position_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_sizing_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2012.gtk_tree_view_column_sizing_get_type$MH,"gtk_tree_view_column_sizing_get_type");
    }
    public static long gtk_tree_view_column_sizing_get_type () {
        var mh$ = gtk_tree_view_column_sizing_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_guide_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2013.gtk_constraint_guide_get_type$MH,"gtk_constraint_guide_get_type");
    }
    public static long gtk_constraint_guide_get_type () {
        var mh$ = gtk_constraint_guide_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkConstraintGuide_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkConstraintGuide_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkConstraintGuide_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkConstraintGuide_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkConstraintGuide$MH() {
        return RuntimeHelper.requireNonNull(constants$2013.glib_autoptr_clear_GtkConstraintGuide$MH,"glib_autoptr_clear_GtkConstraintGuide");
    }
    public static void glib_autoptr_clear_GtkConstraintGuide ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkConstraintGuide$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkConstraintGuide$MH() {
        return RuntimeHelper.requireNonNull(constants$2013.glib_autoptr_cleanup_GtkConstraintGuide$MH,"glib_autoptr_cleanup_GtkConstraintGuide");
    }
    public static void glib_autoptr_cleanup_GtkConstraintGuide ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkConstraintGuide$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkConstraintGuide$MH() {
        return RuntimeHelper.requireNonNull(constants$2013.glib_listautoptr_cleanup_GtkConstraintGuide$MH,"glib_listautoptr_cleanup_GtkConstraintGuide");
    }
    public static void glib_listautoptr_cleanup_GtkConstraintGuide ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkConstraintGuide$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkConstraintGuide$MH() {
        return RuntimeHelper.requireNonNull(constants$2013.glib_slistautoptr_cleanup_GtkConstraintGuide$MH,"glib_slistautoptr_cleanup_GtkConstraintGuide");
    }
    public static void glib_slistautoptr_cleanup_GtkConstraintGuide ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkConstraintGuide$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkConstraintGuide$MH() {
        return RuntimeHelper.requireNonNull(constants$2013.glib_queueautoptr_cleanup_GtkConstraintGuide$MH,"glib_queueautoptr_cleanup_GtkConstraintGuide");
    }
    public static void glib_queueautoptr_cleanup_GtkConstraintGuide ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkConstraintGuide$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkConstraintGuideClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkConstraintGuideClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkConstraintGuideClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkConstraintGuideClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkConstraintGuideClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2014.glib_autoptr_clear_GtkConstraintGuideClass$MH,"glib_autoptr_clear_GtkConstraintGuideClass");
    }
    public static void glib_autoptr_clear_GtkConstraintGuideClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkConstraintGuideClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkConstraintGuideClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2014.glib_autoptr_cleanup_GtkConstraintGuideClass$MH,"glib_autoptr_cleanup_GtkConstraintGuideClass");
    }
    public static void glib_autoptr_cleanup_GtkConstraintGuideClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkConstraintGuideClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkConstraintGuideClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2014.glib_listautoptr_cleanup_GtkConstraintGuideClass$MH,"glib_listautoptr_cleanup_GtkConstraintGuideClass");
    }
    public static void glib_listautoptr_cleanup_GtkConstraintGuideClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkConstraintGuideClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkConstraintGuideClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2014.glib_slistautoptr_cleanup_GtkConstraintGuideClass$MH,"glib_slistautoptr_cleanup_GtkConstraintGuideClass");
    }
    public static void glib_slistautoptr_cleanup_GtkConstraintGuideClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkConstraintGuideClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkConstraintGuideClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2014.glib_queueautoptr_cleanup_GtkConstraintGuideClass$MH,"glib_queueautoptr_cleanup_GtkConstraintGuideClass");
    }
    public static void glib_queueautoptr_cleanup_GtkConstraintGuideClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkConstraintGuideClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_CONSTRAINT_GUIDE$MH() {
        return RuntimeHelper.requireNonNull(constants$2014.GTK_CONSTRAINT_GUIDE$MH,"GTK_CONSTRAINT_GUIDE");
    }
    public static MemoryAddress GTK_CONSTRAINT_GUIDE ( Addressable ptr) {
        var mh$ = GTK_CONSTRAINT_GUIDE$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_CONSTRAINT_GUIDE$MH() {
        return RuntimeHelper.requireNonNull(constants$2015.GTK_IS_CONSTRAINT_GUIDE$MH,"GTK_IS_CONSTRAINT_GUIDE");
    }
    public static int GTK_IS_CONSTRAINT_GUIDE ( Addressable ptr) {
        var mh$ = GTK_IS_CONSTRAINT_GUIDE$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_guide_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2015.gtk_constraint_guide_new$MH,"gtk_constraint_guide_new");
    }
    public static MemoryAddress gtk_constraint_guide_new () {
        var mh$ = gtk_constraint_guide_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_guide_set_min_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2015.gtk_constraint_guide_set_min_size$MH,"gtk_constraint_guide_set_min_size");
    }
    public static void gtk_constraint_guide_set_min_size ( Addressable guide,  int width,  int height) {
        var mh$ = gtk_constraint_guide_set_min_size$MH();
        try {
            mh$.invokeExact(guide, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_guide_get_min_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2015.gtk_constraint_guide_get_min_size$MH,"gtk_constraint_guide_get_min_size");
    }
    public static void gtk_constraint_guide_get_min_size ( Addressable guide,  Addressable width,  Addressable height) {
        var mh$ = gtk_constraint_guide_get_min_size$MH();
        try {
            mh$.invokeExact(guide, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_guide_set_nat_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2015.gtk_constraint_guide_set_nat_size$MH,"gtk_constraint_guide_set_nat_size");
    }
    public static void gtk_constraint_guide_set_nat_size ( Addressable guide,  int width,  int height) {
        var mh$ = gtk_constraint_guide_set_nat_size$MH();
        try {
            mh$.invokeExact(guide, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_guide_get_nat_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2015.gtk_constraint_guide_get_nat_size$MH,"gtk_constraint_guide_get_nat_size");
    }
    public static void gtk_constraint_guide_get_nat_size ( Addressable guide,  Addressable width,  Addressable height) {
        var mh$ = gtk_constraint_guide_get_nat_size$MH();
        try {
            mh$.invokeExact(guide, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_guide_set_max_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2016.gtk_constraint_guide_set_max_size$MH,"gtk_constraint_guide_set_max_size");
    }
    public static void gtk_constraint_guide_set_max_size ( Addressable guide,  int width,  int height) {
        var mh$ = gtk_constraint_guide_set_max_size$MH();
        try {
            mh$.invokeExact(guide, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_guide_get_max_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2016.gtk_constraint_guide_get_max_size$MH,"gtk_constraint_guide_get_max_size");
    }
    public static void gtk_constraint_guide_get_max_size ( Addressable guide,  Addressable width,  Addressable height) {
        var mh$ = gtk_constraint_guide_get_max_size$MH();
        try {
            mh$.invokeExact(guide, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_guide_get_strength$MH() {
        return RuntimeHelper.requireNonNull(constants$2016.gtk_constraint_guide_get_strength$MH,"gtk_constraint_guide_get_strength");
    }
    public static int gtk_constraint_guide_get_strength ( Addressable guide) {
        var mh$ = gtk_constraint_guide_get_strength$MH();
        try {
            return (int)mh$.invokeExact(guide);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_guide_set_strength$MH() {
        return RuntimeHelper.requireNonNull(constants$2016.gtk_constraint_guide_set_strength$MH,"gtk_constraint_guide_set_strength");
    }
    public static void gtk_constraint_guide_set_strength ( Addressable guide,  int strength) {
        var mh$ = gtk_constraint_guide_set_strength$MH();
        try {
            mh$.invokeExact(guide, strength);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_guide_set_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2016.gtk_constraint_guide_set_name$MH,"gtk_constraint_guide_set_name");
    }
    public static void gtk_constraint_guide_set_name ( Addressable guide,  Addressable name) {
        var mh$ = gtk_constraint_guide_set_name$MH();
        try {
            mh$.invokeExact(guide, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_guide_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2016.gtk_constraint_guide_get_name$MH,"gtk_constraint_guide_get_name");
    }
    public static MemoryAddress gtk_constraint_guide_get_name ( Addressable guide) {
        var mh$ = gtk_constraint_guide_get_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(guide);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_layout_child_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2017.gtk_constraint_layout_child_get_type$MH,"gtk_constraint_layout_child_get_type");
    }
    public static long gtk_constraint_layout_child_get_type () {
        var mh$ = gtk_constraint_layout_child_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkConstraintLayoutChild_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkConstraintLayoutChild_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkConstraintLayoutChild_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkConstraintLayoutChild_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkConstraintLayoutChild$MH() {
        return RuntimeHelper.requireNonNull(constants$2017.glib_autoptr_clear_GtkConstraintLayoutChild$MH,"glib_autoptr_clear_GtkConstraintLayoutChild");
    }
    public static void glib_autoptr_clear_GtkConstraintLayoutChild ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkConstraintLayoutChild$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkConstraintLayoutChild$MH() {
        return RuntimeHelper.requireNonNull(constants$2017.glib_autoptr_cleanup_GtkConstraintLayoutChild$MH,"glib_autoptr_cleanup_GtkConstraintLayoutChild");
    }
    public static void glib_autoptr_cleanup_GtkConstraintLayoutChild ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkConstraintLayoutChild$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkConstraintLayoutChild$MH() {
        return RuntimeHelper.requireNonNull(constants$2017.glib_listautoptr_cleanup_GtkConstraintLayoutChild$MH,"glib_listautoptr_cleanup_GtkConstraintLayoutChild");
    }
    public static void glib_listautoptr_cleanup_GtkConstraintLayoutChild ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkConstraintLayoutChild$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkConstraintLayoutChild$MH() {
        return RuntimeHelper.requireNonNull(constants$2017.glib_slistautoptr_cleanup_GtkConstraintLayoutChild$MH,"glib_slistautoptr_cleanup_GtkConstraintLayoutChild");
    }
    public static void glib_slistautoptr_cleanup_GtkConstraintLayoutChild ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkConstraintLayoutChild$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkConstraintLayoutChild$MH() {
        return RuntimeHelper.requireNonNull(constants$2017.glib_queueautoptr_cleanup_GtkConstraintLayoutChild$MH,"glib_queueautoptr_cleanup_GtkConstraintLayoutChild");
    }
    public static void glib_queueautoptr_cleanup_GtkConstraintLayoutChild ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkConstraintLayoutChild$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkConstraintLayoutChildClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkConstraintLayoutChildClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkConstraintLayoutChildClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkConstraintLayoutChildClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkConstraintLayoutChildClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2018.glib_autoptr_clear_GtkConstraintLayoutChildClass$MH,"glib_autoptr_clear_GtkConstraintLayoutChildClass");
    }
    public static void glib_autoptr_clear_GtkConstraintLayoutChildClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkConstraintLayoutChildClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkConstraintLayoutChildClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2018.glib_autoptr_cleanup_GtkConstraintLayoutChildClass$MH,"glib_autoptr_cleanup_GtkConstraintLayoutChildClass");
    }
    public static void glib_autoptr_cleanup_GtkConstraintLayoutChildClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkConstraintLayoutChildClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkConstraintLayoutChildClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2018.glib_listautoptr_cleanup_GtkConstraintLayoutChildClass$MH,"glib_listautoptr_cleanup_GtkConstraintLayoutChildClass");
    }
    public static void glib_listautoptr_cleanup_GtkConstraintLayoutChildClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkConstraintLayoutChildClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkConstraintLayoutChildClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2018.glib_slistautoptr_cleanup_GtkConstraintLayoutChildClass$MH,"glib_slistautoptr_cleanup_GtkConstraintLayoutChildClass");
    }
    public static void glib_slistautoptr_cleanup_GtkConstraintLayoutChildClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkConstraintLayoutChildClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkConstraintLayoutChildClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2018.glib_queueautoptr_cleanup_GtkConstraintLayoutChildClass$MH,"glib_queueautoptr_cleanup_GtkConstraintLayoutChildClass");
    }
    public static void glib_queueautoptr_cleanup_GtkConstraintLayoutChildClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkConstraintLayoutChildClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_CONSTRAINT_LAYOUT_CHILD$MH() {
        return RuntimeHelper.requireNonNull(constants$2018.GTK_CONSTRAINT_LAYOUT_CHILD$MH,"GTK_CONSTRAINT_LAYOUT_CHILD");
    }
    public static MemoryAddress GTK_CONSTRAINT_LAYOUT_CHILD ( Addressable ptr) {
        var mh$ = GTK_CONSTRAINT_LAYOUT_CHILD$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_CONSTRAINT_LAYOUT_CHILD$MH() {
        return RuntimeHelper.requireNonNull(constants$2019.GTK_IS_CONSTRAINT_LAYOUT_CHILD$MH,"GTK_IS_CONSTRAINT_LAYOUT_CHILD");
    }
    public static int GTK_IS_CONSTRAINT_LAYOUT_CHILD ( Addressable ptr) {
        var mh$ = GTK_IS_CONSTRAINT_LAYOUT_CHILD$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_layout_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2019.gtk_constraint_layout_get_type$MH,"gtk_constraint_layout_get_type");
    }
    public static long gtk_constraint_layout_get_type () {
        var mh$ = gtk_constraint_layout_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkConstraintLayout_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkConstraintLayout_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkConstraintLayout_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkConstraintLayout_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkConstraintLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$2019.glib_autoptr_clear_GtkConstraintLayout$MH,"glib_autoptr_clear_GtkConstraintLayout");
    }
    public static void glib_autoptr_clear_GtkConstraintLayout ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkConstraintLayout$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkConstraintLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$2019.glib_autoptr_cleanup_GtkConstraintLayout$MH,"glib_autoptr_cleanup_GtkConstraintLayout");
    }
    public static void glib_autoptr_cleanup_GtkConstraintLayout ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkConstraintLayout$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkConstraintLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$2019.glib_listautoptr_cleanup_GtkConstraintLayout$MH,"glib_listautoptr_cleanup_GtkConstraintLayout");
    }
    public static void glib_listautoptr_cleanup_GtkConstraintLayout ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkConstraintLayout$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkConstraintLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$2019.glib_slistautoptr_cleanup_GtkConstraintLayout$MH,"glib_slistautoptr_cleanup_GtkConstraintLayout");
    }
    public static void glib_slistautoptr_cleanup_GtkConstraintLayout ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkConstraintLayout$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkConstraintLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$2020.glib_queueautoptr_cleanup_GtkConstraintLayout$MH,"glib_queueautoptr_cleanup_GtkConstraintLayout");
    }
    public static void glib_queueautoptr_cleanup_GtkConstraintLayout ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkConstraintLayout$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkConstraintLayoutClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkConstraintLayoutClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkConstraintLayoutClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkConstraintLayoutClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkConstraintLayoutClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2020.glib_autoptr_clear_GtkConstraintLayoutClass$MH,"glib_autoptr_clear_GtkConstraintLayoutClass");
    }
    public static void glib_autoptr_clear_GtkConstraintLayoutClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkConstraintLayoutClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkConstraintLayoutClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2020.glib_autoptr_cleanup_GtkConstraintLayoutClass$MH,"glib_autoptr_cleanup_GtkConstraintLayoutClass");
    }
    public static void glib_autoptr_cleanup_GtkConstraintLayoutClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkConstraintLayoutClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkConstraintLayoutClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2020.glib_listautoptr_cleanup_GtkConstraintLayoutClass$MH,"glib_listautoptr_cleanup_GtkConstraintLayoutClass");
    }
    public static void glib_listautoptr_cleanup_GtkConstraintLayoutClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkConstraintLayoutClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkConstraintLayoutClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2020.glib_slistautoptr_cleanup_GtkConstraintLayoutClass$MH,"glib_slistautoptr_cleanup_GtkConstraintLayoutClass");
    }
    public static void glib_slistautoptr_cleanup_GtkConstraintLayoutClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkConstraintLayoutClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkConstraintLayoutClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2020.glib_queueautoptr_cleanup_GtkConstraintLayoutClass$MH,"glib_queueautoptr_cleanup_GtkConstraintLayoutClass");
    }
    public static void glib_queueautoptr_cleanup_GtkConstraintLayoutClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkConstraintLayoutClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_CONSTRAINT_LAYOUT$MH() {
        return RuntimeHelper.requireNonNull(constants$2021.GTK_CONSTRAINT_LAYOUT$MH,"GTK_CONSTRAINT_LAYOUT");
    }
    public static MemoryAddress GTK_CONSTRAINT_LAYOUT ( Addressable ptr) {
        var mh$ = GTK_CONSTRAINT_LAYOUT$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_CONSTRAINT_LAYOUT$MH() {
        return RuntimeHelper.requireNonNull(constants$2021.GTK_IS_CONSTRAINT_LAYOUT$MH,"GTK_IS_CONSTRAINT_LAYOUT");
    }
    public static int GTK_IS_CONSTRAINT_LAYOUT ( Addressable ptr) {
        var mh$ = GTK_IS_CONSTRAINT_LAYOUT$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_vfl_parser_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$2021.gtk_constraint_vfl_parser_error_quark$MH,"gtk_constraint_vfl_parser_error_quark");
    }
    public static int gtk_constraint_vfl_parser_error_quark () {
        var mh$ = gtk_constraint_vfl_parser_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_layout_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2021.gtk_constraint_layout_new$MH,"gtk_constraint_layout_new");
    }
    public static MemoryAddress gtk_constraint_layout_new () {
        var mh$ = gtk_constraint_layout_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_layout_add_constraint$MH() {
        return RuntimeHelper.requireNonNull(constants$2021.gtk_constraint_layout_add_constraint$MH,"gtk_constraint_layout_add_constraint");
    }
    public static void gtk_constraint_layout_add_constraint ( Addressable layout,  Addressable constraint) {
        var mh$ = gtk_constraint_layout_add_constraint$MH();
        try {
            mh$.invokeExact(layout, constraint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_layout_remove_constraint$MH() {
        return RuntimeHelper.requireNonNull(constants$2021.gtk_constraint_layout_remove_constraint$MH,"gtk_constraint_layout_remove_constraint");
    }
    public static void gtk_constraint_layout_remove_constraint ( Addressable layout,  Addressable constraint) {
        var mh$ = gtk_constraint_layout_remove_constraint$MH();
        try {
            mh$.invokeExact(layout, constraint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_layout_add_guide$MH() {
        return RuntimeHelper.requireNonNull(constants$2022.gtk_constraint_layout_add_guide$MH,"gtk_constraint_layout_add_guide");
    }
    public static void gtk_constraint_layout_add_guide ( Addressable layout,  Addressable guide) {
        var mh$ = gtk_constraint_layout_add_guide$MH();
        try {
            mh$.invokeExact(layout, guide);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_layout_remove_guide$MH() {
        return RuntimeHelper.requireNonNull(constants$2022.gtk_constraint_layout_remove_guide$MH,"gtk_constraint_layout_remove_guide");
    }
    public static void gtk_constraint_layout_remove_guide ( Addressable layout,  Addressable guide) {
        var mh$ = gtk_constraint_layout_remove_guide$MH();
        try {
            mh$.invokeExact(layout, guide);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_layout_remove_all_constraints$MH() {
        return RuntimeHelper.requireNonNull(constants$2022.gtk_constraint_layout_remove_all_constraints$MH,"gtk_constraint_layout_remove_all_constraints");
    }
    public static void gtk_constraint_layout_remove_all_constraints ( Addressable layout) {
        var mh$ = gtk_constraint_layout_remove_all_constraints$MH();
        try {
            mh$.invokeExact(layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_layout_add_constraints_from_description$MH() {
        return RuntimeHelper.requireNonNull(constants$2022.gtk_constraint_layout_add_constraints_from_description$MH,"gtk_constraint_layout_add_constraints_from_description");
    }
    public static MemoryAddress gtk_constraint_layout_add_constraints_from_description ( Addressable layout,  Addressable lines,  long n_lines,  int hspacing,  int vspacing,  Addressable error,  Addressable first_view, Object... x7) {
        var mh$ = gtk_constraint_layout_add_constraints_from_description$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(layout, lines, n_lines, hspacing, vspacing, error, first_view, x7);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_layout_add_constraints_from_descriptionv$MH() {
        return RuntimeHelper.requireNonNull(constants$2022.gtk_constraint_layout_add_constraints_from_descriptionv$MH,"gtk_constraint_layout_add_constraints_from_descriptionv");
    }
    public static MemoryAddress gtk_constraint_layout_add_constraints_from_descriptionv ( Addressable layout,  Addressable lines,  long n_lines,  int hspacing,  int vspacing,  Addressable views,  Addressable error) {
        var mh$ = gtk_constraint_layout_add_constraints_from_descriptionv$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(layout, lines, n_lines, hspacing, vspacing, views, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_layout_observe_constraints$MH() {
        return RuntimeHelper.requireNonNull(constants$2022.gtk_constraint_layout_observe_constraints$MH,"gtk_constraint_layout_observe_constraints");
    }
    public static MemoryAddress gtk_constraint_layout_observe_constraints ( Addressable layout) {
        var mh$ = gtk_constraint_layout_observe_constraints$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_constraint_layout_observe_guides$MH() {
        return RuntimeHelper.requireNonNull(constants$2023.gtk_constraint_layout_observe_guides$MH,"gtk_constraint_layout_observe_guides");
    }
    public static MemoryAddress gtk_constraint_layout_observe_guides ( Addressable layout) {
        var mh$ = gtk_constraint_layout_observe_guides$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2023.gtk_css_provider_get_type$MH,"gtk_css_provider_get_type");
    }
    public static long gtk_css_provider_get_type () {
        var mh$ = gtk_css_provider_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2023.gtk_css_provider_new$MH,"gtk_css_provider_new");
    }
    public static MemoryAddress gtk_css_provider_new () {
        var mh$ = gtk_css_provider_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$2023.gtk_css_provider_to_string$MH,"gtk_css_provider_to_string");
    }
    public static MemoryAddress gtk_css_provider_to_string ( Addressable provider) {
        var mh$ = gtk_css_provider_to_string$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(provider);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_load_from_data$MH() {
        return RuntimeHelper.requireNonNull(constants$2023.gtk_css_provider_load_from_data$MH,"gtk_css_provider_load_from_data");
    }
    public static void gtk_css_provider_load_from_data ( Addressable css_provider,  Addressable data,  long length) {
        var mh$ = gtk_css_provider_load_from_data$MH();
        try {
            mh$.invokeExact(css_provider, data, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_load_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2023.gtk_css_provider_load_from_file$MH,"gtk_css_provider_load_from_file");
    }
    public static void gtk_css_provider_load_from_file ( Addressable css_provider,  Addressable file) {
        var mh$ = gtk_css_provider_load_from_file$MH();
        try {
            mh$.invokeExact(css_provider, file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_load_from_path$MH() {
        return RuntimeHelper.requireNonNull(constants$2024.gtk_css_provider_load_from_path$MH,"gtk_css_provider_load_from_path");
    }
    public static void gtk_css_provider_load_from_path ( Addressable css_provider,  Addressable path) {
        var mh$ = gtk_css_provider_load_from_path$MH();
        try {
            mh$.invokeExact(css_provider, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_load_from_resource$MH() {
        return RuntimeHelper.requireNonNull(constants$2024.gtk_css_provider_load_from_resource$MH,"gtk_css_provider_load_from_resource");
    }
    public static void gtk_css_provider_load_from_resource ( Addressable css_provider,  Addressable resource_path) {
        var mh$ = gtk_css_provider_load_from_resource$MH();
        try {
            mh$.invokeExact(css_provider, resource_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_css_provider_load_named$MH() {
        return RuntimeHelper.requireNonNull(constants$2024.gtk_css_provider_load_named$MH,"gtk_css_provider_load_named");
    }
    public static void gtk_css_provider_load_named ( Addressable provider,  Addressable name,  Addressable variant) {
        var mh$ = gtk_css_provider_load_named$MH();
        try {
            mh$.invokeExact(provider, name, variant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_custom_layout_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2025.gtk_custom_layout_get_type$MH,"gtk_custom_layout_get_type");
    }
    public static long gtk_custom_layout_get_type () {
        var mh$ = gtk_custom_layout_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCustomLayout_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCustomLayout_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCustomLayout_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCustomLayout_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCustomLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$2025.glib_autoptr_clear_GtkCustomLayout$MH,"glib_autoptr_clear_GtkCustomLayout");
    }
    public static void glib_autoptr_clear_GtkCustomLayout ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkCustomLayout$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCustomLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$2025.glib_autoptr_cleanup_GtkCustomLayout$MH,"glib_autoptr_cleanup_GtkCustomLayout");
    }
    public static void glib_autoptr_cleanup_GtkCustomLayout ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkCustomLayout$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCustomLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$2026.glib_listautoptr_cleanup_GtkCustomLayout$MH,"glib_listautoptr_cleanup_GtkCustomLayout");
    }
    public static void glib_listautoptr_cleanup_GtkCustomLayout ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkCustomLayout$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCustomLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$2026.glib_slistautoptr_cleanup_GtkCustomLayout$MH,"glib_slistautoptr_cleanup_GtkCustomLayout");
    }
    public static void glib_slistautoptr_cleanup_GtkCustomLayout ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkCustomLayout$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCustomLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$2026.glib_queueautoptr_cleanup_GtkCustomLayout$MH,"glib_queueautoptr_cleanup_GtkCustomLayout");
    }
    public static void glib_queueautoptr_cleanup_GtkCustomLayout ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkCustomLayout$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCustomLayoutClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCustomLayoutClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCustomLayoutClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCustomLayoutClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCustomLayoutClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2026.glib_autoptr_clear_GtkCustomLayoutClass$MH,"glib_autoptr_clear_GtkCustomLayoutClass");
    }
    public static void glib_autoptr_clear_GtkCustomLayoutClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkCustomLayoutClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCustomLayoutClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2026.glib_autoptr_cleanup_GtkCustomLayoutClass$MH,"glib_autoptr_cleanup_GtkCustomLayoutClass");
    }
    public static void glib_autoptr_cleanup_GtkCustomLayoutClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkCustomLayoutClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCustomLayoutClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2026.glib_listautoptr_cleanup_GtkCustomLayoutClass$MH,"glib_listautoptr_cleanup_GtkCustomLayoutClass");
    }
    public static void glib_listautoptr_cleanup_GtkCustomLayoutClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkCustomLayoutClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCustomLayoutClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2027.glib_slistautoptr_cleanup_GtkCustomLayoutClass$MH,"glib_slistautoptr_cleanup_GtkCustomLayoutClass");
    }
    public static void glib_slistautoptr_cleanup_GtkCustomLayoutClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkCustomLayoutClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCustomLayoutClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2027.glib_queueautoptr_cleanup_GtkCustomLayoutClass$MH,"glib_queueautoptr_cleanup_GtkCustomLayoutClass");
    }
    public static void glib_queueautoptr_cleanup_GtkCustomLayoutClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkCustomLayoutClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_CUSTOM_LAYOUT$MH() {
        return RuntimeHelper.requireNonNull(constants$2027.GTK_CUSTOM_LAYOUT$MH,"GTK_CUSTOM_LAYOUT");
    }
    public static MemoryAddress GTK_CUSTOM_LAYOUT ( Addressable ptr) {
        var mh$ = GTK_CUSTOM_LAYOUT$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_CUSTOM_LAYOUT$MH() {
        return RuntimeHelper.requireNonNull(constants$2027.GTK_IS_CUSTOM_LAYOUT$MH,"GTK_IS_CUSTOM_LAYOUT");
    }
    public static int GTK_IS_CUSTOM_LAYOUT ( Addressable ptr) {
        var mh$ = GTK_IS_CUSTOM_LAYOUT$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_custom_layout_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2027.gtk_custom_layout_new$MH,"gtk_custom_layout_new");
    }
    public static MemoryAddress gtk_custom_layout_new ( Addressable request_mode,  Addressable measure,  Addressable allocate) {
        var mh$ = gtk_custom_layout_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(request_mode, measure, allocate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_custom_sorter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2027.gtk_custom_sorter_get_type$MH,"gtk_custom_sorter_get_type");
    }
    public static long gtk_custom_sorter_get_type () {
        var mh$ = gtk_custom_sorter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCustomSorter_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCustomSorter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCustomSorter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCustomSorter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCustomSorter$MH() {
        return RuntimeHelper.requireNonNull(constants$2028.glib_autoptr_clear_GtkCustomSorter$MH,"glib_autoptr_clear_GtkCustomSorter");
    }
    public static void glib_autoptr_clear_GtkCustomSorter ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkCustomSorter$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCustomSorter$MH() {
        return RuntimeHelper.requireNonNull(constants$2028.glib_autoptr_cleanup_GtkCustomSorter$MH,"glib_autoptr_cleanup_GtkCustomSorter");
    }
    public static void glib_autoptr_cleanup_GtkCustomSorter ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkCustomSorter$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCustomSorter$MH() {
        return RuntimeHelper.requireNonNull(constants$2028.glib_listautoptr_cleanup_GtkCustomSorter$MH,"glib_listautoptr_cleanup_GtkCustomSorter");
    }
    public static void glib_listautoptr_cleanup_GtkCustomSorter ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkCustomSorter$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCustomSorter$MH() {
        return RuntimeHelper.requireNonNull(constants$2028.glib_slistautoptr_cleanup_GtkCustomSorter$MH,"glib_slistautoptr_cleanup_GtkCustomSorter");
    }
    public static void glib_slistautoptr_cleanup_GtkCustomSorter ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkCustomSorter$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCustomSorter$MH() {
        return RuntimeHelper.requireNonNull(constants$2028.glib_queueautoptr_cleanup_GtkCustomSorter$MH,"glib_queueautoptr_cleanup_GtkCustomSorter");
    }
    public static void glib_queueautoptr_cleanup_GtkCustomSorter ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkCustomSorter$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCustomSorterClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCustomSorterClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCustomSorterClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCustomSorterClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCustomSorterClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2028.glib_autoptr_clear_GtkCustomSorterClass$MH,"glib_autoptr_clear_GtkCustomSorterClass");
    }
    public static void glib_autoptr_clear_GtkCustomSorterClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkCustomSorterClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCustomSorterClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2029.glib_autoptr_cleanup_GtkCustomSorterClass$MH,"glib_autoptr_cleanup_GtkCustomSorterClass");
    }
    public static void glib_autoptr_cleanup_GtkCustomSorterClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkCustomSorterClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCustomSorterClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2029.glib_listautoptr_cleanup_GtkCustomSorterClass$MH,"glib_listautoptr_cleanup_GtkCustomSorterClass");
    }
    public static void glib_listautoptr_cleanup_GtkCustomSorterClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkCustomSorterClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCustomSorterClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2029.glib_slistautoptr_cleanup_GtkCustomSorterClass$MH,"glib_slistautoptr_cleanup_GtkCustomSorterClass");
    }
    public static void glib_slistautoptr_cleanup_GtkCustomSorterClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkCustomSorterClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCustomSorterClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2029.glib_queueautoptr_cleanup_GtkCustomSorterClass$MH,"glib_queueautoptr_cleanup_GtkCustomSorterClass");
    }
    public static void glib_queueautoptr_cleanup_GtkCustomSorterClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkCustomSorterClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_CUSTOM_SORTER$MH() {
        return RuntimeHelper.requireNonNull(constants$2029.GTK_CUSTOM_SORTER$MH,"GTK_CUSTOM_SORTER");
    }
    public static MemoryAddress GTK_CUSTOM_SORTER ( Addressable ptr) {
        var mh$ = GTK_CUSTOM_SORTER$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_CUSTOM_SORTER$MH() {
        return RuntimeHelper.requireNonNull(constants$2029.GTK_IS_CUSTOM_SORTER$MH,"GTK_IS_CUSTOM_SORTER");
    }
    public static int GTK_IS_CUSTOM_SORTER ( Addressable ptr) {
        var mh$ = GTK_IS_CUSTOM_SORTER$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_custom_sorter_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2030.gtk_custom_sorter_new$MH,"gtk_custom_sorter_new");
    }
    public static MemoryAddress gtk_custom_sorter_new ( Addressable sort_func,  Addressable user_data,  Addressable user_destroy) {
        var mh$ = gtk_custom_sorter_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(sort_func, user_data, user_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_custom_sorter_set_sort_func$MH() {
        return RuntimeHelper.requireNonNull(constants$2030.gtk_custom_sorter_set_sort_func$MH,"gtk_custom_sorter_set_sort_func");
    }
    public static void gtk_custom_sorter_set_sort_func ( Addressable self,  Addressable sort_func,  Addressable user_data,  Addressable user_destroy) {
        var mh$ = gtk_custom_sorter_set_sort_func$MH();
        try {
            mh$.invokeExact(self, sort_func, user_data, user_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GTK_DEBUG_TEXT() {
        return (int)1L;
    }
    public static int GTK_DEBUG_TREE() {
        return (int)2L;
    }
    public static int GTK_DEBUG_KEYBINDINGS() {
        return (int)4L;
    }
    public static int GTK_DEBUG_MODULES() {
        return (int)8L;
    }
    public static int GTK_DEBUG_GEOMETRY() {
        return (int)16L;
    }
    public static int GTK_DEBUG_ICONTHEME() {
        return (int)32L;
    }
    public static int GTK_DEBUG_PRINTING() {
        return (int)64L;
    }
    public static int GTK_DEBUG_BUILDER() {
        return (int)128L;
    }
    public static int GTK_DEBUG_SIZE_REQUEST() {
        return (int)256L;
    }
    public static int GTK_DEBUG_NO_CSS_CACHE() {
        return (int)512L;
    }
    public static int GTK_DEBUG_INTERACTIVE() {
        return (int)1024L;
    }
    public static int GTK_DEBUG_TOUCHSCREEN() {
        return (int)2048L;
    }
    public static int GTK_DEBUG_ACTIONS() {
        return (int)4096L;
    }
    public static int GTK_DEBUG_LAYOUT() {
        return (int)8192L;
    }
    public static int GTK_DEBUG_SNAPSHOT() {
        return (int)16384L;
    }
    public static int GTK_DEBUG_CONSTRAINTS() {
        return (int)32768L;
    }
    public static int GTK_DEBUG_BUILDER_OBJECTS() {
        return (int)65536L;
    }
    public static int GTK_DEBUG_A11Y() {
        return (int)131072L;
    }
    public static int GTK_DEBUG_ICONFALLBACK() {
        return (int)262144L;
    }
    public static MethodHandle gtk_get_debug_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$2030.gtk_get_debug_flags$MH,"gtk_get_debug_flags");
    }
    public static int gtk_get_debug_flags () {
        var mh$ = gtk_get_debug_flags$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_set_debug_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$2030.gtk_set_debug_flags$MH,"gtk_set_debug_flags");
    }
    public static void gtk_set_debug_flags ( int flags) {
        var mh$ = gtk_set_debug_flags$MH();
        try {
            mh$.invokeExact(flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_directory_list_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2030.gtk_directory_list_get_type$MH,"gtk_directory_list_get_type");
    }
    public static long gtk_directory_list_get_type () {
        var mh$ = gtk_directory_list_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkDirectoryList_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkDirectoryList_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkDirectoryList_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkDirectoryList_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkDirectoryList$MH() {
        return RuntimeHelper.requireNonNull(constants$2030.glib_autoptr_clear_GtkDirectoryList$MH,"glib_autoptr_clear_GtkDirectoryList");
    }
    public static void glib_autoptr_clear_GtkDirectoryList ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkDirectoryList$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkDirectoryList$MH() {
        return RuntimeHelper.requireNonNull(constants$2031.glib_autoptr_cleanup_GtkDirectoryList$MH,"glib_autoptr_cleanup_GtkDirectoryList");
    }
    public static void glib_autoptr_cleanup_GtkDirectoryList ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkDirectoryList$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkDirectoryList$MH() {
        return RuntimeHelper.requireNonNull(constants$2031.glib_listautoptr_cleanup_GtkDirectoryList$MH,"glib_listautoptr_cleanup_GtkDirectoryList");
    }
    public static void glib_listautoptr_cleanup_GtkDirectoryList ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkDirectoryList$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkDirectoryList$MH() {
        return RuntimeHelper.requireNonNull(constants$2031.glib_slistautoptr_cleanup_GtkDirectoryList$MH,"glib_slistautoptr_cleanup_GtkDirectoryList");
    }
    public static void glib_slistautoptr_cleanup_GtkDirectoryList ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkDirectoryList$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkDirectoryList$MH() {
        return RuntimeHelper.requireNonNull(constants$2031.glib_queueautoptr_cleanup_GtkDirectoryList$MH,"glib_queueautoptr_cleanup_GtkDirectoryList");
    }
    public static void glib_queueautoptr_cleanup_GtkDirectoryList ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkDirectoryList$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkDirectoryListClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkDirectoryListClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkDirectoryListClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkDirectoryListClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkDirectoryListClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2031.glib_autoptr_clear_GtkDirectoryListClass$MH,"glib_autoptr_clear_GtkDirectoryListClass");
    }
    public static void glib_autoptr_clear_GtkDirectoryListClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkDirectoryListClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkDirectoryListClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2031.glib_autoptr_cleanup_GtkDirectoryListClass$MH,"glib_autoptr_cleanup_GtkDirectoryListClass");
    }
    public static void glib_autoptr_cleanup_GtkDirectoryListClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkDirectoryListClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkDirectoryListClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2032.glib_listautoptr_cleanup_GtkDirectoryListClass$MH,"glib_listautoptr_cleanup_GtkDirectoryListClass");
    }
    public static void glib_listautoptr_cleanup_GtkDirectoryListClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkDirectoryListClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkDirectoryListClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2032.glib_slistautoptr_cleanup_GtkDirectoryListClass$MH,"glib_slistautoptr_cleanup_GtkDirectoryListClass");
    }
    public static void glib_slistautoptr_cleanup_GtkDirectoryListClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkDirectoryListClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkDirectoryListClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2032.glib_queueautoptr_cleanup_GtkDirectoryListClass$MH,"glib_queueautoptr_cleanup_GtkDirectoryListClass");
    }
    public static void glib_queueautoptr_cleanup_GtkDirectoryListClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkDirectoryListClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_DIRECTORY_LIST$MH() {
        return RuntimeHelper.requireNonNull(constants$2032.GTK_DIRECTORY_LIST$MH,"GTK_DIRECTORY_LIST");
    }
    public static MemoryAddress GTK_DIRECTORY_LIST ( Addressable ptr) {
        var mh$ = GTK_DIRECTORY_LIST$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_DIRECTORY_LIST$MH() {
        return RuntimeHelper.requireNonNull(constants$2032.GTK_IS_DIRECTORY_LIST$MH,"GTK_IS_DIRECTORY_LIST");
    }
    public static int GTK_IS_DIRECTORY_LIST ( Addressable ptr) {
        var mh$ = GTK_IS_DIRECTORY_LIST$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_directory_list_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2032.gtk_directory_list_new$MH,"gtk_directory_list_new");
    }
    public static MemoryAddress gtk_directory_list_new ( Addressable attributes,  Addressable file) {
        var mh$ = gtk_directory_list_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(attributes, file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_directory_list_set_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2033.gtk_directory_list_set_file$MH,"gtk_directory_list_set_file");
    }
    public static void gtk_directory_list_set_file ( Addressable self,  Addressable file) {
        var mh$ = gtk_directory_list_set_file$MH();
        try {
            mh$.invokeExact(self, file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_directory_list_get_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2033.gtk_directory_list_get_file$MH,"gtk_directory_list_get_file");
    }
    public static MemoryAddress gtk_directory_list_get_file ( Addressable self) {
        var mh$ = gtk_directory_list_get_file$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_directory_list_set_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$2033.gtk_directory_list_set_attributes$MH,"gtk_directory_list_set_attributes");
    }
    public static void gtk_directory_list_set_attributes ( Addressable self,  Addressable attributes) {
        var mh$ = gtk_directory_list_set_attributes$MH();
        try {
            mh$.invokeExact(self, attributes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_directory_list_get_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$2033.gtk_directory_list_get_attributes$MH,"gtk_directory_list_get_attributes");
    }
    public static MemoryAddress gtk_directory_list_get_attributes ( Addressable self) {
        var mh$ = gtk_directory_list_get_attributes$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_directory_list_set_io_priority$MH() {
        return RuntimeHelper.requireNonNull(constants$2033.gtk_directory_list_set_io_priority$MH,"gtk_directory_list_set_io_priority");
    }
    public static void gtk_directory_list_set_io_priority ( Addressable self,  int io_priority) {
        var mh$ = gtk_directory_list_set_io_priority$MH();
        try {
            mh$.invokeExact(self, io_priority);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_directory_list_get_io_priority$MH() {
        return RuntimeHelper.requireNonNull(constants$2033.gtk_directory_list_get_io_priority$MH,"gtk_directory_list_get_io_priority");
    }
    public static int gtk_directory_list_get_io_priority ( Addressable self) {
        var mh$ = gtk_directory_list_get_io_priority$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_directory_list_is_loading$MH() {
        return RuntimeHelper.requireNonNull(constants$2034.gtk_directory_list_is_loading$MH,"gtk_directory_list_is_loading");
    }
    public static int gtk_directory_list_is_loading ( Addressable self) {
        var mh$ = gtk_directory_list_is_loading$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_directory_list_get_error$MH() {
        return RuntimeHelper.requireNonNull(constants$2034.gtk_directory_list_get_error$MH,"gtk_directory_list_get_error");
    }
    public static MemoryAddress gtk_directory_list_get_error ( Addressable self) {
        var mh$ = gtk_directory_list_get_error$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_directory_list_set_monitored$MH() {
        return RuntimeHelper.requireNonNull(constants$2034.gtk_directory_list_set_monitored$MH,"gtk_directory_list_set_monitored");
    }
    public static void gtk_directory_list_set_monitored ( Addressable self,  int monitored) {
        var mh$ = gtk_directory_list_set_monitored$MH();
        try {
            mh$.invokeExact(self, monitored);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_directory_list_get_monitored$MH() {
        return RuntimeHelper.requireNonNull(constants$2034.gtk_directory_list_get_monitored$MH,"gtk_directory_list_get_monitored");
    }
    public static int gtk_directory_list_get_monitored ( Addressable self) {
        var mh$ = gtk_directory_list_get_monitored$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_icon_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2034.gtk_drag_icon_get_type$MH,"gtk_drag_icon_get_type");
    }
    public static long gtk_drag_icon_get_type () {
        var mh$ = gtk_drag_icon_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkDragIcon_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkDragIcon_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkDragIcon_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkDragIcon_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkDragIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$2034.glib_autoptr_clear_GtkDragIcon$MH,"glib_autoptr_clear_GtkDragIcon");
    }
    public static void glib_autoptr_clear_GtkDragIcon ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkDragIcon$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkDragIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$2035.glib_autoptr_cleanup_GtkDragIcon$MH,"glib_autoptr_cleanup_GtkDragIcon");
    }
    public static void glib_autoptr_cleanup_GtkDragIcon ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkDragIcon$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkDragIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$2035.glib_listautoptr_cleanup_GtkDragIcon$MH,"glib_listautoptr_cleanup_GtkDragIcon");
    }
    public static void glib_listautoptr_cleanup_GtkDragIcon ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkDragIcon$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkDragIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$2035.glib_slistautoptr_cleanup_GtkDragIcon$MH,"glib_slistautoptr_cleanup_GtkDragIcon");
    }
    public static void glib_slistautoptr_cleanup_GtkDragIcon ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkDragIcon$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkDragIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$2035.glib_queueautoptr_cleanup_GtkDragIcon$MH,"glib_queueautoptr_cleanup_GtkDragIcon");
    }
    public static void glib_queueautoptr_cleanup_GtkDragIcon ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkDragIcon$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkDragIconClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkDragIconClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkDragIconClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkDragIconClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkDragIconClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2035.glib_autoptr_clear_GtkDragIconClass$MH,"glib_autoptr_clear_GtkDragIconClass");
    }
    public static void glib_autoptr_clear_GtkDragIconClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkDragIconClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkDragIconClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2035.glib_autoptr_cleanup_GtkDragIconClass$MH,"glib_autoptr_cleanup_GtkDragIconClass");
    }
    public static void glib_autoptr_cleanup_GtkDragIconClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkDragIconClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkDragIconClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2036.glib_listautoptr_cleanup_GtkDragIconClass$MH,"glib_listautoptr_cleanup_GtkDragIconClass");
    }
    public static void glib_listautoptr_cleanup_GtkDragIconClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkDragIconClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkDragIconClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2036.glib_slistautoptr_cleanup_GtkDragIconClass$MH,"glib_slistautoptr_cleanup_GtkDragIconClass");
    }
    public static void glib_slistautoptr_cleanup_GtkDragIconClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkDragIconClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkDragIconClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2036.glib_queueautoptr_cleanup_GtkDragIconClass$MH,"glib_queueautoptr_cleanup_GtkDragIconClass");
    }
    public static void glib_queueautoptr_cleanup_GtkDragIconClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkDragIconClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_DRAG_ICON$MH() {
        return RuntimeHelper.requireNonNull(constants$2036.GTK_DRAG_ICON$MH,"GTK_DRAG_ICON");
    }
    public static MemoryAddress GTK_DRAG_ICON ( Addressable ptr) {
        var mh$ = GTK_DRAG_ICON$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_DRAG_ICON$MH() {
        return RuntimeHelper.requireNonNull(constants$2036.GTK_IS_DRAG_ICON$MH,"GTK_IS_DRAG_ICON");
    }
    public static int GTK_IS_DRAG_ICON ( Addressable ptr) {
        var mh$ = GTK_IS_DRAG_ICON$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_icon_get_for_drag$MH() {
        return RuntimeHelper.requireNonNull(constants$2036.gtk_drag_icon_get_for_drag$MH,"gtk_drag_icon_get_for_drag");
    }
    public static MemoryAddress gtk_drag_icon_get_for_drag ( Addressable drag) {
        var mh$ = gtk_drag_icon_get_for_drag$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(drag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_icon_set_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2037.gtk_drag_icon_set_child$MH,"gtk_drag_icon_set_child");
    }
    public static void gtk_drag_icon_set_child ( Addressable self,  Addressable child) {
        var mh$ = gtk_drag_icon_set_child$MH();
        try {
            mh$.invokeExact(self, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_icon_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2037.gtk_drag_icon_get_child$MH,"gtk_drag_icon_get_child");
    }
    public static MemoryAddress gtk_drag_icon_get_child ( Addressable self) {
        var mh$ = gtk_drag_icon_get_child$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_icon_set_from_paintable$MH() {
        return RuntimeHelper.requireNonNull(constants$2037.gtk_drag_icon_set_from_paintable$MH,"gtk_drag_icon_set_from_paintable");
    }
    public static void gtk_drag_icon_set_from_paintable ( Addressable drag,  Addressable paintable,  int hot_x,  int hot_y) {
        var mh$ = gtk_drag_icon_set_from_paintable$MH();
        try {
            mh$.invokeExact(drag, paintable, hot_x, hot_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_icon_create_widget_for_value$MH() {
        return RuntimeHelper.requireNonNull(constants$2037.gtk_drag_icon_create_widget_for_value$MH,"gtk_drag_icon_create_widget_for_value");
    }
    public static MemoryAddress gtk_drag_icon_create_widget_for_value ( Addressable value) {
        var mh$ = gtk_drag_icon_create_widget_for_value$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2037.gtk_drag_source_get_type$MH,"gtk_drag_source_get_type");
    }
    public static long gtk_drag_source_get_type () {
        var mh$ = gtk_drag_source_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2037.gtk_drag_source_new$MH,"gtk_drag_source_new");
    }
    public static MemoryAddress gtk_drag_source_new () {
        var mh$ = gtk_drag_source_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_set_content$MH() {
        return RuntimeHelper.requireNonNull(constants$2038.gtk_drag_source_set_content$MH,"gtk_drag_source_set_content");
    }
    public static void gtk_drag_source_set_content ( Addressable source,  Addressable content) {
        var mh$ = gtk_drag_source_set_content$MH();
        try {
            mh$.invokeExact(source, content);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_get_content$MH() {
        return RuntimeHelper.requireNonNull(constants$2038.gtk_drag_source_get_content$MH,"gtk_drag_source_get_content");
    }
    public static MemoryAddress gtk_drag_source_get_content ( Addressable source) {
        var mh$ = gtk_drag_source_get_content$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_set_actions$MH() {
        return RuntimeHelper.requireNonNull(constants$2038.gtk_drag_source_set_actions$MH,"gtk_drag_source_set_actions");
    }
    public static void gtk_drag_source_set_actions ( Addressable source,  int actions) {
        var mh$ = gtk_drag_source_set_actions$MH();
        try {
            mh$.invokeExact(source, actions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_get_actions$MH() {
        return RuntimeHelper.requireNonNull(constants$2038.gtk_drag_source_get_actions$MH,"gtk_drag_source_get_actions");
    }
    public static int gtk_drag_source_get_actions ( Addressable source) {
        var mh$ = gtk_drag_source_get_actions$MH();
        try {
            return (int)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_set_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$2038.gtk_drag_source_set_icon$MH,"gtk_drag_source_set_icon");
    }
    public static void gtk_drag_source_set_icon ( Addressable source,  Addressable paintable,  int hot_x,  int hot_y) {
        var mh$ = gtk_drag_source_set_icon$MH();
        try {
            mh$.invokeExact(source, paintable, hot_x, hot_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_drag_cancel$MH() {
        return RuntimeHelper.requireNonNull(constants$2038.gtk_drag_source_drag_cancel$MH,"gtk_drag_source_drag_cancel");
    }
    public static void gtk_drag_source_drag_cancel ( Addressable source) {
        var mh$ = gtk_drag_source_drag_cancel$MH();
        try {
            mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_source_get_drag$MH() {
        return RuntimeHelper.requireNonNull(constants$2039.gtk_drag_source_get_drag$MH,"gtk_drag_source_get_drag");
    }
    public static MemoryAddress gtk_drag_source_get_drag ( Addressable source) {
        var mh$ = gtk_drag_source_get_drag$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_check_threshold$MH() {
        return RuntimeHelper.requireNonNull(constants$2039.gtk_drag_check_threshold$MH,"gtk_drag_check_threshold");
    }
    public static int gtk_drag_check_threshold ( Addressable widget,  int start_x,  int start_y,  int current_x,  int current_y) {
        var mh$ = gtk_drag_check_threshold$MH();
        try {
            return (int)mh$.invokeExact(widget, start_x, start_y, current_x, current_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drawing_area_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2039.gtk_drawing_area_get_type$MH,"gtk_drawing_area_get_type");
    }
    public static long gtk_drawing_area_get_type () {
        var mh$ = gtk_drawing_area_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drawing_area_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2039.gtk_drawing_area_new$MH,"gtk_drawing_area_new");
    }
    public static MemoryAddress gtk_drawing_area_new () {
        var mh$ = gtk_drawing_area_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drawing_area_set_content_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2040.gtk_drawing_area_set_content_width$MH,"gtk_drawing_area_set_content_width");
    }
    public static void gtk_drawing_area_set_content_width ( Addressable self,  int width) {
        var mh$ = gtk_drawing_area_set_content_width$MH();
        try {
            mh$.invokeExact(self, width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drawing_area_get_content_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2040.gtk_drawing_area_get_content_width$MH,"gtk_drawing_area_get_content_width");
    }
    public static int gtk_drawing_area_get_content_width ( Addressable self) {
        var mh$ = gtk_drawing_area_get_content_width$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drawing_area_set_content_height$MH() {
        return RuntimeHelper.requireNonNull(constants$2040.gtk_drawing_area_set_content_height$MH,"gtk_drawing_area_set_content_height");
    }
    public static void gtk_drawing_area_set_content_height ( Addressable self,  int height) {
        var mh$ = gtk_drawing_area_set_content_height$MH();
        try {
            mh$.invokeExact(self, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drawing_area_get_content_height$MH() {
        return RuntimeHelper.requireNonNull(constants$2040.gtk_drawing_area_get_content_height$MH,"gtk_drawing_area_get_content_height");
    }
    public static int gtk_drawing_area_get_content_height ( Addressable self) {
        var mh$ = gtk_drawing_area_get_content_height$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drawing_area_set_draw_func$MH() {
        return RuntimeHelper.requireNonNull(constants$2040.gtk_drawing_area_set_draw_func$MH,"gtk_drawing_area_set_draw_func");
    }
    public static void gtk_drawing_area_set_draw_func ( Addressable self,  Addressable draw_func,  Addressable user_data,  Addressable destroy) {
        var mh$ = gtk_drawing_area_set_draw_func$MH();
        try {
            mh$.invokeExact(self, draw_func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2040.gtk_event_controller_get_type$MH,"gtk_event_controller_get_type");
    }
    public static long gtk_event_controller_get_type () {
        var mh$ = gtk_event_controller_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_get_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2041.gtk_event_controller_get_widget$MH,"gtk_event_controller_get_widget");
    }
    public static MemoryAddress gtk_event_controller_get_widget ( Addressable controller) {
        var mh$ = gtk_event_controller_get_widget$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(controller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_reset$MH() {
        return RuntimeHelper.requireNonNull(constants$2041.gtk_event_controller_reset$MH,"gtk_event_controller_reset");
    }
    public static void gtk_event_controller_reset ( Addressable controller) {
        var mh$ = gtk_event_controller_reset$MH();
        try {
            mh$.invokeExact(controller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_get_propagation_phase$MH() {
        return RuntimeHelper.requireNonNull(constants$2041.gtk_event_controller_get_propagation_phase$MH,"gtk_event_controller_get_propagation_phase");
    }
    public static int gtk_event_controller_get_propagation_phase ( Addressable controller) {
        var mh$ = gtk_event_controller_get_propagation_phase$MH();
        try {
            return (int)mh$.invokeExact(controller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_set_propagation_phase$MH() {
        return RuntimeHelper.requireNonNull(constants$2041.gtk_event_controller_set_propagation_phase$MH,"gtk_event_controller_set_propagation_phase");
    }
    public static void gtk_event_controller_set_propagation_phase ( Addressable controller,  int phase) {
        var mh$ = gtk_event_controller_set_propagation_phase$MH();
        try {
            mh$.invokeExact(controller, phase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_get_propagation_limit$MH() {
        return RuntimeHelper.requireNonNull(constants$2041.gtk_event_controller_get_propagation_limit$MH,"gtk_event_controller_get_propagation_limit");
    }
    public static int gtk_event_controller_get_propagation_limit ( Addressable controller) {
        var mh$ = gtk_event_controller_get_propagation_limit$MH();
        try {
            return (int)mh$.invokeExact(controller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_set_propagation_limit$MH() {
        return RuntimeHelper.requireNonNull(constants$2041.gtk_event_controller_set_propagation_limit$MH,"gtk_event_controller_set_propagation_limit");
    }
    public static void gtk_event_controller_set_propagation_limit ( Addressable controller,  int limit) {
        var mh$ = gtk_event_controller_set_propagation_limit$MH();
        try {
            mh$.invokeExact(controller, limit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2042.gtk_event_controller_get_name$MH,"gtk_event_controller_get_name");
    }
    public static MemoryAddress gtk_event_controller_get_name ( Addressable controller) {
        var mh$ = gtk_event_controller_get_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(controller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_set_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2042.gtk_event_controller_set_name$MH,"gtk_event_controller_set_name");
    }
    public static void gtk_event_controller_set_name ( Addressable controller,  Addressable name) {
        var mh$ = gtk_event_controller_set_name$MH();
        try {
            mh$.invokeExact(controller, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_get_current_event$MH() {
        return RuntimeHelper.requireNonNull(constants$2042.gtk_event_controller_get_current_event$MH,"gtk_event_controller_get_current_event");
    }
    public static MemoryAddress gtk_event_controller_get_current_event ( Addressable controller) {
        var mh$ = gtk_event_controller_get_current_event$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(controller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_get_current_event_time$MH() {
        return RuntimeHelper.requireNonNull(constants$2042.gtk_event_controller_get_current_event_time$MH,"gtk_event_controller_get_current_event_time");
    }
    public static int gtk_event_controller_get_current_event_time ( Addressable controller) {
        var mh$ = gtk_event_controller_get_current_event_time$MH();
        try {
            return (int)mh$.invokeExact(controller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_get_current_event_device$MH() {
        return RuntimeHelper.requireNonNull(constants$2042.gtk_event_controller_get_current_event_device$MH,"gtk_event_controller_get_current_event_device");
    }
    public static MemoryAddress gtk_event_controller_get_current_event_device ( Addressable controller) {
        var mh$ = gtk_event_controller_get_current_event_device$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(controller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_get_current_event_state$MH() {
        return RuntimeHelper.requireNonNull(constants$2042.gtk_event_controller_get_current_event_state$MH,"gtk_event_controller_get_current_event_state");
    }
    public static int gtk_event_controller_get_current_event_state ( Addressable controller) {
        var mh$ = gtk_event_controller_get_current_event_state$MH();
        try {
            return (int)mh$.invokeExact(controller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_controller_motion_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2043.gtk_drop_controller_motion_get_type$MH,"gtk_drop_controller_motion_get_type");
    }
    public static long gtk_drop_controller_motion_get_type () {
        var mh$ = gtk_drop_controller_motion_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_controller_motion_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2043.gtk_drop_controller_motion_new$MH,"gtk_drop_controller_motion_new");
    }
    public static MemoryAddress gtk_drop_controller_motion_new () {
        var mh$ = gtk_drop_controller_motion_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_controller_motion_contains_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$2043.gtk_drop_controller_motion_contains_pointer$MH,"gtk_drop_controller_motion_contains_pointer");
    }
    public static int gtk_drop_controller_motion_contains_pointer ( Addressable self) {
        var mh$ = gtk_drop_controller_motion_contains_pointer$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_controller_motion_get_drop$MH() {
        return RuntimeHelper.requireNonNull(constants$2043.gtk_drop_controller_motion_get_drop$MH,"gtk_drop_controller_motion_get_drop");
    }
    public static MemoryAddress gtk_drop_controller_motion_get_drop ( Addressable self) {
        var mh$ = gtk_drop_controller_motion_get_drop$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_controller_motion_is_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$2043.gtk_drop_controller_motion_is_pointer$MH,"gtk_drop_controller_motion_is_pointer");
    }
    public static int gtk_drop_controller_motion_is_pointer ( Addressable self) {
        var mh$ = gtk_drop_controller_motion_is_pointer$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_target_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2043.gtk_drop_target_get_type$MH,"gtk_drop_target_get_type");
    }
    public static long gtk_drop_target_get_type () {
        var mh$ = gtk_drop_target_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_target_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2044.gtk_drop_target_new$MH,"gtk_drop_target_new");
    }
    public static MemoryAddress gtk_drop_target_new ( long type,  int actions) {
        var mh$ = gtk_drop_target_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(type, actions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_target_set_gtypes$MH() {
        return RuntimeHelper.requireNonNull(constants$2044.gtk_drop_target_set_gtypes$MH,"gtk_drop_target_set_gtypes");
    }
    public static void gtk_drop_target_set_gtypes ( Addressable self,  Addressable types,  long n_types) {
        var mh$ = gtk_drop_target_set_gtypes$MH();
        try {
            mh$.invokeExact(self, types, n_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_target_get_gtypes$MH() {
        return RuntimeHelper.requireNonNull(constants$2044.gtk_drop_target_get_gtypes$MH,"gtk_drop_target_get_gtypes");
    }
    public static MemoryAddress gtk_drop_target_get_gtypes ( Addressable self,  Addressable n_types) {
        var mh$ = gtk_drop_target_get_gtypes$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self, n_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_target_get_formats$MH() {
        return RuntimeHelper.requireNonNull(constants$2044.gtk_drop_target_get_formats$MH,"gtk_drop_target_get_formats");
    }
    public static MemoryAddress gtk_drop_target_get_formats ( Addressable self) {
        var mh$ = gtk_drop_target_get_formats$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_target_set_actions$MH() {
        return RuntimeHelper.requireNonNull(constants$2044.gtk_drop_target_set_actions$MH,"gtk_drop_target_set_actions");
    }
    public static void gtk_drop_target_set_actions ( Addressable self,  int actions) {
        var mh$ = gtk_drop_target_set_actions$MH();
        try {
            mh$.invokeExact(self, actions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_target_get_actions$MH() {
        return RuntimeHelper.requireNonNull(constants$2044.gtk_drop_target_get_actions$MH,"gtk_drop_target_get_actions");
    }
    public static int gtk_drop_target_get_actions ( Addressable self) {
        var mh$ = gtk_drop_target_get_actions$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_target_set_preload$MH() {
        return RuntimeHelper.requireNonNull(constants$2045.gtk_drop_target_set_preload$MH,"gtk_drop_target_set_preload");
    }
    public static void gtk_drop_target_set_preload ( Addressable self,  int preload) {
        var mh$ = gtk_drop_target_set_preload$MH();
        try {
            mh$.invokeExact(self, preload);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_target_get_preload$MH() {
        return RuntimeHelper.requireNonNull(constants$2045.gtk_drop_target_get_preload$MH,"gtk_drop_target_get_preload");
    }
    public static int gtk_drop_target_get_preload ( Addressable self) {
        var mh$ = gtk_drop_target_get_preload$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_target_get_drop$MH() {
        return RuntimeHelper.requireNonNull(constants$2045.gtk_drop_target_get_drop$MH,"gtk_drop_target_get_drop");
    }
    public static MemoryAddress gtk_drop_target_get_drop ( Addressable self) {
        var mh$ = gtk_drop_target_get_drop$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_target_get_current_drop$MH() {
        return RuntimeHelper.requireNonNull(constants$2045.gtk_drop_target_get_current_drop$MH,"gtk_drop_target_get_current_drop");
    }
    public static MemoryAddress gtk_drop_target_get_current_drop ( Addressable self) {
        var mh$ = gtk_drop_target_get_current_drop$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_target_get_value$MH() {
        return RuntimeHelper.requireNonNull(constants$2045.gtk_drop_target_get_value$MH,"gtk_drop_target_get_value");
    }
    public static MemoryAddress gtk_drop_target_get_value ( Addressable self) {
        var mh$ = gtk_drop_target_get_value$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_target_reject$MH() {
        return RuntimeHelper.requireNonNull(constants$2045.gtk_drop_target_reject$MH,"gtk_drop_target_reject");
    }
    public static void gtk_drop_target_reject ( Addressable self) {
        var mh$ = gtk_drop_target_reject$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_target_async_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2046.gtk_drop_target_async_get_type$MH,"gtk_drop_target_async_get_type");
    }
    public static long gtk_drop_target_async_get_type () {
        var mh$ = gtk_drop_target_async_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_target_async_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2046.gtk_drop_target_async_new$MH,"gtk_drop_target_async_new");
    }
    public static MemoryAddress gtk_drop_target_async_new ( Addressable formats,  int actions) {
        var mh$ = gtk_drop_target_async_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(formats, actions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_target_async_set_formats$MH() {
        return RuntimeHelper.requireNonNull(constants$2046.gtk_drop_target_async_set_formats$MH,"gtk_drop_target_async_set_formats");
    }
    public static void gtk_drop_target_async_set_formats ( Addressable self,  Addressable formats) {
        var mh$ = gtk_drop_target_async_set_formats$MH();
        try {
            mh$.invokeExact(self, formats);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_target_async_get_formats$MH() {
        return RuntimeHelper.requireNonNull(constants$2046.gtk_drop_target_async_get_formats$MH,"gtk_drop_target_async_get_formats");
    }
    public static MemoryAddress gtk_drop_target_async_get_formats ( Addressable self) {
        var mh$ = gtk_drop_target_async_get_formats$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_target_async_set_actions$MH() {
        return RuntimeHelper.requireNonNull(constants$2046.gtk_drop_target_async_set_actions$MH,"gtk_drop_target_async_set_actions");
    }
    public static void gtk_drop_target_async_set_actions ( Addressable self,  int actions) {
        var mh$ = gtk_drop_target_async_set_actions$MH();
        try {
            mh$.invokeExact(self, actions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_target_async_get_actions$MH() {
        return RuntimeHelper.requireNonNull(constants$2046.gtk_drop_target_async_get_actions$MH,"gtk_drop_target_async_get_actions");
    }
    public static int gtk_drop_target_async_get_actions ( Addressable self) {
        var mh$ = gtk_drop_target_async_get_actions$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_target_async_reject_drop$MH() {
        return RuntimeHelper.requireNonNull(constants$2047.gtk_drop_target_async_reject_drop$MH,"gtk_drop_target_async_reject_drop");
    }
    public static void gtk_drop_target_async_reject_drop ( Addressable self,  Addressable drop) {
        var mh$ = gtk_drop_target_async_reject_drop$MH();
        try {
            mh$.invokeExact(self, drop);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_down_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2047.gtk_drop_down_get_type$MH,"gtk_drop_down_get_type");
    }
    public static long gtk_drop_down_get_type () {
        var mh$ = gtk_drop_down_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkDropDown_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkDropDown_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkDropDown_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkDropDown_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkDropDown$MH() {
        return RuntimeHelper.requireNonNull(constants$2047.glib_autoptr_clear_GtkDropDown$MH,"glib_autoptr_clear_GtkDropDown");
    }
    public static void glib_autoptr_clear_GtkDropDown ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkDropDown$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkDropDown$MH() {
        return RuntimeHelper.requireNonNull(constants$2047.glib_autoptr_cleanup_GtkDropDown$MH,"glib_autoptr_cleanup_GtkDropDown");
    }
    public static void glib_autoptr_cleanup_GtkDropDown ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkDropDown$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkDropDown$MH() {
        return RuntimeHelper.requireNonNull(constants$2047.glib_listautoptr_cleanup_GtkDropDown$MH,"glib_listautoptr_cleanup_GtkDropDown");
    }
    public static void glib_listautoptr_cleanup_GtkDropDown ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkDropDown$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkDropDown$MH() {
        return RuntimeHelper.requireNonNull(constants$2047.glib_slistautoptr_cleanup_GtkDropDown$MH,"glib_slistautoptr_cleanup_GtkDropDown");
    }
    public static void glib_slistautoptr_cleanup_GtkDropDown ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkDropDown$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkDropDown$MH() {
        return RuntimeHelper.requireNonNull(constants$2048.glib_queueautoptr_cleanup_GtkDropDown$MH,"glib_queueautoptr_cleanup_GtkDropDown");
    }
    public static void glib_queueautoptr_cleanup_GtkDropDown ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkDropDown$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkDropDownClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkDropDownClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkDropDownClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkDropDownClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkDropDownClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2048.glib_autoptr_clear_GtkDropDownClass$MH,"glib_autoptr_clear_GtkDropDownClass");
    }
    public static void glib_autoptr_clear_GtkDropDownClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkDropDownClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkDropDownClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2048.glib_autoptr_cleanup_GtkDropDownClass$MH,"glib_autoptr_cleanup_GtkDropDownClass");
    }
    public static void glib_autoptr_cleanup_GtkDropDownClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkDropDownClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkDropDownClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2048.glib_listautoptr_cleanup_GtkDropDownClass$MH,"glib_listautoptr_cleanup_GtkDropDownClass");
    }
    public static void glib_listautoptr_cleanup_GtkDropDownClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkDropDownClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkDropDownClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2048.glib_slistautoptr_cleanup_GtkDropDownClass$MH,"glib_slistautoptr_cleanup_GtkDropDownClass");
    }
    public static void glib_slistautoptr_cleanup_GtkDropDownClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkDropDownClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkDropDownClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2048.glib_queueautoptr_cleanup_GtkDropDownClass$MH,"glib_queueautoptr_cleanup_GtkDropDownClass");
    }
    public static void glib_queueautoptr_cleanup_GtkDropDownClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkDropDownClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_DROP_DOWN$MH() {
        return RuntimeHelper.requireNonNull(constants$2049.GTK_DROP_DOWN$MH,"GTK_DROP_DOWN");
    }
    public static MemoryAddress GTK_DROP_DOWN ( Addressable ptr) {
        var mh$ = GTK_DROP_DOWN$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_DROP_DOWN$MH() {
        return RuntimeHelper.requireNonNull(constants$2049.GTK_IS_DROP_DOWN$MH,"GTK_IS_DROP_DOWN");
    }
    public static int GTK_IS_DROP_DOWN ( Addressable ptr) {
        var mh$ = GTK_IS_DROP_DOWN$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_down_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2049.gtk_drop_down_new$MH,"gtk_drop_down_new");
    }
    public static MemoryAddress gtk_drop_down_new ( Addressable model,  Addressable expression) {
        var mh$ = gtk_drop_down_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(model, expression);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_down_new_from_strings$MH() {
        return RuntimeHelper.requireNonNull(constants$2049.gtk_drop_down_new_from_strings$MH,"gtk_drop_down_new_from_strings");
    }
    public static MemoryAddress gtk_drop_down_new_from_strings ( Addressable strings) {
        var mh$ = gtk_drop_down_new_from_strings$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(strings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_down_set_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2049.gtk_drop_down_set_model$MH,"gtk_drop_down_set_model");
    }
    public static void gtk_drop_down_set_model ( Addressable self,  Addressable model) {
        var mh$ = gtk_drop_down_set_model$MH();
        try {
            mh$.invokeExact(self, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_down_get_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2049.gtk_drop_down_get_model$MH,"gtk_drop_down_get_model");
    }
    public static MemoryAddress gtk_drop_down_get_model ( Addressable self) {
        var mh$ = gtk_drop_down_get_model$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_down_set_selected$MH() {
        return RuntimeHelper.requireNonNull(constants$2050.gtk_drop_down_set_selected$MH,"gtk_drop_down_set_selected");
    }
    public static void gtk_drop_down_set_selected ( Addressable self,  int position) {
        var mh$ = gtk_drop_down_set_selected$MH();
        try {
            mh$.invokeExact(self, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_down_get_selected$MH() {
        return RuntimeHelper.requireNonNull(constants$2050.gtk_drop_down_get_selected$MH,"gtk_drop_down_get_selected");
    }
    public static int gtk_drop_down_get_selected ( Addressable self) {
        var mh$ = gtk_drop_down_get_selected$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_down_get_selected_item$MH() {
        return RuntimeHelper.requireNonNull(constants$2050.gtk_drop_down_get_selected_item$MH,"gtk_drop_down_get_selected_item");
    }
    public static MemoryAddress gtk_drop_down_get_selected_item ( Addressable self) {
        var mh$ = gtk_drop_down_get_selected_item$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_down_set_factory$MH() {
        return RuntimeHelper.requireNonNull(constants$2050.gtk_drop_down_set_factory$MH,"gtk_drop_down_set_factory");
    }
    public static void gtk_drop_down_set_factory ( Addressable self,  Addressable factory) {
        var mh$ = gtk_drop_down_set_factory$MH();
        try {
            mh$.invokeExact(self, factory);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_down_get_factory$MH() {
        return RuntimeHelper.requireNonNull(constants$2050.gtk_drop_down_get_factory$MH,"gtk_drop_down_get_factory");
    }
    public static MemoryAddress gtk_drop_down_get_factory ( Addressable self) {
        var mh$ = gtk_drop_down_get_factory$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_down_set_list_factory$MH() {
        return RuntimeHelper.requireNonNull(constants$2050.gtk_drop_down_set_list_factory$MH,"gtk_drop_down_set_list_factory");
    }
    public static void gtk_drop_down_set_list_factory ( Addressable self,  Addressable factory) {
        var mh$ = gtk_drop_down_set_list_factory$MH();
        try {
            mh$.invokeExact(self, factory);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_down_get_list_factory$MH() {
        return RuntimeHelper.requireNonNull(constants$2051.gtk_drop_down_get_list_factory$MH,"gtk_drop_down_get_list_factory");
    }
    public static MemoryAddress gtk_drop_down_get_list_factory ( Addressable self) {
        var mh$ = gtk_drop_down_get_list_factory$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_down_set_expression$MH() {
        return RuntimeHelper.requireNonNull(constants$2051.gtk_drop_down_set_expression$MH,"gtk_drop_down_set_expression");
    }
    public static void gtk_drop_down_set_expression ( Addressable self,  Addressable expression) {
        var mh$ = gtk_drop_down_set_expression$MH();
        try {
            mh$.invokeExact(self, expression);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_down_get_expression$MH() {
        return RuntimeHelper.requireNonNull(constants$2051.gtk_drop_down_get_expression$MH,"gtk_drop_down_get_expression");
    }
    public static MemoryAddress gtk_drop_down_get_expression ( Addressable self) {
        var mh$ = gtk_drop_down_get_expression$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_down_set_enable_search$MH() {
        return RuntimeHelper.requireNonNull(constants$2051.gtk_drop_down_set_enable_search$MH,"gtk_drop_down_set_enable_search");
    }
    public static void gtk_drop_down_set_enable_search ( Addressable self,  int enable_search) {
        var mh$ = gtk_drop_down_set_enable_search$MH();
        try {
            mh$.invokeExact(self, enable_search);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_down_get_enable_search$MH() {
        return RuntimeHelper.requireNonNull(constants$2051.gtk_drop_down_get_enable_search$MH,"gtk_drop_down_get_enable_search");
    }
    public static int gtk_drop_down_get_enable_search ( Addressable self) {
        var mh$ = gtk_drop_down_get_enable_search$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_down_set_show_arrow$MH() {
        return RuntimeHelper.requireNonNull(constants$2051.gtk_drop_down_set_show_arrow$MH,"gtk_drop_down_set_show_arrow");
    }
    public static void gtk_drop_down_set_show_arrow ( Addressable self,  int show_arrow) {
        var mh$ = gtk_drop_down_set_show_arrow$MH();
        try {
            mh$.invokeExact(self, show_arrow);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drop_down_get_show_arrow$MH() {
        return RuntimeHelper.requireNonNull(constants$2052.gtk_drop_down_get_show_arrow$MH,"gtk_drop_down_get_show_arrow");
    }
    public static int gtk_drop_down_get_show_arrow ( Addressable self) {
        var mh$ = gtk_drop_down_get_show_arrow$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_label_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2052.gtk_editable_label_get_type$MH,"gtk_editable_label_get_type");
    }
    public static long gtk_editable_label_get_type () {
        var mh$ = gtk_editable_label_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkEditableLabel_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkEditableLabel_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkEditableLabel_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkEditableLabel_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkEditableLabel$MH() {
        return RuntimeHelper.requireNonNull(constants$2052.glib_autoptr_clear_GtkEditableLabel$MH,"glib_autoptr_clear_GtkEditableLabel");
    }
    public static void glib_autoptr_clear_GtkEditableLabel ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkEditableLabel$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkEditableLabel$MH() {
        return RuntimeHelper.requireNonNull(constants$2052.glib_autoptr_cleanup_GtkEditableLabel$MH,"glib_autoptr_cleanup_GtkEditableLabel");
    }
    public static void glib_autoptr_cleanup_GtkEditableLabel ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkEditableLabel$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkEditableLabel$MH() {
        return RuntimeHelper.requireNonNull(constants$2052.glib_listautoptr_cleanup_GtkEditableLabel$MH,"glib_listautoptr_cleanup_GtkEditableLabel");
    }
    public static void glib_listautoptr_cleanup_GtkEditableLabel ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkEditableLabel$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkEditableLabel$MH() {
        return RuntimeHelper.requireNonNull(constants$2052.glib_slistautoptr_cleanup_GtkEditableLabel$MH,"glib_slistautoptr_cleanup_GtkEditableLabel");
    }
    public static void glib_slistautoptr_cleanup_GtkEditableLabel ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkEditableLabel$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkEditableLabel$MH() {
        return RuntimeHelper.requireNonNull(constants$2053.glib_queueautoptr_cleanup_GtkEditableLabel$MH,"glib_queueautoptr_cleanup_GtkEditableLabel");
    }
    public static void glib_queueautoptr_cleanup_GtkEditableLabel ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkEditableLabel$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkEditableLabelClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkEditableLabelClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkEditableLabelClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkEditableLabelClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkEditableLabelClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2053.glib_autoptr_clear_GtkEditableLabelClass$MH,"glib_autoptr_clear_GtkEditableLabelClass");
    }
    public static void glib_autoptr_clear_GtkEditableLabelClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkEditableLabelClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkEditableLabelClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2053.glib_autoptr_cleanup_GtkEditableLabelClass$MH,"glib_autoptr_cleanup_GtkEditableLabelClass");
    }
    public static void glib_autoptr_cleanup_GtkEditableLabelClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkEditableLabelClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkEditableLabelClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2053.glib_listautoptr_cleanup_GtkEditableLabelClass$MH,"glib_listautoptr_cleanup_GtkEditableLabelClass");
    }
    public static void glib_listautoptr_cleanup_GtkEditableLabelClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkEditableLabelClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkEditableLabelClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2053.glib_slistautoptr_cleanup_GtkEditableLabelClass$MH,"glib_slistautoptr_cleanup_GtkEditableLabelClass");
    }
    public static void glib_slistautoptr_cleanup_GtkEditableLabelClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkEditableLabelClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkEditableLabelClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2053.glib_queueautoptr_cleanup_GtkEditableLabelClass$MH,"glib_queueautoptr_cleanup_GtkEditableLabelClass");
    }
    public static void glib_queueautoptr_cleanup_GtkEditableLabelClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkEditableLabelClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_EDITABLE_LABEL$MH() {
        return RuntimeHelper.requireNonNull(constants$2054.GTK_EDITABLE_LABEL$MH,"GTK_EDITABLE_LABEL");
    }
    public static MemoryAddress GTK_EDITABLE_LABEL ( Addressable ptr) {
        var mh$ = GTK_EDITABLE_LABEL$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_EDITABLE_LABEL$MH() {
        return RuntimeHelper.requireNonNull(constants$2054.GTK_IS_EDITABLE_LABEL$MH,"GTK_IS_EDITABLE_LABEL");
    }
    public static int GTK_IS_EDITABLE_LABEL ( Addressable ptr) {
        var mh$ = GTK_IS_EDITABLE_LABEL$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_label_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2054.gtk_editable_label_new$MH,"gtk_editable_label_new");
    }
    public static MemoryAddress gtk_editable_label_new ( Addressable str) {
        var mh$ = gtk_editable_label_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_label_get_editing$MH() {
        return RuntimeHelper.requireNonNull(constants$2054.gtk_editable_label_get_editing$MH,"gtk_editable_label_get_editing");
    }
    public static int gtk_editable_label_get_editing ( Addressable self) {
        var mh$ = gtk_editable_label_get_editing$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_label_start_editing$MH() {
        return RuntimeHelper.requireNonNull(constants$2054.gtk_editable_label_start_editing$MH,"gtk_editable_label_start_editing");
    }
    public static void gtk_editable_label_start_editing ( Addressable self) {
        var mh$ = gtk_editable_label_start_editing$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_label_stop_editing$MH() {
        return RuntimeHelper.requireNonNull(constants$2054.gtk_editable_label_stop_editing$MH,"gtk_editable_label_stop_editing");
    }
    public static void gtk_editable_label_stop_editing ( Addressable self,  int commit) {
        var mh$ = gtk_editable_label_stop_editing$MH();
        try {
            mh$.invokeExact(self, commit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_emoji_chooser_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2055.gtk_emoji_chooser_get_type$MH,"gtk_emoji_chooser_get_type");
    }
    public static long gtk_emoji_chooser_get_type () {
        var mh$ = gtk_emoji_chooser_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_emoji_chooser_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2055.gtk_emoji_chooser_new$MH,"gtk_emoji_chooser_new");
    }
    public static MemoryAddress gtk_emoji_chooser_new () {
        var mh$ = gtk_emoji_chooser_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_focus_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2055.gtk_event_controller_focus_get_type$MH,"gtk_event_controller_focus_get_type");
    }
    public static long gtk_event_controller_focus_get_type () {
        var mh$ = gtk_event_controller_focus_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_focus_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2055.gtk_event_controller_focus_new$MH,"gtk_event_controller_focus_new");
    }
    public static MemoryAddress gtk_event_controller_focus_new () {
        var mh$ = gtk_event_controller_focus_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_focus_contains_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$2055.gtk_event_controller_focus_contains_focus$MH,"gtk_event_controller_focus_contains_focus");
    }
    public static int gtk_event_controller_focus_contains_focus ( Addressable self) {
        var mh$ = gtk_event_controller_focus_contains_focus$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_focus_is_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$2055.gtk_event_controller_focus_is_focus$MH,"gtk_event_controller_focus_is_focus");
    }
    public static int gtk_event_controller_focus_is_focus ( Addressable self) {
        var mh$ = gtk_event_controller_focus_is_focus$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_key_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2056.gtk_event_controller_key_get_type$MH,"gtk_event_controller_key_get_type");
    }
    public static long gtk_event_controller_key_get_type () {
        var mh$ = gtk_event_controller_key_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_key_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2056.gtk_event_controller_key_new$MH,"gtk_event_controller_key_new");
    }
    public static MemoryAddress gtk_event_controller_key_new () {
        var mh$ = gtk_event_controller_key_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_key_set_im_context$MH() {
        return RuntimeHelper.requireNonNull(constants$2056.gtk_event_controller_key_set_im_context$MH,"gtk_event_controller_key_set_im_context");
    }
    public static void gtk_event_controller_key_set_im_context ( Addressable controller,  Addressable im_context) {
        var mh$ = gtk_event_controller_key_set_im_context$MH();
        try {
            mh$.invokeExact(controller, im_context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_key_get_im_context$MH() {
        return RuntimeHelper.requireNonNull(constants$2056.gtk_event_controller_key_get_im_context$MH,"gtk_event_controller_key_get_im_context");
    }
    public static MemoryAddress gtk_event_controller_key_get_im_context ( Addressable controller) {
        var mh$ = gtk_event_controller_key_get_im_context$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(controller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_key_forward$MH() {
        return RuntimeHelper.requireNonNull(constants$2056.gtk_event_controller_key_forward$MH,"gtk_event_controller_key_forward");
    }
    public static int gtk_event_controller_key_forward ( Addressable controller,  Addressable widget) {
        var mh$ = gtk_event_controller_key_forward$MH();
        try {
            return (int)mh$.invokeExact(controller, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_key_get_group$MH() {
        return RuntimeHelper.requireNonNull(constants$2056.gtk_event_controller_key_get_group$MH,"gtk_event_controller_key_get_group");
    }
    public static int gtk_event_controller_key_get_group ( Addressable controller) {
        var mh$ = gtk_event_controller_key_get_group$MH();
        try {
            return (int)mh$.invokeExact(controller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_legacy_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2057.gtk_event_controller_legacy_get_type$MH,"gtk_event_controller_legacy_get_type");
    }
    public static long gtk_event_controller_legacy_get_type () {
        var mh$ = gtk_event_controller_legacy_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_legacy_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2057.gtk_event_controller_legacy_new$MH,"gtk_event_controller_legacy_new");
    }
    public static MemoryAddress gtk_event_controller_legacy_new () {
        var mh$ = gtk_event_controller_legacy_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_motion_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2057.gtk_event_controller_motion_get_type$MH,"gtk_event_controller_motion_get_type");
    }
    public static long gtk_event_controller_motion_get_type () {
        var mh$ = gtk_event_controller_motion_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_motion_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2057.gtk_event_controller_motion_new$MH,"gtk_event_controller_motion_new");
    }
    public static MemoryAddress gtk_event_controller_motion_new () {
        var mh$ = gtk_event_controller_motion_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_motion_contains_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$2057.gtk_event_controller_motion_contains_pointer$MH,"gtk_event_controller_motion_contains_pointer");
    }
    public static int gtk_event_controller_motion_contains_pointer ( Addressable self) {
        var mh$ = gtk_event_controller_motion_contains_pointer$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_motion_is_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$2057.gtk_event_controller_motion_is_pointer$MH,"gtk_event_controller_motion_is_pointer");
    }
    public static int gtk_event_controller_motion_is_pointer ( Addressable self) {
        var mh$ = gtk_event_controller_motion_is_pointer$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GTK_EVENT_CONTROLLER_SCROLL_NONE() {
        return (int)0L;
    }
    public static int GTK_EVENT_CONTROLLER_SCROLL_VERTICAL() {
        return (int)1L;
    }
    public static int GTK_EVENT_CONTROLLER_SCROLL_HORIZONTAL() {
        return (int)2L;
    }
    public static int GTK_EVENT_CONTROLLER_SCROLL_DISCRETE() {
        return (int)4L;
    }
    public static int GTK_EVENT_CONTROLLER_SCROLL_KINETIC() {
        return (int)8L;
    }
    public static int GTK_EVENT_CONTROLLER_SCROLL_BOTH_AXES() {
        return (int)3L;
    }
    public static MethodHandle gtk_event_controller_scroll_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2058.gtk_event_controller_scroll_get_type$MH,"gtk_event_controller_scroll_get_type");
    }
    public static long gtk_event_controller_scroll_get_type () {
        var mh$ = gtk_event_controller_scroll_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_scroll_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2058.gtk_event_controller_scroll_new$MH,"gtk_event_controller_scroll_new");
    }
    public static MemoryAddress gtk_event_controller_scroll_new ( int flags) {
        var mh$ = gtk_event_controller_scroll_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_scroll_set_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$2058.gtk_event_controller_scroll_set_flags$MH,"gtk_event_controller_scroll_set_flags");
    }
    public static void gtk_event_controller_scroll_set_flags ( Addressable scroll,  int flags) {
        var mh$ = gtk_event_controller_scroll_set_flags$MH();
        try {
            mh$.invokeExact(scroll, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_event_controller_scroll_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$2058.gtk_event_controller_scroll_get_flags$MH,"gtk_event_controller_scroll_get_flags");
    }
    public static int gtk_event_controller_scroll_get_flags ( Addressable scroll) {
        var mh$ = gtk_event_controller_scroll_get_flags$MH();
        try {
            return (int)mh$.invokeExact(scroll);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2058.gtk_expander_get_type$MH,"gtk_expander_get_type");
    }
    public static long gtk_expander_get_type () {
        var mh$ = gtk_expander_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2058.gtk_expander_new$MH,"gtk_expander_new");
    }
    public static MemoryAddress gtk_expander_new ( Addressable label) {
        var mh$ = gtk_expander_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_new_with_mnemonic$MH() {
        return RuntimeHelper.requireNonNull(constants$2059.gtk_expander_new_with_mnemonic$MH,"gtk_expander_new_with_mnemonic");
    }
    public static MemoryAddress gtk_expander_new_with_mnemonic ( Addressable label) {
        var mh$ = gtk_expander_new_with_mnemonic$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_set_expanded$MH() {
        return RuntimeHelper.requireNonNull(constants$2059.gtk_expander_set_expanded$MH,"gtk_expander_set_expanded");
    }
    public static void gtk_expander_set_expanded ( Addressable expander,  int expanded) {
        var mh$ = gtk_expander_set_expanded$MH();
        try {
            mh$.invokeExact(expander, expanded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_expanded$MH() {
        return RuntimeHelper.requireNonNull(constants$2059.gtk_expander_get_expanded$MH,"gtk_expander_get_expanded");
    }
    public static int gtk_expander_get_expanded ( Addressable expander) {
        var mh$ = gtk_expander_get_expanded$MH();
        try {
            return (int)mh$.invokeExact(expander);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_set_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2059.gtk_expander_set_label$MH,"gtk_expander_set_label");
    }
    public static void gtk_expander_set_label ( Addressable expander,  Addressable label) {
        var mh$ = gtk_expander_set_label$MH();
        try {
            mh$.invokeExact(expander, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2059.gtk_expander_get_label$MH,"gtk_expander_get_label");
    }
    public static MemoryAddress gtk_expander_get_label ( Addressable expander) {
        var mh$ = gtk_expander_get_label$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(expander);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_set_use_underline$MH() {
        return RuntimeHelper.requireNonNull(constants$2059.gtk_expander_set_use_underline$MH,"gtk_expander_set_use_underline");
    }
    public static void gtk_expander_set_use_underline ( Addressable expander,  int use_underline) {
        var mh$ = gtk_expander_set_use_underline$MH();
        try {
            mh$.invokeExact(expander, use_underline);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_use_underline$MH() {
        return RuntimeHelper.requireNonNull(constants$2060.gtk_expander_get_use_underline$MH,"gtk_expander_get_use_underline");
    }
    public static int gtk_expander_get_use_underline ( Addressable expander) {
        var mh$ = gtk_expander_get_use_underline$MH();
        try {
            return (int)mh$.invokeExact(expander);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_set_use_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$2060.gtk_expander_set_use_markup$MH,"gtk_expander_set_use_markup");
    }
    public static void gtk_expander_set_use_markup ( Addressable expander,  int use_markup) {
        var mh$ = gtk_expander_set_use_markup$MH();
        try {
            mh$.invokeExact(expander, use_markup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_use_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$2060.gtk_expander_get_use_markup$MH,"gtk_expander_get_use_markup");
    }
    public static int gtk_expander_get_use_markup ( Addressable expander) {
        var mh$ = gtk_expander_get_use_markup$MH();
        try {
            return (int)mh$.invokeExact(expander);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_set_label_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2060.gtk_expander_set_label_widget$MH,"gtk_expander_set_label_widget");
    }
    public static void gtk_expander_set_label_widget ( Addressable expander,  Addressable label_widget) {
        var mh$ = gtk_expander_set_label_widget$MH();
        try {
            mh$.invokeExact(expander, label_widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_label_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2060.gtk_expander_get_label_widget$MH,"gtk_expander_get_label_widget");
    }
    public static MemoryAddress gtk_expander_get_label_widget ( Addressable expander) {
        var mh$ = gtk_expander_get_label_widget$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(expander);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_set_resize_toplevel$MH() {
        return RuntimeHelper.requireNonNull(constants$2060.gtk_expander_set_resize_toplevel$MH,"gtk_expander_set_resize_toplevel");
    }
    public static void gtk_expander_set_resize_toplevel ( Addressable expander,  int resize_toplevel) {
        var mh$ = gtk_expander_set_resize_toplevel$MH();
        try {
            mh$.invokeExact(expander, resize_toplevel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_resize_toplevel$MH() {
        return RuntimeHelper.requireNonNull(constants$2061.gtk_expander_get_resize_toplevel$MH,"gtk_expander_get_resize_toplevel");
    }
    public static int gtk_expander_get_resize_toplevel ( Addressable expander) {
        var mh$ = gtk_expander_get_resize_toplevel$MH();
        try {
            return (int)mh$.invokeExact(expander);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_set_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2061.gtk_expander_set_child$MH,"gtk_expander_set_child");
    }
    public static void gtk_expander_set_child ( Addressable expander,  Addressable child) {
        var mh$ = gtk_expander_set_child$MH();
        try {
            mh$.invokeExact(expander, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_expander_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2061.gtk_expander_get_child$MH,"gtk_expander_get_child");
    }
    public static MemoryAddress gtk_expander_get_child ( Addressable expander) {
        var mh$ = gtk_expander_get_child$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(expander);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_fixed_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2061.gtk_fixed_get_type$MH,"gtk_fixed_get_type");
    }
    public static long gtk_fixed_get_type () {
        var mh$ = gtk_fixed_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_fixed_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2061.gtk_fixed_new$MH,"gtk_fixed_new");
    }
    public static MemoryAddress gtk_fixed_new () {
        var mh$ = gtk_fixed_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_fixed_put$MH() {
        return RuntimeHelper.requireNonNull(constants$2061.gtk_fixed_put$MH,"gtk_fixed_put");
    }
    public static void gtk_fixed_put ( Addressable fixed,  Addressable widget,  double x,  double y) {
        var mh$ = gtk_fixed_put$MH();
        try {
            mh$.invokeExact(fixed, widget, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_fixed_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$2062.gtk_fixed_remove$MH,"gtk_fixed_remove");
    }
    public static void gtk_fixed_remove ( Addressable fixed,  Addressable widget) {
        var mh$ = gtk_fixed_remove$MH();
        try {
            mh$.invokeExact(fixed, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_fixed_move$MH() {
        return RuntimeHelper.requireNonNull(constants$2062.gtk_fixed_move$MH,"gtk_fixed_move");
    }
    public static void gtk_fixed_move ( Addressable fixed,  Addressable widget,  double x,  double y) {
        var mh$ = gtk_fixed_move$MH();
        try {
            mh$.invokeExact(fixed, widget, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_fixed_get_child_position$MH() {
        return RuntimeHelper.requireNonNull(constants$2062.gtk_fixed_get_child_position$MH,"gtk_fixed_get_child_position");
    }
    public static void gtk_fixed_get_child_position ( Addressable fixed,  Addressable widget,  Addressable x,  Addressable y) {
        var mh$ = gtk_fixed_get_child_position$MH();
        try {
            mh$.invokeExact(fixed, widget, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_fixed_set_child_transform$MH() {
        return RuntimeHelper.requireNonNull(constants$2062.gtk_fixed_set_child_transform$MH,"gtk_fixed_set_child_transform");
    }
    public static void gtk_fixed_set_child_transform ( Addressable fixed,  Addressable widget,  Addressable transform) {
        var mh$ = gtk_fixed_set_child_transform$MH();
        try {
            mh$.invokeExact(fixed, widget, transform);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_fixed_get_child_transform$MH() {
        return RuntimeHelper.requireNonNull(constants$2062.gtk_fixed_get_child_transform$MH,"gtk_fixed_get_child_transform");
    }
    public static MemoryAddress gtk_fixed_get_child_transform ( Addressable fixed,  Addressable widget) {
        var mh$ = gtk_fixed_get_child_transform$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(fixed, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_fixed_layout_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2062.gtk_fixed_layout_get_type$MH,"gtk_fixed_layout_get_type");
    }
    public static long gtk_fixed_layout_get_type () {
        var mh$ = gtk_fixed_layout_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkFixedLayout_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFixedLayout_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFixedLayout_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFixedLayout_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkFixedLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$2063.glib_autoptr_clear_GtkFixedLayout$MH,"glib_autoptr_clear_GtkFixedLayout");
    }
    public static void glib_autoptr_clear_GtkFixedLayout ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkFixedLayout$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkFixedLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$2063.glib_autoptr_cleanup_GtkFixedLayout$MH,"glib_autoptr_cleanup_GtkFixedLayout");
    }
    public static void glib_autoptr_cleanup_GtkFixedLayout ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkFixedLayout$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkFixedLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$2063.glib_listautoptr_cleanup_GtkFixedLayout$MH,"glib_listautoptr_cleanup_GtkFixedLayout");
    }
    public static void glib_listautoptr_cleanup_GtkFixedLayout ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkFixedLayout$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkFixedLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$2063.glib_slistautoptr_cleanup_GtkFixedLayout$MH,"glib_slistautoptr_cleanup_GtkFixedLayout");
    }
    public static void glib_slistautoptr_cleanup_GtkFixedLayout ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkFixedLayout$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkFixedLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$2063.glib_queueautoptr_cleanup_GtkFixedLayout$MH,"glib_queueautoptr_cleanup_GtkFixedLayout");
    }
    public static void glib_queueautoptr_cleanup_GtkFixedLayout ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkFixedLayout$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkFixedLayoutClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFixedLayoutClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFixedLayoutClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFixedLayoutClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkFixedLayoutClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2063.glib_autoptr_clear_GtkFixedLayoutClass$MH,"glib_autoptr_clear_GtkFixedLayoutClass");
    }
    public static void glib_autoptr_clear_GtkFixedLayoutClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkFixedLayoutClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkFixedLayoutClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2064.glib_autoptr_cleanup_GtkFixedLayoutClass$MH,"glib_autoptr_cleanup_GtkFixedLayoutClass");
    }
    public static void glib_autoptr_cleanup_GtkFixedLayoutClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkFixedLayoutClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkFixedLayoutClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2064.glib_listautoptr_cleanup_GtkFixedLayoutClass$MH,"glib_listautoptr_cleanup_GtkFixedLayoutClass");
    }
    public static void glib_listautoptr_cleanup_GtkFixedLayoutClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkFixedLayoutClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkFixedLayoutClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2064.glib_slistautoptr_cleanup_GtkFixedLayoutClass$MH,"glib_slistautoptr_cleanup_GtkFixedLayoutClass");
    }
    public static void glib_slistautoptr_cleanup_GtkFixedLayoutClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkFixedLayoutClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkFixedLayoutClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2064.glib_queueautoptr_cleanup_GtkFixedLayoutClass$MH,"glib_queueautoptr_cleanup_GtkFixedLayoutClass");
    }
    public static void glib_queueautoptr_cleanup_GtkFixedLayoutClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkFixedLayoutClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_FIXED_LAYOUT$MH() {
        return RuntimeHelper.requireNonNull(constants$2064.GTK_FIXED_LAYOUT$MH,"GTK_FIXED_LAYOUT");
    }
    public static MemoryAddress GTK_FIXED_LAYOUT ( Addressable ptr) {
        var mh$ = GTK_FIXED_LAYOUT$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_FIXED_LAYOUT$MH() {
        return RuntimeHelper.requireNonNull(constants$2064.GTK_IS_FIXED_LAYOUT$MH,"GTK_IS_FIXED_LAYOUT");
    }
    public static int GTK_IS_FIXED_LAYOUT ( Addressable ptr) {
        var mh$ = GTK_IS_FIXED_LAYOUT$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_fixed_layout_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2065.gtk_fixed_layout_new$MH,"gtk_fixed_layout_new");
    }
    public static MemoryAddress gtk_fixed_layout_new () {
        var mh$ = gtk_fixed_layout_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_fixed_layout_child_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2065.gtk_fixed_layout_child_get_type$MH,"gtk_fixed_layout_child_get_type");
    }
    public static long gtk_fixed_layout_child_get_type () {
        var mh$ = gtk_fixed_layout_child_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkFixedLayoutChild_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFixedLayoutChild_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFixedLayoutChild_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFixedLayoutChild_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkFixedLayoutChild$MH() {
        return RuntimeHelper.requireNonNull(constants$2065.glib_autoptr_clear_GtkFixedLayoutChild$MH,"glib_autoptr_clear_GtkFixedLayoutChild");
    }
    public static void glib_autoptr_clear_GtkFixedLayoutChild ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkFixedLayoutChild$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkFixedLayoutChild$MH() {
        return RuntimeHelper.requireNonNull(constants$2065.glib_autoptr_cleanup_GtkFixedLayoutChild$MH,"glib_autoptr_cleanup_GtkFixedLayoutChild");
    }
    public static void glib_autoptr_cleanup_GtkFixedLayoutChild ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkFixedLayoutChild$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkFixedLayoutChild$MH() {
        return RuntimeHelper.requireNonNull(constants$2065.glib_listautoptr_cleanup_GtkFixedLayoutChild$MH,"glib_listautoptr_cleanup_GtkFixedLayoutChild");
    }
    public static void glib_listautoptr_cleanup_GtkFixedLayoutChild ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkFixedLayoutChild$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkFixedLayoutChild$MH() {
        return RuntimeHelper.requireNonNull(constants$2065.glib_slistautoptr_cleanup_GtkFixedLayoutChild$MH,"glib_slistautoptr_cleanup_GtkFixedLayoutChild");
    }
    public static void glib_slistautoptr_cleanup_GtkFixedLayoutChild ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkFixedLayoutChild$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkFixedLayoutChild$MH() {
        return RuntimeHelper.requireNonNull(constants$2066.glib_queueautoptr_cleanup_GtkFixedLayoutChild$MH,"glib_queueautoptr_cleanup_GtkFixedLayoutChild");
    }
    public static void glib_queueautoptr_cleanup_GtkFixedLayoutChild ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkFixedLayoutChild$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkFixedLayoutChildClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFixedLayoutChildClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFixedLayoutChildClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFixedLayoutChildClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkFixedLayoutChildClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2066.glib_autoptr_clear_GtkFixedLayoutChildClass$MH,"glib_autoptr_clear_GtkFixedLayoutChildClass");
    }
    public static void glib_autoptr_clear_GtkFixedLayoutChildClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkFixedLayoutChildClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkFixedLayoutChildClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2066.glib_autoptr_cleanup_GtkFixedLayoutChildClass$MH,"glib_autoptr_cleanup_GtkFixedLayoutChildClass");
    }
    public static void glib_autoptr_cleanup_GtkFixedLayoutChildClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkFixedLayoutChildClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkFixedLayoutChildClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2066.glib_listautoptr_cleanup_GtkFixedLayoutChildClass$MH,"glib_listautoptr_cleanup_GtkFixedLayoutChildClass");
    }
    public static void glib_listautoptr_cleanup_GtkFixedLayoutChildClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkFixedLayoutChildClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkFixedLayoutChildClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2066.glib_slistautoptr_cleanup_GtkFixedLayoutChildClass$MH,"glib_slistautoptr_cleanup_GtkFixedLayoutChildClass");
    }
    public static void glib_slistautoptr_cleanup_GtkFixedLayoutChildClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkFixedLayoutChildClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkFixedLayoutChildClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2066.glib_queueautoptr_cleanup_GtkFixedLayoutChildClass$MH,"glib_queueautoptr_cleanup_GtkFixedLayoutChildClass");
    }
    public static void glib_queueautoptr_cleanup_GtkFixedLayoutChildClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkFixedLayoutChildClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_FIXED_LAYOUT_CHILD$MH() {
        return RuntimeHelper.requireNonNull(constants$2067.GTK_FIXED_LAYOUT_CHILD$MH,"GTK_FIXED_LAYOUT_CHILD");
    }
    public static MemoryAddress GTK_FIXED_LAYOUT_CHILD ( Addressable ptr) {
        var mh$ = GTK_FIXED_LAYOUT_CHILD$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_FIXED_LAYOUT_CHILD$MH() {
        return RuntimeHelper.requireNonNull(constants$2067.GTK_IS_FIXED_LAYOUT_CHILD$MH,"GTK_IS_FIXED_LAYOUT_CHILD");
    }
    public static int GTK_IS_FIXED_LAYOUT_CHILD ( Addressable ptr) {
        var mh$ = GTK_IS_FIXED_LAYOUT_CHILD$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_fixed_layout_child_set_transform$MH() {
        return RuntimeHelper.requireNonNull(constants$2067.gtk_fixed_layout_child_set_transform$MH,"gtk_fixed_layout_child_set_transform");
    }
    public static void gtk_fixed_layout_child_set_transform ( Addressable child,  Addressable transform) {
        var mh$ = gtk_fixed_layout_child_set_transform$MH();
        try {
            mh$.invokeExact(child, transform);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_fixed_layout_child_get_transform$MH() {
        return RuntimeHelper.requireNonNull(constants$2067.gtk_fixed_layout_child_get_transform$MH,"gtk_fixed_layout_child_get_transform");
    }
    public static MemoryAddress gtk_fixed_layout_child_get_transform ( Addressable child) {
        var mh$ = gtk_fixed_layout_child_get_transform$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2067.gtk_file_filter_get_type$MH,"gtk_file_filter_get_type");
    }
    public static long gtk_file_filter_get_type () {
        var mh$ = gtk_file_filter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2067.gtk_file_filter_new$MH,"gtk_file_filter_new");
    }
    public static MemoryAddress gtk_file_filter_new () {
        var mh$ = gtk_file_filter_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_set_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2068.gtk_file_filter_set_name$MH,"gtk_file_filter_set_name");
    }
    public static void gtk_file_filter_set_name ( Addressable filter,  Addressable name) {
        var mh$ = gtk_file_filter_set_name$MH();
        try {
            mh$.invokeExact(filter, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2068.gtk_file_filter_get_name$MH,"gtk_file_filter_get_name");
    }
    public static MemoryAddress gtk_file_filter_get_name ( Addressable filter) {
        var mh$ = gtk_file_filter_get_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_add_mime_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2068.gtk_file_filter_add_mime_type$MH,"gtk_file_filter_add_mime_type");
    }
    public static void gtk_file_filter_add_mime_type ( Addressable filter,  Addressable mime_type) {
        var mh$ = gtk_file_filter_add_mime_type$MH();
        try {
            mh$.invokeExact(filter, mime_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_add_pattern$MH() {
        return RuntimeHelper.requireNonNull(constants$2068.gtk_file_filter_add_pattern$MH,"gtk_file_filter_add_pattern");
    }
    public static void gtk_file_filter_add_pattern ( Addressable filter,  Addressable pattern) {
        var mh$ = gtk_file_filter_add_pattern$MH();
        try {
            mh$.invokeExact(filter, pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_add_suffix$MH() {
        return RuntimeHelper.requireNonNull(constants$2068.gtk_file_filter_add_suffix$MH,"gtk_file_filter_add_suffix");
    }
    public static void gtk_file_filter_add_suffix ( Addressable filter,  Addressable suffix) {
        var mh$ = gtk_file_filter_add_suffix$MH();
        try {
            mh$.invokeExact(filter, suffix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_add_pixbuf_formats$MH() {
        return RuntimeHelper.requireNonNull(constants$2068.gtk_file_filter_add_pixbuf_formats$MH,"gtk_file_filter_add_pixbuf_formats");
    }
    public static void gtk_file_filter_add_pixbuf_formats ( Addressable filter) {
        var mh$ = gtk_file_filter_add_pixbuf_formats$MH();
        try {
            mh$.invokeExact(filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_get_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$2069.gtk_file_filter_get_attributes$MH,"gtk_file_filter_get_attributes");
    }
    public static MemoryAddress gtk_file_filter_get_attributes ( Addressable filter) {
        var mh$ = gtk_file_filter_get_attributes$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_to_gvariant$MH() {
        return RuntimeHelper.requireNonNull(constants$2069.gtk_file_filter_to_gvariant$MH,"gtk_file_filter_to_gvariant");
    }
    public static MemoryAddress gtk_file_filter_to_gvariant ( Addressable filter) {
        var mh$ = gtk_file_filter_to_gvariant$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_filter_new_from_gvariant$MH() {
        return RuntimeHelper.requireNonNull(constants$2069.gtk_file_filter_new_from_gvariant$MH,"gtk_file_filter_new_from_gvariant");
    }
    public static MemoryAddress gtk_file_filter_new_from_gvariant ( Addressable variant) {
        var mh$ = gtk_file_filter_new_from_gvariant$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(variant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GTK_FILE_CHOOSER_ACTION_OPEN() {
        return (int)0L;
    }
    public static int GTK_FILE_CHOOSER_ACTION_SAVE() {
        return (int)1L;
    }
    public static int GTK_FILE_CHOOSER_ACTION_SELECT_FOLDER() {
        return (int)2L;
    }
    public static MethodHandle gtk_file_chooser_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2069.gtk_file_chooser_get_type$MH,"gtk_file_chooser_get_type");
    }
    public static long gtk_file_chooser_get_type () {
        var mh$ = gtk_file_chooser_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GTK_FILE_CHOOSER_ERROR_NONEXISTENT() {
        return (int)0L;
    }
    public static int GTK_FILE_CHOOSER_ERROR_BAD_FILENAME() {
        return (int)1L;
    }
    public static int GTK_FILE_CHOOSER_ERROR_ALREADY_EXISTS() {
        return (int)2L;
    }
    public static int GTK_FILE_CHOOSER_ERROR_INCOMPLETE_HOSTNAME() {
        return (int)3L;
    }
    public static MethodHandle gtk_file_chooser_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$2069.gtk_file_chooser_error_quark$MH,"gtk_file_chooser_error_quark");
    }
    public static int gtk_file_chooser_error_quark () {
        var mh$ = gtk_file_chooser_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_action$MH() {
        return RuntimeHelper.requireNonNull(constants$2069.gtk_file_chooser_set_action$MH,"gtk_file_chooser_set_action");
    }
    public static void gtk_file_chooser_set_action ( Addressable chooser,  int action) {
        var mh$ = gtk_file_chooser_set_action$MH();
        try {
            mh$.invokeExact(chooser, action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_action$MH() {
        return RuntimeHelper.requireNonNull(constants$2070.gtk_file_chooser_get_action$MH,"gtk_file_chooser_get_action");
    }
    public static int gtk_file_chooser_get_action ( Addressable chooser) {
        var mh$ = gtk_file_chooser_get_action$MH();
        try {
            return (int)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_select_multiple$MH() {
        return RuntimeHelper.requireNonNull(constants$2070.gtk_file_chooser_set_select_multiple$MH,"gtk_file_chooser_set_select_multiple");
    }
    public static void gtk_file_chooser_set_select_multiple ( Addressable chooser,  int select_multiple) {
        var mh$ = gtk_file_chooser_set_select_multiple$MH();
        try {
            mh$.invokeExact(chooser, select_multiple);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_select_multiple$MH() {
        return RuntimeHelper.requireNonNull(constants$2070.gtk_file_chooser_get_select_multiple$MH,"gtk_file_chooser_get_select_multiple");
    }
    public static int gtk_file_chooser_get_select_multiple ( Addressable chooser) {
        var mh$ = gtk_file_chooser_get_select_multiple$MH();
        try {
            return (int)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_create_folders$MH() {
        return RuntimeHelper.requireNonNull(constants$2070.gtk_file_chooser_set_create_folders$MH,"gtk_file_chooser_set_create_folders");
    }
    public static void gtk_file_chooser_set_create_folders ( Addressable chooser,  int create_folders) {
        var mh$ = gtk_file_chooser_set_create_folders$MH();
        try {
            mh$.invokeExact(chooser, create_folders);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_create_folders$MH() {
        return RuntimeHelper.requireNonNull(constants$2070.gtk_file_chooser_get_create_folders$MH,"gtk_file_chooser_get_create_folders");
    }
    public static int gtk_file_chooser_get_create_folders ( Addressable chooser) {
        var mh$ = gtk_file_chooser_get_create_folders$MH();
        try {
            return (int)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_current_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2070.gtk_file_chooser_set_current_name$MH,"gtk_file_chooser_set_current_name");
    }
    public static void gtk_file_chooser_set_current_name ( Addressable chooser,  Addressable name) {
        var mh$ = gtk_file_chooser_set_current_name$MH();
        try {
            mh$.invokeExact(chooser, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_current_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2071.gtk_file_chooser_get_current_name$MH,"gtk_file_chooser_get_current_name");
    }
    public static MemoryAddress gtk_file_chooser_get_current_name ( Addressable chooser) {
        var mh$ = gtk_file_chooser_get_current_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2071.gtk_file_chooser_get_file$MH,"gtk_file_chooser_get_file");
    }
    public static MemoryAddress gtk_file_chooser_get_file ( Addressable chooser) {
        var mh$ = gtk_file_chooser_get_file$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2071.gtk_file_chooser_set_file$MH,"gtk_file_chooser_set_file");
    }
    public static int gtk_file_chooser_set_file ( Addressable chooser,  Addressable file,  Addressable error) {
        var mh$ = gtk_file_chooser_set_file$MH();
        try {
            return (int)mh$.invokeExact(chooser, file, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_files$MH() {
        return RuntimeHelper.requireNonNull(constants$2071.gtk_file_chooser_get_files$MH,"gtk_file_chooser_get_files");
    }
    public static MemoryAddress gtk_file_chooser_get_files ( Addressable chooser) {
        var mh$ = gtk_file_chooser_get_files$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_current_folder$MH() {
        return RuntimeHelper.requireNonNull(constants$2071.gtk_file_chooser_set_current_folder$MH,"gtk_file_chooser_set_current_folder");
    }
    public static int gtk_file_chooser_set_current_folder ( Addressable chooser,  Addressable file,  Addressable error) {
        var mh$ = gtk_file_chooser_set_current_folder$MH();
        try {
            return (int)mh$.invokeExact(chooser, file, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_current_folder$MH() {
        return RuntimeHelper.requireNonNull(constants$2071.gtk_file_chooser_get_current_folder$MH,"gtk_file_chooser_get_current_folder");
    }
    public static MemoryAddress gtk_file_chooser_get_current_folder ( Addressable chooser) {
        var mh$ = gtk_file_chooser_get_current_folder$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_add_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$2072.gtk_file_chooser_add_filter$MH,"gtk_file_chooser_add_filter");
    }
    public static void gtk_file_chooser_add_filter ( Addressable chooser,  Addressable filter) {
        var mh$ = gtk_file_chooser_add_filter$MH();
        try {
            mh$.invokeExact(chooser, filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_remove_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$2072.gtk_file_chooser_remove_filter$MH,"gtk_file_chooser_remove_filter");
    }
    public static void gtk_file_chooser_remove_filter ( Addressable chooser,  Addressable filter) {
        var mh$ = gtk_file_chooser_remove_filter$MH();
        try {
            mh$.invokeExact(chooser, filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_filters$MH() {
        return RuntimeHelper.requireNonNull(constants$2072.gtk_file_chooser_get_filters$MH,"gtk_file_chooser_get_filters");
    }
    public static MemoryAddress gtk_file_chooser_get_filters ( Addressable chooser) {
        var mh$ = gtk_file_chooser_get_filters$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$2072.gtk_file_chooser_set_filter$MH,"gtk_file_chooser_set_filter");
    }
    public static void gtk_file_chooser_set_filter ( Addressable chooser,  Addressable filter) {
        var mh$ = gtk_file_chooser_set_filter$MH();
        try {
            mh$.invokeExact(chooser, filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$2072.gtk_file_chooser_get_filter$MH,"gtk_file_chooser_get_filter");
    }
    public static MemoryAddress gtk_file_chooser_get_filter ( Addressable chooser) {
        var mh$ = gtk_file_chooser_get_filter$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_add_shortcut_folder$MH() {
        return RuntimeHelper.requireNonNull(constants$2072.gtk_file_chooser_add_shortcut_folder$MH,"gtk_file_chooser_add_shortcut_folder");
    }
    public static int gtk_file_chooser_add_shortcut_folder ( Addressable chooser,  Addressable folder,  Addressable error) {
        var mh$ = gtk_file_chooser_add_shortcut_folder$MH();
        try {
            return (int)mh$.invokeExact(chooser, folder, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_remove_shortcut_folder$MH() {
        return RuntimeHelper.requireNonNull(constants$2073.gtk_file_chooser_remove_shortcut_folder$MH,"gtk_file_chooser_remove_shortcut_folder");
    }
    public static int gtk_file_chooser_remove_shortcut_folder ( Addressable chooser,  Addressable folder,  Addressable error) {
        var mh$ = gtk_file_chooser_remove_shortcut_folder$MH();
        try {
            return (int)mh$.invokeExact(chooser, folder, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_shortcut_folders$MH() {
        return RuntimeHelper.requireNonNull(constants$2073.gtk_file_chooser_get_shortcut_folders$MH,"gtk_file_chooser_get_shortcut_folders");
    }
    public static MemoryAddress gtk_file_chooser_get_shortcut_folders ( Addressable chooser) {
        var mh$ = gtk_file_chooser_get_shortcut_folders$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(chooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_add_choice$MH() {
        return RuntimeHelper.requireNonNull(constants$2073.gtk_file_chooser_add_choice$MH,"gtk_file_chooser_add_choice");
    }
    public static void gtk_file_chooser_add_choice ( Addressable chooser,  Addressable id,  Addressable label,  Addressable options,  Addressable option_labels) {
        var mh$ = gtk_file_chooser_add_choice$MH();
        try {
            mh$.invokeExact(chooser, id, label, options, option_labels);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_remove_choice$MH() {
        return RuntimeHelper.requireNonNull(constants$2073.gtk_file_chooser_remove_choice$MH,"gtk_file_chooser_remove_choice");
    }
    public static void gtk_file_chooser_remove_choice ( Addressable chooser,  Addressable id) {
        var mh$ = gtk_file_chooser_remove_choice$MH();
        try {
            mh$.invokeExact(chooser, id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_set_choice$MH() {
        return RuntimeHelper.requireNonNull(constants$2073.gtk_file_chooser_set_choice$MH,"gtk_file_chooser_set_choice");
    }
    public static void gtk_file_chooser_set_choice ( Addressable chooser,  Addressable id,  Addressable option) {
        var mh$ = gtk_file_chooser_set_choice$MH();
        try {
            mh$.invokeExact(chooser, id, option);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_get_choice$MH() {
        return RuntimeHelper.requireNonNull(constants$2073.gtk_file_chooser_get_choice$MH,"gtk_file_chooser_get_choice");
    }
    public static MemoryAddress gtk_file_chooser_get_choice ( Addressable chooser,  Addressable id) {
        var mh$ = gtk_file_chooser_get_choice$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(chooser, id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_dialog_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2074.gtk_file_chooser_dialog_get_type$MH,"gtk_file_chooser_dialog_get_type");
    }
    public static long gtk_file_chooser_dialog_get_type () {
        var mh$ = gtk_file_chooser_dialog_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_dialog_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2074.gtk_file_chooser_dialog_new$MH,"gtk_file_chooser_dialog_new");
    }
    public static MemoryAddress gtk_file_chooser_dialog_new ( Addressable title,  Addressable parent,  int action,  Addressable first_button_text, Object... x4) {
        var mh$ = gtk_file_chooser_dialog_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(title, parent, action, first_button_text, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2074.gtk_native_dialog_get_type$MH,"gtk_native_dialog_get_type");
    }
    public static long gtk_native_dialog_get_type () {
        var mh$ = gtk_native_dialog_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkNativeDialog_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkNativeDialog_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkNativeDialog_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkNativeDialog_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkNativeDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2074.glib_autoptr_clear_GtkNativeDialog$MH,"glib_autoptr_clear_GtkNativeDialog");
    }
    public static void glib_autoptr_clear_GtkNativeDialog ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkNativeDialog$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkNativeDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2074.glib_autoptr_cleanup_GtkNativeDialog$MH,"glib_autoptr_cleanup_GtkNativeDialog");
    }
    public static void glib_autoptr_cleanup_GtkNativeDialog ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkNativeDialog$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkNativeDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2074.glib_listautoptr_cleanup_GtkNativeDialog$MH,"glib_listautoptr_cleanup_GtkNativeDialog");
    }
    public static void glib_listautoptr_cleanup_GtkNativeDialog ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkNativeDialog$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkNativeDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2075.glib_slistautoptr_cleanup_GtkNativeDialog$MH,"glib_slistautoptr_cleanup_GtkNativeDialog");
    }
    public static void glib_slistautoptr_cleanup_GtkNativeDialog ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkNativeDialog$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkNativeDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2075.glib_queueautoptr_cleanup_GtkNativeDialog$MH,"glib_queueautoptr_cleanup_GtkNativeDialog");
    }
    public static void glib_queueautoptr_cleanup_GtkNativeDialog ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkNativeDialog$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkNativeDialogClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkNativeDialogClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkNativeDialogClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkNativeDialogClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkNativeDialogClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2075.glib_autoptr_clear_GtkNativeDialogClass$MH,"glib_autoptr_clear_GtkNativeDialogClass");
    }
    public static void glib_autoptr_clear_GtkNativeDialogClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkNativeDialogClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkNativeDialogClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2075.glib_autoptr_cleanup_GtkNativeDialogClass$MH,"glib_autoptr_cleanup_GtkNativeDialogClass");
    }
    public static void glib_autoptr_cleanup_GtkNativeDialogClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkNativeDialogClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkNativeDialogClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2075.glib_listautoptr_cleanup_GtkNativeDialogClass$MH,"glib_listautoptr_cleanup_GtkNativeDialogClass");
    }
    public static void glib_listautoptr_cleanup_GtkNativeDialogClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkNativeDialogClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkNativeDialogClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2075.glib_slistautoptr_cleanup_GtkNativeDialogClass$MH,"glib_slistautoptr_cleanup_GtkNativeDialogClass");
    }
    public static void glib_slistautoptr_cleanup_GtkNativeDialogClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkNativeDialogClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkNativeDialogClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2076.glib_queueautoptr_cleanup_GtkNativeDialogClass$MH,"glib_queueautoptr_cleanup_GtkNativeDialogClass");
    }
    public static void glib_queueautoptr_cleanup_GtkNativeDialogClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkNativeDialogClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_NATIVE_DIALOG$MH() {
        return RuntimeHelper.requireNonNull(constants$2076.GTK_NATIVE_DIALOG$MH,"GTK_NATIVE_DIALOG");
    }
    public static MemoryAddress GTK_NATIVE_DIALOG ( Addressable ptr) {
        var mh$ = GTK_NATIVE_DIALOG$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_NATIVE_DIALOG_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$2076.GTK_NATIVE_DIALOG_CLASS$MH,"GTK_NATIVE_DIALOG_CLASS");
    }
    public static MemoryAddress GTK_NATIVE_DIALOG_CLASS ( Addressable ptr) {
        var mh$ = GTK_NATIVE_DIALOG_CLASS$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_NATIVE_DIALOG$MH() {
        return RuntimeHelper.requireNonNull(constants$2076.GTK_IS_NATIVE_DIALOG$MH,"GTK_IS_NATIVE_DIALOG");
    }
    public static int GTK_IS_NATIVE_DIALOG ( Addressable ptr) {
        var mh$ = GTK_IS_NATIVE_DIALOG$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_NATIVE_DIALOG_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$2076.GTK_IS_NATIVE_DIALOG_CLASS$MH,"GTK_IS_NATIVE_DIALOG_CLASS");
    }
    public static int GTK_IS_NATIVE_DIALOG_CLASS ( Addressable ptr) {
        var mh$ = GTK_IS_NATIVE_DIALOG_CLASS$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_NATIVE_DIALOG_GET_CLASS$MH() {
        return RuntimeHelper.requireNonNull(constants$2076.GTK_NATIVE_DIALOG_GET_CLASS$MH,"GTK_NATIVE_DIALOG_GET_CLASS");
    }
    public static MemoryAddress GTK_NATIVE_DIALOG_GET_CLASS ( Addressable ptr) {
        var mh$ = GTK_NATIVE_DIALOG_GET_CLASS$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_show$MH() {
        return RuntimeHelper.requireNonNull(constants$2077.gtk_native_dialog_show$MH,"gtk_native_dialog_show");
    }
    public static void gtk_native_dialog_show ( Addressable self) {
        var mh$ = gtk_native_dialog_show$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_hide$MH() {
        return RuntimeHelper.requireNonNull(constants$2077.gtk_native_dialog_hide$MH,"gtk_native_dialog_hide");
    }
    public static void gtk_native_dialog_hide ( Addressable self) {
        var mh$ = gtk_native_dialog_hide$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$2077.gtk_native_dialog_destroy$MH,"gtk_native_dialog_destroy");
    }
    public static void gtk_native_dialog_destroy ( Addressable self) {
        var mh$ = gtk_native_dialog_destroy$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_get_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$2077.gtk_native_dialog_get_visible$MH,"gtk_native_dialog_get_visible");
    }
    public static int gtk_native_dialog_get_visible ( Addressable self) {
        var mh$ = gtk_native_dialog_get_visible$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_set_modal$MH() {
        return RuntimeHelper.requireNonNull(constants$2077.gtk_native_dialog_set_modal$MH,"gtk_native_dialog_set_modal");
    }
    public static void gtk_native_dialog_set_modal ( Addressable self,  int modal) {
        var mh$ = gtk_native_dialog_set_modal$MH();
        try {
            mh$.invokeExact(self, modal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_get_modal$MH() {
        return RuntimeHelper.requireNonNull(constants$2077.gtk_native_dialog_get_modal$MH,"gtk_native_dialog_get_modal");
    }
    public static int gtk_native_dialog_get_modal ( Addressable self) {
        var mh$ = gtk_native_dialog_get_modal$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_set_title$MH() {
        return RuntimeHelper.requireNonNull(constants$2078.gtk_native_dialog_set_title$MH,"gtk_native_dialog_set_title");
    }
    public static void gtk_native_dialog_set_title ( Addressable self,  Addressable title) {
        var mh$ = gtk_native_dialog_set_title$MH();
        try {
            mh$.invokeExact(self, title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_get_title$MH() {
        return RuntimeHelper.requireNonNull(constants$2078.gtk_native_dialog_get_title$MH,"gtk_native_dialog_get_title");
    }
    public static MemoryAddress gtk_native_dialog_get_title ( Addressable self) {
        var mh$ = gtk_native_dialog_get_title$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_set_transient_for$MH() {
        return RuntimeHelper.requireNonNull(constants$2078.gtk_native_dialog_set_transient_for$MH,"gtk_native_dialog_set_transient_for");
    }
    public static void gtk_native_dialog_set_transient_for ( Addressable self,  Addressable parent) {
        var mh$ = gtk_native_dialog_set_transient_for$MH();
        try {
            mh$.invokeExact(self, parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_get_transient_for$MH() {
        return RuntimeHelper.requireNonNull(constants$2078.gtk_native_dialog_get_transient_for$MH,"gtk_native_dialog_get_transient_for");
    }
    public static MemoryAddress gtk_native_dialog_get_transient_for ( Addressable self) {
        var mh$ = gtk_native_dialog_get_transient_for$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_native_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2078.gtk_file_chooser_native_get_type$MH,"gtk_file_chooser_native_get_type");
    }
    public static long gtk_file_chooser_native_get_type () {
        var mh$ = gtk_file_chooser_native_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkFileChooserNative_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFileChooserNative_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFileChooserNative_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFileChooserNative_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkFileChooserNative$MH() {
        return RuntimeHelper.requireNonNull(constants$2078.glib_autoptr_clear_GtkFileChooserNative$MH,"glib_autoptr_clear_GtkFileChooserNative");
    }
    public static void glib_autoptr_clear_GtkFileChooserNative ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkFileChooserNative$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkFileChooserNative$MH() {
        return RuntimeHelper.requireNonNull(constants$2079.glib_autoptr_cleanup_GtkFileChooserNative$MH,"glib_autoptr_cleanup_GtkFileChooserNative");
    }
    public static void glib_autoptr_cleanup_GtkFileChooserNative ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkFileChooserNative$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkFileChooserNative$MH() {
        return RuntimeHelper.requireNonNull(constants$2079.glib_listautoptr_cleanup_GtkFileChooserNative$MH,"glib_listautoptr_cleanup_GtkFileChooserNative");
    }
    public static void glib_listautoptr_cleanup_GtkFileChooserNative ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkFileChooserNative$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkFileChooserNative$MH() {
        return RuntimeHelper.requireNonNull(constants$2079.glib_slistautoptr_cleanup_GtkFileChooserNative$MH,"glib_slistautoptr_cleanup_GtkFileChooserNative");
    }
    public static void glib_slistautoptr_cleanup_GtkFileChooserNative ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkFileChooserNative$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkFileChooserNative$MH() {
        return RuntimeHelper.requireNonNull(constants$2079.glib_queueautoptr_cleanup_GtkFileChooserNative$MH,"glib_queueautoptr_cleanup_GtkFileChooserNative");
    }
    public static void glib_queueautoptr_cleanup_GtkFileChooserNative ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkFileChooserNative$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkFileChooserNativeClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFileChooserNativeClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFileChooserNativeClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFileChooserNativeClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkFileChooserNativeClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2079.glib_autoptr_clear_GtkFileChooserNativeClass$MH,"glib_autoptr_clear_GtkFileChooserNativeClass");
    }
    public static void glib_autoptr_clear_GtkFileChooserNativeClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkFileChooserNativeClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkFileChooserNativeClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2079.glib_autoptr_cleanup_GtkFileChooserNativeClass$MH,"glib_autoptr_cleanup_GtkFileChooserNativeClass");
    }
    public static void glib_autoptr_cleanup_GtkFileChooserNativeClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkFileChooserNativeClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkFileChooserNativeClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2080.glib_listautoptr_cleanup_GtkFileChooserNativeClass$MH,"glib_listautoptr_cleanup_GtkFileChooserNativeClass");
    }
    public static void glib_listautoptr_cleanup_GtkFileChooserNativeClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkFileChooserNativeClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkFileChooserNativeClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2080.glib_slistautoptr_cleanup_GtkFileChooserNativeClass$MH,"glib_slistautoptr_cleanup_GtkFileChooserNativeClass");
    }
    public static void glib_slistautoptr_cleanup_GtkFileChooserNativeClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkFileChooserNativeClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkFileChooserNativeClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2080.glib_queueautoptr_cleanup_GtkFileChooserNativeClass$MH,"glib_queueautoptr_cleanup_GtkFileChooserNativeClass");
    }
    public static void glib_queueautoptr_cleanup_GtkFileChooserNativeClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkFileChooserNativeClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_FILE_CHOOSER_NATIVE$MH() {
        return RuntimeHelper.requireNonNull(constants$2080.GTK_FILE_CHOOSER_NATIVE$MH,"GTK_FILE_CHOOSER_NATIVE");
    }
    public static MemoryAddress GTK_FILE_CHOOSER_NATIVE ( Addressable ptr) {
        var mh$ = GTK_FILE_CHOOSER_NATIVE$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_FILE_CHOOSER_NATIVE$MH() {
        return RuntimeHelper.requireNonNull(constants$2080.GTK_IS_FILE_CHOOSER_NATIVE$MH,"GTK_IS_FILE_CHOOSER_NATIVE");
    }
    public static int GTK_IS_FILE_CHOOSER_NATIVE ( Addressable ptr) {
        var mh$ = GTK_IS_FILE_CHOOSER_NATIVE$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_native_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2080.gtk_file_chooser_native_new$MH,"gtk_file_chooser_native_new");
    }
    public static MemoryAddress gtk_file_chooser_native_new ( Addressable title,  Addressable parent,  int action,  Addressable accept_label,  Addressable cancel_label) {
        var mh$ = gtk_file_chooser_native_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(title, parent, action, accept_label, cancel_label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_native_get_accept_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2081.gtk_file_chooser_native_get_accept_label$MH,"gtk_file_chooser_native_get_accept_label");
    }
    public static MemoryAddress gtk_file_chooser_native_get_accept_label ( Addressable self) {
        var mh$ = gtk_file_chooser_native_get_accept_label$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_native_set_accept_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2081.gtk_file_chooser_native_set_accept_label$MH,"gtk_file_chooser_native_set_accept_label");
    }
    public static void gtk_file_chooser_native_set_accept_label ( Addressable self,  Addressable accept_label) {
        var mh$ = gtk_file_chooser_native_set_accept_label$MH();
        try {
            mh$.invokeExact(self, accept_label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_native_get_cancel_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2081.gtk_file_chooser_native_get_cancel_label$MH,"gtk_file_chooser_native_get_cancel_label");
    }
    public static MemoryAddress gtk_file_chooser_native_get_cancel_label ( Addressable self) {
        var mh$ = gtk_file_chooser_native_get_cancel_label$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_native_set_cancel_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2081.gtk_file_chooser_native_set_cancel_label$MH,"gtk_file_chooser_native_set_cancel_label");
    }
    public static void gtk_file_chooser_native_set_cancel_label ( Addressable self,  Addressable cancel_label) {
        var mh$ = gtk_file_chooser_native_set_cancel_label$MH();
        try {
            mh$.invokeExact(self, cancel_label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_widget_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2081.gtk_file_chooser_widget_get_type$MH,"gtk_file_chooser_widget_get_type");
    }
    public static long gtk_file_chooser_widget_get_type () {
        var mh$ = gtk_file_chooser_widget_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_widget_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2081.gtk_file_chooser_widget_new$MH,"gtk_file_chooser_widget_new");
    }
    public static MemoryAddress gtk_file_chooser_widget_new ( int action) {
        var mh$ = gtk_file_chooser_widget_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_filter_list_model_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2082.gtk_filter_list_model_get_type$MH,"gtk_filter_list_model_get_type");
    }
    public static long gtk_filter_list_model_get_type () {
        var mh$ = gtk_filter_list_model_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkFilterListModel_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFilterListModel_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFilterListModel_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFilterListModel_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkFilterListModel$MH() {
        return RuntimeHelper.requireNonNull(constants$2082.glib_autoptr_clear_GtkFilterListModel$MH,"glib_autoptr_clear_GtkFilterListModel");
    }
    public static void glib_autoptr_clear_GtkFilterListModel ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkFilterListModel$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkFilterListModel$MH() {
        return RuntimeHelper.requireNonNull(constants$2082.glib_autoptr_cleanup_GtkFilterListModel$MH,"glib_autoptr_cleanup_GtkFilterListModel");
    }
    public static void glib_autoptr_cleanup_GtkFilterListModel ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkFilterListModel$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkFilterListModel$MH() {
        return RuntimeHelper.requireNonNull(constants$2082.glib_listautoptr_cleanup_GtkFilterListModel$MH,"glib_listautoptr_cleanup_GtkFilterListModel");
    }
    public static void glib_listautoptr_cleanup_GtkFilterListModel ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkFilterListModel$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkFilterListModel$MH() {
        return RuntimeHelper.requireNonNull(constants$2082.glib_slistautoptr_cleanup_GtkFilterListModel$MH,"glib_slistautoptr_cleanup_GtkFilterListModel");
    }
    public static void glib_slistautoptr_cleanup_GtkFilterListModel ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkFilterListModel$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkFilterListModel$MH() {
        return RuntimeHelper.requireNonNull(constants$2082.glib_queueautoptr_cleanup_GtkFilterListModel$MH,"glib_queueautoptr_cleanup_GtkFilterListModel");
    }
    public static void glib_queueautoptr_cleanup_GtkFilterListModel ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkFilterListModel$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkFilterListModelClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFilterListModelClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFilterListModelClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFilterListModelClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkFilterListModelClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2083.glib_autoptr_clear_GtkFilterListModelClass$MH,"glib_autoptr_clear_GtkFilterListModelClass");
    }
    public static void glib_autoptr_clear_GtkFilterListModelClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkFilterListModelClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkFilterListModelClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2083.glib_autoptr_cleanup_GtkFilterListModelClass$MH,"glib_autoptr_cleanup_GtkFilterListModelClass");
    }
    public static void glib_autoptr_cleanup_GtkFilterListModelClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkFilterListModelClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkFilterListModelClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2083.glib_listautoptr_cleanup_GtkFilterListModelClass$MH,"glib_listautoptr_cleanup_GtkFilterListModelClass");
    }
    public static void glib_listautoptr_cleanup_GtkFilterListModelClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkFilterListModelClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkFilterListModelClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2083.glib_slistautoptr_cleanup_GtkFilterListModelClass$MH,"glib_slistautoptr_cleanup_GtkFilterListModelClass");
    }
    public static void glib_slistautoptr_cleanup_GtkFilterListModelClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkFilterListModelClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkFilterListModelClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2083.glib_queueautoptr_cleanup_GtkFilterListModelClass$MH,"glib_queueautoptr_cleanup_GtkFilterListModelClass");
    }
    public static void glib_queueautoptr_cleanup_GtkFilterListModelClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkFilterListModelClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_FILTER_LIST_MODEL$MH() {
        return RuntimeHelper.requireNonNull(constants$2083.GTK_FILTER_LIST_MODEL$MH,"GTK_FILTER_LIST_MODEL");
    }
    public static MemoryAddress GTK_FILTER_LIST_MODEL ( Addressable ptr) {
        var mh$ = GTK_FILTER_LIST_MODEL$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_FILTER_LIST_MODEL$MH() {
        return RuntimeHelper.requireNonNull(constants$2084.GTK_IS_FILTER_LIST_MODEL$MH,"GTK_IS_FILTER_LIST_MODEL");
    }
    public static int GTK_IS_FILTER_LIST_MODEL ( Addressable ptr) {
        var mh$ = GTK_IS_FILTER_LIST_MODEL$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_filter_list_model_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2084.gtk_filter_list_model_new$MH,"gtk_filter_list_model_new");
    }
    public static MemoryAddress gtk_filter_list_model_new ( Addressable model,  Addressable filter) {
        var mh$ = gtk_filter_list_model_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(model, filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_filter_list_model_set_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$2084.gtk_filter_list_model_set_filter$MH,"gtk_filter_list_model_set_filter");
    }
    public static void gtk_filter_list_model_set_filter ( Addressable self,  Addressable filter) {
        var mh$ = gtk_filter_list_model_set_filter$MH();
        try {
            mh$.invokeExact(self, filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_filter_list_model_get_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$2084.gtk_filter_list_model_get_filter$MH,"gtk_filter_list_model_get_filter");
    }
    public static MemoryAddress gtk_filter_list_model_get_filter ( Addressable self) {
        var mh$ = gtk_filter_list_model_get_filter$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_filter_list_model_set_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2084.gtk_filter_list_model_set_model$MH,"gtk_filter_list_model_set_model");
    }
    public static void gtk_filter_list_model_set_model ( Addressable self,  Addressable model) {
        var mh$ = gtk_filter_list_model_set_model$MH();
        try {
            mh$.invokeExact(self, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_filter_list_model_get_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2084.gtk_filter_list_model_get_model$MH,"gtk_filter_list_model_get_model");
    }
    public static MemoryAddress gtk_filter_list_model_get_model ( Addressable self) {
        var mh$ = gtk_filter_list_model_get_model$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_filter_list_model_set_incremental$MH() {
        return RuntimeHelper.requireNonNull(constants$2085.gtk_filter_list_model_set_incremental$MH,"gtk_filter_list_model_set_incremental");
    }
    public static void gtk_filter_list_model_set_incremental ( Addressable self,  int incremental) {
        var mh$ = gtk_filter_list_model_set_incremental$MH();
        try {
            mh$.invokeExact(self, incremental);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_filter_list_model_get_incremental$MH() {
        return RuntimeHelper.requireNonNull(constants$2085.gtk_filter_list_model_get_incremental$MH,"gtk_filter_list_model_get_incremental");
    }
    public static int gtk_filter_list_model_get_incremental ( Addressable self) {
        var mh$ = gtk_filter_list_model_get_incremental$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_filter_list_model_get_pending$MH() {
        return RuntimeHelper.requireNonNull(constants$2085.gtk_filter_list_model_get_pending$MH,"gtk_filter_list_model_get_pending");
    }
    public static int gtk_filter_list_model_get_pending ( Addressable self) {
        var mh$ = gtk_filter_list_model_get_pending$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_custom_filter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2085.gtk_custom_filter_get_type$MH,"gtk_custom_filter_get_type");
    }
    public static long gtk_custom_filter_get_type () {
        var mh$ = gtk_custom_filter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCustomFilter_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCustomFilter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCustomFilter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCustomFilter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCustomFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2086.glib_autoptr_clear_GtkCustomFilter$MH,"glib_autoptr_clear_GtkCustomFilter");
    }
    public static void glib_autoptr_clear_GtkCustomFilter ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkCustomFilter$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCustomFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2086.glib_autoptr_cleanup_GtkCustomFilter$MH,"glib_autoptr_cleanup_GtkCustomFilter");
    }
    public static void glib_autoptr_cleanup_GtkCustomFilter ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkCustomFilter$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCustomFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2086.glib_listautoptr_cleanup_GtkCustomFilter$MH,"glib_listautoptr_cleanup_GtkCustomFilter");
    }
    public static void glib_listautoptr_cleanup_GtkCustomFilter ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkCustomFilter$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCustomFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2086.glib_slistautoptr_cleanup_GtkCustomFilter$MH,"glib_slistautoptr_cleanup_GtkCustomFilter");
    }
    public static void glib_slistautoptr_cleanup_GtkCustomFilter ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkCustomFilter$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCustomFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2086.glib_queueautoptr_cleanup_GtkCustomFilter$MH,"glib_queueautoptr_cleanup_GtkCustomFilter");
    }
    public static void glib_queueautoptr_cleanup_GtkCustomFilter ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkCustomFilter$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkCustomFilterClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCustomFilterClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCustomFilterClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkCustomFilterClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkCustomFilterClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2086.glib_autoptr_clear_GtkCustomFilterClass$MH,"glib_autoptr_clear_GtkCustomFilterClass");
    }
    public static void glib_autoptr_clear_GtkCustomFilterClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkCustomFilterClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkCustomFilterClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2087.glib_autoptr_cleanup_GtkCustomFilterClass$MH,"glib_autoptr_cleanup_GtkCustomFilterClass");
    }
    public static void glib_autoptr_cleanup_GtkCustomFilterClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkCustomFilterClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkCustomFilterClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2087.glib_listautoptr_cleanup_GtkCustomFilterClass$MH,"glib_listautoptr_cleanup_GtkCustomFilterClass");
    }
    public static void glib_listautoptr_cleanup_GtkCustomFilterClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkCustomFilterClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkCustomFilterClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2087.glib_slistautoptr_cleanup_GtkCustomFilterClass$MH,"glib_slistautoptr_cleanup_GtkCustomFilterClass");
    }
    public static void glib_slistautoptr_cleanup_GtkCustomFilterClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkCustomFilterClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkCustomFilterClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2087.glib_queueautoptr_cleanup_GtkCustomFilterClass$MH,"glib_queueautoptr_cleanup_GtkCustomFilterClass");
    }
    public static void glib_queueautoptr_cleanup_GtkCustomFilterClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkCustomFilterClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_CUSTOM_FILTER$MH() {
        return RuntimeHelper.requireNonNull(constants$2087.GTK_CUSTOM_FILTER$MH,"GTK_CUSTOM_FILTER");
    }
    public static MemoryAddress GTK_CUSTOM_FILTER ( Addressable ptr) {
        var mh$ = GTK_CUSTOM_FILTER$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_CUSTOM_FILTER$MH() {
        return RuntimeHelper.requireNonNull(constants$2087.GTK_IS_CUSTOM_FILTER$MH,"GTK_IS_CUSTOM_FILTER");
    }
    public static int GTK_IS_CUSTOM_FILTER ( Addressable ptr) {
        var mh$ = GTK_IS_CUSTOM_FILTER$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_custom_filter_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2088.gtk_custom_filter_new$MH,"gtk_custom_filter_new");
    }
    public static MemoryAddress gtk_custom_filter_new ( Addressable match_func,  Addressable user_data,  Addressable user_destroy) {
        var mh$ = gtk_custom_filter_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(match_func, user_data, user_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_custom_filter_set_filter_func$MH() {
        return RuntimeHelper.requireNonNull(constants$2088.gtk_custom_filter_set_filter_func$MH,"gtk_custom_filter_set_filter_func");
    }
    public static void gtk_custom_filter_set_filter_func ( Addressable self,  Addressable match_func,  Addressable user_data,  Addressable user_destroy) {
        var mh$ = gtk_custom_filter_set_filter_func$MH();
        try {
            mh$.invokeExact(self, match_func, user_data, user_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flatten_list_model_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2088.gtk_flatten_list_model_get_type$MH,"gtk_flatten_list_model_get_type");
    }
    public static long gtk_flatten_list_model_get_type () {
        var mh$ = gtk_flatten_list_model_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkFlattenListModel_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFlattenListModel_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFlattenListModel_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFlattenListModel_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkFlattenListModel$MH() {
        return RuntimeHelper.requireNonNull(constants$2088.glib_autoptr_clear_GtkFlattenListModel$MH,"glib_autoptr_clear_GtkFlattenListModel");
    }
    public static void glib_autoptr_clear_GtkFlattenListModel ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkFlattenListModel$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkFlattenListModel$MH() {
        return RuntimeHelper.requireNonNull(constants$2088.glib_autoptr_cleanup_GtkFlattenListModel$MH,"glib_autoptr_cleanup_GtkFlattenListModel");
    }
    public static void glib_autoptr_cleanup_GtkFlattenListModel ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkFlattenListModel$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkFlattenListModel$MH() {
        return RuntimeHelper.requireNonNull(constants$2088.glib_listautoptr_cleanup_GtkFlattenListModel$MH,"glib_listautoptr_cleanup_GtkFlattenListModel");
    }
    public static void glib_listautoptr_cleanup_GtkFlattenListModel ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkFlattenListModel$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkFlattenListModel$MH() {
        return RuntimeHelper.requireNonNull(constants$2089.glib_slistautoptr_cleanup_GtkFlattenListModel$MH,"glib_slistautoptr_cleanup_GtkFlattenListModel");
    }
    public static void glib_slistautoptr_cleanup_GtkFlattenListModel ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkFlattenListModel$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkFlattenListModel$MH() {
        return RuntimeHelper.requireNonNull(constants$2089.glib_queueautoptr_cleanup_GtkFlattenListModel$MH,"glib_queueautoptr_cleanup_GtkFlattenListModel");
    }
    public static void glib_queueautoptr_cleanup_GtkFlattenListModel ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkFlattenListModel$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkFlattenListModelClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFlattenListModelClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFlattenListModelClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFlattenListModelClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkFlattenListModelClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2089.glib_autoptr_clear_GtkFlattenListModelClass$MH,"glib_autoptr_clear_GtkFlattenListModelClass");
    }
    public static void glib_autoptr_clear_GtkFlattenListModelClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkFlattenListModelClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkFlattenListModelClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2089.glib_autoptr_cleanup_GtkFlattenListModelClass$MH,"glib_autoptr_cleanup_GtkFlattenListModelClass");
    }
    public static void glib_autoptr_cleanup_GtkFlattenListModelClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkFlattenListModelClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkFlattenListModelClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2089.glib_listautoptr_cleanup_GtkFlattenListModelClass$MH,"glib_listautoptr_cleanup_GtkFlattenListModelClass");
    }
    public static void glib_listautoptr_cleanup_GtkFlattenListModelClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkFlattenListModelClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkFlattenListModelClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2089.glib_slistautoptr_cleanup_GtkFlattenListModelClass$MH,"glib_slistautoptr_cleanup_GtkFlattenListModelClass");
    }
    public static void glib_slistautoptr_cleanup_GtkFlattenListModelClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkFlattenListModelClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkFlattenListModelClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2090.glib_queueautoptr_cleanup_GtkFlattenListModelClass$MH,"glib_queueautoptr_cleanup_GtkFlattenListModelClass");
    }
    public static void glib_queueautoptr_cleanup_GtkFlattenListModelClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkFlattenListModelClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_FLATTEN_LIST_MODEL$MH() {
        return RuntimeHelper.requireNonNull(constants$2090.GTK_FLATTEN_LIST_MODEL$MH,"GTK_FLATTEN_LIST_MODEL");
    }
    public static MemoryAddress GTK_FLATTEN_LIST_MODEL ( Addressable ptr) {
        var mh$ = GTK_FLATTEN_LIST_MODEL$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_FLATTEN_LIST_MODEL$MH() {
        return RuntimeHelper.requireNonNull(constants$2090.GTK_IS_FLATTEN_LIST_MODEL$MH,"GTK_IS_FLATTEN_LIST_MODEL");
    }
    public static int GTK_IS_FLATTEN_LIST_MODEL ( Addressable ptr) {
        var mh$ = GTK_IS_FLATTEN_LIST_MODEL$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flatten_list_model_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2090.gtk_flatten_list_model_new$MH,"gtk_flatten_list_model_new");
    }
    public static MemoryAddress gtk_flatten_list_model_new ( Addressable model) {
        var mh$ = gtk_flatten_list_model_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flatten_list_model_set_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2090.gtk_flatten_list_model_set_model$MH,"gtk_flatten_list_model_set_model");
    }
    public static void gtk_flatten_list_model_set_model ( Addressable self,  Addressable model) {
        var mh$ = gtk_flatten_list_model_set_model$MH();
        try {
            mh$.invokeExact(self, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flatten_list_model_get_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2090.gtk_flatten_list_model_get_model$MH,"gtk_flatten_list_model_get_model");
    }
    public static MemoryAddress gtk_flatten_list_model_get_model ( Addressable self) {
        var mh$ = gtk_flatten_list_model_get_model$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flatten_list_model_get_model_for_item$MH() {
        return RuntimeHelper.requireNonNull(constants$2091.gtk_flatten_list_model_get_model_for_item$MH,"gtk_flatten_list_model_get_model_for_item");
    }
    public static MemoryAddress gtk_flatten_list_model_get_model_for_item ( Addressable self,  int position) {
        var mh$ = gtk_flatten_list_model_get_model_for_item$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_child_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2091.gtk_flow_box_child_get_type$MH,"gtk_flow_box_child_get_type");
    }
    public static long gtk_flow_box_child_get_type () {
        var mh$ = gtk_flow_box_child_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_child_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2091.gtk_flow_box_child_new$MH,"gtk_flow_box_child_new");
    }
    public static MemoryAddress gtk_flow_box_child_new () {
        var mh$ = gtk_flow_box_child_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_child_set_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2091.gtk_flow_box_child_set_child$MH,"gtk_flow_box_child_set_child");
    }
    public static void gtk_flow_box_child_set_child ( Addressable self,  Addressable child) {
        var mh$ = gtk_flow_box_child_set_child$MH();
        try {
            mh$.invokeExact(self, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_child_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2092.gtk_flow_box_child_get_child$MH,"gtk_flow_box_child_get_child");
    }
    public static MemoryAddress gtk_flow_box_child_get_child ( Addressable self) {
        var mh$ = gtk_flow_box_child_get_child$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_child_get_index$MH() {
        return RuntimeHelper.requireNonNull(constants$2092.gtk_flow_box_child_get_index$MH,"gtk_flow_box_child_get_index");
    }
    public static int gtk_flow_box_child_get_index ( Addressable child) {
        var mh$ = gtk_flow_box_child_get_index$MH();
        try {
            return (int)mh$.invokeExact(child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_child_is_selected$MH() {
        return RuntimeHelper.requireNonNull(constants$2092.gtk_flow_box_child_is_selected$MH,"gtk_flow_box_child_is_selected");
    }
    public static int gtk_flow_box_child_is_selected ( Addressable child) {
        var mh$ = gtk_flow_box_child_is_selected$MH();
        try {
            return (int)mh$.invokeExact(child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_child_changed$MH() {
        return RuntimeHelper.requireNonNull(constants$2092.gtk_flow_box_child_changed$MH,"gtk_flow_box_child_changed");
    }
    public static void gtk_flow_box_child_changed ( Addressable child) {
        var mh$ = gtk_flow_box_child_changed$MH();
        try {
            mh$.invokeExact(child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2092.gtk_flow_box_get_type$MH,"gtk_flow_box_get_type");
    }
    public static long gtk_flow_box_get_type () {
        var mh$ = gtk_flow_box_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2092.gtk_flow_box_new$MH,"gtk_flow_box_new");
    }
    public static MemoryAddress gtk_flow_box_new () {
        var mh$ = gtk_flow_box_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_bind_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2093.gtk_flow_box_bind_model$MH,"gtk_flow_box_bind_model");
    }
    public static void gtk_flow_box_bind_model ( Addressable box,  Addressable model,  Addressable create_widget_func,  Addressable user_data,  Addressable user_data_free_func) {
        var mh$ = gtk_flow_box_bind_model$MH();
        try {
            mh$.invokeExact(box, model, create_widget_func, user_data, user_data_free_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$2093.gtk_flow_box_set_homogeneous$MH,"gtk_flow_box_set_homogeneous");
    }
    public static void gtk_flow_box_set_homogeneous ( Addressable box,  int homogeneous) {
        var mh$ = gtk_flow_box_set_homogeneous$MH();
        try {
            mh$.invokeExact(box, homogeneous);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$2093.gtk_flow_box_get_homogeneous$MH,"gtk_flow_box_get_homogeneous");
    }
    public static int gtk_flow_box_get_homogeneous ( Addressable box) {
        var mh$ = gtk_flow_box_get_homogeneous$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_row_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$2093.gtk_flow_box_set_row_spacing$MH,"gtk_flow_box_set_row_spacing");
    }
    public static void gtk_flow_box_set_row_spacing ( Addressable box,  int spacing) {
        var mh$ = gtk_flow_box_set_row_spacing$MH();
        try {
            mh$.invokeExact(box, spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_row_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$2093.gtk_flow_box_get_row_spacing$MH,"gtk_flow_box_get_row_spacing");
    }
    public static int gtk_flow_box_get_row_spacing ( Addressable box) {
        var mh$ = gtk_flow_box_get_row_spacing$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_column_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$2093.gtk_flow_box_set_column_spacing$MH,"gtk_flow_box_set_column_spacing");
    }
    public static void gtk_flow_box_set_column_spacing ( Addressable box,  int spacing) {
        var mh$ = gtk_flow_box_set_column_spacing$MH();
        try {
            mh$.invokeExact(box, spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_column_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$2094.gtk_flow_box_get_column_spacing$MH,"gtk_flow_box_get_column_spacing");
    }
    public static int gtk_flow_box_get_column_spacing ( Addressable box) {
        var mh$ = gtk_flow_box_get_column_spacing$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_min_children_per_line$MH() {
        return RuntimeHelper.requireNonNull(constants$2094.gtk_flow_box_set_min_children_per_line$MH,"gtk_flow_box_set_min_children_per_line");
    }
    public static void gtk_flow_box_set_min_children_per_line ( Addressable box,  int n_children) {
        var mh$ = gtk_flow_box_set_min_children_per_line$MH();
        try {
            mh$.invokeExact(box, n_children);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_min_children_per_line$MH() {
        return RuntimeHelper.requireNonNull(constants$2094.gtk_flow_box_get_min_children_per_line$MH,"gtk_flow_box_get_min_children_per_line");
    }
    public static int gtk_flow_box_get_min_children_per_line ( Addressable box) {
        var mh$ = gtk_flow_box_get_min_children_per_line$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_max_children_per_line$MH() {
        return RuntimeHelper.requireNonNull(constants$2094.gtk_flow_box_set_max_children_per_line$MH,"gtk_flow_box_set_max_children_per_line");
    }
    public static void gtk_flow_box_set_max_children_per_line ( Addressable box,  int n_children) {
        var mh$ = gtk_flow_box_set_max_children_per_line$MH();
        try {
            mh$.invokeExact(box, n_children);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_max_children_per_line$MH() {
        return RuntimeHelper.requireNonNull(constants$2094.gtk_flow_box_get_max_children_per_line$MH,"gtk_flow_box_get_max_children_per_line");
    }
    public static int gtk_flow_box_get_max_children_per_line ( Addressable box) {
        var mh$ = gtk_flow_box_get_max_children_per_line$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_activate_on_single_click$MH() {
        return RuntimeHelper.requireNonNull(constants$2094.gtk_flow_box_set_activate_on_single_click$MH,"gtk_flow_box_set_activate_on_single_click");
    }
    public static void gtk_flow_box_set_activate_on_single_click ( Addressable box,  int single) {
        var mh$ = gtk_flow_box_set_activate_on_single_click$MH();
        try {
            mh$.invokeExact(box, single);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_activate_on_single_click$MH() {
        return RuntimeHelper.requireNonNull(constants$2095.gtk_flow_box_get_activate_on_single_click$MH,"gtk_flow_box_get_activate_on_single_click");
    }
    public static int gtk_flow_box_get_activate_on_single_click ( Addressable box) {
        var mh$ = gtk_flow_box_get_activate_on_single_click$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_prepend$MH() {
        return RuntimeHelper.requireNonNull(constants$2095.gtk_flow_box_prepend$MH,"gtk_flow_box_prepend");
    }
    public static void gtk_flow_box_prepend ( Addressable self,  Addressable child) {
        var mh$ = gtk_flow_box_prepend$MH();
        try {
            mh$.invokeExact(self, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_append$MH() {
        return RuntimeHelper.requireNonNull(constants$2095.gtk_flow_box_append$MH,"gtk_flow_box_append");
    }
    public static void gtk_flow_box_append ( Addressable self,  Addressable child) {
        var mh$ = gtk_flow_box_append$MH();
        try {
            mh$.invokeExact(self, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$2095.gtk_flow_box_insert$MH,"gtk_flow_box_insert");
    }
    public static void gtk_flow_box_insert ( Addressable box,  Addressable widget,  int position) {
        var mh$ = gtk_flow_box_insert$MH();
        try {
            mh$.invokeExact(box, widget, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$2095.gtk_flow_box_remove$MH,"gtk_flow_box_remove");
    }
    public static void gtk_flow_box_remove ( Addressable box,  Addressable widget) {
        var mh$ = gtk_flow_box_remove$MH();
        try {
            mh$.invokeExact(box, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_child_at_index$MH() {
        return RuntimeHelper.requireNonNull(constants$2095.gtk_flow_box_get_child_at_index$MH,"gtk_flow_box_get_child_at_index");
    }
    public static MemoryAddress gtk_flow_box_get_child_at_index ( Addressable box,  int idx) {
        var mh$ = gtk_flow_box_get_child_at_index$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(box, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_child_at_pos$MH() {
        return RuntimeHelper.requireNonNull(constants$2096.gtk_flow_box_get_child_at_pos$MH,"gtk_flow_box_get_child_at_pos");
    }
    public static MemoryAddress gtk_flow_box_get_child_at_pos ( Addressable box,  int x,  int y) {
        var mh$ = gtk_flow_box_get_child_at_pos$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(box, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_selected_foreach$MH() {
        return RuntimeHelper.requireNonNull(constants$2096.gtk_flow_box_selected_foreach$MH,"gtk_flow_box_selected_foreach");
    }
    public static void gtk_flow_box_selected_foreach ( Addressable box,  Addressable func,  Addressable data) {
        var mh$ = gtk_flow_box_selected_foreach$MH();
        try {
            mh$.invokeExact(box, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_selected_children$MH() {
        return RuntimeHelper.requireNonNull(constants$2096.gtk_flow_box_get_selected_children$MH,"gtk_flow_box_get_selected_children");
    }
    public static MemoryAddress gtk_flow_box_get_selected_children ( Addressable box) {
        var mh$ = gtk_flow_box_get_selected_children$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_select_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2096.gtk_flow_box_select_child$MH,"gtk_flow_box_select_child");
    }
    public static void gtk_flow_box_select_child ( Addressable box,  Addressable child) {
        var mh$ = gtk_flow_box_select_child$MH();
        try {
            mh$.invokeExact(box, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_unselect_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2097.gtk_flow_box_unselect_child$MH,"gtk_flow_box_unselect_child");
    }
    public static void gtk_flow_box_unselect_child ( Addressable box,  Addressable child) {
        var mh$ = gtk_flow_box_unselect_child$MH();
        try {
            mh$.invokeExact(box, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_select_all$MH() {
        return RuntimeHelper.requireNonNull(constants$2097.gtk_flow_box_select_all$MH,"gtk_flow_box_select_all");
    }
    public static void gtk_flow_box_select_all ( Addressable box) {
        var mh$ = gtk_flow_box_select_all$MH();
        try {
            mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_unselect_all$MH() {
        return RuntimeHelper.requireNonNull(constants$2097.gtk_flow_box_unselect_all$MH,"gtk_flow_box_unselect_all");
    }
    public static void gtk_flow_box_unselect_all ( Addressable box) {
        var mh$ = gtk_flow_box_unselect_all$MH();
        try {
            mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_selection_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2097.gtk_flow_box_set_selection_mode$MH,"gtk_flow_box_set_selection_mode");
    }
    public static void gtk_flow_box_set_selection_mode ( Addressable box,  int mode) {
        var mh$ = gtk_flow_box_set_selection_mode$MH();
        try {
            mh$.invokeExact(box, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_selection_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2097.gtk_flow_box_get_selection_mode$MH,"gtk_flow_box_get_selection_mode");
    }
    public static int gtk_flow_box_get_selection_mode ( Addressable box) {
        var mh$ = gtk_flow_box_get_selection_mode$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_hadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$2097.gtk_flow_box_set_hadjustment$MH,"gtk_flow_box_set_hadjustment");
    }
    public static void gtk_flow_box_set_hadjustment ( Addressable box,  Addressable adjustment) {
        var mh$ = gtk_flow_box_set_hadjustment$MH();
        try {
            mh$.invokeExact(box, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_vadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$2098.gtk_flow_box_set_vadjustment$MH,"gtk_flow_box_set_vadjustment");
    }
    public static void gtk_flow_box_set_vadjustment ( Addressable box,  Addressable adjustment) {
        var mh$ = gtk_flow_box_set_vadjustment$MH();
        try {
            mh$.invokeExact(box, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_filter_func$MH() {
        return RuntimeHelper.requireNonNull(constants$2098.gtk_flow_box_set_filter_func$MH,"gtk_flow_box_set_filter_func");
    }
    public static void gtk_flow_box_set_filter_func ( Addressable box,  Addressable filter_func,  Addressable user_data,  Addressable destroy) {
        var mh$ = gtk_flow_box_set_filter_func$MH();
        try {
            mh$.invokeExact(box, filter_func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_invalidate_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$2098.gtk_flow_box_invalidate_filter$MH,"gtk_flow_box_invalidate_filter");
    }
    public static void gtk_flow_box_invalidate_filter ( Addressable box) {
        var mh$ = gtk_flow_box_invalidate_filter$MH();
        try {
            mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_sort_func$MH() {
        return RuntimeHelper.requireNonNull(constants$2099.gtk_flow_box_set_sort_func$MH,"gtk_flow_box_set_sort_func");
    }
    public static void gtk_flow_box_set_sort_func ( Addressable box,  Addressable sort_func,  Addressable user_data,  Addressable destroy) {
        var mh$ = gtk_flow_box_set_sort_func$MH();
        try {
            mh$.invokeExact(box, sort_func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_invalidate_sort$MH() {
        return RuntimeHelper.requireNonNull(constants$2099.gtk_flow_box_invalidate_sort$MH,"gtk_flow_box_invalidate_sort");
    }
    public static void gtk_flow_box_invalidate_sort ( Addressable box) {
        var mh$ = gtk_flow_box_invalidate_sort$MH();
        try {
            mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2099.gtk_font_button_get_type$MH,"gtk_font_button_get_type");
    }
    public static long gtk_font_button_get_type () {
        var mh$ = gtk_font_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2099.gtk_font_button_new$MH,"gtk_font_button_new");
    }
    public static MemoryAddress gtk_font_button_new () {
        var mh$ = gtk_font_button_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_new_with_font$MH() {
        return RuntimeHelper.requireNonNull(constants$2099.gtk_font_button_new_with_font$MH,"gtk_font_button_new_with_font");
    }
    public static MemoryAddress gtk_font_button_new_with_font ( Addressable fontname) {
        var mh$ = gtk_font_button_new_with_font$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(fontname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_get_title$MH() {
        return RuntimeHelper.requireNonNull(constants$2100.gtk_font_button_get_title$MH,"gtk_font_button_get_title");
    }
    public static MemoryAddress gtk_font_button_get_title ( Addressable font_button) {
        var mh$ = gtk_font_button_get_title$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(font_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_set_title$MH() {
        return RuntimeHelper.requireNonNull(constants$2100.gtk_font_button_set_title$MH,"gtk_font_button_set_title");
    }
    public static void gtk_font_button_set_title ( Addressable font_button,  Addressable title) {
        var mh$ = gtk_font_button_set_title$MH();
        try {
            mh$.invokeExact(font_button, title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_get_modal$MH() {
        return RuntimeHelper.requireNonNull(constants$2100.gtk_font_button_get_modal$MH,"gtk_font_button_get_modal");
    }
    public static int gtk_font_button_get_modal ( Addressable font_button) {
        var mh$ = gtk_font_button_get_modal$MH();
        try {
            return (int)mh$.invokeExact(font_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_set_modal$MH() {
        return RuntimeHelper.requireNonNull(constants$2100.gtk_font_button_set_modal$MH,"gtk_font_button_set_modal");
    }
    public static void gtk_font_button_set_modal ( Addressable font_button,  int modal) {
        var mh$ = gtk_font_button_set_modal$MH();
        try {
            mh$.invokeExact(font_button, modal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_get_use_font$MH() {
        return RuntimeHelper.requireNonNull(constants$2100.gtk_font_button_get_use_font$MH,"gtk_font_button_get_use_font");
    }
    public static int gtk_font_button_get_use_font ( Addressable font_button) {
        var mh$ = gtk_font_button_get_use_font$MH();
        try {
            return (int)mh$.invokeExact(font_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_set_use_font$MH() {
        return RuntimeHelper.requireNonNull(constants$2100.gtk_font_button_set_use_font$MH,"gtk_font_button_set_use_font");
    }
    public static void gtk_font_button_set_use_font ( Addressable font_button,  int use_font) {
        var mh$ = gtk_font_button_set_use_font$MH();
        try {
            mh$.invokeExact(font_button, use_font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_get_use_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2101.gtk_font_button_get_use_size$MH,"gtk_font_button_get_use_size");
    }
    public static int gtk_font_button_get_use_size ( Addressable font_button) {
        var mh$ = gtk_font_button_get_use_size$MH();
        try {
            return (int)mh$.invokeExact(font_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_set_use_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2101.gtk_font_button_set_use_size$MH,"gtk_font_button_set_use_size");
    }
    public static void gtk_font_button_set_use_size ( Addressable font_button,  int use_size) {
        var mh$ = gtk_font_button_set_use_size$MH();
        try {
            mh$.invokeExact(font_button, use_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GTK_FONT_CHOOSER_LEVEL_FAMILY() {
        return (int)0L;
    }
    public static int GTK_FONT_CHOOSER_LEVEL_STYLE() {
        return (int)1L;
    }
    public static int GTK_FONT_CHOOSER_LEVEL_SIZE() {
        return (int)2L;
    }
    public static int GTK_FONT_CHOOSER_LEVEL_VARIATIONS() {
        return (int)4L;
    }
    public static int GTK_FONT_CHOOSER_LEVEL_FEATURES() {
        return (int)8L;
    }
    public static MethodHandle gtk_font_chooser_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2101.gtk_font_chooser_get_type$MH,"gtk_font_chooser_get_type");
    }
    public static long gtk_font_chooser_get_type () {
        var mh$ = gtk_font_chooser_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_font_family$MH() {
        return RuntimeHelper.requireNonNull(constants$2101.gtk_font_chooser_get_font_family$MH,"gtk_font_chooser_get_font_family");
    }
    public static MemoryAddress gtk_font_chooser_get_font_family ( Addressable fontchooser) {
        var mh$ = gtk_font_chooser_get_font_family$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_font_face$MH() {
        return RuntimeHelper.requireNonNull(constants$2102.gtk_font_chooser_get_font_face$MH,"gtk_font_chooser_get_font_face");
    }
    public static MemoryAddress gtk_font_chooser_get_font_face ( Addressable fontchooser) {
        var mh$ = gtk_font_chooser_get_font_face$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_font_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2102.gtk_font_chooser_get_font_size$MH,"gtk_font_chooser_get_font_size");
    }
    public static int gtk_font_chooser_get_font_size ( Addressable fontchooser) {
        var mh$ = gtk_font_chooser_get_font_size$MH();
        try {
            return (int)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_font_desc$MH() {
        return RuntimeHelper.requireNonNull(constants$2102.gtk_font_chooser_get_font_desc$MH,"gtk_font_chooser_get_font_desc");
    }
    public static MemoryAddress gtk_font_chooser_get_font_desc ( Addressable fontchooser) {
        var mh$ = gtk_font_chooser_get_font_desc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_set_font_desc$MH() {
        return RuntimeHelper.requireNonNull(constants$2102.gtk_font_chooser_set_font_desc$MH,"gtk_font_chooser_set_font_desc");
    }
    public static void gtk_font_chooser_set_font_desc ( Addressable fontchooser,  Addressable font_desc) {
        var mh$ = gtk_font_chooser_set_font_desc$MH();
        try {
            mh$.invokeExact(fontchooser, font_desc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_font$MH() {
        return RuntimeHelper.requireNonNull(constants$2102.gtk_font_chooser_get_font$MH,"gtk_font_chooser_get_font");
    }
    public static MemoryAddress gtk_font_chooser_get_font ( Addressable fontchooser) {
        var mh$ = gtk_font_chooser_get_font$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_set_font$MH() {
        return RuntimeHelper.requireNonNull(constants$2102.gtk_font_chooser_set_font$MH,"gtk_font_chooser_set_font");
    }
    public static void gtk_font_chooser_set_font ( Addressable fontchooser,  Addressable fontname) {
        var mh$ = gtk_font_chooser_set_font$MH();
        try {
            mh$.invokeExact(fontchooser, fontname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_preview_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2103.gtk_font_chooser_get_preview_text$MH,"gtk_font_chooser_get_preview_text");
    }
    public static MemoryAddress gtk_font_chooser_get_preview_text ( Addressable fontchooser) {
        var mh$ = gtk_font_chooser_get_preview_text$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_set_preview_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2103.gtk_font_chooser_set_preview_text$MH,"gtk_font_chooser_set_preview_text");
    }
    public static void gtk_font_chooser_set_preview_text ( Addressable fontchooser,  Addressable text) {
        var mh$ = gtk_font_chooser_set_preview_text$MH();
        try {
            mh$.invokeExact(fontchooser, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_show_preview_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$2103.gtk_font_chooser_get_show_preview_entry$MH,"gtk_font_chooser_get_show_preview_entry");
    }
    public static int gtk_font_chooser_get_show_preview_entry ( Addressable fontchooser) {
        var mh$ = gtk_font_chooser_get_show_preview_entry$MH();
        try {
            return (int)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_set_show_preview_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$2103.gtk_font_chooser_set_show_preview_entry$MH,"gtk_font_chooser_set_show_preview_entry");
    }
    public static void gtk_font_chooser_set_show_preview_entry ( Addressable fontchooser,  int show_preview_entry) {
        var mh$ = gtk_font_chooser_set_show_preview_entry$MH();
        try {
            mh$.invokeExact(fontchooser, show_preview_entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_set_filter_func$MH() {
        return RuntimeHelper.requireNonNull(constants$2103.gtk_font_chooser_set_filter_func$MH,"gtk_font_chooser_set_filter_func");
    }
    public static void gtk_font_chooser_set_filter_func ( Addressable fontchooser,  Addressable filter,  Addressable user_data,  Addressable destroy) {
        var mh$ = gtk_font_chooser_set_filter_func$MH();
        try {
            mh$.invokeExact(fontchooser, filter, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_set_font_map$MH() {
        return RuntimeHelper.requireNonNull(constants$2103.gtk_font_chooser_set_font_map$MH,"gtk_font_chooser_set_font_map");
    }
    public static void gtk_font_chooser_set_font_map ( Addressable fontchooser,  Addressable fontmap) {
        var mh$ = gtk_font_chooser_set_font_map$MH();
        try {
            mh$.invokeExact(fontchooser, fontmap);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_font_map$MH() {
        return RuntimeHelper.requireNonNull(constants$2104.gtk_font_chooser_get_font_map$MH,"gtk_font_chooser_get_font_map");
    }
    public static MemoryAddress gtk_font_chooser_get_font_map ( Addressable fontchooser) {
        var mh$ = gtk_font_chooser_get_font_map$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_set_level$MH() {
        return RuntimeHelper.requireNonNull(constants$2104.gtk_font_chooser_set_level$MH,"gtk_font_chooser_set_level");
    }
    public static void gtk_font_chooser_set_level ( Addressable fontchooser,  int level) {
        var mh$ = gtk_font_chooser_set_level$MH();
        try {
            mh$.invokeExact(fontchooser, level);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_level$MH() {
        return RuntimeHelper.requireNonNull(constants$2104.gtk_font_chooser_get_level$MH,"gtk_font_chooser_get_level");
    }
    public static int gtk_font_chooser_get_level ( Addressable fontchooser) {
        var mh$ = gtk_font_chooser_get_level$MH();
        try {
            return (int)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_font_features$MH() {
        return RuntimeHelper.requireNonNull(constants$2104.gtk_font_chooser_get_font_features$MH,"gtk_font_chooser_get_font_features");
    }
    public static MemoryAddress gtk_font_chooser_get_font_features ( Addressable fontchooser) {
        var mh$ = gtk_font_chooser_get_font_features$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_language$MH() {
        return RuntimeHelper.requireNonNull(constants$2104.gtk_font_chooser_get_language$MH,"gtk_font_chooser_get_language");
    }
    public static MemoryAddress gtk_font_chooser_get_language ( Addressable fontchooser) {
        var mh$ = gtk_font_chooser_get_language$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_set_language$MH() {
        return RuntimeHelper.requireNonNull(constants$2104.gtk_font_chooser_set_language$MH,"gtk_font_chooser_set_language");
    }
    public static void gtk_font_chooser_set_language ( Addressable fontchooser,  Addressable language) {
        var mh$ = gtk_font_chooser_set_language$MH();
        try {
            mh$.invokeExact(fontchooser, language);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_dialog_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2105.gtk_font_chooser_dialog_get_type$MH,"gtk_font_chooser_dialog_get_type");
    }
    public static long gtk_font_chooser_dialog_get_type () {
        var mh$ = gtk_font_chooser_dialog_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_dialog_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2105.gtk_font_chooser_dialog_new$MH,"gtk_font_chooser_dialog_new");
    }
    public static MemoryAddress gtk_font_chooser_dialog_new ( Addressable title,  Addressable parent) {
        var mh$ = gtk_font_chooser_dialog_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(title, parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_widget_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2105.gtk_font_chooser_widget_get_type$MH,"gtk_font_chooser_widget_get_type");
    }
    public static long gtk_font_chooser_widget_get_type () {
        var mh$ = gtk_font_chooser_widget_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_widget_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2105.gtk_font_chooser_widget_new$MH,"gtk_font_chooser_widget_new");
    }
    public static MemoryAddress gtk_font_chooser_widget_new () {
        var mh$ = gtk_font_chooser_widget_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2105.gtk_frame_get_type$MH,"gtk_frame_get_type");
    }
    public static long gtk_frame_get_type () {
        var mh$ = gtk_frame_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2105.gtk_frame_new$MH,"gtk_frame_new");
    }
    public static MemoryAddress gtk_frame_new ( Addressable label) {
        var mh$ = gtk_frame_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_set_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2106.gtk_frame_set_label$MH,"gtk_frame_set_label");
    }
    public static void gtk_frame_set_label ( Addressable frame,  Addressable label) {
        var mh$ = gtk_frame_set_label$MH();
        try {
            mh$.invokeExact(frame, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_get_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2106.gtk_frame_get_label$MH,"gtk_frame_get_label");
    }
    public static MemoryAddress gtk_frame_get_label ( Addressable frame) {
        var mh$ = gtk_frame_get_label$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(frame);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_set_label_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2106.gtk_frame_set_label_widget$MH,"gtk_frame_set_label_widget");
    }
    public static void gtk_frame_set_label_widget ( Addressable frame,  Addressable label_widget) {
        var mh$ = gtk_frame_set_label_widget$MH();
        try {
            mh$.invokeExact(frame, label_widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_get_label_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2106.gtk_frame_get_label_widget$MH,"gtk_frame_get_label_widget");
    }
    public static MemoryAddress gtk_frame_get_label_widget ( Addressable frame) {
        var mh$ = gtk_frame_get_label_widget$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(frame);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_set_label_align$MH() {
        return RuntimeHelper.requireNonNull(constants$2106.gtk_frame_set_label_align$MH,"gtk_frame_set_label_align");
    }
    public static void gtk_frame_set_label_align ( Addressable frame,  float xalign) {
        var mh$ = gtk_frame_set_label_align$MH();
        try {
            mh$.invokeExact(frame, xalign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_get_label_align$MH() {
        return RuntimeHelper.requireNonNull(constants$2106.gtk_frame_get_label_align$MH,"gtk_frame_get_label_align");
    }
    public static float gtk_frame_get_label_align ( Addressable frame) {
        var mh$ = gtk_frame_get_label_align$MH();
        try {
            return (float)mh$.invokeExact(frame);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_set_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2107.gtk_frame_set_child$MH,"gtk_frame_set_child");
    }
    public static void gtk_frame_set_child ( Addressable frame,  Addressable child) {
        var mh$ = gtk_frame_set_child$MH();
        try {
            mh$.invokeExact(frame, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_frame_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2107.gtk_frame_get_child$MH,"gtk_frame_get_child");
    }
    public static MemoryAddress gtk_frame_get_child ( Addressable frame) {
        var mh$ = gtk_frame_get_child$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(frame);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2107.gtk_gesture_get_type$MH,"gtk_gesture_get_type");
    }
    public static long gtk_gesture_get_type () {
        var mh$ = gtk_gesture_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_device$MH() {
        return RuntimeHelper.requireNonNull(constants$2107.gtk_gesture_get_device$MH,"gtk_gesture_get_device");
    }
    public static MemoryAddress gtk_gesture_get_device ( Addressable gesture) {
        var mh$ = gtk_gesture_get_device$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_set_state$MH() {
        return RuntimeHelper.requireNonNull(constants$2107.gtk_gesture_set_state$MH,"gtk_gesture_set_state");
    }
    public static int gtk_gesture_set_state ( Addressable gesture,  int state) {
        var mh$ = gtk_gesture_set_state$MH();
        try {
            return (int)mh$.invokeExact(gesture, state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_sequence_state$MH() {
        return RuntimeHelper.requireNonNull(constants$2107.gtk_gesture_get_sequence_state$MH,"gtk_gesture_get_sequence_state");
    }
    public static int gtk_gesture_get_sequence_state ( Addressable gesture,  Addressable sequence) {
        var mh$ = gtk_gesture_get_sequence_state$MH();
        try {
            return (int)mh$.invokeExact(gesture, sequence);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_set_sequence_state$MH() {
        return RuntimeHelper.requireNonNull(constants$2108.gtk_gesture_set_sequence_state$MH,"gtk_gesture_set_sequence_state");
    }
    public static int gtk_gesture_set_sequence_state ( Addressable gesture,  Addressable sequence,  int state) {
        var mh$ = gtk_gesture_set_sequence_state$MH();
        try {
            return (int)mh$.invokeExact(gesture, sequence, state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_sequences$MH() {
        return RuntimeHelper.requireNonNull(constants$2108.gtk_gesture_get_sequences$MH,"gtk_gesture_get_sequences");
    }
    public static MemoryAddress gtk_gesture_get_sequences ( Addressable gesture) {
        var mh$ = gtk_gesture_get_sequences$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_last_updated_sequence$MH() {
        return RuntimeHelper.requireNonNull(constants$2108.gtk_gesture_get_last_updated_sequence$MH,"gtk_gesture_get_last_updated_sequence");
    }
    public static MemoryAddress gtk_gesture_get_last_updated_sequence ( Addressable gesture) {
        var mh$ = gtk_gesture_get_last_updated_sequence$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_handles_sequence$MH() {
        return RuntimeHelper.requireNonNull(constants$2108.gtk_gesture_handles_sequence$MH,"gtk_gesture_handles_sequence");
    }
    public static int gtk_gesture_handles_sequence ( Addressable gesture,  Addressable sequence) {
        var mh$ = gtk_gesture_handles_sequence$MH();
        try {
            return (int)mh$.invokeExact(gesture, sequence);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_last_event$MH() {
        return RuntimeHelper.requireNonNull(constants$2108.gtk_gesture_get_last_event$MH,"gtk_gesture_get_last_event");
    }
    public static MemoryAddress gtk_gesture_get_last_event ( Addressable gesture,  Addressable sequence) {
        var mh$ = gtk_gesture_get_last_event$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(gesture, sequence);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_point$MH() {
        return RuntimeHelper.requireNonNull(constants$2108.gtk_gesture_get_point$MH,"gtk_gesture_get_point");
    }
    public static int gtk_gesture_get_point ( Addressable gesture,  Addressable sequence,  Addressable x,  Addressable y) {
        var mh$ = gtk_gesture_get_point$MH();
        try {
            return (int)mh$.invokeExact(gesture, sequence, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_bounding_box$MH() {
        return RuntimeHelper.requireNonNull(constants$2109.gtk_gesture_get_bounding_box$MH,"gtk_gesture_get_bounding_box");
    }
    public static int gtk_gesture_get_bounding_box ( Addressable gesture,  Addressable rect) {
        var mh$ = gtk_gesture_get_bounding_box$MH();
        try {
            return (int)mh$.invokeExact(gesture, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_bounding_box_center$MH() {
        return RuntimeHelper.requireNonNull(constants$2109.gtk_gesture_get_bounding_box_center$MH,"gtk_gesture_get_bounding_box_center");
    }
    public static int gtk_gesture_get_bounding_box_center ( Addressable gesture,  Addressable x,  Addressable y) {
        var mh$ = gtk_gesture_get_bounding_box_center$MH();
        try {
            return (int)mh$.invokeExact(gesture, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_is_active$MH() {
        return RuntimeHelper.requireNonNull(constants$2109.gtk_gesture_is_active$MH,"gtk_gesture_is_active");
    }
    public static int gtk_gesture_is_active ( Addressable gesture) {
        var mh$ = gtk_gesture_is_active$MH();
        try {
            return (int)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_is_recognized$MH() {
        return RuntimeHelper.requireNonNull(constants$2109.gtk_gesture_is_recognized$MH,"gtk_gesture_is_recognized");
    }
    public static int gtk_gesture_is_recognized ( Addressable gesture) {
        var mh$ = gtk_gesture_is_recognized$MH();
        try {
            return (int)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_group$MH() {
        return RuntimeHelper.requireNonNull(constants$2109.gtk_gesture_group$MH,"gtk_gesture_group");
    }
    public static void gtk_gesture_group ( Addressable group_gesture,  Addressable gesture) {
        var mh$ = gtk_gesture_group$MH();
        try {
            mh$.invokeExact(group_gesture, gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_ungroup$MH() {
        return RuntimeHelper.requireNonNull(constants$2109.gtk_gesture_ungroup$MH,"gtk_gesture_ungroup");
    }
    public static void gtk_gesture_ungroup ( Addressable gesture) {
        var mh$ = gtk_gesture_ungroup$MH();
        try {
            mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_group$MH() {
        return RuntimeHelper.requireNonNull(constants$2110.gtk_gesture_get_group$MH,"gtk_gesture_get_group");
    }
    public static MemoryAddress gtk_gesture_get_group ( Addressable gesture) {
        var mh$ = gtk_gesture_get_group$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_is_grouped_with$MH() {
        return RuntimeHelper.requireNonNull(constants$2110.gtk_gesture_is_grouped_with$MH,"gtk_gesture_is_grouped_with");
    }
    public static int gtk_gesture_is_grouped_with ( Addressable gesture,  Addressable other) {
        var mh$ = gtk_gesture_is_grouped_with$MH();
        try {
            return (int)mh$.invokeExact(gesture, other);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2110.gtk_gesture_single_get_type$MH,"gtk_gesture_single_get_type");
    }
    public static long gtk_gesture_single_get_type () {
        var mh$ = gtk_gesture_single_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_get_touch_only$MH() {
        return RuntimeHelper.requireNonNull(constants$2110.gtk_gesture_single_get_touch_only$MH,"gtk_gesture_single_get_touch_only");
    }
    public static int gtk_gesture_single_get_touch_only ( Addressable gesture) {
        var mh$ = gtk_gesture_single_get_touch_only$MH();
        try {
            return (int)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_set_touch_only$MH() {
        return RuntimeHelper.requireNonNull(constants$2110.gtk_gesture_single_set_touch_only$MH,"gtk_gesture_single_set_touch_only");
    }
    public static void gtk_gesture_single_set_touch_only ( Addressable gesture,  int touch_only) {
        var mh$ = gtk_gesture_single_set_touch_only$MH();
        try {
            mh$.invokeExact(gesture, touch_only);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_get_exclusive$MH() {
        return RuntimeHelper.requireNonNull(constants$2110.gtk_gesture_single_get_exclusive$MH,"gtk_gesture_single_get_exclusive");
    }
    public static int gtk_gesture_single_get_exclusive ( Addressable gesture) {
        var mh$ = gtk_gesture_single_get_exclusive$MH();
        try {
            return (int)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_set_exclusive$MH() {
        return RuntimeHelper.requireNonNull(constants$2111.gtk_gesture_single_set_exclusive$MH,"gtk_gesture_single_set_exclusive");
    }
    public static void gtk_gesture_single_set_exclusive ( Addressable gesture,  int exclusive) {
        var mh$ = gtk_gesture_single_set_exclusive$MH();
        try {
            mh$.invokeExact(gesture, exclusive);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_get_button$MH() {
        return RuntimeHelper.requireNonNull(constants$2111.gtk_gesture_single_get_button$MH,"gtk_gesture_single_get_button");
    }
    public static int gtk_gesture_single_get_button ( Addressable gesture) {
        var mh$ = gtk_gesture_single_get_button$MH();
        try {
            return (int)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_set_button$MH() {
        return RuntimeHelper.requireNonNull(constants$2111.gtk_gesture_single_set_button$MH,"gtk_gesture_single_set_button");
    }
    public static void gtk_gesture_single_set_button ( Addressable gesture,  int button) {
        var mh$ = gtk_gesture_single_set_button$MH();
        try {
            mh$.invokeExact(gesture, button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_get_current_button$MH() {
        return RuntimeHelper.requireNonNull(constants$2111.gtk_gesture_single_get_current_button$MH,"gtk_gesture_single_get_current_button");
    }
    public static int gtk_gesture_single_get_current_button ( Addressable gesture) {
        var mh$ = gtk_gesture_single_get_current_button$MH();
        try {
            return (int)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_get_current_sequence$MH() {
        return RuntimeHelper.requireNonNull(constants$2111.gtk_gesture_single_get_current_sequence$MH,"gtk_gesture_single_get_current_sequence");
    }
    public static MemoryAddress gtk_gesture_single_get_current_sequence ( Addressable gesture) {
        var mh$ = gtk_gesture_single_get_current_sequence$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_click_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2111.gtk_gesture_click_get_type$MH,"gtk_gesture_click_get_type");
    }
    public static long gtk_gesture_click_get_type () {
        var mh$ = gtk_gesture_click_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_click_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2112.gtk_gesture_click_new$MH,"gtk_gesture_click_new");
    }
    public static MemoryAddress gtk_gesture_click_new () {
        var mh$ = gtk_gesture_click_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_drag_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2112.gtk_gesture_drag_get_type$MH,"gtk_gesture_drag_get_type");
    }
    public static long gtk_gesture_drag_get_type () {
        var mh$ = gtk_gesture_drag_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_drag_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2112.gtk_gesture_drag_new$MH,"gtk_gesture_drag_new");
    }
    public static MemoryAddress gtk_gesture_drag_new () {
        var mh$ = gtk_gesture_drag_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_drag_get_start_point$MH() {
        return RuntimeHelper.requireNonNull(constants$2112.gtk_gesture_drag_get_start_point$MH,"gtk_gesture_drag_get_start_point");
    }
    public static int gtk_gesture_drag_get_start_point ( Addressable gesture,  Addressable x,  Addressable y) {
        var mh$ = gtk_gesture_drag_get_start_point$MH();
        try {
            return (int)mh$.invokeExact(gesture, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_drag_get_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$2112.gtk_gesture_drag_get_offset$MH,"gtk_gesture_drag_get_offset");
    }
    public static int gtk_gesture_drag_get_offset ( Addressable gesture,  Addressable x,  Addressable y) {
        var mh$ = gtk_gesture_drag_get_offset$MH();
        try {
            return (int)mh$.invokeExact(gesture, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_long_press_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2112.gtk_gesture_long_press_get_type$MH,"gtk_gesture_long_press_get_type");
    }
    public static long gtk_gesture_long_press_get_type () {
        var mh$ = gtk_gesture_long_press_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_long_press_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2113.gtk_gesture_long_press_new$MH,"gtk_gesture_long_press_new");
    }
    public static MemoryAddress gtk_gesture_long_press_new () {
        var mh$ = gtk_gesture_long_press_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_long_press_set_delay_factor$MH() {
        return RuntimeHelper.requireNonNull(constants$2113.gtk_gesture_long_press_set_delay_factor$MH,"gtk_gesture_long_press_set_delay_factor");
    }
    public static void gtk_gesture_long_press_set_delay_factor ( Addressable gesture,  double delay_factor) {
        var mh$ = gtk_gesture_long_press_set_delay_factor$MH();
        try {
            mh$.invokeExact(gesture, delay_factor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_long_press_get_delay_factor$MH() {
        return RuntimeHelper.requireNonNull(constants$2113.gtk_gesture_long_press_get_delay_factor$MH,"gtk_gesture_long_press_get_delay_factor");
    }
    public static double gtk_gesture_long_press_get_delay_factor ( Addressable gesture) {
        var mh$ = gtk_gesture_long_press_get_delay_factor$MH();
        try {
            return (double)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_pan_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2113.gtk_gesture_pan_get_type$MH,"gtk_gesture_pan_get_type");
    }
    public static long gtk_gesture_pan_get_type () {
        var mh$ = gtk_gesture_pan_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_pan_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2113.gtk_gesture_pan_new$MH,"gtk_gesture_pan_new");
    }
    public static MemoryAddress gtk_gesture_pan_new ( int orientation) {
        var mh$ = gtk_gesture_pan_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(orientation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_pan_get_orientation$MH() {
        return RuntimeHelper.requireNonNull(constants$2113.gtk_gesture_pan_get_orientation$MH,"gtk_gesture_pan_get_orientation");
    }
    public static int gtk_gesture_pan_get_orientation ( Addressable gesture) {
        var mh$ = gtk_gesture_pan_get_orientation$MH();
        try {
            return (int)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_pan_set_orientation$MH() {
        return RuntimeHelper.requireNonNull(constants$2114.gtk_gesture_pan_set_orientation$MH,"gtk_gesture_pan_set_orientation");
    }
    public static void gtk_gesture_pan_set_orientation ( Addressable gesture,  int orientation) {
        var mh$ = gtk_gesture_pan_set_orientation$MH();
        try {
            mh$.invokeExact(gesture, orientation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_rotate_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2114.gtk_gesture_rotate_get_type$MH,"gtk_gesture_rotate_get_type");
    }
    public static long gtk_gesture_rotate_get_type () {
        var mh$ = gtk_gesture_rotate_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_rotate_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2114.gtk_gesture_rotate_new$MH,"gtk_gesture_rotate_new");
    }
    public static MemoryAddress gtk_gesture_rotate_new () {
        var mh$ = gtk_gesture_rotate_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_rotate_get_angle_delta$MH() {
        return RuntimeHelper.requireNonNull(constants$2114.gtk_gesture_rotate_get_angle_delta$MH,"gtk_gesture_rotate_get_angle_delta");
    }
    public static double gtk_gesture_rotate_get_angle_delta ( Addressable gesture) {
        var mh$ = gtk_gesture_rotate_get_angle_delta$MH();
        try {
            return (double)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_stylus_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2114.gtk_gesture_stylus_get_type$MH,"gtk_gesture_stylus_get_type");
    }
    public static long gtk_gesture_stylus_get_type () {
        var mh$ = gtk_gesture_stylus_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_stylus_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2114.gtk_gesture_stylus_new$MH,"gtk_gesture_stylus_new");
    }
    public static MemoryAddress gtk_gesture_stylus_new () {
        var mh$ = gtk_gesture_stylus_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_stylus_get_axis$MH() {
        return RuntimeHelper.requireNonNull(constants$2115.gtk_gesture_stylus_get_axis$MH,"gtk_gesture_stylus_get_axis");
    }
    public static int gtk_gesture_stylus_get_axis ( Addressable gesture,  int axis,  Addressable value) {
        var mh$ = gtk_gesture_stylus_get_axis$MH();
        try {
            return (int)mh$.invokeExact(gesture, axis, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_stylus_get_axes$MH() {
        return RuntimeHelper.requireNonNull(constants$2115.gtk_gesture_stylus_get_axes$MH,"gtk_gesture_stylus_get_axes");
    }
    public static int gtk_gesture_stylus_get_axes ( Addressable gesture,  Addressable axes,  Addressable values) {
        var mh$ = gtk_gesture_stylus_get_axes$MH();
        try {
            return (int)mh$.invokeExact(gesture, axes, values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_stylus_get_backlog$MH() {
        return RuntimeHelper.requireNonNull(constants$2115.gtk_gesture_stylus_get_backlog$MH,"gtk_gesture_stylus_get_backlog");
    }
    public static int gtk_gesture_stylus_get_backlog ( Addressable gesture,  Addressable backlog,  Addressable n_elems) {
        var mh$ = gtk_gesture_stylus_get_backlog$MH();
        try {
            return (int)mh$.invokeExact(gesture, backlog, n_elems);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_stylus_get_device_tool$MH() {
        return RuntimeHelper.requireNonNull(constants$2115.gtk_gesture_stylus_get_device_tool$MH,"gtk_gesture_stylus_get_device_tool");
    }
    public static MemoryAddress gtk_gesture_stylus_get_device_tool ( Addressable gesture) {
        var mh$ = gtk_gesture_stylus_get_device_tool$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_swipe_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2115.gtk_gesture_swipe_get_type$MH,"gtk_gesture_swipe_get_type");
    }
    public static long gtk_gesture_swipe_get_type () {
        var mh$ = gtk_gesture_swipe_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_swipe_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2115.gtk_gesture_swipe_new$MH,"gtk_gesture_swipe_new");
    }
    public static MemoryAddress gtk_gesture_swipe_new () {
        var mh$ = gtk_gesture_swipe_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_swipe_get_velocity$MH() {
        return RuntimeHelper.requireNonNull(constants$2116.gtk_gesture_swipe_get_velocity$MH,"gtk_gesture_swipe_get_velocity");
    }
    public static int gtk_gesture_swipe_get_velocity ( Addressable gesture,  Addressable velocity_x,  Addressable velocity_y) {
        var mh$ = gtk_gesture_swipe_get_velocity$MH();
        try {
            return (int)mh$.invokeExact(gesture, velocity_x, velocity_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_zoom_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2116.gtk_gesture_zoom_get_type$MH,"gtk_gesture_zoom_get_type");
    }
    public static long gtk_gesture_zoom_get_type () {
        var mh$ = gtk_gesture_zoom_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_zoom_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2116.gtk_gesture_zoom_new$MH,"gtk_gesture_zoom_new");
    }
    public static MemoryAddress gtk_gesture_zoom_new () {
        var mh$ = gtk_gesture_zoom_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_zoom_get_scale_delta$MH() {
        return RuntimeHelper.requireNonNull(constants$2116.gtk_gesture_zoom_get_scale_delta$MH,"gtk_gesture_zoom_get_scale_delta");
    }
    public static double gtk_gesture_zoom_get_scale_delta ( Addressable gesture) {
        var mh$ = gtk_gesture_zoom_get_scale_delta$MH();
        try {
            return (double)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2116.gtk_gl_area_get_type$MH,"gtk_gl_area_get_type");
    }
    public static long gtk_gl_area_get_type () {
        var mh$ = gtk_gl_area_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2116.gtk_gl_area_new$MH,"gtk_gl_area_new");
    }
    public static MemoryAddress gtk_gl_area_new () {
        var mh$ = gtk_gl_area_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_set_use_es$MH() {
        return RuntimeHelper.requireNonNull(constants$2117.gtk_gl_area_set_use_es$MH,"gtk_gl_area_set_use_es");
    }
    public static void gtk_gl_area_set_use_es ( Addressable area,  int use_es) {
        var mh$ = gtk_gl_area_set_use_es$MH();
        try {
            mh$.invokeExact(area, use_es);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_use_es$MH() {
        return RuntimeHelper.requireNonNull(constants$2117.gtk_gl_area_get_use_es$MH,"gtk_gl_area_get_use_es");
    }
    public static int gtk_gl_area_get_use_es ( Addressable area) {
        var mh$ = gtk_gl_area_get_use_es$MH();
        try {
            return (int)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_set_required_version$MH() {
        return RuntimeHelper.requireNonNull(constants$2117.gtk_gl_area_set_required_version$MH,"gtk_gl_area_set_required_version");
    }
    public static void gtk_gl_area_set_required_version ( Addressable area,  int major,  int minor) {
        var mh$ = gtk_gl_area_set_required_version$MH();
        try {
            mh$.invokeExact(area, major, minor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_required_version$MH() {
        return RuntimeHelper.requireNonNull(constants$2117.gtk_gl_area_get_required_version$MH,"gtk_gl_area_get_required_version");
    }
    public static void gtk_gl_area_get_required_version ( Addressable area,  Addressable major,  Addressable minor) {
        var mh$ = gtk_gl_area_get_required_version$MH();
        try {
            mh$.invokeExact(area, major, minor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_has_depth_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2117.gtk_gl_area_get_has_depth_buffer$MH,"gtk_gl_area_get_has_depth_buffer");
    }
    public static int gtk_gl_area_get_has_depth_buffer ( Addressable area) {
        var mh$ = gtk_gl_area_get_has_depth_buffer$MH();
        try {
            return (int)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_set_has_depth_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2117.gtk_gl_area_set_has_depth_buffer$MH,"gtk_gl_area_set_has_depth_buffer");
    }
    public static void gtk_gl_area_set_has_depth_buffer ( Addressable area,  int has_depth_buffer) {
        var mh$ = gtk_gl_area_set_has_depth_buffer$MH();
        try {
            mh$.invokeExact(area, has_depth_buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_has_stencil_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2118.gtk_gl_area_get_has_stencil_buffer$MH,"gtk_gl_area_get_has_stencil_buffer");
    }
    public static int gtk_gl_area_get_has_stencil_buffer ( Addressable area) {
        var mh$ = gtk_gl_area_get_has_stencil_buffer$MH();
        try {
            return (int)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_set_has_stencil_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2118.gtk_gl_area_set_has_stencil_buffer$MH,"gtk_gl_area_set_has_stencil_buffer");
    }
    public static void gtk_gl_area_set_has_stencil_buffer ( Addressable area,  int has_stencil_buffer) {
        var mh$ = gtk_gl_area_set_has_stencil_buffer$MH();
        try {
            mh$.invokeExact(area, has_stencil_buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_auto_render$MH() {
        return RuntimeHelper.requireNonNull(constants$2118.gtk_gl_area_get_auto_render$MH,"gtk_gl_area_get_auto_render");
    }
    public static int gtk_gl_area_get_auto_render ( Addressable area) {
        var mh$ = gtk_gl_area_get_auto_render$MH();
        try {
            return (int)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_set_auto_render$MH() {
        return RuntimeHelper.requireNonNull(constants$2118.gtk_gl_area_set_auto_render$MH,"gtk_gl_area_set_auto_render");
    }
    public static void gtk_gl_area_set_auto_render ( Addressable area,  int auto_render) {
        var mh$ = gtk_gl_area_set_auto_render$MH();
        try {
            mh$.invokeExact(area, auto_render);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_queue_render$MH() {
        return RuntimeHelper.requireNonNull(constants$2118.gtk_gl_area_queue_render$MH,"gtk_gl_area_queue_render");
    }
    public static void gtk_gl_area_queue_render ( Addressable area) {
        var mh$ = gtk_gl_area_queue_render$MH();
        try {
            mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_context$MH() {
        return RuntimeHelper.requireNonNull(constants$2118.gtk_gl_area_get_context$MH,"gtk_gl_area_get_context");
    }
    public static MemoryAddress gtk_gl_area_get_context ( Addressable area) {
        var mh$ = gtk_gl_area_get_context$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_make_current$MH() {
        return RuntimeHelper.requireNonNull(constants$2119.gtk_gl_area_make_current$MH,"gtk_gl_area_make_current");
    }
    public static void gtk_gl_area_make_current ( Addressable area) {
        var mh$ = gtk_gl_area_make_current$MH();
        try {
            mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_attach_buffers$MH() {
        return RuntimeHelper.requireNonNull(constants$2119.gtk_gl_area_attach_buffers$MH,"gtk_gl_area_attach_buffers");
    }
    public static void gtk_gl_area_attach_buffers ( Addressable area) {
        var mh$ = gtk_gl_area_attach_buffers$MH();
        try {
            mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_set_error$MH() {
        return RuntimeHelper.requireNonNull(constants$2119.gtk_gl_area_set_error$MH,"gtk_gl_area_set_error");
    }
    public static void gtk_gl_area_set_error ( Addressable area,  Addressable error) {
        var mh$ = gtk_gl_area_set_error$MH();
        try {
            mh$.invokeExact(area, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_error$MH() {
        return RuntimeHelper.requireNonNull(constants$2119.gtk_gl_area_get_error$MH,"gtk_gl_area_get_error");
    }
    public static MemoryAddress gtk_gl_area_get_error ( Addressable area) {
        var mh$ = gtk_gl_area_get_error$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2119.gtk_grid_get_type$MH,"gtk_grid_get_type");
    }
    public static long gtk_grid_get_type () {
        var mh$ = gtk_grid_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2119.gtk_grid_new$MH,"gtk_grid_new");
    }
    public static MemoryAddress gtk_grid_new () {
        var mh$ = gtk_grid_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_attach$MH() {
        return RuntimeHelper.requireNonNull(constants$2120.gtk_grid_attach$MH,"gtk_grid_attach");
    }
    public static void gtk_grid_attach ( Addressable grid,  Addressable child,  int column,  int row,  int width,  int height) {
        var mh$ = gtk_grid_attach$MH();
        try {
            mh$.invokeExact(grid, child, column, row, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_attach_next_to$MH() {
        return RuntimeHelper.requireNonNull(constants$2120.gtk_grid_attach_next_to$MH,"gtk_grid_attach_next_to");
    }
    public static void gtk_grid_attach_next_to ( Addressable grid,  Addressable child,  Addressable sibling,  int side,  int width,  int height) {
        var mh$ = gtk_grid_attach_next_to$MH();
        try {
            mh$.invokeExact(grid, child, sibling, side, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_get_child_at$MH() {
        return RuntimeHelper.requireNonNull(constants$2120.gtk_grid_get_child_at$MH,"gtk_grid_get_child_at");
    }
    public static MemoryAddress gtk_grid_get_child_at ( Addressable grid,  int column,  int row) {
        var mh$ = gtk_grid_get_child_at$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(grid, column, row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$2120.gtk_grid_remove$MH,"gtk_grid_remove");
    }
    public static void gtk_grid_remove ( Addressable grid,  Addressable child) {
        var mh$ = gtk_grid_remove$MH();
        try {
            mh$.invokeExact(grid, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_insert_row$MH() {
        return RuntimeHelper.requireNonNull(constants$2120.gtk_grid_insert_row$MH,"gtk_grid_insert_row");
    }
    public static void gtk_grid_insert_row ( Addressable grid,  int position) {
        var mh$ = gtk_grid_insert_row$MH();
        try {
            mh$.invokeExact(grid, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_insert_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2120.gtk_grid_insert_column$MH,"gtk_grid_insert_column");
    }
    public static void gtk_grid_insert_column ( Addressable grid,  int position) {
        var mh$ = gtk_grid_insert_column$MH();
        try {
            mh$.invokeExact(grid, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_remove_row$MH() {
        return RuntimeHelper.requireNonNull(constants$2121.gtk_grid_remove_row$MH,"gtk_grid_remove_row");
    }
    public static void gtk_grid_remove_row ( Addressable grid,  int position) {
        var mh$ = gtk_grid_remove_row$MH();
        try {
            mh$.invokeExact(grid, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_remove_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2121.gtk_grid_remove_column$MH,"gtk_grid_remove_column");
    }
    public static void gtk_grid_remove_column ( Addressable grid,  int position) {
        var mh$ = gtk_grid_remove_column$MH();
        try {
            mh$.invokeExact(grid, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_insert_next_to$MH() {
        return RuntimeHelper.requireNonNull(constants$2121.gtk_grid_insert_next_to$MH,"gtk_grid_insert_next_to");
    }
    public static void gtk_grid_insert_next_to ( Addressable grid,  Addressable sibling,  int side) {
        var mh$ = gtk_grid_insert_next_to$MH();
        try {
            mh$.invokeExact(grid, sibling, side);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_set_row_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$2121.gtk_grid_set_row_homogeneous$MH,"gtk_grid_set_row_homogeneous");
    }
    public static void gtk_grid_set_row_homogeneous ( Addressable grid,  int homogeneous) {
        var mh$ = gtk_grid_set_row_homogeneous$MH();
        try {
            mh$.invokeExact(grid, homogeneous);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_get_row_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$2121.gtk_grid_get_row_homogeneous$MH,"gtk_grid_get_row_homogeneous");
    }
    public static int gtk_grid_get_row_homogeneous ( Addressable grid) {
        var mh$ = gtk_grid_get_row_homogeneous$MH();
        try {
            return (int)mh$.invokeExact(grid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_set_row_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$2121.gtk_grid_set_row_spacing$MH,"gtk_grid_set_row_spacing");
    }
    public static void gtk_grid_set_row_spacing ( Addressable grid,  int spacing) {
        var mh$ = gtk_grid_set_row_spacing$MH();
        try {
            mh$.invokeExact(grid, spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_get_row_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$2122.gtk_grid_get_row_spacing$MH,"gtk_grid_get_row_spacing");
    }
    public static int gtk_grid_get_row_spacing ( Addressable grid) {
        var mh$ = gtk_grid_get_row_spacing$MH();
        try {
            return (int)mh$.invokeExact(grid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_set_column_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$2122.gtk_grid_set_column_homogeneous$MH,"gtk_grid_set_column_homogeneous");
    }
    public static void gtk_grid_set_column_homogeneous ( Addressable grid,  int homogeneous) {
        var mh$ = gtk_grid_set_column_homogeneous$MH();
        try {
            mh$.invokeExact(grid, homogeneous);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_get_column_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$2122.gtk_grid_get_column_homogeneous$MH,"gtk_grid_get_column_homogeneous");
    }
    public static int gtk_grid_get_column_homogeneous ( Addressable grid) {
        var mh$ = gtk_grid_get_column_homogeneous$MH();
        try {
            return (int)mh$.invokeExact(grid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_set_column_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$2122.gtk_grid_set_column_spacing$MH,"gtk_grid_set_column_spacing");
    }
    public static void gtk_grid_set_column_spacing ( Addressable grid,  int spacing) {
        var mh$ = gtk_grid_set_column_spacing$MH();
        try {
            mh$.invokeExact(grid, spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_get_column_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$2122.gtk_grid_get_column_spacing$MH,"gtk_grid_get_column_spacing");
    }
    public static int gtk_grid_get_column_spacing ( Addressable grid) {
        var mh$ = gtk_grid_get_column_spacing$MH();
        try {
            return (int)mh$.invokeExact(grid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_set_row_baseline_position$MH() {
        return RuntimeHelper.requireNonNull(constants$2122.gtk_grid_set_row_baseline_position$MH,"gtk_grid_set_row_baseline_position");
    }
    public static void gtk_grid_set_row_baseline_position ( Addressable grid,  int row,  int pos) {
        var mh$ = gtk_grid_set_row_baseline_position$MH();
        try {
            mh$.invokeExact(grid, row, pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_get_row_baseline_position$MH() {
        return RuntimeHelper.requireNonNull(constants$2123.gtk_grid_get_row_baseline_position$MH,"gtk_grid_get_row_baseline_position");
    }
    public static int gtk_grid_get_row_baseline_position ( Addressable grid,  int row) {
        var mh$ = gtk_grid_get_row_baseline_position$MH();
        try {
            return (int)mh$.invokeExact(grid, row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_set_baseline_row$MH() {
        return RuntimeHelper.requireNonNull(constants$2123.gtk_grid_set_baseline_row$MH,"gtk_grid_set_baseline_row");
    }
    public static void gtk_grid_set_baseline_row ( Addressable grid,  int row) {
        var mh$ = gtk_grid_set_baseline_row$MH();
        try {
            mh$.invokeExact(grid, row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_get_baseline_row$MH() {
        return RuntimeHelper.requireNonNull(constants$2123.gtk_grid_get_baseline_row$MH,"gtk_grid_get_baseline_row");
    }
    public static int gtk_grid_get_baseline_row ( Addressable grid) {
        var mh$ = gtk_grid_get_baseline_row$MH();
        try {
            return (int)mh$.invokeExact(grid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_query_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2123.gtk_grid_query_child$MH,"gtk_grid_query_child");
    }
    public static void gtk_grid_query_child ( Addressable grid,  Addressable child,  Addressable column,  Addressable row,  Addressable width,  Addressable height) {
        var mh$ = gtk_grid_query_child$MH();
        try {
            mh$.invokeExact(grid, child, column, row, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2123.gtk_grid_layout_get_type$MH,"gtk_grid_layout_get_type");
    }
    public static long gtk_grid_layout_get_type () {
        var mh$ = gtk_grid_layout_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkGridLayout_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGridLayout_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGridLayout_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGridLayout_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkGridLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$2123.glib_autoptr_clear_GtkGridLayout$MH,"glib_autoptr_clear_GtkGridLayout");
    }
    public static void glib_autoptr_clear_GtkGridLayout ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkGridLayout$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkGridLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$2124.glib_autoptr_cleanup_GtkGridLayout$MH,"glib_autoptr_cleanup_GtkGridLayout");
    }
    public static void glib_autoptr_cleanup_GtkGridLayout ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkGridLayout$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkGridLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$2124.glib_listautoptr_cleanup_GtkGridLayout$MH,"glib_listautoptr_cleanup_GtkGridLayout");
    }
    public static void glib_listautoptr_cleanup_GtkGridLayout ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkGridLayout$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkGridLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$2124.glib_slistautoptr_cleanup_GtkGridLayout$MH,"glib_slistautoptr_cleanup_GtkGridLayout");
    }
    public static void glib_slistautoptr_cleanup_GtkGridLayout ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkGridLayout$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkGridLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$2124.glib_queueautoptr_cleanup_GtkGridLayout$MH,"glib_queueautoptr_cleanup_GtkGridLayout");
    }
    public static void glib_queueautoptr_cleanup_GtkGridLayout ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkGridLayout$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkGridLayoutClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGridLayoutClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGridLayoutClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGridLayoutClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkGridLayoutClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2124.glib_autoptr_clear_GtkGridLayoutClass$MH,"glib_autoptr_clear_GtkGridLayoutClass");
    }
    public static void glib_autoptr_clear_GtkGridLayoutClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkGridLayoutClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkGridLayoutClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2124.glib_autoptr_cleanup_GtkGridLayoutClass$MH,"glib_autoptr_cleanup_GtkGridLayoutClass");
    }
    public static void glib_autoptr_cleanup_GtkGridLayoutClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkGridLayoutClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkGridLayoutClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2125.glib_listautoptr_cleanup_GtkGridLayoutClass$MH,"glib_listautoptr_cleanup_GtkGridLayoutClass");
    }
    public static void glib_listautoptr_cleanup_GtkGridLayoutClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkGridLayoutClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkGridLayoutClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2125.glib_slistautoptr_cleanup_GtkGridLayoutClass$MH,"glib_slistautoptr_cleanup_GtkGridLayoutClass");
    }
    public static void glib_slistautoptr_cleanup_GtkGridLayoutClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkGridLayoutClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkGridLayoutClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2125.glib_queueautoptr_cleanup_GtkGridLayoutClass$MH,"glib_queueautoptr_cleanup_GtkGridLayoutClass");
    }
    public static void glib_queueautoptr_cleanup_GtkGridLayoutClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkGridLayoutClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_GRID_LAYOUT$MH() {
        return RuntimeHelper.requireNonNull(constants$2125.GTK_GRID_LAYOUT$MH,"GTK_GRID_LAYOUT");
    }
    public static MemoryAddress GTK_GRID_LAYOUT ( Addressable ptr) {
        var mh$ = GTK_GRID_LAYOUT$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_GRID_LAYOUT$MH() {
        return RuntimeHelper.requireNonNull(constants$2125.GTK_IS_GRID_LAYOUT$MH,"GTK_IS_GRID_LAYOUT");
    }
    public static int GTK_IS_GRID_LAYOUT ( Addressable ptr) {
        var mh$ = GTK_IS_GRID_LAYOUT$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2125.gtk_grid_layout_new$MH,"gtk_grid_layout_new");
    }
    public static MemoryAddress gtk_grid_layout_new () {
        var mh$ = gtk_grid_layout_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_set_row_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$2126.gtk_grid_layout_set_row_homogeneous$MH,"gtk_grid_layout_set_row_homogeneous");
    }
    public static void gtk_grid_layout_set_row_homogeneous ( Addressable grid,  int homogeneous) {
        var mh$ = gtk_grid_layout_set_row_homogeneous$MH();
        try {
            mh$.invokeExact(grid, homogeneous);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_get_row_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$2126.gtk_grid_layout_get_row_homogeneous$MH,"gtk_grid_layout_get_row_homogeneous");
    }
    public static int gtk_grid_layout_get_row_homogeneous ( Addressable grid) {
        var mh$ = gtk_grid_layout_get_row_homogeneous$MH();
        try {
            return (int)mh$.invokeExact(grid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_set_row_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$2126.gtk_grid_layout_set_row_spacing$MH,"gtk_grid_layout_set_row_spacing");
    }
    public static void gtk_grid_layout_set_row_spacing ( Addressable grid,  int spacing) {
        var mh$ = gtk_grid_layout_set_row_spacing$MH();
        try {
            mh$.invokeExact(grid, spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_get_row_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$2126.gtk_grid_layout_get_row_spacing$MH,"gtk_grid_layout_get_row_spacing");
    }
    public static int gtk_grid_layout_get_row_spacing ( Addressable grid) {
        var mh$ = gtk_grid_layout_get_row_spacing$MH();
        try {
            return (int)mh$.invokeExact(grid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_set_column_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$2126.gtk_grid_layout_set_column_homogeneous$MH,"gtk_grid_layout_set_column_homogeneous");
    }
    public static void gtk_grid_layout_set_column_homogeneous ( Addressable grid,  int homogeneous) {
        var mh$ = gtk_grid_layout_set_column_homogeneous$MH();
        try {
            mh$.invokeExact(grid, homogeneous);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_get_column_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$2126.gtk_grid_layout_get_column_homogeneous$MH,"gtk_grid_layout_get_column_homogeneous");
    }
    public static int gtk_grid_layout_get_column_homogeneous ( Addressable grid) {
        var mh$ = gtk_grid_layout_get_column_homogeneous$MH();
        try {
            return (int)mh$.invokeExact(grid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_set_column_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$2127.gtk_grid_layout_set_column_spacing$MH,"gtk_grid_layout_set_column_spacing");
    }
    public static void gtk_grid_layout_set_column_spacing ( Addressable grid,  int spacing) {
        var mh$ = gtk_grid_layout_set_column_spacing$MH();
        try {
            mh$.invokeExact(grid, spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_get_column_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$2127.gtk_grid_layout_get_column_spacing$MH,"gtk_grid_layout_get_column_spacing");
    }
    public static int gtk_grid_layout_get_column_spacing ( Addressable grid) {
        var mh$ = gtk_grid_layout_get_column_spacing$MH();
        try {
            return (int)mh$.invokeExact(grid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_set_row_baseline_position$MH() {
        return RuntimeHelper.requireNonNull(constants$2127.gtk_grid_layout_set_row_baseline_position$MH,"gtk_grid_layout_set_row_baseline_position");
    }
    public static void gtk_grid_layout_set_row_baseline_position ( Addressable grid,  int row,  int pos) {
        var mh$ = gtk_grid_layout_set_row_baseline_position$MH();
        try {
            mh$.invokeExact(grid, row, pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_get_row_baseline_position$MH() {
        return RuntimeHelper.requireNonNull(constants$2127.gtk_grid_layout_get_row_baseline_position$MH,"gtk_grid_layout_get_row_baseline_position");
    }
    public static int gtk_grid_layout_get_row_baseline_position ( Addressable grid,  int row) {
        var mh$ = gtk_grid_layout_get_row_baseline_position$MH();
        try {
            return (int)mh$.invokeExact(grid, row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_set_baseline_row$MH() {
        return RuntimeHelper.requireNonNull(constants$2127.gtk_grid_layout_set_baseline_row$MH,"gtk_grid_layout_set_baseline_row");
    }
    public static void gtk_grid_layout_set_baseline_row ( Addressable grid,  int row) {
        var mh$ = gtk_grid_layout_set_baseline_row$MH();
        try {
            mh$.invokeExact(grid, row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_get_baseline_row$MH() {
        return RuntimeHelper.requireNonNull(constants$2127.gtk_grid_layout_get_baseline_row$MH,"gtk_grid_layout_get_baseline_row");
    }
    public static int gtk_grid_layout_get_baseline_row ( Addressable grid) {
        var mh$ = gtk_grid_layout_get_baseline_row$MH();
        try {
            return (int)mh$.invokeExact(grid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_child_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2128.gtk_grid_layout_child_get_type$MH,"gtk_grid_layout_child_get_type");
    }
    public static long gtk_grid_layout_child_get_type () {
        var mh$ = gtk_grid_layout_child_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkGridLayoutChild_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGridLayoutChild_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGridLayoutChild_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGridLayoutChild_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkGridLayoutChild$MH() {
        return RuntimeHelper.requireNonNull(constants$2128.glib_autoptr_clear_GtkGridLayoutChild$MH,"glib_autoptr_clear_GtkGridLayoutChild");
    }
    public static void glib_autoptr_clear_GtkGridLayoutChild ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkGridLayoutChild$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkGridLayoutChild$MH() {
        return RuntimeHelper.requireNonNull(constants$2128.glib_autoptr_cleanup_GtkGridLayoutChild$MH,"glib_autoptr_cleanup_GtkGridLayoutChild");
    }
    public static void glib_autoptr_cleanup_GtkGridLayoutChild ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkGridLayoutChild$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkGridLayoutChild$MH() {
        return RuntimeHelper.requireNonNull(constants$2128.glib_listautoptr_cleanup_GtkGridLayoutChild$MH,"glib_listautoptr_cleanup_GtkGridLayoutChild");
    }
    public static void glib_listautoptr_cleanup_GtkGridLayoutChild ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkGridLayoutChild$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkGridLayoutChild$MH() {
        return RuntimeHelper.requireNonNull(constants$2128.glib_slistautoptr_cleanup_GtkGridLayoutChild$MH,"glib_slistautoptr_cleanup_GtkGridLayoutChild");
    }
    public static void glib_slistautoptr_cleanup_GtkGridLayoutChild ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkGridLayoutChild$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkGridLayoutChild$MH() {
        return RuntimeHelper.requireNonNull(constants$2128.glib_queueautoptr_cleanup_GtkGridLayoutChild$MH,"glib_queueautoptr_cleanup_GtkGridLayoutChild");
    }
    public static void glib_queueautoptr_cleanup_GtkGridLayoutChild ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkGridLayoutChild$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkGridLayoutChildClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGridLayoutChildClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGridLayoutChildClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGridLayoutChildClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkGridLayoutChildClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2129.glib_autoptr_clear_GtkGridLayoutChildClass$MH,"glib_autoptr_clear_GtkGridLayoutChildClass");
    }
    public static void glib_autoptr_clear_GtkGridLayoutChildClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkGridLayoutChildClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkGridLayoutChildClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2129.glib_autoptr_cleanup_GtkGridLayoutChildClass$MH,"glib_autoptr_cleanup_GtkGridLayoutChildClass");
    }
    public static void glib_autoptr_cleanup_GtkGridLayoutChildClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkGridLayoutChildClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkGridLayoutChildClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2129.glib_listautoptr_cleanup_GtkGridLayoutChildClass$MH,"glib_listautoptr_cleanup_GtkGridLayoutChildClass");
    }
    public static void glib_listautoptr_cleanup_GtkGridLayoutChildClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkGridLayoutChildClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkGridLayoutChildClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2129.glib_slistautoptr_cleanup_GtkGridLayoutChildClass$MH,"glib_slistautoptr_cleanup_GtkGridLayoutChildClass");
    }
    public static void glib_slistautoptr_cleanup_GtkGridLayoutChildClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkGridLayoutChildClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkGridLayoutChildClass$MH() {
        return RuntimeHelper.requireNonNull(constants$2129.glib_queueautoptr_cleanup_GtkGridLayoutChildClass$MH,"glib_queueautoptr_cleanup_GtkGridLayoutChildClass");
    }
    public static void glib_queueautoptr_cleanup_GtkGridLayoutChildClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkGridLayoutChildClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_GRID_LAYOUT_CHILD$MH() {
        return RuntimeHelper.requireNonNull(constants$2129.GTK_GRID_LAYOUT_CHILD$MH,"GTK_GRID_LAYOUT_CHILD");
    }
    public static MemoryAddress GTK_GRID_LAYOUT_CHILD ( Addressable ptr) {
        var mh$ = GTK_GRID_LAYOUT_CHILD$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GTK_IS_GRID_LAYOUT_CHILD$MH() {
        return RuntimeHelper.requireNonNull(constants$2130.GTK_IS_GRID_LAYOUT_CHILD$MH,"GTK_IS_GRID_LAYOUT_CHILD");
    }
    public static int GTK_IS_GRID_LAYOUT_CHILD ( Addressable ptr) {
        var mh$ = GTK_IS_GRID_LAYOUT_CHILD$MH();
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_child_set_row$MH() {
        return RuntimeHelper.requireNonNull(constants$2130.gtk_grid_layout_child_set_row$MH,"gtk_grid_layout_child_set_row");
    }
    public static void gtk_grid_layout_child_set_row ( Addressable child,  int row) {
        var mh$ = gtk_grid_layout_child_set_row$MH();
        try {
            mh$.invokeExact(child, row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_child_get_row$MH() {
        return RuntimeHelper.requireNonNull(constants$2130.gtk_grid_layout_child_get_row$MH,"gtk_grid_layout_child_get_row");
    }
    public static int gtk_grid_layout_child_get_row ( Addressable child) {
        var mh$ = gtk_grid_layout_child_get_row$MH();
        try {
            return (int)mh$.invokeExact(child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_child_set_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2130.gtk_grid_layout_child_set_column$MH,"gtk_grid_layout_child_set_column");
    }
    public static void gtk_grid_layout_child_set_column ( Addressable child,  int column) {
        var mh$ = gtk_grid_layout_child_set_column$MH();
        try {
            mh$.invokeExact(child, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_child_get_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2130.gtk_grid_layout_child_get_column$MH,"gtk_grid_layout_child_get_column");
    }
    public static int gtk_grid_layout_child_get_column ( Addressable child) {
        var mh$ = gtk_grid_layout_child_get_column$MH();
        try {
            return (int)mh$.invokeExact(child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_child_set_column_span$MH() {
        return RuntimeHelper.requireNonNull(constants$2130.gtk_grid_layout_child_set_column_span$MH,"gtk_grid_layout_child_set_column_span");
    }
    public static void gtk_grid_layout_child_set_column_span ( Addressable child,  int span) {
        var mh$ = gtk_grid_layout_child_set_column_span$MH();
        try {
            mh$.invokeExact(child, span);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_child_get_column_span$MH() {
        return RuntimeHelper.requireNonNull(constants$2131.gtk_grid_layout_child_get_column_span$MH,"gtk_grid_layout_child_get_column_span");
    }
    public static int gtk_grid_layout_child_get_column_span ( Addressable child) {
        var mh$ = gtk_grid_layout_child_get_column_span$MH();
        try {
            return (int)mh$.invokeExact(child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_child_set_row_span$MH() {
        return RuntimeHelper.requireNonNull(constants$2131.gtk_grid_layout_child_set_row_span$MH,"gtk_grid_layout_child_set_row_span");
    }
    public static void gtk_grid_layout_child_set_row_span ( Addressable child,  int span) {
        var mh$ = gtk_grid_layout_child_set_row_span$MH();
        try {
            mh$.invokeExact(child, span);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_layout_child_get_row_span$MH() {
        return RuntimeHelper.requireNonNull(constants$2131.gtk_grid_layout_child_get_row_span$MH,"gtk_grid_layout_child_get_row_span");
    }
    public static int gtk_grid_layout_child_get_row_span ( Addressable child) {
        var mh$ = gtk_grid_layout_child_get_row_span$MH();
        try {
            return (int)mh$.invokeExact(child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_base_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2131.gtk_list_base_get_type$MH,"gtk_list_base_get_type");
    }
    public static long gtk_list_base_get_type () {
        var mh$ = gtk_list_base_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_view_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2131.gtk_grid_view_get_type$MH,"gtk_grid_view_get_type");
    }
    public static long gtk_grid_view_get_type () {
        var mh$ = gtk_grid_view_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_view_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2131.gtk_grid_view_new$MH,"gtk_grid_view_new");
    }
    public static MemoryAddress gtk_grid_view_new ( Addressable model,  Addressable factory) {
        var mh$ = gtk_grid_view_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(model, factory);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_view_get_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2132.gtk_grid_view_get_model$MH,"gtk_grid_view_get_model");
    }
    public static MemoryAddress gtk_grid_view_get_model ( Addressable self) {
        var mh$ = gtk_grid_view_get_model$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_view_set_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2132.gtk_grid_view_set_model$MH,"gtk_grid_view_set_model");
    }
    public static void gtk_grid_view_set_model ( Addressable self,  Addressable model) {
        var mh$ = gtk_grid_view_set_model$MH();
        try {
            mh$.invokeExact(self, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_view_set_factory$MH() {
        return RuntimeHelper.requireNonNull(constants$2132.gtk_grid_view_set_factory$MH,"gtk_grid_view_set_factory");
    }
    public static void gtk_grid_view_set_factory ( Addressable self,  Addressable factory) {
        var mh$ = gtk_grid_view_set_factory$MH();
        try {
            mh$.invokeExact(self, factory);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_view_get_factory$MH() {
        return RuntimeHelper.requireNonNull(constants$2132.gtk_grid_view_get_factory$MH,"gtk_grid_view_get_factory");
    }
    public static MemoryAddress gtk_grid_view_get_factory ( Addressable self) {
        var mh$ = gtk_grid_view_get_factory$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_view_get_min_columns$MH() {
        return RuntimeHelper.requireNonNull(constants$2132.gtk_grid_view_get_min_columns$MH,"gtk_grid_view_get_min_columns");
    }
    public static int gtk_grid_view_get_min_columns ( Addressable self) {
        var mh$ = gtk_grid_view_get_min_columns$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_view_set_min_columns$MH() {
        return RuntimeHelper.requireNonNull(constants$2132.gtk_grid_view_set_min_columns$MH,"gtk_grid_view_set_min_columns");
    }
    public static void gtk_grid_view_set_min_columns ( Addressable self,  int min_columns) {
        var mh$ = gtk_grid_view_set_min_columns$MH();
        try {
            mh$.invokeExact(self, min_columns);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_view_get_max_columns$MH() {
        return RuntimeHelper.requireNonNull(constants$2133.gtk_grid_view_get_max_columns$MH,"gtk_grid_view_get_max_columns");
    }
    public static int gtk_grid_view_get_max_columns ( Addressable self) {
        var mh$ = gtk_grid_view_get_max_columns$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_view_set_max_columns$MH() {
        return RuntimeHelper.requireNonNull(constants$2133.gtk_grid_view_set_max_columns$MH,"gtk_grid_view_set_max_columns");
    }
    public static void gtk_grid_view_set_max_columns ( Addressable self,  int max_columns) {
        var mh$ = gtk_grid_view_set_max_columns$MH();
        try {
            mh$.invokeExact(self, max_columns);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_view_set_enable_rubberband$MH() {
        return RuntimeHelper.requireNonNull(constants$2133.gtk_grid_view_set_enable_rubberband$MH,"gtk_grid_view_set_enable_rubberband");
    }
    public static void gtk_grid_view_set_enable_rubberband ( Addressable self,  int enable_rubberband) {
        var mh$ = gtk_grid_view_set_enable_rubberband$MH();
        try {
            mh$.invokeExact(self, enable_rubberband);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_view_get_enable_rubberband$MH() {
        return RuntimeHelper.requireNonNull(constants$2133.gtk_grid_view_get_enable_rubberband$MH,"gtk_grid_view_get_enable_rubberband");
    }
    public static int gtk_grid_view_get_enable_rubberband ( Addressable self) {
        var mh$ = gtk_grid_view_get_enable_rubberband$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_view_set_single_click_activate$MH() {
        return RuntimeHelper.requireNonNull(constants$2133.gtk_grid_view_set_single_click_activate$MH,"gtk_grid_view_set_single_click_activate");
    }
    public static void gtk_grid_view_set_single_click_activate ( Addressable self,  int single_click_activate) {
        var mh$ = gtk_grid_view_set_single_click_activate$MH();
        try {
            mh$.invokeExact(self, single_click_activate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_view_get_single_click_activate$MH() {
        return RuntimeHelper.requireNonNull(constants$2133.gtk_grid_view_get_single_click_activate$MH,"gtk_grid_view_get_single_click_activate");
    }
    public static int gtk_grid_view_get_single_click_activate ( Addressable self) {
        var mh$ = gtk_grid_view_get_single_click_activate$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2134.gtk_header_bar_get_type$MH,"gtk_header_bar_get_type");
    }
    public static long gtk_header_bar_get_type () {
        var mh$ = gtk_header_bar_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2134.gtk_header_bar_new$MH,"gtk_header_bar_new");
    }
    public static MemoryAddress gtk_header_bar_new () {
        var mh$ = gtk_header_bar_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_set_title_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2134.gtk_header_bar_set_title_widget$MH,"gtk_header_bar_set_title_widget");
    }
    public static void gtk_header_bar_set_title_widget ( Addressable bar,  Addressable title_widget) {
        var mh$ = gtk_header_bar_set_title_widget$MH();
        try {
            mh$.invokeExact(bar, title_widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_get_title_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2134.gtk_header_bar_get_title_widget$MH,"gtk_header_bar_get_title_widget");
    }
    public static MemoryAddress gtk_header_bar_get_title_widget ( Addressable bar) {
        var mh$ = gtk_header_bar_get_title_widget$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(bar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_pack_start$MH() {
        return RuntimeHelper.requireNonNull(constants$2134.gtk_header_bar_pack_start$MH,"gtk_header_bar_pack_start");
    }
    public static void gtk_header_bar_pack_start ( Addressable bar,  Addressable child) {
        var mh$ = gtk_header_bar_pack_start$MH();
        try {
            mh$.invokeExact(bar, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_pack_end$MH() {
        return RuntimeHelper.requireNonNull(constants$2134.gtk_header_bar_pack_end$MH,"gtk_header_bar_pack_end");
    }
    public static void gtk_header_bar_pack_end ( Addressable bar,  Addressable child) {
        var mh$ = gtk_header_bar_pack_end$MH();
        try {
            mh$.invokeExact(bar, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$2135.gtk_header_bar_remove$MH,"gtk_header_bar_remove");
    }
    public static void gtk_header_bar_remove ( Addressable bar,  Addressable child) {
        var mh$ = gtk_header_bar_remove$MH();
        try {
            mh$.invokeExact(bar, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_get_show_title_buttons$MH() {
        return RuntimeHelper.requireNonNull(constants$2135.gtk_header_bar_get_show_title_buttons$MH,"gtk_header_bar_get_show_title_buttons");
    }
    public static int gtk_header_bar_get_show_title_buttons ( Addressable bar) {
        var mh$ = gtk_header_bar_get_show_title_buttons$MH();
        try {
            return (int)mh$.invokeExact(bar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_set_show_title_buttons$MH() {
        return RuntimeHelper.requireNonNull(constants$2135.gtk_header_bar_set_show_title_buttons$MH,"gtk_header_bar_set_show_title_buttons");
    }
    public static void gtk_header_bar_set_show_title_buttons ( Addressable bar,  int setting) {
        var mh$ = gtk_header_bar_set_show_title_buttons$MH();
        try {
            mh$.invokeExact(bar, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_set_decoration_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$2135.gtk_header_bar_set_decoration_layout$MH,"gtk_header_bar_set_decoration_layout");
    }
    public static void gtk_header_bar_set_decoration_layout ( Addressable bar,  Addressable layout) {
        var mh$ = gtk_header_bar_set_decoration_layout$MH();
        try {
            mh$.invokeExact(bar, layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_get_decoration_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$2135.gtk_header_bar_get_decoration_layout$MH,"gtk_header_bar_get_decoration_layout");
    }
    public static MemoryAddress gtk_header_bar_get_decoration_layout ( Addressable bar) {
        var mh$ = gtk_header_bar_get_decoration_layout$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(bar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GTK_ICON_LOOKUP_FORCE_REGULAR() {
        return (int)1L;
    }
    public static int GTK_ICON_LOOKUP_FORCE_SYMBOLIC() {
        return (int)2L;
    }
    public static int GTK_ICON_LOOKUP_PRELOAD() {
        return (int)4L;
    }
    public static int GTK_ICON_THEME_NOT_FOUND() {
        return (int)0L;
    }
    public static int GTK_ICON_THEME_FAILED() {
        return (int)1L;
    }
    public static MethodHandle gtk_icon_theme_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$2135.gtk_icon_theme_error_quark$MH,"gtk_icon_theme_error_quark");
    }
    public static int gtk_icon_theme_error_quark () {
        var mh$ = gtk_icon_theme_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2136.gtk_icon_theme_get_type$MH,"gtk_icon_theme_get_type");
    }
    public static long gtk_icon_theme_get_type () {
        var mh$ = gtk_icon_theme_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2136.gtk_icon_theme_new$MH,"gtk_icon_theme_new");
    }
    public static MemoryAddress gtk_icon_theme_new () {
        var mh$ = gtk_icon_theme_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_get_for_display$MH() {
        return RuntimeHelper.requireNonNull(constants$2136.gtk_icon_theme_get_for_display$MH,"gtk_icon_theme_get_for_display");
    }
    public static MemoryAddress gtk_icon_theme_get_for_display ( Addressable display) {
        var mh$ = gtk_icon_theme_get_for_display$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_get_display$MH() {
        return RuntimeHelper.requireNonNull(constants$2136.gtk_icon_theme_get_display$MH,"gtk_icon_theme_get_display");
    }
    public static MemoryAddress gtk_icon_theme_get_display ( Addressable self) {
        var mh$ = gtk_icon_theme_get_display$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_set_search_path$MH() {
        return RuntimeHelper.requireNonNull(constants$2136.gtk_icon_theme_set_search_path$MH,"gtk_icon_theme_set_search_path");
    }
    public static void gtk_icon_theme_set_search_path ( Addressable self,  Addressable path) {
        var mh$ = gtk_icon_theme_set_search_path$MH();
        try {
            mh$.invokeExact(self, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_get_search_path$MH() {
        return RuntimeHelper.requireNonNull(constants$2136.gtk_icon_theme_get_search_path$MH,"gtk_icon_theme_get_search_path");
    }
    public static MemoryAddress gtk_icon_theme_get_search_path ( Addressable self) {
        var mh$ = gtk_icon_theme_get_search_path$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_add_search_path$MH() {
        return RuntimeHelper.requireNonNull(constants$2137.gtk_icon_theme_add_search_path$MH,"gtk_icon_theme_add_search_path");
    }
    public static void gtk_icon_theme_add_search_path ( Addressable self,  Addressable path) {
        var mh$ = gtk_icon_theme_add_search_path$MH();
        try {
            mh$.invokeExact(self, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_set_resource_path$MH() {
        return RuntimeHelper.requireNonNull(constants$2137.gtk_icon_theme_set_resource_path$MH,"gtk_icon_theme_set_resource_path");
    }
    public static void gtk_icon_theme_set_resource_path ( Addressable self,  Addressable path) {
        var mh$ = gtk_icon_theme_set_resource_path$MH();
        try {
            mh$.invokeExact(self, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_get_resource_path$MH() {
        return RuntimeHelper.requireNonNull(constants$2137.gtk_icon_theme_get_resource_path$MH,"gtk_icon_theme_get_resource_path");
    }
    public static MemoryAddress gtk_icon_theme_get_resource_path ( Addressable self) {
        var mh$ = gtk_icon_theme_get_resource_path$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_add_resource_path$MH() {
        return RuntimeHelper.requireNonNull(constants$2137.gtk_icon_theme_add_resource_path$MH,"gtk_icon_theme_add_resource_path");
    }
    public static void gtk_icon_theme_add_resource_path ( Addressable self,  Addressable path) {
        var mh$ = gtk_icon_theme_add_resource_path$MH();
        try {
            mh$.invokeExact(self, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_set_theme_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2137.gtk_icon_theme_set_theme_name$MH,"gtk_icon_theme_set_theme_name");
    }
    public static void gtk_icon_theme_set_theme_name ( Addressable self,  Addressable theme_name) {
        var mh$ = gtk_icon_theme_set_theme_name$MH();
        try {
            mh$.invokeExact(self, theme_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_get_theme_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2137.gtk_icon_theme_get_theme_name$MH,"gtk_icon_theme_get_theme_name");
    }
    public static MemoryAddress gtk_icon_theme_get_theme_name ( Addressable self) {
        var mh$ = gtk_icon_theme_get_theme_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_has_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$2138.gtk_icon_theme_has_icon$MH,"gtk_icon_theme_has_icon");
    }
    public static int gtk_icon_theme_has_icon ( Addressable self,  Addressable icon_name) {
        var mh$ = gtk_icon_theme_has_icon$MH();
        try {
            return (int)mh$.invokeExact(self, icon_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_has_gicon$MH() {
        return RuntimeHelper.requireNonNull(constants$2138.gtk_icon_theme_has_gicon$MH,"gtk_icon_theme_has_gicon");
    }
    public static int gtk_icon_theme_has_gicon ( Addressable self,  Addressable gicon) {
        var mh$ = gtk_icon_theme_has_gicon$MH();
        try {
            return (int)mh$.invokeExact(self, gicon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_get_icon_sizes$MH() {
        return RuntimeHelper.requireNonNull(constants$2138.gtk_icon_theme_get_icon_sizes$MH,"gtk_icon_theme_get_icon_sizes");
    }
    public static MemoryAddress gtk_icon_theme_get_icon_sizes ( Addressable self,  Addressable icon_name) {
        var mh$ = gtk_icon_theme_get_icon_sizes$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self, icon_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_lookup_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$2138.gtk_icon_theme_lookup_icon$MH,"gtk_icon_theme_lookup_icon");
    }
    public static MemoryAddress gtk_icon_theme_lookup_icon ( Addressable self,  Addressable icon_name,  Addressable fallbacks,  int size,  int scale,  int direction,  int flags) {
        var mh$ = gtk_icon_theme_lookup_icon$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self, icon_name, fallbacks, size, scale, direction, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_lookup_by_gicon$MH() {
        return RuntimeHelper.requireNonNull(constants$2138.gtk_icon_theme_lookup_by_gicon$MH,"gtk_icon_theme_lookup_by_gicon");
    }
    public static MemoryAddress gtk_icon_theme_lookup_by_gicon ( Addressable self,  Addressable icon,  int size,  int scale,  int direction,  int flags) {
        var mh$ = gtk_icon_theme_lookup_by_gicon$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self, icon, size, scale, direction, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_paintable_new_for_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2138.gtk_icon_paintable_new_for_file$MH,"gtk_icon_paintable_new_for_file");
    }
    public static MemoryAddress gtk_icon_paintable_new_for_file ( Addressable file,  int size,  int scale) {
        var mh$ = gtk_icon_paintable_new_for_file$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(file, size, scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_get_icon_names$MH() {
        return RuntimeHelper.requireNonNull(constants$2139.gtk_icon_theme_get_icon_names$MH,"gtk_icon_theme_get_icon_names");
    }
    public static MemoryAddress gtk_icon_theme_get_icon_names ( Addressable self) {
        var mh$ = gtk_icon_theme_get_icon_names$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_paintable_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2139.gtk_icon_paintable_get_type$MH,"gtk_icon_paintable_get_type");
    }
    public static long gtk_icon_paintable_get_type () {
        var mh$ = gtk_icon_paintable_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_paintable_get_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2139.gtk_icon_paintable_get_file$MH,"gtk_icon_paintable_get_file");
    }
    public static MemoryAddress gtk_icon_paintable_get_file ( Addressable self) {
        var mh$ = gtk_icon_paintable_get_file$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_paintable_get_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2139.gtk_icon_paintable_get_icon_name$MH,"gtk_icon_paintable_get_icon_name");
    }
    public static MemoryAddress gtk_icon_paintable_get_icon_name ( Addressable self) {
        var mh$ = gtk_icon_paintable_get_icon_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_paintable_is_symbolic$MH() {
        return RuntimeHelper.requireNonNull(constants$2139.gtk_icon_paintable_is_symbolic$MH,"gtk_icon_paintable_is_symbolic");
    }
    public static int gtk_icon_paintable_is_symbolic ( Addressable self) {
        var mh$ = gtk_icon_paintable_is_symbolic$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tooltip_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2139.gtk_tooltip_get_type$MH,"gtk_tooltip_get_type");
    }
    public static long gtk_tooltip_get_type () {
        var mh$ = gtk_tooltip_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tooltip_set_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$2140.gtk_tooltip_set_markup$MH,"gtk_tooltip_set_markup");
    }
    public static void gtk_tooltip_set_markup ( Addressable tooltip,  Addressable markup) {
        var mh$ = gtk_tooltip_set_markup$MH();
        try {
            mh$.invokeExact(tooltip, markup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tooltip_set_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2140.gtk_tooltip_set_text$MH,"gtk_tooltip_set_text");
    }
    public static void gtk_tooltip_set_text ( Addressable tooltip,  Addressable text) {
        var mh$ = gtk_tooltip_set_text$MH();
        try {
            mh$.invokeExact(tooltip, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tooltip_set_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$2140.gtk_tooltip_set_icon$MH,"gtk_tooltip_set_icon");
    }
    public static void gtk_tooltip_set_icon ( Addressable tooltip,  Addressable paintable) {
        var mh$ = gtk_tooltip_set_icon$MH();
        try {
            mh$.invokeExact(tooltip, paintable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tooltip_set_icon_from_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2140.gtk_tooltip_set_icon_from_icon_name$MH,"gtk_tooltip_set_icon_from_icon_name");
    }
    public static void gtk_tooltip_set_icon_from_icon_name ( Addressable tooltip,  Addressable icon_name) {
        var mh$ = gtk_tooltip_set_icon_from_icon_name$MH();
        try {
            mh$.invokeExact(tooltip, icon_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tooltip_set_icon_from_gicon$MH() {
        return RuntimeHelper.requireNonNull(constants$2140.gtk_tooltip_set_icon_from_gicon$MH,"gtk_tooltip_set_icon_from_gicon");
    }
    public static void gtk_tooltip_set_icon_from_gicon ( Addressable tooltip,  Addressable gicon) {
        var mh$ = gtk_tooltip_set_icon_from_gicon$MH();
        try {
            mh$.invokeExact(tooltip, gicon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tooltip_set_custom$MH() {
        return RuntimeHelper.requireNonNull(constants$2140.gtk_tooltip_set_custom$MH,"gtk_tooltip_set_custom");
    }
    public static void gtk_tooltip_set_custom ( Addressable tooltip,  Addressable custom_widget) {
        var mh$ = gtk_tooltip_set_custom$MH();
        try {
            mh$.invokeExact(tooltip, custom_widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tooltip_set_tip_area$MH() {
        return RuntimeHelper.requireNonNull(constants$2141.gtk_tooltip_set_tip_area$MH,"gtk_tooltip_set_tip_area");
    }
    public static void gtk_tooltip_set_tip_area ( Addressable tooltip,  Addressable rect) {
        var mh$ = gtk_tooltip_set_tip_area$MH();
        try {
            mh$.invokeExact(tooltip, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GTK_ICON_VIEW_NO_DROP() {
        return (int)0L;
    }
    public static int GTK_ICON_VIEW_DROP_INTO() {
        return (int)1L;
    }
    public static int GTK_ICON_VIEW_DROP_LEFT() {
        return (int)2L;
    }
    public static int GTK_ICON_VIEW_DROP_RIGHT() {
        return (int)3L;
    }
    public static int GTK_ICON_VIEW_DROP_ABOVE() {
        return (int)4L;
    }
    public static int GTK_ICON_VIEW_DROP_BELOW() {
        return (int)5L;
    }
    public static MethodHandle gtk_icon_view_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2141.gtk_icon_view_get_type$MH,"gtk_icon_view_get_type");
    }
    public static long gtk_icon_view_get_type () {
        var mh$ = gtk_icon_view_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2141.gtk_icon_view_new$MH,"gtk_icon_view_new");
    }
    public static MemoryAddress gtk_icon_view_new () {
        var mh$ = gtk_icon_view_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_new_with_area$MH() {
        return RuntimeHelper.requireNonNull(constants$2141.gtk_icon_view_new_with_area$MH,"gtk_icon_view_new_with_area");
    }
    public static MemoryAddress gtk_icon_view_new_with_area ( Addressable area) {
        var mh$ = gtk_icon_view_new_with_area$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_new_with_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2142.gtk_icon_view_new_with_model$MH,"gtk_icon_view_new_with_model");
    }
    public static MemoryAddress gtk_icon_view_new_with_model ( Addressable model) {
        var mh$ = gtk_icon_view_new_with_model$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2142.gtk_icon_view_set_model$MH,"gtk_icon_view_set_model");
    }
    public static void gtk_icon_view_set_model ( Addressable icon_view,  Addressable model) {
        var mh$ = gtk_icon_view_set_model$MH();
        try {
            mh$.invokeExact(icon_view, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2142.gtk_icon_view_get_model$MH,"gtk_icon_view_get_model");
    }
    public static MemoryAddress gtk_icon_view_get_model ( Addressable icon_view) {
        var mh$ = gtk_icon_view_get_model$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_text_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2142.gtk_icon_view_set_text_column$MH,"gtk_icon_view_set_text_column");
    }
    public static void gtk_icon_view_set_text_column ( Addressable icon_view,  int column) {
        var mh$ = gtk_icon_view_set_text_column$MH();
        try {
            mh$.invokeExact(icon_view, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_text_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2142.gtk_icon_view_get_text_column$MH,"gtk_icon_view_get_text_column");
    }
    public static int gtk_icon_view_get_text_column ( Addressable icon_view) {
        var mh$ = gtk_icon_view_get_text_column$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_markup_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2142.gtk_icon_view_set_markup_column$MH,"gtk_icon_view_set_markup_column");
    }
    public static void gtk_icon_view_set_markup_column ( Addressable icon_view,  int column) {
        var mh$ = gtk_icon_view_set_markup_column$MH();
        try {
            mh$.invokeExact(icon_view, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_markup_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2143.gtk_icon_view_get_markup_column$MH,"gtk_icon_view_get_markup_column");
    }
    public static int gtk_icon_view_get_markup_column ( Addressable icon_view) {
        var mh$ = gtk_icon_view_get_markup_column$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_pixbuf_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2143.gtk_icon_view_set_pixbuf_column$MH,"gtk_icon_view_set_pixbuf_column");
    }
    public static void gtk_icon_view_set_pixbuf_column ( Addressable icon_view,  int column) {
        var mh$ = gtk_icon_view_set_pixbuf_column$MH();
        try {
            mh$.invokeExact(icon_view, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_pixbuf_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2143.gtk_icon_view_get_pixbuf_column$MH,"gtk_icon_view_get_pixbuf_column");
    }
    public static int gtk_icon_view_get_pixbuf_column ( Addressable icon_view) {
        var mh$ = gtk_icon_view_get_pixbuf_column$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_item_orientation$MH() {
        return RuntimeHelper.requireNonNull(constants$2143.gtk_icon_view_set_item_orientation$MH,"gtk_icon_view_set_item_orientation");
    }
    public static void gtk_icon_view_set_item_orientation ( Addressable icon_view,  int orientation) {
        var mh$ = gtk_icon_view_set_item_orientation$MH();
        try {
            mh$.invokeExact(icon_view, orientation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_item_orientation$MH() {
        return RuntimeHelper.requireNonNull(constants$2143.gtk_icon_view_get_item_orientation$MH,"gtk_icon_view_get_item_orientation");
    }
    public static int gtk_icon_view_get_item_orientation ( Addressable icon_view) {
        var mh$ = gtk_icon_view_get_item_orientation$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_columns$MH() {
        return RuntimeHelper.requireNonNull(constants$2143.gtk_icon_view_set_columns$MH,"gtk_icon_view_set_columns");
    }
    public static void gtk_icon_view_set_columns ( Addressable icon_view,  int columns) {
        var mh$ = gtk_icon_view_set_columns$MH();
        try {
            mh$.invokeExact(icon_view, columns);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_columns$MH() {
        return RuntimeHelper.requireNonNull(constants$2144.gtk_icon_view_get_columns$MH,"gtk_icon_view_get_columns");
    }
    public static int gtk_icon_view_get_columns ( Addressable icon_view) {
        var mh$ = gtk_icon_view_get_columns$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_item_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2144.gtk_icon_view_set_item_width$MH,"gtk_icon_view_set_item_width");
    }
    public static void gtk_icon_view_set_item_width ( Addressable icon_view,  int item_width) {
        var mh$ = gtk_icon_view_set_item_width$MH();
        try {
            mh$.invokeExact(icon_view, item_width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_item_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2144.gtk_icon_view_get_item_width$MH,"gtk_icon_view_get_item_width");
    }
    public static int gtk_icon_view_get_item_width ( Addressable icon_view) {
        var mh$ = gtk_icon_view_get_item_width$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$2144.gtk_icon_view_set_spacing$MH,"gtk_icon_view_set_spacing");
    }
    public static void gtk_icon_view_set_spacing ( Addressable icon_view,  int spacing) {
        var mh$ = gtk_icon_view_set_spacing$MH();
        try {
            mh$.invokeExact(icon_view, spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$2144.gtk_icon_view_get_spacing$MH,"gtk_icon_view_get_spacing");
    }
    public static int gtk_icon_view_get_spacing ( Addressable icon_view) {
        var mh$ = gtk_icon_view_get_spacing$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_row_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$2144.gtk_icon_view_set_row_spacing$MH,"gtk_icon_view_set_row_spacing");
    }
    public static void gtk_icon_view_set_row_spacing ( Addressable icon_view,  int row_spacing) {
        var mh$ = gtk_icon_view_set_row_spacing$MH();
        try {
            mh$.invokeExact(icon_view, row_spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_row_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$2145.gtk_icon_view_get_row_spacing$MH,"gtk_icon_view_get_row_spacing");
    }
    public static int gtk_icon_view_get_row_spacing ( Addressable icon_view) {
        var mh$ = gtk_icon_view_get_row_spacing$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_column_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$2145.gtk_icon_view_set_column_spacing$MH,"gtk_icon_view_set_column_spacing");
    }
    public static void gtk_icon_view_set_column_spacing ( Addressable icon_view,  int column_spacing) {
        var mh$ = gtk_icon_view_set_column_spacing$MH();
        try {
            mh$.invokeExact(icon_view, column_spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_column_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$2145.gtk_icon_view_get_column_spacing$MH,"gtk_icon_view_get_column_spacing");
    }
    public static int gtk_icon_view_get_column_spacing ( Addressable icon_view) {
        var mh$ = gtk_icon_view_get_column_spacing$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$2145.gtk_icon_view_set_margin$MH,"gtk_icon_view_set_margin");
    }
    public static void gtk_icon_view_set_margin ( Addressable icon_view,  int margin) {
        var mh$ = gtk_icon_view_set_margin$MH();
        try {
            mh$.invokeExact(icon_view, margin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$2145.gtk_icon_view_get_margin$MH,"gtk_icon_view_get_margin");
    }
    public static int gtk_icon_view_get_margin ( Addressable icon_view) {
        var mh$ = gtk_icon_view_get_margin$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_item_padding$MH() {
        return RuntimeHelper.requireNonNull(constants$2145.gtk_icon_view_set_item_padding$MH,"gtk_icon_view_set_item_padding");
    }
    public static void gtk_icon_view_set_item_padding ( Addressable icon_view,  int item_padding) {
        var mh$ = gtk_icon_view_set_item_padding$MH();
        try {
            mh$.invokeExact(icon_view, item_padding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_item_padding$MH() {
        return RuntimeHelper.requireNonNull(constants$2146.gtk_icon_view_get_item_padding$MH,"gtk_icon_view_get_item_padding");
    }
    public static int gtk_icon_view_get_item_padding ( Addressable icon_view) {
        var mh$ = gtk_icon_view_get_item_padding$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_path_at_pos$MH() {
        return RuntimeHelper.requireNonNull(constants$2146.gtk_icon_view_get_path_at_pos$MH,"gtk_icon_view_get_path_at_pos");
    }
    public static MemoryAddress gtk_icon_view_get_path_at_pos ( Addressable icon_view,  int x,  int y) {
        var mh$ = gtk_icon_view_get_path_at_pos$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(icon_view, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_item_at_pos$MH() {
        return RuntimeHelper.requireNonNull(constants$2146.gtk_icon_view_get_item_at_pos$MH,"gtk_icon_view_get_item_at_pos");
    }
    public static int gtk_icon_view_get_item_at_pos ( Addressable icon_view,  int x,  int y,  Addressable path,  Addressable cell) {
        var mh$ = gtk_icon_view_get_item_at_pos$MH();
        try {
            return (int)mh$.invokeExact(icon_view, x, y, path, cell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_visible_range$MH() {
        return RuntimeHelper.requireNonNull(constants$2146.gtk_icon_view_get_visible_range$MH,"gtk_icon_view_get_visible_range");
    }
    public static int gtk_icon_view_get_visible_range ( Addressable icon_view,  Addressable start_path,  Addressable end_path) {
        var mh$ = gtk_icon_view_get_visible_range$MH();
        try {
            return (int)mh$.invokeExact(icon_view, start_path, end_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_activate_on_single_click$MH() {
        return RuntimeHelper.requireNonNull(constants$2146.gtk_icon_view_set_activate_on_single_click$MH,"gtk_icon_view_set_activate_on_single_click");
    }
    public static void gtk_icon_view_set_activate_on_single_click ( Addressable icon_view,  int single) {
        var mh$ = gtk_icon_view_set_activate_on_single_click$MH();
        try {
            mh$.invokeExact(icon_view, single);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_activate_on_single_click$MH() {
        return RuntimeHelper.requireNonNull(constants$2146.gtk_icon_view_get_activate_on_single_click$MH,"gtk_icon_view_get_activate_on_single_click");
    }
    public static int gtk_icon_view_get_activate_on_single_click ( Addressable icon_view) {
        var mh$ = gtk_icon_view_get_activate_on_single_click$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_selected_foreach$MH() {
        return RuntimeHelper.requireNonNull(constants$2147.gtk_icon_view_selected_foreach$MH,"gtk_icon_view_selected_foreach");
    }
    public static void gtk_icon_view_selected_foreach ( Addressable icon_view,  Addressable func,  Addressable data) {
        var mh$ = gtk_icon_view_selected_foreach$MH();
        try {
            mh$.invokeExact(icon_view, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_selection_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2147.gtk_icon_view_set_selection_mode$MH,"gtk_icon_view_set_selection_mode");
    }
    public static void gtk_icon_view_set_selection_mode ( Addressable icon_view,  int mode) {
        var mh$ = gtk_icon_view_set_selection_mode$MH();
        try {
            mh$.invokeExact(icon_view, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_selection_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2147.gtk_icon_view_get_selection_mode$MH,"gtk_icon_view_get_selection_mode");
    }
    public static int gtk_icon_view_get_selection_mode ( Addressable icon_view) {
        var mh$ = gtk_icon_view_get_selection_mode$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_select_path$MH() {
        return RuntimeHelper.requireNonNull(constants$2147.gtk_icon_view_select_path$MH,"gtk_icon_view_select_path");
    }
    public static void gtk_icon_view_select_path ( Addressable icon_view,  Addressable path) {
        var mh$ = gtk_icon_view_select_path$MH();
        try {
            mh$.invokeExact(icon_view, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_unselect_path$MH() {
        return RuntimeHelper.requireNonNull(constants$2147.gtk_icon_view_unselect_path$MH,"gtk_icon_view_unselect_path");
    }
    public static void gtk_icon_view_unselect_path ( Addressable icon_view,  Addressable path) {
        var mh$ = gtk_icon_view_unselect_path$MH();
        try {
            mh$.invokeExact(icon_view, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_path_is_selected$MH() {
        return RuntimeHelper.requireNonNull(constants$2147.gtk_icon_view_path_is_selected$MH,"gtk_icon_view_path_is_selected");
    }
    public static int gtk_icon_view_path_is_selected ( Addressable icon_view,  Addressable path) {
        var mh$ = gtk_icon_view_path_is_selected$MH();
        try {
            return (int)mh$.invokeExact(icon_view, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_item_row$MH() {
        return RuntimeHelper.requireNonNull(constants$2148.gtk_icon_view_get_item_row$MH,"gtk_icon_view_get_item_row");
    }
    public static int gtk_icon_view_get_item_row ( Addressable icon_view,  Addressable path) {
        var mh$ = gtk_icon_view_get_item_row$MH();
        try {
            return (int)mh$.invokeExact(icon_view, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_item_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2148.gtk_icon_view_get_item_column$MH,"gtk_icon_view_get_item_column");
    }
    public static int gtk_icon_view_get_item_column ( Addressable icon_view,  Addressable path) {
        var mh$ = gtk_icon_view_get_item_column$MH();
        try {
            return (int)mh$.invokeExact(icon_view, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_selected_items$MH() {
        return RuntimeHelper.requireNonNull(constants$2148.gtk_icon_view_get_selected_items$MH,"gtk_icon_view_get_selected_items");
    }
    public static MemoryAddress gtk_icon_view_get_selected_items ( Addressable icon_view) {
        var mh$ = gtk_icon_view_get_selected_items$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_select_all$MH() {
        return RuntimeHelper.requireNonNull(constants$2148.gtk_icon_view_select_all$MH,"gtk_icon_view_select_all");
    }
    public static void gtk_icon_view_select_all ( Addressable icon_view) {
        var mh$ = gtk_icon_view_select_all$MH();
        try {
            mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_unselect_all$MH() {
        return RuntimeHelper.requireNonNull(constants$2148.gtk_icon_view_unselect_all$MH,"gtk_icon_view_unselect_all");
    }
    public static void gtk_icon_view_unselect_all ( Addressable icon_view) {
        var mh$ = gtk_icon_view_unselect_all$MH();
        try {
            mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_item_activated$MH() {
        return RuntimeHelper.requireNonNull(constants$2148.gtk_icon_view_item_activated$MH,"gtk_icon_view_item_activated");
    }
    public static void gtk_icon_view_item_activated ( Addressable icon_view,  Addressable path) {
        var mh$ = gtk_icon_view_item_activated$MH();
        try {
            mh$.invokeExact(icon_view, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_cursor$MH() {
        return RuntimeHelper.requireNonNull(constants$2149.gtk_icon_view_set_cursor$MH,"gtk_icon_view_set_cursor");
    }
    public static void gtk_icon_view_set_cursor ( Addressable icon_view,  Addressable path,  Addressable cell,  int start_editing) {
        var mh$ = gtk_icon_view_set_cursor$MH();
        try {
            mh$.invokeExact(icon_view, path, cell, start_editing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_cursor$MH() {
        return RuntimeHelper.requireNonNull(constants$2149.gtk_icon_view_get_cursor$MH,"gtk_icon_view_get_cursor");
    }
    public static int gtk_icon_view_get_cursor ( Addressable icon_view,  Addressable path,  Addressable cell) {
        var mh$ = gtk_icon_view_get_cursor$MH();
        try {
            return (int)mh$.invokeExact(icon_view, path, cell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_scroll_to_path$MH() {
        return RuntimeHelper.requireNonNull(constants$2149.gtk_icon_view_scroll_to_path$MH,"gtk_icon_view_scroll_to_path");
    }
    public static void gtk_icon_view_scroll_to_path ( Addressable icon_view,  Addressable path,  int use_align,  float row_align,  float col_align) {
        var mh$ = gtk_icon_view_scroll_to_path$MH();
        try {
            mh$.invokeExact(icon_view, path, use_align, row_align, col_align);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_enable_model_drag_source$MH() {
        return RuntimeHelper.requireNonNull(constants$2149.gtk_icon_view_enable_model_drag_source$MH,"gtk_icon_view_enable_model_drag_source");
    }
    public static void gtk_icon_view_enable_model_drag_source ( Addressable icon_view,  int start_button_mask,  Addressable formats,  int actions) {
        var mh$ = gtk_icon_view_enable_model_drag_source$MH();
        try {
            mh$.invokeExact(icon_view, start_button_mask, formats, actions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_enable_model_drag_dest$MH() {
        return RuntimeHelper.requireNonNull(constants$2149.gtk_icon_view_enable_model_drag_dest$MH,"gtk_icon_view_enable_model_drag_dest");
    }
    public static void gtk_icon_view_enable_model_drag_dest ( Addressable icon_view,  Addressable formats,  int actions) {
        var mh$ = gtk_icon_view_enable_model_drag_dest$MH();
        try {
            mh$.invokeExact(icon_view, formats, actions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


