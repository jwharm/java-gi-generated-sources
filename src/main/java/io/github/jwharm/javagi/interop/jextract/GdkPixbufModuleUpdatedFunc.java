// Generated by jextract

package io.github.jwharm.javagi.interop.jextract;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public interface GdkPixbufModuleUpdatedFunc {

    void apply(java.lang.foreign.MemoryAddress pixbuf, int x, int y, int width, int height, java.lang.foreign.MemoryAddress user_data);
    static MemorySegment allocate(GdkPixbufModuleUpdatedFunc fi, MemorySession session) {
        return RuntimeHelper.upcallStub(GdkPixbufModuleUpdatedFunc.class, fi, constants$1318.GdkPixbufModuleUpdatedFunc$FUNC, session);
    }
    static GdkPixbufModuleUpdatedFunc ofAddress(MemoryAddress addr, MemorySession session) {
        MemorySegment symbol = MemorySegment.ofAddress(addr, 0, session);
        return (java.lang.foreign.MemoryAddress _pixbuf, int _x, int _y, int _width, int _height, java.lang.foreign.MemoryAddress _user_data) -> {
            try {
                constants$1318.GdkPixbufModuleUpdatedFunc$MH.invokeExact((Addressable)symbol, (java.lang.foreign.Addressable)_pixbuf, _x, _y, _width, _height, (java.lang.foreign.Addressable)_user_data);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


