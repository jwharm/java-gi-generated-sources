// Generated by jextract

package io.github.jwharm.javagi.interop.jextract;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
 class gtk_h_24 extends gtk_h_23 {

    public static OfAddress GtkFontChooserWidget_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFontChooserWidget_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkFontChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2546.glib_autoptr_clear_GtkFontChooserWidget$MH,"glib_autoptr_clear_GtkFontChooserWidget");
    }
    public static void glib_autoptr_clear_GtkFontChooserWidget ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkFontChooserWidget$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkFontChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2546.glib_autoptr_cleanup_GtkFontChooserWidget$MH,"glib_autoptr_cleanup_GtkFontChooserWidget");
    }
    public static void glib_autoptr_cleanup_GtkFontChooserWidget ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkFontChooserWidget$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkFontChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2546.glib_listautoptr_cleanup_GtkFontChooserWidget$MH,"glib_listautoptr_cleanup_GtkFontChooserWidget");
    }
    public static void glib_listautoptr_cleanup_GtkFontChooserWidget ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkFontChooserWidget$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkFontChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2547.glib_slistautoptr_cleanup_GtkFontChooserWidget$MH,"glib_slistautoptr_cleanup_GtkFontChooserWidget");
    }
    public static void glib_slistautoptr_cleanup_GtkFontChooserWidget ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkFontChooserWidget$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkFontChooserWidget$MH() {
        return RuntimeHelper.requireNonNull(constants$2547.glib_queueautoptr_cleanup_GtkFontChooserWidget$MH,"glib_queueautoptr_cleanup_GtkFontChooserWidget");
    }
    public static void glib_queueautoptr_cleanup_GtkFontChooserWidget ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkFontChooserWidget$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkFrame_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFrame_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFrame_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkFrame_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkFrame$MH() {
        return RuntimeHelper.requireNonNull(constants$2547.glib_autoptr_clear_GtkFrame$MH,"glib_autoptr_clear_GtkFrame");
    }
    public static void glib_autoptr_clear_GtkFrame ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkFrame$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkFrame$MH() {
        return RuntimeHelper.requireNonNull(constants$2547.glib_autoptr_cleanup_GtkFrame$MH,"glib_autoptr_cleanup_GtkFrame");
    }
    public static void glib_autoptr_cleanup_GtkFrame ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkFrame$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkFrame$MH() {
        return RuntimeHelper.requireNonNull(constants$2547.glib_listautoptr_cleanup_GtkFrame$MH,"glib_listautoptr_cleanup_GtkFrame");
    }
    public static void glib_listautoptr_cleanup_GtkFrame ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkFrame$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkFrame$MH() {
        return RuntimeHelper.requireNonNull(constants$2547.glib_slistautoptr_cleanup_GtkFrame$MH,"glib_slistautoptr_cleanup_GtkFrame");
    }
    public static void glib_slistautoptr_cleanup_GtkFrame ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkFrame$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkFrame$MH() {
        return RuntimeHelper.requireNonNull(constants$2548.glib_queueautoptr_cleanup_GtkFrame$MH,"glib_queueautoptr_cleanup_GtkFrame");
    }
    public static void glib_queueautoptr_cleanup_GtkFrame ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkFrame$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkGLArea_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGLArea_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGLArea_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGLArea_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkGLArea$MH() {
        return RuntimeHelper.requireNonNull(constants$2548.glib_autoptr_clear_GtkGLArea$MH,"glib_autoptr_clear_GtkGLArea");
    }
    public static void glib_autoptr_clear_GtkGLArea ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkGLArea$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkGLArea$MH() {
        return RuntimeHelper.requireNonNull(constants$2548.glib_autoptr_cleanup_GtkGLArea$MH,"glib_autoptr_cleanup_GtkGLArea");
    }
    public static void glib_autoptr_cleanup_GtkGLArea ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkGLArea$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkGLArea$MH() {
        return RuntimeHelper.requireNonNull(constants$2548.glib_listautoptr_cleanup_GtkGLArea$MH,"glib_listautoptr_cleanup_GtkGLArea");
    }
    public static void glib_listautoptr_cleanup_GtkGLArea ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkGLArea$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkGLArea$MH() {
        return RuntimeHelper.requireNonNull(constants$2548.glib_slistautoptr_cleanup_GtkGLArea$MH,"glib_slistautoptr_cleanup_GtkGLArea");
    }
    public static void glib_slistautoptr_cleanup_GtkGLArea ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkGLArea$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkGLArea$MH() {
        return RuntimeHelper.requireNonNull(constants$2548.glib_queueautoptr_cleanup_GtkGLArea$MH,"glib_queueautoptr_cleanup_GtkGLArea");
    }
    public static void glib_queueautoptr_cleanup_GtkGLArea ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkGLArea$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkGesture_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGesture_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGesture_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGesture_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkGesture$MH() {
        return RuntimeHelper.requireNonNull(constants$2549.glib_autoptr_clear_GtkGesture$MH,"glib_autoptr_clear_GtkGesture");
    }
    public static void glib_autoptr_clear_GtkGesture ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkGesture$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkGesture$MH() {
        return RuntimeHelper.requireNonNull(constants$2549.glib_autoptr_cleanup_GtkGesture$MH,"glib_autoptr_cleanup_GtkGesture");
    }
    public static void glib_autoptr_cleanup_GtkGesture ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkGesture$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkGesture$MH() {
        return RuntimeHelper.requireNonNull(constants$2549.glib_listautoptr_cleanup_GtkGesture$MH,"glib_listautoptr_cleanup_GtkGesture");
    }
    public static void glib_listautoptr_cleanup_GtkGesture ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkGesture$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkGesture$MH() {
        return RuntimeHelper.requireNonNull(constants$2549.glib_slistautoptr_cleanup_GtkGesture$MH,"glib_slistautoptr_cleanup_GtkGesture");
    }
    public static void glib_slistautoptr_cleanup_GtkGesture ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkGesture$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkGesture$MH() {
        return RuntimeHelper.requireNonNull(constants$2549.glib_queueautoptr_cleanup_GtkGesture$MH,"glib_queueautoptr_cleanup_GtkGesture");
    }
    public static void glib_queueautoptr_cleanup_GtkGesture ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkGesture$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkGestureDrag_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureDrag_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureDrag_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureDrag_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkGestureDrag$MH() {
        return RuntimeHelper.requireNonNull(constants$2549.glib_autoptr_clear_GtkGestureDrag$MH,"glib_autoptr_clear_GtkGestureDrag");
    }
    public static void glib_autoptr_clear_GtkGestureDrag ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkGestureDrag$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkGestureDrag$MH() {
        return RuntimeHelper.requireNonNull(constants$2550.glib_autoptr_cleanup_GtkGestureDrag$MH,"glib_autoptr_cleanup_GtkGestureDrag");
    }
    public static void glib_autoptr_cleanup_GtkGestureDrag ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkGestureDrag$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkGestureDrag$MH() {
        return RuntimeHelper.requireNonNull(constants$2550.glib_listautoptr_cleanup_GtkGestureDrag$MH,"glib_listautoptr_cleanup_GtkGestureDrag");
    }
    public static void glib_listautoptr_cleanup_GtkGestureDrag ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkGestureDrag$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkGestureDrag$MH() {
        return RuntimeHelper.requireNonNull(constants$2550.glib_slistautoptr_cleanup_GtkGestureDrag$MH,"glib_slistautoptr_cleanup_GtkGestureDrag");
    }
    public static void glib_slistautoptr_cleanup_GtkGestureDrag ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkGestureDrag$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkGestureDrag$MH() {
        return RuntimeHelper.requireNonNull(constants$2550.glib_queueautoptr_cleanup_GtkGestureDrag$MH,"glib_queueautoptr_cleanup_GtkGestureDrag");
    }
    public static void glib_queueautoptr_cleanup_GtkGestureDrag ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkGestureDrag$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkGestureLongPress_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureLongPress_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureLongPress_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureLongPress_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkGestureLongPress$MH() {
        return RuntimeHelper.requireNonNull(constants$2550.glib_autoptr_clear_GtkGestureLongPress$MH,"glib_autoptr_clear_GtkGestureLongPress");
    }
    public static void glib_autoptr_clear_GtkGestureLongPress ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkGestureLongPress$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkGestureLongPress$MH() {
        return RuntimeHelper.requireNonNull(constants$2550.glib_autoptr_cleanup_GtkGestureLongPress$MH,"glib_autoptr_cleanup_GtkGestureLongPress");
    }
    public static void glib_autoptr_cleanup_GtkGestureLongPress ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkGestureLongPress$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkGestureLongPress$MH() {
        return RuntimeHelper.requireNonNull(constants$2551.glib_listautoptr_cleanup_GtkGestureLongPress$MH,"glib_listautoptr_cleanup_GtkGestureLongPress");
    }
    public static void glib_listautoptr_cleanup_GtkGestureLongPress ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkGestureLongPress$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkGestureLongPress$MH() {
        return RuntimeHelper.requireNonNull(constants$2551.glib_slistautoptr_cleanup_GtkGestureLongPress$MH,"glib_slistautoptr_cleanup_GtkGestureLongPress");
    }
    public static void glib_slistautoptr_cleanup_GtkGestureLongPress ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkGestureLongPress$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkGestureLongPress$MH() {
        return RuntimeHelper.requireNonNull(constants$2551.glib_queueautoptr_cleanup_GtkGestureLongPress$MH,"glib_queueautoptr_cleanup_GtkGestureLongPress");
    }
    public static void glib_queueautoptr_cleanup_GtkGestureLongPress ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkGestureLongPress$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkGestureClick_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureClick_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureClick_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureClick_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkGestureClick$MH() {
        return RuntimeHelper.requireNonNull(constants$2551.glib_autoptr_clear_GtkGestureClick$MH,"glib_autoptr_clear_GtkGestureClick");
    }
    public static void glib_autoptr_clear_GtkGestureClick ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkGestureClick$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkGestureClick$MH() {
        return RuntimeHelper.requireNonNull(constants$2551.glib_autoptr_cleanup_GtkGestureClick$MH,"glib_autoptr_cleanup_GtkGestureClick");
    }
    public static void glib_autoptr_cleanup_GtkGestureClick ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkGestureClick$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkGestureClick$MH() {
        return RuntimeHelper.requireNonNull(constants$2551.glib_listautoptr_cleanup_GtkGestureClick$MH,"glib_listautoptr_cleanup_GtkGestureClick");
    }
    public static void glib_listautoptr_cleanup_GtkGestureClick ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkGestureClick$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkGestureClick$MH() {
        return RuntimeHelper.requireNonNull(constants$2552.glib_slistautoptr_cleanup_GtkGestureClick$MH,"glib_slistautoptr_cleanup_GtkGestureClick");
    }
    public static void glib_slistautoptr_cleanup_GtkGestureClick ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkGestureClick$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkGestureClick$MH() {
        return RuntimeHelper.requireNonNull(constants$2552.glib_queueautoptr_cleanup_GtkGestureClick$MH,"glib_queueautoptr_cleanup_GtkGestureClick");
    }
    public static void glib_queueautoptr_cleanup_GtkGestureClick ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkGestureClick$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkGesturePan_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGesturePan_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGesturePan_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGesturePan_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkGesturePan$MH() {
        return RuntimeHelper.requireNonNull(constants$2552.glib_autoptr_clear_GtkGesturePan$MH,"glib_autoptr_clear_GtkGesturePan");
    }
    public static void glib_autoptr_clear_GtkGesturePan ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkGesturePan$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkGesturePan$MH() {
        return RuntimeHelper.requireNonNull(constants$2552.glib_autoptr_cleanup_GtkGesturePan$MH,"glib_autoptr_cleanup_GtkGesturePan");
    }
    public static void glib_autoptr_cleanup_GtkGesturePan ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkGesturePan$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkGesturePan$MH() {
        return RuntimeHelper.requireNonNull(constants$2552.glib_listautoptr_cleanup_GtkGesturePan$MH,"glib_listautoptr_cleanup_GtkGesturePan");
    }
    public static void glib_listautoptr_cleanup_GtkGesturePan ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkGesturePan$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkGesturePan$MH() {
        return RuntimeHelper.requireNonNull(constants$2552.glib_slistautoptr_cleanup_GtkGesturePan$MH,"glib_slistautoptr_cleanup_GtkGesturePan");
    }
    public static void glib_slistautoptr_cleanup_GtkGesturePan ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkGesturePan$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkGesturePan$MH() {
        return RuntimeHelper.requireNonNull(constants$2553.glib_queueautoptr_cleanup_GtkGesturePan$MH,"glib_queueautoptr_cleanup_GtkGesturePan");
    }
    public static void glib_queueautoptr_cleanup_GtkGesturePan ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkGesturePan$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkGestureRotate_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureRotate_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureRotate_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureRotate_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkGestureRotate$MH() {
        return RuntimeHelper.requireNonNull(constants$2553.glib_autoptr_clear_GtkGestureRotate$MH,"glib_autoptr_clear_GtkGestureRotate");
    }
    public static void glib_autoptr_clear_GtkGestureRotate ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkGestureRotate$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkGestureRotate$MH() {
        return RuntimeHelper.requireNonNull(constants$2553.glib_autoptr_cleanup_GtkGestureRotate$MH,"glib_autoptr_cleanup_GtkGestureRotate");
    }
    public static void glib_autoptr_cleanup_GtkGestureRotate ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkGestureRotate$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkGestureRotate$MH() {
        return RuntimeHelper.requireNonNull(constants$2553.glib_listautoptr_cleanup_GtkGestureRotate$MH,"glib_listautoptr_cleanup_GtkGestureRotate");
    }
    public static void glib_listautoptr_cleanup_GtkGestureRotate ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkGestureRotate$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkGestureRotate$MH() {
        return RuntimeHelper.requireNonNull(constants$2553.glib_slistautoptr_cleanup_GtkGestureRotate$MH,"glib_slistautoptr_cleanup_GtkGestureRotate");
    }
    public static void glib_slistautoptr_cleanup_GtkGestureRotate ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkGestureRotate$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkGestureRotate$MH() {
        return RuntimeHelper.requireNonNull(constants$2553.glib_queueautoptr_cleanup_GtkGestureRotate$MH,"glib_queueautoptr_cleanup_GtkGestureRotate");
    }
    public static void glib_queueautoptr_cleanup_GtkGestureRotate ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkGestureRotate$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkGestureSingle_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureSingle_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureSingle_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureSingle_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkGestureSingle$MH() {
        return RuntimeHelper.requireNonNull(constants$2554.glib_autoptr_clear_GtkGestureSingle$MH,"glib_autoptr_clear_GtkGestureSingle");
    }
    public static void glib_autoptr_clear_GtkGestureSingle ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkGestureSingle$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkGestureSingle$MH() {
        return RuntimeHelper.requireNonNull(constants$2554.glib_autoptr_cleanup_GtkGestureSingle$MH,"glib_autoptr_cleanup_GtkGestureSingle");
    }
    public static void glib_autoptr_cleanup_GtkGestureSingle ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkGestureSingle$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkGestureSingle$MH() {
        return RuntimeHelper.requireNonNull(constants$2554.glib_listautoptr_cleanup_GtkGestureSingle$MH,"glib_listautoptr_cleanup_GtkGestureSingle");
    }
    public static void glib_listautoptr_cleanup_GtkGestureSingle ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkGestureSingle$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkGestureSingle$MH() {
        return RuntimeHelper.requireNonNull(constants$2554.glib_slistautoptr_cleanup_GtkGestureSingle$MH,"glib_slistautoptr_cleanup_GtkGestureSingle");
    }
    public static void glib_slistautoptr_cleanup_GtkGestureSingle ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkGestureSingle$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkGestureSingle$MH() {
        return RuntimeHelper.requireNonNull(constants$2554.glib_queueautoptr_cleanup_GtkGestureSingle$MH,"glib_queueautoptr_cleanup_GtkGestureSingle");
    }
    public static void glib_queueautoptr_cleanup_GtkGestureSingle ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkGestureSingle$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkGestureSwipe_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureSwipe_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureSwipe_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureSwipe_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkGestureSwipe$MH() {
        return RuntimeHelper.requireNonNull(constants$2554.glib_autoptr_clear_GtkGestureSwipe$MH,"glib_autoptr_clear_GtkGestureSwipe");
    }
    public static void glib_autoptr_clear_GtkGestureSwipe ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkGestureSwipe$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkGestureSwipe$MH() {
        return RuntimeHelper.requireNonNull(constants$2555.glib_autoptr_cleanup_GtkGestureSwipe$MH,"glib_autoptr_cleanup_GtkGestureSwipe");
    }
    public static void glib_autoptr_cleanup_GtkGestureSwipe ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkGestureSwipe$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkGestureSwipe$MH() {
        return RuntimeHelper.requireNonNull(constants$2555.glib_listautoptr_cleanup_GtkGestureSwipe$MH,"glib_listautoptr_cleanup_GtkGestureSwipe");
    }
    public static void glib_listautoptr_cleanup_GtkGestureSwipe ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkGestureSwipe$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkGestureSwipe$MH() {
        return RuntimeHelper.requireNonNull(constants$2555.glib_slistautoptr_cleanup_GtkGestureSwipe$MH,"glib_slistautoptr_cleanup_GtkGestureSwipe");
    }
    public static void glib_slistautoptr_cleanup_GtkGestureSwipe ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkGestureSwipe$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkGestureSwipe$MH() {
        return RuntimeHelper.requireNonNull(constants$2555.glib_queueautoptr_cleanup_GtkGestureSwipe$MH,"glib_queueautoptr_cleanup_GtkGestureSwipe");
    }
    public static void glib_queueautoptr_cleanup_GtkGestureSwipe ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkGestureSwipe$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkGestureZoom_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureZoom_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureZoom_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGestureZoom_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkGestureZoom$MH() {
        return RuntimeHelper.requireNonNull(constants$2555.glib_autoptr_clear_GtkGestureZoom$MH,"glib_autoptr_clear_GtkGestureZoom");
    }
    public static void glib_autoptr_clear_GtkGestureZoom ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkGestureZoom$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkGestureZoom$MH() {
        return RuntimeHelper.requireNonNull(constants$2555.glib_autoptr_cleanup_GtkGestureZoom$MH,"glib_autoptr_cleanup_GtkGestureZoom");
    }
    public static void glib_autoptr_cleanup_GtkGestureZoom ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkGestureZoom$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkGestureZoom$MH() {
        return RuntimeHelper.requireNonNull(constants$2556.glib_listautoptr_cleanup_GtkGestureZoom$MH,"glib_listautoptr_cleanup_GtkGestureZoom");
    }
    public static void glib_listautoptr_cleanup_GtkGestureZoom ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkGestureZoom$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkGestureZoom$MH() {
        return RuntimeHelper.requireNonNull(constants$2556.glib_slistautoptr_cleanup_GtkGestureZoom$MH,"glib_slistautoptr_cleanup_GtkGestureZoom");
    }
    public static void glib_slistautoptr_cleanup_GtkGestureZoom ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkGestureZoom$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkGestureZoom$MH() {
        return RuntimeHelper.requireNonNull(constants$2556.glib_queueautoptr_cleanup_GtkGestureZoom$MH,"glib_queueautoptr_cleanup_GtkGestureZoom");
    }
    public static void glib_queueautoptr_cleanup_GtkGestureZoom ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkGestureZoom$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkGrid_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGrid_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGrid_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGrid_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkGrid$MH() {
        return RuntimeHelper.requireNonNull(constants$2556.glib_autoptr_clear_GtkGrid$MH,"glib_autoptr_clear_GtkGrid");
    }
    public static void glib_autoptr_clear_GtkGrid ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkGrid$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkGrid$MH() {
        return RuntimeHelper.requireNonNull(constants$2556.glib_autoptr_cleanup_GtkGrid$MH,"glib_autoptr_cleanup_GtkGrid");
    }
    public static void glib_autoptr_cleanup_GtkGrid ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkGrid$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkGrid$MH() {
        return RuntimeHelper.requireNonNull(constants$2556.glib_listautoptr_cleanup_GtkGrid$MH,"glib_listautoptr_cleanup_GtkGrid");
    }
    public static void glib_listautoptr_cleanup_GtkGrid ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkGrid$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkGrid$MH() {
        return RuntimeHelper.requireNonNull(constants$2557.glib_slistautoptr_cleanup_GtkGrid$MH,"glib_slistautoptr_cleanup_GtkGrid");
    }
    public static void glib_slistautoptr_cleanup_GtkGrid ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkGrid$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkGrid$MH() {
        return RuntimeHelper.requireNonNull(constants$2557.glib_queueautoptr_cleanup_GtkGrid$MH,"glib_queueautoptr_cleanup_GtkGrid");
    }
    public static void glib_queueautoptr_cleanup_GtkGrid ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkGrid$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkGridView_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGridView_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGridView_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkGridView_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkGridView$MH() {
        return RuntimeHelper.requireNonNull(constants$2557.glib_autoptr_clear_GtkGridView$MH,"glib_autoptr_clear_GtkGridView");
    }
    public static void glib_autoptr_clear_GtkGridView ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkGridView$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkGridView$MH() {
        return RuntimeHelper.requireNonNull(constants$2557.glib_autoptr_cleanup_GtkGridView$MH,"glib_autoptr_cleanup_GtkGridView");
    }
    public static void glib_autoptr_cleanup_GtkGridView ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkGridView$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkGridView$MH() {
        return RuntimeHelper.requireNonNull(constants$2557.glib_listautoptr_cleanup_GtkGridView$MH,"glib_listautoptr_cleanup_GtkGridView");
    }
    public static void glib_listautoptr_cleanup_GtkGridView ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkGridView$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkGridView$MH() {
        return RuntimeHelper.requireNonNull(constants$2557.glib_slistautoptr_cleanup_GtkGridView$MH,"glib_slistautoptr_cleanup_GtkGridView");
    }
    public static void glib_slistautoptr_cleanup_GtkGridView ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkGridView$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkGridView$MH() {
        return RuntimeHelper.requireNonNull(constants$2558.glib_queueautoptr_cleanup_GtkGridView$MH,"glib_queueautoptr_cleanup_GtkGridView");
    }
    public static void glib_queueautoptr_cleanup_GtkGridView ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkGridView$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkHeaderBar_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkHeaderBar_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkHeaderBar_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkHeaderBar_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkHeaderBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2558.glib_autoptr_clear_GtkHeaderBar$MH,"glib_autoptr_clear_GtkHeaderBar");
    }
    public static void glib_autoptr_clear_GtkHeaderBar ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkHeaderBar$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkHeaderBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2558.glib_autoptr_cleanup_GtkHeaderBar$MH,"glib_autoptr_cleanup_GtkHeaderBar");
    }
    public static void glib_autoptr_cleanup_GtkHeaderBar ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkHeaderBar$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkHeaderBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2558.glib_listautoptr_cleanup_GtkHeaderBar$MH,"glib_listautoptr_cleanup_GtkHeaderBar");
    }
    public static void glib_listautoptr_cleanup_GtkHeaderBar ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkHeaderBar$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkHeaderBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2558.glib_slistautoptr_cleanup_GtkHeaderBar$MH,"glib_slistautoptr_cleanup_GtkHeaderBar");
    }
    public static void glib_slistautoptr_cleanup_GtkHeaderBar ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkHeaderBar$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkHeaderBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2558.glib_queueautoptr_cleanup_GtkHeaderBar$MH,"glib_queueautoptr_cleanup_GtkHeaderBar");
    }
    public static void glib_queueautoptr_cleanup_GtkHeaderBar ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkHeaderBar$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkIMContext_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkIMContext_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkIMContext_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkIMContext_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkIMContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2559.glib_autoptr_clear_GtkIMContext$MH,"glib_autoptr_clear_GtkIMContext");
    }
    public static void glib_autoptr_clear_GtkIMContext ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkIMContext$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkIMContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2559.glib_autoptr_cleanup_GtkIMContext$MH,"glib_autoptr_cleanup_GtkIMContext");
    }
    public static void glib_autoptr_cleanup_GtkIMContext ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkIMContext$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkIMContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2559.glib_listautoptr_cleanup_GtkIMContext$MH,"glib_listautoptr_cleanup_GtkIMContext");
    }
    public static void glib_listautoptr_cleanup_GtkIMContext ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkIMContext$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkIMContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2559.glib_slistautoptr_cleanup_GtkIMContext$MH,"glib_slistautoptr_cleanup_GtkIMContext");
    }
    public static void glib_slistautoptr_cleanup_GtkIMContext ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkIMContext$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkIMContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2559.glib_queueautoptr_cleanup_GtkIMContext$MH,"glib_queueautoptr_cleanup_GtkIMContext");
    }
    public static void glib_queueautoptr_cleanup_GtkIMContext ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkIMContext$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkIMContextSimple_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkIMContextSimple_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkIMContextSimple_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkIMContextSimple_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkIMContextSimple$MH() {
        return RuntimeHelper.requireNonNull(constants$2559.glib_autoptr_clear_GtkIMContextSimple$MH,"glib_autoptr_clear_GtkIMContextSimple");
    }
    public static void glib_autoptr_clear_GtkIMContextSimple ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkIMContextSimple$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkIMContextSimple$MH() {
        return RuntimeHelper.requireNonNull(constants$2560.glib_autoptr_cleanup_GtkIMContextSimple$MH,"glib_autoptr_cleanup_GtkIMContextSimple");
    }
    public static void glib_autoptr_cleanup_GtkIMContextSimple ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkIMContextSimple$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkIMContextSimple$MH() {
        return RuntimeHelper.requireNonNull(constants$2560.glib_listautoptr_cleanup_GtkIMContextSimple$MH,"glib_listautoptr_cleanup_GtkIMContextSimple");
    }
    public static void glib_listautoptr_cleanup_GtkIMContextSimple ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkIMContextSimple$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkIMContextSimple$MH() {
        return RuntimeHelper.requireNonNull(constants$2560.glib_slistautoptr_cleanup_GtkIMContextSimple$MH,"glib_slistautoptr_cleanup_GtkIMContextSimple");
    }
    public static void glib_slistautoptr_cleanup_GtkIMContextSimple ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkIMContextSimple$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkIMContextSimple$MH() {
        return RuntimeHelper.requireNonNull(constants$2560.glib_queueautoptr_cleanup_GtkIMContextSimple$MH,"glib_queueautoptr_cleanup_GtkIMContextSimple");
    }
    public static void glib_queueautoptr_cleanup_GtkIMContextSimple ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkIMContextSimple$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkIMMulticontext_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkIMMulticontext_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkIMMulticontext_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkIMMulticontext_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkIMMulticontext$MH() {
        return RuntimeHelper.requireNonNull(constants$2560.glib_autoptr_clear_GtkIMMulticontext$MH,"glib_autoptr_clear_GtkIMMulticontext");
    }
    public static void glib_autoptr_clear_GtkIMMulticontext ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkIMMulticontext$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkIMMulticontext$MH() {
        return RuntimeHelper.requireNonNull(constants$2560.glib_autoptr_cleanup_GtkIMMulticontext$MH,"glib_autoptr_cleanup_GtkIMMulticontext");
    }
    public static void glib_autoptr_cleanup_GtkIMMulticontext ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkIMMulticontext$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkIMMulticontext$MH() {
        return RuntimeHelper.requireNonNull(constants$2561.glib_listautoptr_cleanup_GtkIMMulticontext$MH,"glib_listautoptr_cleanup_GtkIMMulticontext");
    }
    public static void glib_listautoptr_cleanup_GtkIMMulticontext ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkIMMulticontext$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkIMMulticontext$MH() {
        return RuntimeHelper.requireNonNull(constants$2561.glib_slistautoptr_cleanup_GtkIMMulticontext$MH,"glib_slistautoptr_cleanup_GtkIMMulticontext");
    }
    public static void glib_slistautoptr_cleanup_GtkIMMulticontext ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkIMMulticontext$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkIMMulticontext$MH() {
        return RuntimeHelper.requireNonNull(constants$2561.glib_queueautoptr_cleanup_GtkIMMulticontext$MH,"glib_queueautoptr_cleanup_GtkIMMulticontext");
    }
    public static void glib_queueautoptr_cleanup_GtkIMMulticontext ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkIMMulticontext$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkIconPaintable_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkIconPaintable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkIconPaintable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkIconPaintable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkIconPaintable$MH() {
        return RuntimeHelper.requireNonNull(constants$2561.glib_autoptr_clear_GtkIconPaintable$MH,"glib_autoptr_clear_GtkIconPaintable");
    }
    public static void glib_autoptr_clear_GtkIconPaintable ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkIconPaintable$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkIconPaintable$MH() {
        return RuntimeHelper.requireNonNull(constants$2561.glib_autoptr_cleanup_GtkIconPaintable$MH,"glib_autoptr_cleanup_GtkIconPaintable");
    }
    public static void glib_autoptr_cleanup_GtkIconPaintable ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkIconPaintable$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkIconPaintable$MH() {
        return RuntimeHelper.requireNonNull(constants$2561.glib_listautoptr_cleanup_GtkIconPaintable$MH,"glib_listautoptr_cleanup_GtkIconPaintable");
    }
    public static void glib_listautoptr_cleanup_GtkIconPaintable ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkIconPaintable$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkIconPaintable$MH() {
        return RuntimeHelper.requireNonNull(constants$2562.glib_slistautoptr_cleanup_GtkIconPaintable$MH,"glib_slistautoptr_cleanup_GtkIconPaintable");
    }
    public static void glib_slistautoptr_cleanup_GtkIconPaintable ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkIconPaintable$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkIconPaintable$MH() {
        return RuntimeHelper.requireNonNull(constants$2562.glib_queueautoptr_cleanup_GtkIconPaintable$MH,"glib_queueautoptr_cleanup_GtkIconPaintable");
    }
    public static void glib_queueautoptr_cleanup_GtkIconPaintable ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkIconPaintable$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkIconTheme_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkIconTheme_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkIconTheme_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkIconTheme_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkIconTheme$MH() {
        return RuntimeHelper.requireNonNull(constants$2562.glib_autoptr_clear_GtkIconTheme$MH,"glib_autoptr_clear_GtkIconTheme");
    }
    public static void glib_autoptr_clear_GtkIconTheme ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkIconTheme$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkIconTheme$MH() {
        return RuntimeHelper.requireNonNull(constants$2562.glib_autoptr_cleanup_GtkIconTheme$MH,"glib_autoptr_cleanup_GtkIconTheme");
    }
    public static void glib_autoptr_cleanup_GtkIconTheme ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkIconTheme$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkIconTheme$MH() {
        return RuntimeHelper.requireNonNull(constants$2562.glib_listautoptr_cleanup_GtkIconTheme$MH,"glib_listautoptr_cleanup_GtkIconTheme");
    }
    public static void glib_listautoptr_cleanup_GtkIconTheme ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkIconTheme$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkIconTheme$MH() {
        return RuntimeHelper.requireNonNull(constants$2562.glib_slistautoptr_cleanup_GtkIconTheme$MH,"glib_slistautoptr_cleanup_GtkIconTheme");
    }
    public static void glib_slistautoptr_cleanup_GtkIconTheme ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkIconTheme$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkIconTheme$MH() {
        return RuntimeHelper.requireNonNull(constants$2563.glib_queueautoptr_cleanup_GtkIconTheme$MH,"glib_queueautoptr_cleanup_GtkIconTheme");
    }
    public static void glib_queueautoptr_cleanup_GtkIconTheme ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkIconTheme$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkIconView_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkIconView_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkIconView_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkIconView_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkIconView$MH() {
        return RuntimeHelper.requireNonNull(constants$2563.glib_autoptr_clear_GtkIconView$MH,"glib_autoptr_clear_GtkIconView");
    }
    public static void glib_autoptr_clear_GtkIconView ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkIconView$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkIconView$MH() {
        return RuntimeHelper.requireNonNull(constants$2563.glib_autoptr_cleanup_GtkIconView$MH,"glib_autoptr_cleanup_GtkIconView");
    }
    public static void glib_autoptr_cleanup_GtkIconView ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkIconView$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkIconView$MH() {
        return RuntimeHelper.requireNonNull(constants$2563.glib_listautoptr_cleanup_GtkIconView$MH,"glib_listautoptr_cleanup_GtkIconView");
    }
    public static void glib_listautoptr_cleanup_GtkIconView ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkIconView$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkIconView$MH() {
        return RuntimeHelper.requireNonNull(constants$2563.glib_slistautoptr_cleanup_GtkIconView$MH,"glib_slistautoptr_cleanup_GtkIconView");
    }
    public static void glib_slistautoptr_cleanup_GtkIconView ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkIconView$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkIconView$MH() {
        return RuntimeHelper.requireNonNull(constants$2563.glib_queueautoptr_cleanup_GtkIconView$MH,"glib_queueautoptr_cleanup_GtkIconView");
    }
    public static void glib_queueautoptr_cleanup_GtkIconView ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkIconView$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkImage_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkImage_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkImage_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkImage_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkImage$MH() {
        return RuntimeHelper.requireNonNull(constants$2564.glib_autoptr_clear_GtkImage$MH,"glib_autoptr_clear_GtkImage");
    }
    public static void glib_autoptr_clear_GtkImage ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkImage$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkImage$MH() {
        return RuntimeHelper.requireNonNull(constants$2564.glib_autoptr_cleanup_GtkImage$MH,"glib_autoptr_cleanup_GtkImage");
    }
    public static void glib_autoptr_cleanup_GtkImage ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkImage$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkImage$MH() {
        return RuntimeHelper.requireNonNull(constants$2564.glib_listautoptr_cleanup_GtkImage$MH,"glib_listautoptr_cleanup_GtkImage");
    }
    public static void glib_listautoptr_cleanup_GtkImage ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkImage$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkImage$MH() {
        return RuntimeHelper.requireNonNull(constants$2564.glib_slistautoptr_cleanup_GtkImage$MH,"glib_slistautoptr_cleanup_GtkImage");
    }
    public static void glib_slistautoptr_cleanup_GtkImage ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkImage$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkImage$MH() {
        return RuntimeHelper.requireNonNull(constants$2564.glib_queueautoptr_cleanup_GtkImage$MH,"glib_queueautoptr_cleanup_GtkImage");
    }
    public static void glib_queueautoptr_cleanup_GtkImage ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkImage$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkInfoBar_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkInfoBar_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkInfoBar_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkInfoBar_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkInfoBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2564.glib_autoptr_clear_GtkInfoBar$MH,"glib_autoptr_clear_GtkInfoBar");
    }
    public static void glib_autoptr_clear_GtkInfoBar ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkInfoBar$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkInfoBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2565.glib_autoptr_cleanup_GtkInfoBar$MH,"glib_autoptr_cleanup_GtkInfoBar");
    }
    public static void glib_autoptr_cleanup_GtkInfoBar ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkInfoBar$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkInfoBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2565.glib_listautoptr_cleanup_GtkInfoBar$MH,"glib_listautoptr_cleanup_GtkInfoBar");
    }
    public static void glib_listautoptr_cleanup_GtkInfoBar ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkInfoBar$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkInfoBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2565.glib_slistautoptr_cleanup_GtkInfoBar$MH,"glib_slistautoptr_cleanup_GtkInfoBar");
    }
    public static void glib_slistautoptr_cleanup_GtkInfoBar ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkInfoBar$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkInfoBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2565.glib_queueautoptr_cleanup_GtkInfoBar$MH,"glib_queueautoptr_cleanup_GtkInfoBar");
    }
    public static void glib_queueautoptr_cleanup_GtkInfoBar ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkInfoBar$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkLevelBar_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkLevelBar_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkLevelBar_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkLevelBar_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkLevelBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2565.glib_autoptr_clear_GtkLevelBar$MH,"glib_autoptr_clear_GtkLevelBar");
    }
    public static void glib_autoptr_clear_GtkLevelBar ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkLevelBar$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkLevelBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2565.glib_autoptr_cleanup_GtkLevelBar$MH,"glib_autoptr_cleanup_GtkLevelBar");
    }
    public static void glib_autoptr_cleanup_GtkLevelBar ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkLevelBar$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkLevelBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2566.glib_listautoptr_cleanup_GtkLevelBar$MH,"glib_listautoptr_cleanup_GtkLevelBar");
    }
    public static void glib_listautoptr_cleanup_GtkLevelBar ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkLevelBar$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkLevelBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2566.glib_slistautoptr_cleanup_GtkLevelBar$MH,"glib_slistautoptr_cleanup_GtkLevelBar");
    }
    public static void glib_slistautoptr_cleanup_GtkLevelBar ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkLevelBar$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkLevelBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2566.glib_queueautoptr_cleanup_GtkLevelBar$MH,"glib_queueautoptr_cleanup_GtkLevelBar");
    }
    public static void glib_queueautoptr_cleanup_GtkLevelBar ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkLevelBar$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkLinkButton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkLinkButton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkLinkButton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkLinkButton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkLinkButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2566.glib_autoptr_clear_GtkLinkButton$MH,"glib_autoptr_clear_GtkLinkButton");
    }
    public static void glib_autoptr_clear_GtkLinkButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkLinkButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkLinkButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2566.glib_autoptr_cleanup_GtkLinkButton$MH,"glib_autoptr_cleanup_GtkLinkButton");
    }
    public static void glib_autoptr_cleanup_GtkLinkButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkLinkButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkLinkButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2566.glib_listautoptr_cleanup_GtkLinkButton$MH,"glib_listautoptr_cleanup_GtkLinkButton");
    }
    public static void glib_listautoptr_cleanup_GtkLinkButton ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkLinkButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkLinkButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2567.glib_slistautoptr_cleanup_GtkLinkButton$MH,"glib_slistautoptr_cleanup_GtkLinkButton");
    }
    public static void glib_slistautoptr_cleanup_GtkLinkButton ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkLinkButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkLinkButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2567.glib_queueautoptr_cleanup_GtkLinkButton$MH,"glib_queueautoptr_cleanup_GtkLinkButton");
    }
    public static void glib_queueautoptr_cleanup_GtkLinkButton ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkLinkButton$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkListItem_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkListItem_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkListItem_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkListItem_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkListItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2567.glib_autoptr_clear_GtkListItem$MH,"glib_autoptr_clear_GtkListItem");
    }
    public static void glib_autoptr_clear_GtkListItem ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkListItem$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkListItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2567.glib_autoptr_cleanup_GtkListItem$MH,"glib_autoptr_cleanup_GtkListItem");
    }
    public static void glib_autoptr_cleanup_GtkListItem ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkListItem$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkListItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2567.glib_listautoptr_cleanup_GtkListItem$MH,"glib_listautoptr_cleanup_GtkListItem");
    }
    public static void glib_listautoptr_cleanup_GtkListItem ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkListItem$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkListItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2567.glib_slistautoptr_cleanup_GtkListItem$MH,"glib_slistautoptr_cleanup_GtkListItem");
    }
    public static void glib_slistautoptr_cleanup_GtkListItem ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkListItem$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkListItem$MH() {
        return RuntimeHelper.requireNonNull(constants$2568.glib_queueautoptr_cleanup_GtkListItem$MH,"glib_queueautoptr_cleanup_GtkListItem");
    }
    public static void glib_queueautoptr_cleanup_GtkListItem ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkListItem$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkListItemFactory_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkListItemFactory_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkListItemFactory_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkListItemFactory_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkListItemFactory$MH() {
        return RuntimeHelper.requireNonNull(constants$2568.glib_autoptr_clear_GtkListItemFactory$MH,"glib_autoptr_clear_GtkListItemFactory");
    }
    public static void glib_autoptr_clear_GtkListItemFactory ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkListItemFactory$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkListItemFactory$MH() {
        return RuntimeHelper.requireNonNull(constants$2568.glib_autoptr_cleanup_GtkListItemFactory$MH,"glib_autoptr_cleanup_GtkListItemFactory");
    }
    public static void glib_autoptr_cleanup_GtkListItemFactory ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkListItemFactory$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkListItemFactory$MH() {
        return RuntimeHelper.requireNonNull(constants$2568.glib_listautoptr_cleanup_GtkListItemFactory$MH,"glib_listautoptr_cleanup_GtkListItemFactory");
    }
    public static void glib_listautoptr_cleanup_GtkListItemFactory ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkListItemFactory$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkListItemFactory$MH() {
        return RuntimeHelper.requireNonNull(constants$2568.glib_slistautoptr_cleanup_GtkListItemFactory$MH,"glib_slistautoptr_cleanup_GtkListItemFactory");
    }
    public static void glib_slistautoptr_cleanup_GtkListItemFactory ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkListItemFactory$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkListItemFactory$MH() {
        return RuntimeHelper.requireNonNull(constants$2568.glib_queueautoptr_cleanup_GtkListItemFactory$MH,"glib_queueautoptr_cleanup_GtkListItemFactory");
    }
    public static void glib_queueautoptr_cleanup_GtkListItemFactory ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkListItemFactory$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkListStore_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkListStore_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkListStore_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkListStore_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkListStore$MH() {
        return RuntimeHelper.requireNonNull(constants$2569.glib_autoptr_clear_GtkListStore$MH,"glib_autoptr_clear_GtkListStore");
    }
    public static void glib_autoptr_clear_GtkListStore ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkListStore$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkListStore$MH() {
        return RuntimeHelper.requireNonNull(constants$2569.glib_autoptr_cleanup_GtkListStore$MH,"glib_autoptr_cleanup_GtkListStore");
    }
    public static void glib_autoptr_cleanup_GtkListStore ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkListStore$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkListStore$MH() {
        return RuntimeHelper.requireNonNull(constants$2569.glib_listautoptr_cleanup_GtkListStore$MH,"glib_listautoptr_cleanup_GtkListStore");
    }
    public static void glib_listautoptr_cleanup_GtkListStore ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkListStore$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkListStore$MH() {
        return RuntimeHelper.requireNonNull(constants$2569.glib_slistautoptr_cleanup_GtkListStore$MH,"glib_slistautoptr_cleanup_GtkListStore");
    }
    public static void glib_slistautoptr_cleanup_GtkListStore ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkListStore$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkListStore$MH() {
        return RuntimeHelper.requireNonNull(constants$2569.glib_queueautoptr_cleanup_GtkListStore$MH,"glib_queueautoptr_cleanup_GtkListStore");
    }
    public static void glib_queueautoptr_cleanup_GtkListStore ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkListStore$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkLockButton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkLockButton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkLockButton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkLockButton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkLockButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2569.glib_autoptr_clear_GtkLockButton$MH,"glib_autoptr_clear_GtkLockButton");
    }
    public static void glib_autoptr_clear_GtkLockButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkLockButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkLockButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2570.glib_autoptr_cleanup_GtkLockButton$MH,"glib_autoptr_cleanup_GtkLockButton");
    }
    public static void glib_autoptr_cleanup_GtkLockButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkLockButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkLockButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2570.glib_listautoptr_cleanup_GtkLockButton$MH,"glib_listautoptr_cleanup_GtkLockButton");
    }
    public static void glib_listautoptr_cleanup_GtkLockButton ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkLockButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkLockButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2570.glib_slistautoptr_cleanup_GtkLockButton$MH,"glib_slistautoptr_cleanup_GtkLockButton");
    }
    public static void glib_slistautoptr_cleanup_GtkLockButton ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkLockButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkLockButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2570.glib_queueautoptr_cleanup_GtkLockButton$MH,"glib_queueautoptr_cleanup_GtkLockButton");
    }
    public static void glib_queueautoptr_cleanup_GtkLockButton ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkLockButton$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkMenuButton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMenuButton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMenuButton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMenuButton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkMenuButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2570.glib_autoptr_clear_GtkMenuButton$MH,"glib_autoptr_clear_GtkMenuButton");
    }
    public static void glib_autoptr_clear_GtkMenuButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkMenuButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkMenuButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2570.glib_autoptr_cleanup_GtkMenuButton$MH,"glib_autoptr_cleanup_GtkMenuButton");
    }
    public static void glib_autoptr_cleanup_GtkMenuButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkMenuButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkMenuButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2571.glib_listautoptr_cleanup_GtkMenuButton$MH,"glib_listautoptr_cleanup_GtkMenuButton");
    }
    public static void glib_listautoptr_cleanup_GtkMenuButton ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkMenuButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkMenuButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2571.glib_slistautoptr_cleanup_GtkMenuButton$MH,"glib_slistautoptr_cleanup_GtkMenuButton");
    }
    public static void glib_slistautoptr_cleanup_GtkMenuButton ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkMenuButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkMenuButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2571.glib_queueautoptr_cleanup_GtkMenuButton$MH,"glib_queueautoptr_cleanup_GtkMenuButton");
    }
    public static void glib_queueautoptr_cleanup_GtkMenuButton ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkMenuButton$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkMessageDialog_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMessageDialog_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMessageDialog_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMessageDialog_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkMessageDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2571.glib_autoptr_clear_GtkMessageDialog$MH,"glib_autoptr_clear_GtkMessageDialog");
    }
    public static void glib_autoptr_clear_GtkMessageDialog ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkMessageDialog$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkMessageDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2571.glib_autoptr_cleanup_GtkMessageDialog$MH,"glib_autoptr_cleanup_GtkMessageDialog");
    }
    public static void glib_autoptr_cleanup_GtkMessageDialog ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkMessageDialog$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkMessageDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2571.glib_listautoptr_cleanup_GtkMessageDialog$MH,"glib_listautoptr_cleanup_GtkMessageDialog");
    }
    public static void glib_listautoptr_cleanup_GtkMessageDialog ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkMessageDialog$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkMessageDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2572.glib_slistautoptr_cleanup_GtkMessageDialog$MH,"glib_slistautoptr_cleanup_GtkMessageDialog");
    }
    public static void glib_slistautoptr_cleanup_GtkMessageDialog ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkMessageDialog$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkMessageDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2572.glib_queueautoptr_cleanup_GtkMessageDialog$MH,"glib_queueautoptr_cleanup_GtkMessageDialog");
    }
    public static void glib_queueautoptr_cleanup_GtkMessageDialog ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkMessageDialog$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkMountOperation_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMountOperation_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMountOperation_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkMountOperation_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkMountOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$2572.glib_autoptr_clear_GtkMountOperation$MH,"glib_autoptr_clear_GtkMountOperation");
    }
    public static void glib_autoptr_clear_GtkMountOperation ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkMountOperation$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkMountOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$2572.glib_autoptr_cleanup_GtkMountOperation$MH,"glib_autoptr_cleanup_GtkMountOperation");
    }
    public static void glib_autoptr_cleanup_GtkMountOperation ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkMountOperation$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkMountOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$2572.glib_listautoptr_cleanup_GtkMountOperation$MH,"glib_listautoptr_cleanup_GtkMountOperation");
    }
    public static void glib_listautoptr_cleanup_GtkMountOperation ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkMountOperation$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkMountOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$2572.glib_slistautoptr_cleanup_GtkMountOperation$MH,"glib_slistautoptr_cleanup_GtkMountOperation");
    }
    public static void glib_slistautoptr_cleanup_GtkMountOperation ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkMountOperation$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkMountOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$2573.glib_queueautoptr_cleanup_GtkMountOperation$MH,"glib_queueautoptr_cleanup_GtkMountOperation");
    }
    public static void glib_queueautoptr_cleanup_GtkMountOperation ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkMountOperation$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkNotebook_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkNotebook_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkNotebook_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkNotebook_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkNotebook$MH() {
        return RuntimeHelper.requireNonNull(constants$2573.glib_autoptr_clear_GtkNotebook$MH,"glib_autoptr_clear_GtkNotebook");
    }
    public static void glib_autoptr_clear_GtkNotebook ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkNotebook$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkNotebook$MH() {
        return RuntimeHelper.requireNonNull(constants$2573.glib_autoptr_cleanup_GtkNotebook$MH,"glib_autoptr_cleanup_GtkNotebook");
    }
    public static void glib_autoptr_cleanup_GtkNotebook ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkNotebook$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkNotebook$MH() {
        return RuntimeHelper.requireNonNull(constants$2573.glib_listautoptr_cleanup_GtkNotebook$MH,"glib_listautoptr_cleanup_GtkNotebook");
    }
    public static void glib_listautoptr_cleanup_GtkNotebook ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkNotebook$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkNotebook$MH() {
        return RuntimeHelper.requireNonNull(constants$2573.glib_slistautoptr_cleanup_GtkNotebook$MH,"glib_slistautoptr_cleanup_GtkNotebook");
    }
    public static void glib_slistautoptr_cleanup_GtkNotebook ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkNotebook$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkNotebook$MH() {
        return RuntimeHelper.requireNonNull(constants$2573.glib_queueautoptr_cleanup_GtkNotebook$MH,"glib_queueautoptr_cleanup_GtkNotebook");
    }
    public static void glib_queueautoptr_cleanup_GtkNotebook ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkNotebook$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkOrientable_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkOrientable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkOrientable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkOrientable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkOrientable$MH() {
        return RuntimeHelper.requireNonNull(constants$2574.glib_autoptr_clear_GtkOrientable$MH,"glib_autoptr_clear_GtkOrientable");
    }
    public static void glib_autoptr_clear_GtkOrientable ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkOrientable$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkOrientable$MH() {
        return RuntimeHelper.requireNonNull(constants$2574.glib_autoptr_cleanup_GtkOrientable$MH,"glib_autoptr_cleanup_GtkOrientable");
    }
    public static void glib_autoptr_cleanup_GtkOrientable ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkOrientable$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkOrientable$MH() {
        return RuntimeHelper.requireNonNull(constants$2574.glib_listautoptr_cleanup_GtkOrientable$MH,"glib_listautoptr_cleanup_GtkOrientable");
    }
    public static void glib_listautoptr_cleanup_GtkOrientable ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkOrientable$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkOrientable$MH() {
        return RuntimeHelper.requireNonNull(constants$2574.glib_slistautoptr_cleanup_GtkOrientable$MH,"glib_slistautoptr_cleanup_GtkOrientable");
    }
    public static void glib_slistautoptr_cleanup_GtkOrientable ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkOrientable$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkOrientable$MH() {
        return RuntimeHelper.requireNonNull(constants$2574.glib_queueautoptr_cleanup_GtkOrientable$MH,"glib_queueautoptr_cleanup_GtkOrientable");
    }
    public static void glib_queueautoptr_cleanup_GtkOrientable ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkOrientable$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkOverlay_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkOverlay_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkOverlay_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkOverlay_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkOverlay$MH() {
        return RuntimeHelper.requireNonNull(constants$2574.glib_autoptr_clear_GtkOverlay$MH,"glib_autoptr_clear_GtkOverlay");
    }
    public static void glib_autoptr_clear_GtkOverlay ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkOverlay$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkOverlay$MH() {
        return RuntimeHelper.requireNonNull(constants$2575.glib_autoptr_cleanup_GtkOverlay$MH,"glib_autoptr_cleanup_GtkOverlay");
    }
    public static void glib_autoptr_cleanup_GtkOverlay ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkOverlay$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkOverlay$MH() {
        return RuntimeHelper.requireNonNull(constants$2575.glib_listautoptr_cleanup_GtkOverlay$MH,"glib_listautoptr_cleanup_GtkOverlay");
    }
    public static void glib_listautoptr_cleanup_GtkOverlay ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkOverlay$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkOverlay$MH() {
        return RuntimeHelper.requireNonNull(constants$2575.glib_slistautoptr_cleanup_GtkOverlay$MH,"glib_slistautoptr_cleanup_GtkOverlay");
    }
    public static void glib_slistautoptr_cleanup_GtkOverlay ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkOverlay$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkOverlay$MH() {
        return RuntimeHelper.requireNonNull(constants$2575.glib_queueautoptr_cleanup_GtkOverlay$MH,"glib_queueautoptr_cleanup_GtkOverlay");
    }
    public static void glib_queueautoptr_cleanup_GtkOverlay ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkOverlay$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkPageSetup_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPageSetup_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPageSetup_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPageSetup_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkPageSetup$MH() {
        return RuntimeHelper.requireNonNull(constants$2575.glib_autoptr_clear_GtkPageSetup$MH,"glib_autoptr_clear_GtkPageSetup");
    }
    public static void glib_autoptr_clear_GtkPageSetup ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkPageSetup$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkPageSetup$MH() {
        return RuntimeHelper.requireNonNull(constants$2575.glib_autoptr_cleanup_GtkPageSetup$MH,"glib_autoptr_cleanup_GtkPageSetup");
    }
    public static void glib_autoptr_cleanup_GtkPageSetup ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkPageSetup$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkPageSetup$MH() {
        return RuntimeHelper.requireNonNull(constants$2576.glib_listautoptr_cleanup_GtkPageSetup$MH,"glib_listautoptr_cleanup_GtkPageSetup");
    }
    public static void glib_listautoptr_cleanup_GtkPageSetup ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkPageSetup$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkPageSetup$MH() {
        return RuntimeHelper.requireNonNull(constants$2576.glib_slistautoptr_cleanup_GtkPageSetup$MH,"glib_slistautoptr_cleanup_GtkPageSetup");
    }
    public static void glib_slistautoptr_cleanup_GtkPageSetup ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkPageSetup$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkPageSetup$MH() {
        return RuntimeHelper.requireNonNull(constants$2576.glib_queueautoptr_cleanup_GtkPageSetup$MH,"glib_queueautoptr_cleanup_GtkPageSetup");
    }
    public static void glib_queueautoptr_cleanup_GtkPageSetup ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkPageSetup$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkPaned_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPaned_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPaned_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPaned_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkPaned$MH() {
        return RuntimeHelper.requireNonNull(constants$2576.glib_autoptr_clear_GtkPaned$MH,"glib_autoptr_clear_GtkPaned");
    }
    public static void glib_autoptr_clear_GtkPaned ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkPaned$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkPaned$MH() {
        return RuntimeHelper.requireNonNull(constants$2576.glib_autoptr_cleanup_GtkPaned$MH,"glib_autoptr_cleanup_GtkPaned");
    }
    public static void glib_autoptr_cleanup_GtkPaned ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkPaned$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkPaned$MH() {
        return RuntimeHelper.requireNonNull(constants$2576.glib_listautoptr_cleanup_GtkPaned$MH,"glib_listautoptr_cleanup_GtkPaned");
    }
    public static void glib_listautoptr_cleanup_GtkPaned ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkPaned$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkPaned$MH() {
        return RuntimeHelper.requireNonNull(constants$2577.glib_slistautoptr_cleanup_GtkPaned$MH,"glib_slistautoptr_cleanup_GtkPaned");
    }
    public static void glib_slistautoptr_cleanup_GtkPaned ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkPaned$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkPaned$MH() {
        return RuntimeHelper.requireNonNull(constants$2577.glib_queueautoptr_cleanup_GtkPaned$MH,"glib_queueautoptr_cleanup_GtkPaned");
    }
    public static void glib_queueautoptr_cleanup_GtkPaned ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkPaned$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkPopover_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPopover_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPopover_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPopover_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkPopover$MH() {
        return RuntimeHelper.requireNonNull(constants$2577.glib_autoptr_clear_GtkPopover$MH,"glib_autoptr_clear_GtkPopover");
    }
    public static void glib_autoptr_clear_GtkPopover ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkPopover$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkPopover$MH() {
        return RuntimeHelper.requireNonNull(constants$2577.glib_autoptr_cleanup_GtkPopover$MH,"glib_autoptr_cleanup_GtkPopover");
    }
    public static void glib_autoptr_cleanup_GtkPopover ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkPopover$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkPopover$MH() {
        return RuntimeHelper.requireNonNull(constants$2577.glib_listautoptr_cleanup_GtkPopover$MH,"glib_listautoptr_cleanup_GtkPopover");
    }
    public static void glib_listautoptr_cleanup_GtkPopover ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkPopover$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkPopover$MH() {
        return RuntimeHelper.requireNonNull(constants$2577.glib_slistautoptr_cleanup_GtkPopover$MH,"glib_slistautoptr_cleanup_GtkPopover");
    }
    public static void glib_slistautoptr_cleanup_GtkPopover ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkPopover$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkPopover$MH() {
        return RuntimeHelper.requireNonNull(constants$2578.glib_queueautoptr_cleanup_GtkPopover$MH,"glib_queueautoptr_cleanup_GtkPopover");
    }
    public static void glib_queueautoptr_cleanup_GtkPopover ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkPopover$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkPopoverMenu_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPopoverMenu_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPopoverMenu_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPopoverMenu_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkPopoverMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$2578.glib_autoptr_clear_GtkPopoverMenu$MH,"glib_autoptr_clear_GtkPopoverMenu");
    }
    public static void glib_autoptr_clear_GtkPopoverMenu ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkPopoverMenu$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkPopoverMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$2578.glib_autoptr_cleanup_GtkPopoverMenu$MH,"glib_autoptr_cleanup_GtkPopoverMenu");
    }
    public static void glib_autoptr_cleanup_GtkPopoverMenu ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkPopoverMenu$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkPopoverMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$2578.glib_listautoptr_cleanup_GtkPopoverMenu$MH,"glib_listautoptr_cleanup_GtkPopoverMenu");
    }
    public static void glib_listautoptr_cleanup_GtkPopoverMenu ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkPopoverMenu$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkPopoverMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$2578.glib_slistautoptr_cleanup_GtkPopoverMenu$MH,"glib_slistautoptr_cleanup_GtkPopoverMenu");
    }
    public static void glib_slistautoptr_cleanup_GtkPopoverMenu ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkPopoverMenu$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkPopoverMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$2578.glib_queueautoptr_cleanup_GtkPopoverMenu$MH,"glib_queueautoptr_cleanup_GtkPopoverMenu");
    }
    public static void glib_queueautoptr_cleanup_GtkPopoverMenu ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkPopoverMenu$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkPrintContext_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintContext_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintContext_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintContext_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkPrintContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2579.glib_autoptr_clear_GtkPrintContext$MH,"glib_autoptr_clear_GtkPrintContext");
    }
    public static void glib_autoptr_clear_GtkPrintContext ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkPrintContext$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkPrintContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2579.glib_autoptr_cleanup_GtkPrintContext$MH,"glib_autoptr_cleanup_GtkPrintContext");
    }
    public static void glib_autoptr_cleanup_GtkPrintContext ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkPrintContext$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkPrintContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2579.glib_listautoptr_cleanup_GtkPrintContext$MH,"glib_listautoptr_cleanup_GtkPrintContext");
    }
    public static void glib_listautoptr_cleanup_GtkPrintContext ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkPrintContext$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkPrintContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2579.glib_slistautoptr_cleanup_GtkPrintContext$MH,"glib_slistautoptr_cleanup_GtkPrintContext");
    }
    public static void glib_slistautoptr_cleanup_GtkPrintContext ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkPrintContext$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkPrintContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2579.glib_queueautoptr_cleanup_GtkPrintContext$MH,"glib_queueautoptr_cleanup_GtkPrintContext");
    }
    public static void glib_queueautoptr_cleanup_GtkPrintContext ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkPrintContext$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkPrintOperation_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintOperation_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintOperation_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintOperation_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkPrintOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$2579.glib_autoptr_clear_GtkPrintOperation$MH,"glib_autoptr_clear_GtkPrintOperation");
    }
    public static void glib_autoptr_clear_GtkPrintOperation ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkPrintOperation$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkPrintOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$2580.glib_autoptr_cleanup_GtkPrintOperation$MH,"glib_autoptr_cleanup_GtkPrintOperation");
    }
    public static void glib_autoptr_cleanup_GtkPrintOperation ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkPrintOperation$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkPrintOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$2580.glib_listautoptr_cleanup_GtkPrintOperation$MH,"glib_listautoptr_cleanup_GtkPrintOperation");
    }
    public static void glib_listautoptr_cleanup_GtkPrintOperation ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkPrintOperation$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkPrintOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$2580.glib_slistautoptr_cleanup_GtkPrintOperation$MH,"glib_slistautoptr_cleanup_GtkPrintOperation");
    }
    public static void glib_slistautoptr_cleanup_GtkPrintOperation ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkPrintOperation$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkPrintOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$2580.glib_queueautoptr_cleanup_GtkPrintOperation$MH,"glib_queueautoptr_cleanup_GtkPrintOperation");
    }
    public static void glib_queueautoptr_cleanup_GtkPrintOperation ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkPrintOperation$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkPrintOperationPreview_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintOperationPreview_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintOperationPreview_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintOperationPreview_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkPrintOperationPreview$MH() {
        return RuntimeHelper.requireNonNull(constants$2580.glib_autoptr_clear_GtkPrintOperationPreview$MH,"glib_autoptr_clear_GtkPrintOperationPreview");
    }
    public static void glib_autoptr_clear_GtkPrintOperationPreview ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkPrintOperationPreview$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkPrintOperationPreview$MH() {
        return RuntimeHelper.requireNonNull(constants$2580.glib_autoptr_cleanup_GtkPrintOperationPreview$MH,"glib_autoptr_cleanup_GtkPrintOperationPreview");
    }
    public static void glib_autoptr_cleanup_GtkPrintOperationPreview ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkPrintOperationPreview$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkPrintOperationPreview$MH() {
        return RuntimeHelper.requireNonNull(constants$2581.glib_listautoptr_cleanup_GtkPrintOperationPreview$MH,"glib_listautoptr_cleanup_GtkPrintOperationPreview");
    }
    public static void glib_listautoptr_cleanup_GtkPrintOperationPreview ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkPrintOperationPreview$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkPrintOperationPreview$MH() {
        return RuntimeHelper.requireNonNull(constants$2581.glib_slistautoptr_cleanup_GtkPrintOperationPreview$MH,"glib_slistautoptr_cleanup_GtkPrintOperationPreview");
    }
    public static void glib_slistautoptr_cleanup_GtkPrintOperationPreview ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkPrintOperationPreview$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkPrintOperationPreview$MH() {
        return RuntimeHelper.requireNonNull(constants$2581.glib_queueautoptr_cleanup_GtkPrintOperationPreview$MH,"glib_queueautoptr_cleanup_GtkPrintOperationPreview");
    }
    public static void glib_queueautoptr_cleanup_GtkPrintOperationPreview ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkPrintOperationPreview$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkPrintSettings_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintSettings_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintSettings_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintSettings_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkPrintSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$2581.glib_autoptr_clear_GtkPrintSettings$MH,"glib_autoptr_clear_GtkPrintSettings");
    }
    public static void glib_autoptr_clear_GtkPrintSettings ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkPrintSettings$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkPrintSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$2581.glib_autoptr_cleanup_GtkPrintSettings$MH,"glib_autoptr_cleanup_GtkPrintSettings");
    }
    public static void glib_autoptr_cleanup_GtkPrintSettings ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkPrintSettings$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkPrintSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$2581.glib_listautoptr_cleanup_GtkPrintSettings$MH,"glib_listautoptr_cleanup_GtkPrintSettings");
    }
    public static void glib_listautoptr_cleanup_GtkPrintSettings ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkPrintSettings$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkPrintSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$2582.glib_slistautoptr_cleanup_GtkPrintSettings$MH,"glib_slistautoptr_cleanup_GtkPrintSettings");
    }
    public static void glib_slistautoptr_cleanup_GtkPrintSettings ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkPrintSettings$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkPrintSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$2582.glib_queueautoptr_cleanup_GtkPrintSettings$MH,"glib_queueautoptr_cleanup_GtkPrintSettings");
    }
    public static void glib_queueautoptr_cleanup_GtkPrintSettings ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkPrintSettings$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkProgressBar_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkProgressBar_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkProgressBar_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkProgressBar_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkProgressBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2582.glib_autoptr_clear_GtkProgressBar$MH,"glib_autoptr_clear_GtkProgressBar");
    }
    public static void glib_autoptr_clear_GtkProgressBar ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkProgressBar$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkProgressBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2582.glib_autoptr_cleanup_GtkProgressBar$MH,"glib_autoptr_cleanup_GtkProgressBar");
    }
    public static void glib_autoptr_cleanup_GtkProgressBar ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkProgressBar$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkProgressBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2582.glib_listautoptr_cleanup_GtkProgressBar$MH,"glib_listautoptr_cleanup_GtkProgressBar");
    }
    public static void glib_listautoptr_cleanup_GtkProgressBar ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkProgressBar$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkProgressBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2582.glib_slistautoptr_cleanup_GtkProgressBar$MH,"glib_slistautoptr_cleanup_GtkProgressBar");
    }
    public static void glib_slistautoptr_cleanup_GtkProgressBar ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkProgressBar$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkProgressBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2583.glib_queueautoptr_cleanup_GtkProgressBar$MH,"glib_queueautoptr_cleanup_GtkProgressBar");
    }
    public static void glib_queueautoptr_cleanup_GtkProgressBar ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkProgressBar$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkRange_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRange_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRange_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRange_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkRange$MH() {
        return RuntimeHelper.requireNonNull(constants$2583.glib_autoptr_clear_GtkRange$MH,"glib_autoptr_clear_GtkRange");
    }
    public static void glib_autoptr_clear_GtkRange ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkRange$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkRange$MH() {
        return RuntimeHelper.requireNonNull(constants$2583.glib_autoptr_cleanup_GtkRange$MH,"glib_autoptr_cleanup_GtkRange");
    }
    public static void glib_autoptr_cleanup_GtkRange ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkRange$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkRange$MH() {
        return RuntimeHelper.requireNonNull(constants$2583.glib_listautoptr_cleanup_GtkRange$MH,"glib_listautoptr_cleanup_GtkRange");
    }
    public static void glib_listautoptr_cleanup_GtkRange ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkRange$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkRange$MH() {
        return RuntimeHelper.requireNonNull(constants$2583.glib_slistautoptr_cleanup_GtkRange$MH,"glib_slistautoptr_cleanup_GtkRange");
    }
    public static void glib_slistautoptr_cleanup_GtkRange ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkRange$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkRange$MH() {
        return RuntimeHelper.requireNonNull(constants$2583.glib_queueautoptr_cleanup_GtkRange$MH,"glib_queueautoptr_cleanup_GtkRange");
    }
    public static void glib_queueautoptr_cleanup_GtkRange ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkRange$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkRecentManager_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentManager_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentManager_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentManager_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkRecentManager$MH() {
        return RuntimeHelper.requireNonNull(constants$2584.glib_autoptr_clear_GtkRecentManager$MH,"glib_autoptr_clear_GtkRecentManager");
    }
    public static void glib_autoptr_clear_GtkRecentManager ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkRecentManager$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkRecentManager$MH() {
        return RuntimeHelper.requireNonNull(constants$2584.glib_autoptr_cleanup_GtkRecentManager$MH,"glib_autoptr_cleanup_GtkRecentManager");
    }
    public static void glib_autoptr_cleanup_GtkRecentManager ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkRecentManager$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkRecentManager$MH() {
        return RuntimeHelper.requireNonNull(constants$2584.glib_listautoptr_cleanup_GtkRecentManager$MH,"glib_listautoptr_cleanup_GtkRecentManager");
    }
    public static void glib_listautoptr_cleanup_GtkRecentManager ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkRecentManager$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkRecentManager$MH() {
        return RuntimeHelper.requireNonNull(constants$2584.glib_slistautoptr_cleanup_GtkRecentManager$MH,"glib_slistautoptr_cleanup_GtkRecentManager");
    }
    public static void glib_slistautoptr_cleanup_GtkRecentManager ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkRecentManager$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkRecentManager$MH() {
        return RuntimeHelper.requireNonNull(constants$2584.glib_queueautoptr_cleanup_GtkRecentManager$MH,"glib_queueautoptr_cleanup_GtkRecentManager");
    }
    public static void glib_queueautoptr_cleanup_GtkRecentManager ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkRecentManager$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkRevealer_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRevealer_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRevealer_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRevealer_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkRevealer$MH() {
        return RuntimeHelper.requireNonNull(constants$2584.glib_autoptr_clear_GtkRevealer$MH,"glib_autoptr_clear_GtkRevealer");
    }
    public static void glib_autoptr_clear_GtkRevealer ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkRevealer$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkRevealer$MH() {
        return RuntimeHelper.requireNonNull(constants$2585.glib_autoptr_cleanup_GtkRevealer$MH,"glib_autoptr_cleanup_GtkRevealer");
    }
    public static void glib_autoptr_cleanup_GtkRevealer ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkRevealer$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkRevealer$MH() {
        return RuntimeHelper.requireNonNull(constants$2585.glib_listautoptr_cleanup_GtkRevealer$MH,"glib_listautoptr_cleanup_GtkRevealer");
    }
    public static void glib_listautoptr_cleanup_GtkRevealer ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkRevealer$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkRevealer$MH() {
        return RuntimeHelper.requireNonNull(constants$2585.glib_slistautoptr_cleanup_GtkRevealer$MH,"glib_slistautoptr_cleanup_GtkRevealer");
    }
    public static void glib_slistautoptr_cleanup_GtkRevealer ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkRevealer$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkRevealer$MH() {
        return RuntimeHelper.requireNonNull(constants$2585.glib_queueautoptr_cleanup_GtkRevealer$MH,"glib_queueautoptr_cleanup_GtkRevealer");
    }
    public static void glib_queueautoptr_cleanup_GtkRevealer ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkRevealer$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkScale_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScale_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScale_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScale_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkScale$MH() {
        return RuntimeHelper.requireNonNull(constants$2585.glib_autoptr_clear_GtkScale$MH,"glib_autoptr_clear_GtkScale");
    }
    public static void glib_autoptr_clear_GtkScale ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkScale$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkScale$MH() {
        return RuntimeHelper.requireNonNull(constants$2585.glib_autoptr_cleanup_GtkScale$MH,"glib_autoptr_cleanup_GtkScale");
    }
    public static void glib_autoptr_cleanup_GtkScale ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkScale$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkScale$MH() {
        return RuntimeHelper.requireNonNull(constants$2586.glib_listautoptr_cleanup_GtkScale$MH,"glib_listautoptr_cleanup_GtkScale");
    }
    public static void glib_listautoptr_cleanup_GtkScale ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkScale$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkScale$MH() {
        return RuntimeHelper.requireNonNull(constants$2586.glib_slistautoptr_cleanup_GtkScale$MH,"glib_slistautoptr_cleanup_GtkScale");
    }
    public static void glib_slistautoptr_cleanup_GtkScale ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkScale$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkScale$MH() {
        return RuntimeHelper.requireNonNull(constants$2586.glib_queueautoptr_cleanup_GtkScale$MH,"glib_queueautoptr_cleanup_GtkScale");
    }
    public static void glib_queueautoptr_cleanup_GtkScale ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkScale$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkScaleButton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScaleButton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScaleButton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScaleButton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkScaleButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2586.glib_autoptr_clear_GtkScaleButton$MH,"glib_autoptr_clear_GtkScaleButton");
    }
    public static void glib_autoptr_clear_GtkScaleButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkScaleButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkScaleButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2586.glib_autoptr_cleanup_GtkScaleButton$MH,"glib_autoptr_cleanup_GtkScaleButton");
    }
    public static void glib_autoptr_cleanup_GtkScaleButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkScaleButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkScaleButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2586.glib_listautoptr_cleanup_GtkScaleButton$MH,"glib_listautoptr_cleanup_GtkScaleButton");
    }
    public static void glib_listautoptr_cleanup_GtkScaleButton ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkScaleButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkScaleButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2587.glib_slistautoptr_cleanup_GtkScaleButton$MH,"glib_slistautoptr_cleanup_GtkScaleButton");
    }
    public static void glib_slistautoptr_cleanup_GtkScaleButton ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkScaleButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkScaleButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2587.glib_queueautoptr_cleanup_GtkScaleButton$MH,"glib_queueautoptr_cleanup_GtkScaleButton");
    }
    public static void glib_queueautoptr_cleanup_GtkScaleButton ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkScaleButton$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkScrollable_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScrollable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScrollable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScrollable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkScrollable$MH() {
        return RuntimeHelper.requireNonNull(constants$2587.glib_autoptr_clear_GtkScrollable$MH,"glib_autoptr_clear_GtkScrollable");
    }
    public static void glib_autoptr_clear_GtkScrollable ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkScrollable$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkScrollable$MH() {
        return RuntimeHelper.requireNonNull(constants$2587.glib_autoptr_cleanup_GtkScrollable$MH,"glib_autoptr_cleanup_GtkScrollable");
    }
    public static void glib_autoptr_cleanup_GtkScrollable ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkScrollable$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkScrollable$MH() {
        return RuntimeHelper.requireNonNull(constants$2587.glib_listautoptr_cleanup_GtkScrollable$MH,"glib_listautoptr_cleanup_GtkScrollable");
    }
    public static void glib_listautoptr_cleanup_GtkScrollable ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkScrollable$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkScrollable$MH() {
        return RuntimeHelper.requireNonNull(constants$2587.glib_slistautoptr_cleanup_GtkScrollable$MH,"glib_slistautoptr_cleanup_GtkScrollable");
    }
    public static void glib_slistautoptr_cleanup_GtkScrollable ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkScrollable$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkScrollable$MH() {
        return RuntimeHelper.requireNonNull(constants$2588.glib_queueautoptr_cleanup_GtkScrollable$MH,"glib_queueautoptr_cleanup_GtkScrollable");
    }
    public static void glib_queueautoptr_cleanup_GtkScrollable ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkScrollable$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkScrollbar_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScrollbar_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScrollbar_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScrollbar_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkScrollbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2588.glib_autoptr_clear_GtkScrollbar$MH,"glib_autoptr_clear_GtkScrollbar");
    }
    public static void glib_autoptr_clear_GtkScrollbar ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkScrollbar$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkScrollbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2588.glib_autoptr_cleanup_GtkScrollbar$MH,"glib_autoptr_cleanup_GtkScrollbar");
    }
    public static void glib_autoptr_cleanup_GtkScrollbar ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkScrollbar$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkScrollbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2588.glib_listautoptr_cleanup_GtkScrollbar$MH,"glib_listautoptr_cleanup_GtkScrollbar");
    }
    public static void glib_listautoptr_cleanup_GtkScrollbar ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkScrollbar$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkScrollbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2588.glib_slistautoptr_cleanup_GtkScrollbar$MH,"glib_slistautoptr_cleanup_GtkScrollbar");
    }
    public static void glib_slistautoptr_cleanup_GtkScrollbar ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkScrollbar$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkScrollbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2588.glib_queueautoptr_cleanup_GtkScrollbar$MH,"glib_queueautoptr_cleanup_GtkScrollbar");
    }
    public static void glib_queueautoptr_cleanup_GtkScrollbar ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkScrollbar$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkScrolledWindow_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScrolledWindow_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScrolledWindow_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkScrolledWindow_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkScrolledWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$2589.glib_autoptr_clear_GtkScrolledWindow$MH,"glib_autoptr_clear_GtkScrolledWindow");
    }
    public static void glib_autoptr_clear_GtkScrolledWindow ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkScrolledWindow$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkScrolledWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$2589.glib_autoptr_cleanup_GtkScrolledWindow$MH,"glib_autoptr_cleanup_GtkScrolledWindow");
    }
    public static void glib_autoptr_cleanup_GtkScrolledWindow ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkScrolledWindow$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkScrolledWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$2589.glib_listautoptr_cleanup_GtkScrolledWindow$MH,"glib_listautoptr_cleanup_GtkScrolledWindow");
    }
    public static void glib_listautoptr_cleanup_GtkScrolledWindow ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkScrolledWindow$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkScrolledWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$2589.glib_slistautoptr_cleanup_GtkScrolledWindow$MH,"glib_slistautoptr_cleanup_GtkScrolledWindow");
    }
    public static void glib_slistautoptr_cleanup_GtkScrolledWindow ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkScrolledWindow$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkScrolledWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$2589.glib_queueautoptr_cleanup_GtkScrolledWindow$MH,"glib_queueautoptr_cleanup_GtkScrolledWindow");
    }
    public static void glib_queueautoptr_cleanup_GtkScrolledWindow ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkScrolledWindow$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkSearchBar_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSearchBar_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSearchBar_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSearchBar_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkSearchBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2589.glib_autoptr_clear_GtkSearchBar$MH,"glib_autoptr_clear_GtkSearchBar");
    }
    public static void glib_autoptr_clear_GtkSearchBar ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkSearchBar$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkSearchBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2590.glib_autoptr_cleanup_GtkSearchBar$MH,"glib_autoptr_cleanup_GtkSearchBar");
    }
    public static void glib_autoptr_cleanup_GtkSearchBar ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkSearchBar$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkSearchBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2590.glib_listautoptr_cleanup_GtkSearchBar$MH,"glib_listautoptr_cleanup_GtkSearchBar");
    }
    public static void glib_listautoptr_cleanup_GtkSearchBar ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkSearchBar$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkSearchBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2590.glib_slistautoptr_cleanup_GtkSearchBar$MH,"glib_slistautoptr_cleanup_GtkSearchBar");
    }
    public static void glib_slistautoptr_cleanup_GtkSearchBar ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkSearchBar$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkSearchBar$MH() {
        return RuntimeHelper.requireNonNull(constants$2590.glib_queueautoptr_cleanup_GtkSearchBar$MH,"glib_queueautoptr_cleanup_GtkSearchBar");
    }
    public static void glib_queueautoptr_cleanup_GtkSearchBar ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkSearchBar$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkSearchEntry_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSearchEntry_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSearchEntry_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSearchEntry_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkSearchEntry$MH() {
        return RuntimeHelper.requireNonNull(constants$2590.glib_autoptr_clear_GtkSearchEntry$MH,"glib_autoptr_clear_GtkSearchEntry");
    }
    public static void glib_autoptr_clear_GtkSearchEntry ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkSearchEntry$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkSearchEntry$MH() {
        return RuntimeHelper.requireNonNull(constants$2590.glib_autoptr_cleanup_GtkSearchEntry$MH,"glib_autoptr_cleanup_GtkSearchEntry");
    }
    public static void glib_autoptr_cleanup_GtkSearchEntry ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkSearchEntry$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkSearchEntry$MH() {
        return RuntimeHelper.requireNonNull(constants$2591.glib_listautoptr_cleanup_GtkSearchEntry$MH,"glib_listautoptr_cleanup_GtkSearchEntry");
    }
    public static void glib_listautoptr_cleanup_GtkSearchEntry ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkSearchEntry$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkSearchEntry$MH() {
        return RuntimeHelper.requireNonNull(constants$2591.glib_slistautoptr_cleanup_GtkSearchEntry$MH,"glib_slistautoptr_cleanup_GtkSearchEntry");
    }
    public static void glib_slistautoptr_cleanup_GtkSearchEntry ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkSearchEntry$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkSearchEntry$MH() {
        return RuntimeHelper.requireNonNull(constants$2591.glib_queueautoptr_cleanup_GtkSearchEntry$MH,"glib_queueautoptr_cleanup_GtkSearchEntry");
    }
    public static void glib_queueautoptr_cleanup_GtkSearchEntry ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkSearchEntry$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkSeparator_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSeparator_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSeparator_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSeparator_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkSeparator$MH() {
        return RuntimeHelper.requireNonNull(constants$2591.glib_autoptr_clear_GtkSeparator$MH,"glib_autoptr_clear_GtkSeparator");
    }
    public static void glib_autoptr_clear_GtkSeparator ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkSeparator$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkSeparator$MH() {
        return RuntimeHelper.requireNonNull(constants$2591.glib_autoptr_cleanup_GtkSeparator$MH,"glib_autoptr_cleanup_GtkSeparator");
    }
    public static void glib_autoptr_cleanup_GtkSeparator ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkSeparator$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkSeparator$MH() {
        return RuntimeHelper.requireNonNull(constants$2591.glib_listautoptr_cleanup_GtkSeparator$MH,"glib_listautoptr_cleanup_GtkSeparator");
    }
    public static void glib_listautoptr_cleanup_GtkSeparator ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkSeparator$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkSeparator$MH() {
        return RuntimeHelper.requireNonNull(constants$2592.glib_slistautoptr_cleanup_GtkSeparator$MH,"glib_slistautoptr_cleanup_GtkSeparator");
    }
    public static void glib_slistautoptr_cleanup_GtkSeparator ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkSeparator$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkSeparator$MH() {
        return RuntimeHelper.requireNonNull(constants$2592.glib_queueautoptr_cleanup_GtkSeparator$MH,"glib_queueautoptr_cleanup_GtkSeparator");
    }
    public static void glib_queueautoptr_cleanup_GtkSeparator ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkSeparator$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkSettings_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSettings_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSettings_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSettings_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$2592.glib_autoptr_clear_GtkSettings$MH,"glib_autoptr_clear_GtkSettings");
    }
    public static void glib_autoptr_clear_GtkSettings ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkSettings$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$2592.glib_autoptr_cleanup_GtkSettings$MH,"glib_autoptr_cleanup_GtkSettings");
    }
    public static void glib_autoptr_cleanup_GtkSettings ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkSettings$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$2592.glib_listautoptr_cleanup_GtkSettings$MH,"glib_listautoptr_cleanup_GtkSettings");
    }
    public static void glib_listautoptr_cleanup_GtkSettings ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkSettings$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$2592.glib_slistautoptr_cleanup_GtkSettings$MH,"glib_slistautoptr_cleanup_GtkSettings");
    }
    public static void glib_slistautoptr_cleanup_GtkSettings ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkSettings$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$2593.glib_queueautoptr_cleanup_GtkSettings$MH,"glib_queueautoptr_cleanup_GtkSettings");
    }
    public static void glib_queueautoptr_cleanup_GtkSettings ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkSettings$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkStackSidebar_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStackSidebar_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStackSidebar_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStackSidebar_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkStackSidebar$MH() {
        return RuntimeHelper.requireNonNull(constants$2593.glib_autoptr_clear_GtkStackSidebar$MH,"glib_autoptr_clear_GtkStackSidebar");
    }
    public static void glib_autoptr_clear_GtkStackSidebar ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkStackSidebar$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkStackSidebar$MH() {
        return RuntimeHelper.requireNonNull(constants$2593.glib_autoptr_cleanup_GtkStackSidebar$MH,"glib_autoptr_cleanup_GtkStackSidebar");
    }
    public static void glib_autoptr_cleanup_GtkStackSidebar ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkStackSidebar$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkStackSidebar$MH() {
        return RuntimeHelper.requireNonNull(constants$2593.glib_listautoptr_cleanup_GtkStackSidebar$MH,"glib_listautoptr_cleanup_GtkStackSidebar");
    }
    public static void glib_listautoptr_cleanup_GtkStackSidebar ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkStackSidebar$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkStackSidebar$MH() {
        return RuntimeHelper.requireNonNull(constants$2593.glib_slistautoptr_cleanup_GtkStackSidebar$MH,"glib_slistautoptr_cleanup_GtkStackSidebar");
    }
    public static void glib_slistautoptr_cleanup_GtkStackSidebar ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkStackSidebar$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkStackSidebar$MH() {
        return RuntimeHelper.requireNonNull(constants$2593.glib_queueautoptr_cleanup_GtkStackSidebar$MH,"glib_queueautoptr_cleanup_GtkStackSidebar");
    }
    public static void glib_queueautoptr_cleanup_GtkStackSidebar ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkStackSidebar$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkSizeGroup_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSizeGroup_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSizeGroup_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSizeGroup_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkSizeGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$2594.glib_autoptr_clear_GtkSizeGroup$MH,"glib_autoptr_clear_GtkSizeGroup");
    }
    public static void glib_autoptr_clear_GtkSizeGroup ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkSizeGroup$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkSizeGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$2594.glib_autoptr_cleanup_GtkSizeGroup$MH,"glib_autoptr_cleanup_GtkSizeGroup");
    }
    public static void glib_autoptr_cleanup_GtkSizeGroup ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkSizeGroup$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkSizeGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$2594.glib_listautoptr_cleanup_GtkSizeGroup$MH,"glib_listautoptr_cleanup_GtkSizeGroup");
    }
    public static void glib_listautoptr_cleanup_GtkSizeGroup ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkSizeGroup$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkSizeGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$2594.glib_slistautoptr_cleanup_GtkSizeGroup$MH,"glib_slistautoptr_cleanup_GtkSizeGroup");
    }
    public static void glib_slistautoptr_cleanup_GtkSizeGroup ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkSizeGroup$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkSizeGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$2594.glib_queueautoptr_cleanup_GtkSizeGroup$MH,"glib_queueautoptr_cleanup_GtkSizeGroup");
    }
    public static void glib_queueautoptr_cleanup_GtkSizeGroup ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkSizeGroup$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkSpinButton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSpinButton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSpinButton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSpinButton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkSpinButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2594.glib_autoptr_clear_GtkSpinButton$MH,"glib_autoptr_clear_GtkSpinButton");
    }
    public static void glib_autoptr_clear_GtkSpinButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkSpinButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkSpinButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2595.glib_autoptr_cleanup_GtkSpinButton$MH,"glib_autoptr_cleanup_GtkSpinButton");
    }
    public static void glib_autoptr_cleanup_GtkSpinButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkSpinButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkSpinButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2595.glib_listautoptr_cleanup_GtkSpinButton$MH,"glib_listautoptr_cleanup_GtkSpinButton");
    }
    public static void glib_listautoptr_cleanup_GtkSpinButton ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkSpinButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkSpinButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2595.glib_slistautoptr_cleanup_GtkSpinButton$MH,"glib_slistautoptr_cleanup_GtkSpinButton");
    }
    public static void glib_slistautoptr_cleanup_GtkSpinButton ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkSpinButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkSpinButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2595.glib_queueautoptr_cleanup_GtkSpinButton$MH,"glib_queueautoptr_cleanup_GtkSpinButton");
    }
    public static void glib_queueautoptr_cleanup_GtkSpinButton ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkSpinButton$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkSpinner_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSpinner_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSpinner_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSpinner_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkSpinner$MH() {
        return RuntimeHelper.requireNonNull(constants$2595.glib_autoptr_clear_GtkSpinner$MH,"glib_autoptr_clear_GtkSpinner");
    }
    public static void glib_autoptr_clear_GtkSpinner ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkSpinner$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkSpinner$MH() {
        return RuntimeHelper.requireNonNull(constants$2595.glib_autoptr_cleanup_GtkSpinner$MH,"glib_autoptr_cleanup_GtkSpinner");
    }
    public static void glib_autoptr_cleanup_GtkSpinner ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkSpinner$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkSpinner$MH() {
        return RuntimeHelper.requireNonNull(constants$2596.glib_listautoptr_cleanup_GtkSpinner$MH,"glib_listautoptr_cleanup_GtkSpinner");
    }
    public static void glib_listautoptr_cleanup_GtkSpinner ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkSpinner$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkSpinner$MH() {
        return RuntimeHelper.requireNonNull(constants$2596.glib_slistautoptr_cleanup_GtkSpinner$MH,"glib_slistautoptr_cleanup_GtkSpinner");
    }
    public static void glib_slistautoptr_cleanup_GtkSpinner ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkSpinner$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkSpinner$MH() {
        return RuntimeHelper.requireNonNull(constants$2596.glib_queueautoptr_cleanup_GtkSpinner$MH,"glib_queueautoptr_cleanup_GtkSpinner");
    }
    public static void glib_queueautoptr_cleanup_GtkSpinner ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkSpinner$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkStack_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStack_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStack_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStack_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkStack$MH() {
        return RuntimeHelper.requireNonNull(constants$2596.glib_autoptr_clear_GtkStack$MH,"glib_autoptr_clear_GtkStack");
    }
    public static void glib_autoptr_clear_GtkStack ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkStack$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkStack$MH() {
        return RuntimeHelper.requireNonNull(constants$2596.glib_autoptr_cleanup_GtkStack$MH,"glib_autoptr_cleanup_GtkStack");
    }
    public static void glib_autoptr_cleanup_GtkStack ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkStack$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkStack$MH() {
        return RuntimeHelper.requireNonNull(constants$2596.glib_listautoptr_cleanup_GtkStack$MH,"glib_listautoptr_cleanup_GtkStack");
    }
    public static void glib_listautoptr_cleanup_GtkStack ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkStack$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkStack$MH() {
        return RuntimeHelper.requireNonNull(constants$2597.glib_slistautoptr_cleanup_GtkStack$MH,"glib_slistautoptr_cleanup_GtkStack");
    }
    public static void glib_slistautoptr_cleanup_GtkStack ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkStack$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkStack$MH() {
        return RuntimeHelper.requireNonNull(constants$2597.glib_queueautoptr_cleanup_GtkStack$MH,"glib_queueautoptr_cleanup_GtkStack");
    }
    public static void glib_queueautoptr_cleanup_GtkStack ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkStack$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkStackSwitcher_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStackSwitcher_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStackSwitcher_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStackSwitcher_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkStackSwitcher$MH() {
        return RuntimeHelper.requireNonNull(constants$2597.glib_autoptr_clear_GtkStackSwitcher$MH,"glib_autoptr_clear_GtkStackSwitcher");
    }
    public static void glib_autoptr_clear_GtkStackSwitcher ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkStackSwitcher$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkStackSwitcher$MH() {
        return RuntimeHelper.requireNonNull(constants$2597.glib_autoptr_cleanup_GtkStackSwitcher$MH,"glib_autoptr_cleanup_GtkStackSwitcher");
    }
    public static void glib_autoptr_cleanup_GtkStackSwitcher ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkStackSwitcher$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkStackSwitcher$MH() {
        return RuntimeHelper.requireNonNull(constants$2597.glib_listautoptr_cleanup_GtkStackSwitcher$MH,"glib_listautoptr_cleanup_GtkStackSwitcher");
    }
    public static void glib_listautoptr_cleanup_GtkStackSwitcher ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkStackSwitcher$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkStackSwitcher$MH() {
        return RuntimeHelper.requireNonNull(constants$2597.glib_slistautoptr_cleanup_GtkStackSwitcher$MH,"glib_slistautoptr_cleanup_GtkStackSwitcher");
    }
    public static void glib_slistautoptr_cleanup_GtkStackSwitcher ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkStackSwitcher$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkStackSwitcher$MH() {
        return RuntimeHelper.requireNonNull(constants$2598.glib_queueautoptr_cleanup_GtkStackSwitcher$MH,"glib_queueautoptr_cleanup_GtkStackSwitcher");
    }
    public static void glib_queueautoptr_cleanup_GtkStackSwitcher ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkStackSwitcher$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkStatusbar_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStatusbar_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStatusbar_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStatusbar_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkStatusbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2598.glib_autoptr_clear_GtkStatusbar$MH,"glib_autoptr_clear_GtkStatusbar");
    }
    public static void glib_autoptr_clear_GtkStatusbar ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkStatusbar$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkStatusbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2598.glib_autoptr_cleanup_GtkStatusbar$MH,"glib_autoptr_cleanup_GtkStatusbar");
    }
    public static void glib_autoptr_cleanup_GtkStatusbar ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkStatusbar$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkStatusbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2598.glib_listautoptr_cleanup_GtkStatusbar$MH,"glib_listautoptr_cleanup_GtkStatusbar");
    }
    public static void glib_listautoptr_cleanup_GtkStatusbar ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkStatusbar$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkStatusbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2598.glib_slistautoptr_cleanup_GtkStatusbar$MH,"glib_slistautoptr_cleanup_GtkStatusbar");
    }
    public static void glib_slistautoptr_cleanup_GtkStatusbar ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkStatusbar$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkStatusbar$MH() {
        return RuntimeHelper.requireNonNull(constants$2598.glib_queueautoptr_cleanup_GtkStatusbar$MH,"glib_queueautoptr_cleanup_GtkStatusbar");
    }
    public static void glib_queueautoptr_cleanup_GtkStatusbar ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkStatusbar$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkStyleContext_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStyleContext_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStyleContext_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStyleContext_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkStyleContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2599.glib_autoptr_clear_GtkStyleContext$MH,"glib_autoptr_clear_GtkStyleContext");
    }
    public static void glib_autoptr_clear_GtkStyleContext ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkStyleContext$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkStyleContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2599.glib_autoptr_cleanup_GtkStyleContext$MH,"glib_autoptr_cleanup_GtkStyleContext");
    }
    public static void glib_autoptr_cleanup_GtkStyleContext ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkStyleContext$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkStyleContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2599.glib_listautoptr_cleanup_GtkStyleContext$MH,"glib_listautoptr_cleanup_GtkStyleContext");
    }
    public static void glib_listautoptr_cleanup_GtkStyleContext ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkStyleContext$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkStyleContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2599.glib_slistautoptr_cleanup_GtkStyleContext$MH,"glib_slistautoptr_cleanup_GtkStyleContext");
    }
    public static void glib_slistautoptr_cleanup_GtkStyleContext ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkStyleContext$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkStyleContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2599.glib_queueautoptr_cleanup_GtkStyleContext$MH,"glib_queueautoptr_cleanup_GtkStyleContext");
    }
    public static void glib_queueautoptr_cleanup_GtkStyleContext ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkStyleContext$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkStyleProvider_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStyleProvider_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStyleProvider_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkStyleProvider_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkStyleProvider$MH() {
        return RuntimeHelper.requireNonNull(constants$2599.glib_autoptr_clear_GtkStyleProvider$MH,"glib_autoptr_clear_GtkStyleProvider");
    }
    public static void glib_autoptr_clear_GtkStyleProvider ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkStyleProvider$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkStyleProvider$MH() {
        return RuntimeHelper.requireNonNull(constants$2600.glib_autoptr_cleanup_GtkStyleProvider$MH,"glib_autoptr_cleanup_GtkStyleProvider");
    }
    public static void glib_autoptr_cleanup_GtkStyleProvider ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkStyleProvider$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkStyleProvider$MH() {
        return RuntimeHelper.requireNonNull(constants$2600.glib_listautoptr_cleanup_GtkStyleProvider$MH,"glib_listautoptr_cleanup_GtkStyleProvider");
    }
    public static void glib_listautoptr_cleanup_GtkStyleProvider ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkStyleProvider$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkStyleProvider$MH() {
        return RuntimeHelper.requireNonNull(constants$2600.glib_slistautoptr_cleanup_GtkStyleProvider$MH,"glib_slistautoptr_cleanup_GtkStyleProvider");
    }
    public static void glib_slistautoptr_cleanup_GtkStyleProvider ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkStyleProvider$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkStyleProvider$MH() {
        return RuntimeHelper.requireNonNull(constants$2600.glib_queueautoptr_cleanup_GtkStyleProvider$MH,"glib_queueautoptr_cleanup_GtkStyleProvider");
    }
    public static void glib_queueautoptr_cleanup_GtkStyleProvider ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkStyleProvider$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkSwitch_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSwitch_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSwitch_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkSwitch_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkSwitch$MH() {
        return RuntimeHelper.requireNonNull(constants$2600.glib_autoptr_clear_GtkSwitch$MH,"glib_autoptr_clear_GtkSwitch");
    }
    public static void glib_autoptr_clear_GtkSwitch ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkSwitch$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkSwitch$MH() {
        return RuntimeHelper.requireNonNull(constants$2600.glib_autoptr_cleanup_GtkSwitch$MH,"glib_autoptr_cleanup_GtkSwitch");
    }
    public static void glib_autoptr_cleanup_GtkSwitch ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkSwitch$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkSwitch$MH() {
        return RuntimeHelper.requireNonNull(constants$2601.glib_listautoptr_cleanup_GtkSwitch$MH,"glib_listautoptr_cleanup_GtkSwitch");
    }
    public static void glib_listautoptr_cleanup_GtkSwitch ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkSwitch$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkSwitch$MH() {
        return RuntimeHelper.requireNonNull(constants$2601.glib_slistautoptr_cleanup_GtkSwitch$MH,"glib_slistautoptr_cleanup_GtkSwitch");
    }
    public static void glib_slistautoptr_cleanup_GtkSwitch ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkSwitch$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkSwitch$MH() {
        return RuntimeHelper.requireNonNull(constants$2601.glib_queueautoptr_cleanup_GtkSwitch$MH,"glib_queueautoptr_cleanup_GtkSwitch");
    }
    public static void glib_queueautoptr_cleanup_GtkSwitch ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkSwitch$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTextBuffer_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextBuffer_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextBuffer_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextBuffer_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTextBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2601.glib_autoptr_clear_GtkTextBuffer$MH,"glib_autoptr_clear_GtkTextBuffer");
    }
    public static void glib_autoptr_clear_GtkTextBuffer ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTextBuffer$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTextBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2601.glib_autoptr_cleanup_GtkTextBuffer$MH,"glib_autoptr_cleanup_GtkTextBuffer");
    }
    public static void glib_autoptr_cleanup_GtkTextBuffer ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTextBuffer$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTextBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2601.glib_listautoptr_cleanup_GtkTextBuffer$MH,"glib_listautoptr_cleanup_GtkTextBuffer");
    }
    public static void glib_listautoptr_cleanup_GtkTextBuffer ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTextBuffer$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTextBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2602.glib_slistautoptr_cleanup_GtkTextBuffer$MH,"glib_slistautoptr_cleanup_GtkTextBuffer");
    }
    public static void glib_slistautoptr_cleanup_GtkTextBuffer ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTextBuffer$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTextBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2602.glib_queueautoptr_cleanup_GtkTextBuffer$MH,"glib_queueautoptr_cleanup_GtkTextBuffer");
    }
    public static void glib_queueautoptr_cleanup_GtkTextBuffer ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTextBuffer$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTextChildAnchor_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextChildAnchor_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextChildAnchor_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextChildAnchor_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTextChildAnchor$MH() {
        return RuntimeHelper.requireNonNull(constants$2602.glib_autoptr_clear_GtkTextChildAnchor$MH,"glib_autoptr_clear_GtkTextChildAnchor");
    }
    public static void glib_autoptr_clear_GtkTextChildAnchor ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTextChildAnchor$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTextChildAnchor$MH() {
        return RuntimeHelper.requireNonNull(constants$2602.glib_autoptr_cleanup_GtkTextChildAnchor$MH,"glib_autoptr_cleanup_GtkTextChildAnchor");
    }
    public static void glib_autoptr_cleanup_GtkTextChildAnchor ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTextChildAnchor$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTextChildAnchor$MH() {
        return RuntimeHelper.requireNonNull(constants$2602.glib_listautoptr_cleanup_GtkTextChildAnchor$MH,"glib_listautoptr_cleanup_GtkTextChildAnchor");
    }
    public static void glib_listautoptr_cleanup_GtkTextChildAnchor ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTextChildAnchor$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTextChildAnchor$MH() {
        return RuntimeHelper.requireNonNull(constants$2602.glib_slistautoptr_cleanup_GtkTextChildAnchor$MH,"glib_slistautoptr_cleanup_GtkTextChildAnchor");
    }
    public static void glib_slistautoptr_cleanup_GtkTextChildAnchor ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTextChildAnchor$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTextChildAnchor$MH() {
        return RuntimeHelper.requireNonNull(constants$2603.glib_queueautoptr_cleanup_GtkTextChildAnchor$MH,"glib_queueautoptr_cleanup_GtkTextChildAnchor");
    }
    public static void glib_queueautoptr_cleanup_GtkTextChildAnchor ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTextChildAnchor$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTextMark_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextMark_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextMark_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextMark_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTextMark$MH() {
        return RuntimeHelper.requireNonNull(constants$2603.glib_autoptr_clear_GtkTextMark$MH,"glib_autoptr_clear_GtkTextMark");
    }
    public static void glib_autoptr_clear_GtkTextMark ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTextMark$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTextMark$MH() {
        return RuntimeHelper.requireNonNull(constants$2603.glib_autoptr_cleanup_GtkTextMark$MH,"glib_autoptr_cleanup_GtkTextMark");
    }
    public static void glib_autoptr_cleanup_GtkTextMark ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTextMark$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTextMark$MH() {
        return RuntimeHelper.requireNonNull(constants$2603.glib_listautoptr_cleanup_GtkTextMark$MH,"glib_listautoptr_cleanup_GtkTextMark");
    }
    public static void glib_listautoptr_cleanup_GtkTextMark ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTextMark$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTextMark$MH() {
        return RuntimeHelper.requireNonNull(constants$2603.glib_slistautoptr_cleanup_GtkTextMark$MH,"glib_slistautoptr_cleanup_GtkTextMark");
    }
    public static void glib_slistautoptr_cleanup_GtkTextMark ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTextMark$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTextMark$MH() {
        return RuntimeHelper.requireNonNull(constants$2603.glib_queueautoptr_cleanup_GtkTextMark$MH,"glib_queueautoptr_cleanup_GtkTextMark");
    }
    public static void glib_queueautoptr_cleanup_GtkTextMark ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTextMark$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTextTag_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextTag_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextTag_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextTag_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTextTag$MH() {
        return RuntimeHelper.requireNonNull(constants$2604.glib_autoptr_clear_GtkTextTag$MH,"glib_autoptr_clear_GtkTextTag");
    }
    public static void glib_autoptr_clear_GtkTextTag ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTextTag$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTextTag$MH() {
        return RuntimeHelper.requireNonNull(constants$2604.glib_autoptr_cleanup_GtkTextTag$MH,"glib_autoptr_cleanup_GtkTextTag");
    }
    public static void glib_autoptr_cleanup_GtkTextTag ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTextTag$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTextTag$MH() {
        return RuntimeHelper.requireNonNull(constants$2604.glib_listautoptr_cleanup_GtkTextTag$MH,"glib_listautoptr_cleanup_GtkTextTag");
    }
    public static void glib_listautoptr_cleanup_GtkTextTag ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTextTag$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTextTag$MH() {
        return RuntimeHelper.requireNonNull(constants$2604.glib_slistautoptr_cleanup_GtkTextTag$MH,"glib_slistautoptr_cleanup_GtkTextTag");
    }
    public static void glib_slistautoptr_cleanup_GtkTextTag ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTextTag$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTextTag$MH() {
        return RuntimeHelper.requireNonNull(constants$2604.glib_queueautoptr_cleanup_GtkTextTag$MH,"glib_queueautoptr_cleanup_GtkTextTag");
    }
    public static void glib_queueautoptr_cleanup_GtkTextTag ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTextTag$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTextTagTable_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextTagTable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextTagTable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextTagTable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTextTagTable$MH() {
        return RuntimeHelper.requireNonNull(constants$2604.glib_autoptr_clear_GtkTextTagTable$MH,"glib_autoptr_clear_GtkTextTagTable");
    }
    public static void glib_autoptr_clear_GtkTextTagTable ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTextTagTable$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTextTagTable$MH() {
        return RuntimeHelper.requireNonNull(constants$2605.glib_autoptr_cleanup_GtkTextTagTable$MH,"glib_autoptr_cleanup_GtkTextTagTable");
    }
    public static void glib_autoptr_cleanup_GtkTextTagTable ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTextTagTable$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTextTagTable$MH() {
        return RuntimeHelper.requireNonNull(constants$2605.glib_listautoptr_cleanup_GtkTextTagTable$MH,"glib_listautoptr_cleanup_GtkTextTagTable");
    }
    public static void glib_listautoptr_cleanup_GtkTextTagTable ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTextTagTable$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTextTagTable$MH() {
        return RuntimeHelper.requireNonNull(constants$2605.glib_slistautoptr_cleanup_GtkTextTagTable$MH,"glib_slistautoptr_cleanup_GtkTextTagTable");
    }
    public static void glib_slistautoptr_cleanup_GtkTextTagTable ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTextTagTable$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTextTagTable$MH() {
        return RuntimeHelper.requireNonNull(constants$2605.glib_queueautoptr_cleanup_GtkTextTagTable$MH,"glib_queueautoptr_cleanup_GtkTextTagTable");
    }
    public static void glib_queueautoptr_cleanup_GtkTextTagTable ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTextTagTable$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTextView_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextView_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextView_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextView_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTextView$MH() {
        return RuntimeHelper.requireNonNull(constants$2605.glib_autoptr_clear_GtkTextView$MH,"glib_autoptr_clear_GtkTextView");
    }
    public static void glib_autoptr_clear_GtkTextView ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTextView$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTextView$MH() {
        return RuntimeHelper.requireNonNull(constants$2605.glib_autoptr_cleanup_GtkTextView$MH,"glib_autoptr_cleanup_GtkTextView");
    }
    public static void glib_autoptr_cleanup_GtkTextView ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTextView$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTextView$MH() {
        return RuntimeHelper.requireNonNull(constants$2606.glib_listautoptr_cleanup_GtkTextView$MH,"glib_listautoptr_cleanup_GtkTextView");
    }
    public static void glib_listautoptr_cleanup_GtkTextView ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTextView$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTextView$MH() {
        return RuntimeHelper.requireNonNull(constants$2606.glib_slistautoptr_cleanup_GtkTextView$MH,"glib_slistautoptr_cleanup_GtkTextView");
    }
    public static void glib_slistautoptr_cleanup_GtkTextView ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTextView$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTextView$MH() {
        return RuntimeHelper.requireNonNull(constants$2606.glib_queueautoptr_cleanup_GtkTextView$MH,"glib_queueautoptr_cleanup_GtkTextView");
    }
    public static void glib_queueautoptr_cleanup_GtkTextView ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTextView$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkToggleButton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToggleButton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToggleButton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkToggleButton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkToggleButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2606.glib_autoptr_clear_GtkToggleButton$MH,"glib_autoptr_clear_GtkToggleButton");
    }
    public static void glib_autoptr_clear_GtkToggleButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkToggleButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkToggleButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2606.glib_autoptr_cleanup_GtkToggleButton$MH,"glib_autoptr_cleanup_GtkToggleButton");
    }
    public static void glib_autoptr_cleanup_GtkToggleButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkToggleButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkToggleButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2606.glib_listautoptr_cleanup_GtkToggleButton$MH,"glib_listautoptr_cleanup_GtkToggleButton");
    }
    public static void glib_listautoptr_cleanup_GtkToggleButton ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkToggleButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkToggleButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2607.glib_slistautoptr_cleanup_GtkToggleButton$MH,"glib_slistautoptr_cleanup_GtkToggleButton");
    }
    public static void glib_slistautoptr_cleanup_GtkToggleButton ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkToggleButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkToggleButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2607.glib_queueautoptr_cleanup_GtkToggleButton$MH,"glib_queueautoptr_cleanup_GtkToggleButton");
    }
    public static void glib_queueautoptr_cleanup_GtkToggleButton ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkToggleButton$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTooltip_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTooltip_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTooltip_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTooltip_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTooltip$MH() {
        return RuntimeHelper.requireNonNull(constants$2607.glib_autoptr_clear_GtkTooltip$MH,"glib_autoptr_clear_GtkTooltip");
    }
    public static void glib_autoptr_clear_GtkTooltip ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTooltip$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTooltip$MH() {
        return RuntimeHelper.requireNonNull(constants$2607.glib_autoptr_cleanup_GtkTooltip$MH,"glib_autoptr_cleanup_GtkTooltip");
    }
    public static void glib_autoptr_cleanup_GtkTooltip ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTooltip$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTooltip$MH() {
        return RuntimeHelper.requireNonNull(constants$2607.glib_listautoptr_cleanup_GtkTooltip$MH,"glib_listautoptr_cleanup_GtkTooltip");
    }
    public static void glib_listautoptr_cleanup_GtkTooltip ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTooltip$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTooltip$MH() {
        return RuntimeHelper.requireNonNull(constants$2607.glib_slistautoptr_cleanup_GtkTooltip$MH,"glib_slistautoptr_cleanup_GtkTooltip");
    }
    public static void glib_slistautoptr_cleanup_GtkTooltip ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTooltip$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTooltip$MH() {
        return RuntimeHelper.requireNonNull(constants$2608.glib_queueautoptr_cleanup_GtkTooltip$MH,"glib_queueautoptr_cleanup_GtkTooltip");
    }
    public static void glib_queueautoptr_cleanup_GtkTooltip ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTooltip$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeDragDest_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeDragDest_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeDragDest_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeDragDest_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeDragDest$MH() {
        return RuntimeHelper.requireNonNull(constants$2608.glib_autoptr_clear_GtkTreeDragDest$MH,"glib_autoptr_clear_GtkTreeDragDest");
    }
    public static void glib_autoptr_clear_GtkTreeDragDest ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTreeDragDest$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeDragDest$MH() {
        return RuntimeHelper.requireNonNull(constants$2608.glib_autoptr_cleanup_GtkTreeDragDest$MH,"glib_autoptr_cleanup_GtkTreeDragDest");
    }
    public static void glib_autoptr_cleanup_GtkTreeDragDest ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTreeDragDest$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeDragDest$MH() {
        return RuntimeHelper.requireNonNull(constants$2608.glib_listautoptr_cleanup_GtkTreeDragDest$MH,"glib_listautoptr_cleanup_GtkTreeDragDest");
    }
    public static void glib_listautoptr_cleanup_GtkTreeDragDest ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTreeDragDest$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeDragDest$MH() {
        return RuntimeHelper.requireNonNull(constants$2608.glib_slistautoptr_cleanup_GtkTreeDragDest$MH,"glib_slistautoptr_cleanup_GtkTreeDragDest");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeDragDest ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTreeDragDest$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeDragDest$MH() {
        return RuntimeHelper.requireNonNull(constants$2608.glib_queueautoptr_cleanup_GtkTreeDragDest$MH,"glib_queueautoptr_cleanup_GtkTreeDragDest");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeDragDest ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTreeDragDest$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeDragSource_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeDragSource_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeDragSource_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeDragSource_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeDragSource$MH() {
        return RuntimeHelper.requireNonNull(constants$2609.glib_autoptr_clear_GtkTreeDragSource$MH,"glib_autoptr_clear_GtkTreeDragSource");
    }
    public static void glib_autoptr_clear_GtkTreeDragSource ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTreeDragSource$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeDragSource$MH() {
        return RuntimeHelper.requireNonNull(constants$2609.glib_autoptr_cleanup_GtkTreeDragSource$MH,"glib_autoptr_cleanup_GtkTreeDragSource");
    }
    public static void glib_autoptr_cleanup_GtkTreeDragSource ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTreeDragSource$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeDragSource$MH() {
        return RuntimeHelper.requireNonNull(constants$2609.glib_listautoptr_cleanup_GtkTreeDragSource$MH,"glib_listautoptr_cleanup_GtkTreeDragSource");
    }
    public static void glib_listautoptr_cleanup_GtkTreeDragSource ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTreeDragSource$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeDragSource$MH() {
        return RuntimeHelper.requireNonNull(constants$2609.glib_slistautoptr_cleanup_GtkTreeDragSource$MH,"glib_slistautoptr_cleanup_GtkTreeDragSource");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeDragSource ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTreeDragSource$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeDragSource$MH() {
        return RuntimeHelper.requireNonNull(constants$2609.glib_queueautoptr_cleanup_GtkTreeDragSource$MH,"glib_queueautoptr_cleanup_GtkTreeDragSource");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeDragSource ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTreeDragSource$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeModel_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeModel_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeModel_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeModel_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeModel$MH() {
        return RuntimeHelper.requireNonNull(constants$2609.glib_autoptr_clear_GtkTreeModel$MH,"glib_autoptr_clear_GtkTreeModel");
    }
    public static void glib_autoptr_clear_GtkTreeModel ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTreeModel$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeModel$MH() {
        return RuntimeHelper.requireNonNull(constants$2610.glib_autoptr_cleanup_GtkTreeModel$MH,"glib_autoptr_cleanup_GtkTreeModel");
    }
    public static void glib_autoptr_cleanup_GtkTreeModel ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTreeModel$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeModel$MH() {
        return RuntimeHelper.requireNonNull(constants$2610.glib_listautoptr_cleanup_GtkTreeModel$MH,"glib_listautoptr_cleanup_GtkTreeModel");
    }
    public static void glib_listautoptr_cleanup_GtkTreeModel ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTreeModel$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeModel$MH() {
        return RuntimeHelper.requireNonNull(constants$2610.glib_slistautoptr_cleanup_GtkTreeModel$MH,"glib_slistautoptr_cleanup_GtkTreeModel");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeModel ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTreeModel$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeModel$MH() {
        return RuntimeHelper.requireNonNull(constants$2610.glib_queueautoptr_cleanup_GtkTreeModel$MH,"glib_queueautoptr_cleanup_GtkTreeModel");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeModel ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTreeModel$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeModelFilter_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeModelFilter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeModelFilter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeModelFilter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeModelFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2610.glib_autoptr_clear_GtkTreeModelFilter$MH,"glib_autoptr_clear_GtkTreeModelFilter");
    }
    public static void glib_autoptr_clear_GtkTreeModelFilter ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTreeModelFilter$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeModelFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2610.glib_autoptr_cleanup_GtkTreeModelFilter$MH,"glib_autoptr_cleanup_GtkTreeModelFilter");
    }
    public static void glib_autoptr_cleanup_GtkTreeModelFilter ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTreeModelFilter$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeModelFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2611.glib_listautoptr_cleanup_GtkTreeModelFilter$MH,"glib_listautoptr_cleanup_GtkTreeModelFilter");
    }
    public static void glib_listautoptr_cleanup_GtkTreeModelFilter ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTreeModelFilter$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeModelFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2611.glib_slistautoptr_cleanup_GtkTreeModelFilter$MH,"glib_slistautoptr_cleanup_GtkTreeModelFilter");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeModelFilter ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTreeModelFilter$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeModelFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$2611.glib_queueautoptr_cleanup_GtkTreeModelFilter$MH,"glib_queueautoptr_cleanup_GtkTreeModelFilter");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeModelFilter ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTreeModelFilter$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeModelSort_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeModelSort_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeModelSort_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeModelSort_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeModelSort$MH() {
        return RuntimeHelper.requireNonNull(constants$2611.glib_autoptr_clear_GtkTreeModelSort$MH,"glib_autoptr_clear_GtkTreeModelSort");
    }
    public static void glib_autoptr_clear_GtkTreeModelSort ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTreeModelSort$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeModelSort$MH() {
        return RuntimeHelper.requireNonNull(constants$2611.glib_autoptr_cleanup_GtkTreeModelSort$MH,"glib_autoptr_cleanup_GtkTreeModelSort");
    }
    public static void glib_autoptr_cleanup_GtkTreeModelSort ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTreeModelSort$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeModelSort$MH() {
        return RuntimeHelper.requireNonNull(constants$2611.glib_listautoptr_cleanup_GtkTreeModelSort$MH,"glib_listautoptr_cleanup_GtkTreeModelSort");
    }
    public static void glib_listautoptr_cleanup_GtkTreeModelSort ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTreeModelSort$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeModelSort$MH() {
        return RuntimeHelper.requireNonNull(constants$2612.glib_slistautoptr_cleanup_GtkTreeModelSort$MH,"glib_slistautoptr_cleanup_GtkTreeModelSort");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeModelSort ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTreeModelSort$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeModelSort$MH() {
        return RuntimeHelper.requireNonNull(constants$2612.glib_queueautoptr_cleanup_GtkTreeModelSort$MH,"glib_queueautoptr_cleanup_GtkTreeModelSort");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeModelSort ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTreeModelSort$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeSelection_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeSelection_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeSelection_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeSelection_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeSelection$MH() {
        return RuntimeHelper.requireNonNull(constants$2612.glib_autoptr_clear_GtkTreeSelection$MH,"glib_autoptr_clear_GtkTreeSelection");
    }
    public static void glib_autoptr_clear_GtkTreeSelection ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTreeSelection$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeSelection$MH() {
        return RuntimeHelper.requireNonNull(constants$2612.glib_autoptr_cleanup_GtkTreeSelection$MH,"glib_autoptr_cleanup_GtkTreeSelection");
    }
    public static void glib_autoptr_cleanup_GtkTreeSelection ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTreeSelection$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeSelection$MH() {
        return RuntimeHelper.requireNonNull(constants$2612.glib_listautoptr_cleanup_GtkTreeSelection$MH,"glib_listautoptr_cleanup_GtkTreeSelection");
    }
    public static void glib_listautoptr_cleanup_GtkTreeSelection ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTreeSelection$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeSelection$MH() {
        return RuntimeHelper.requireNonNull(constants$2612.glib_slistautoptr_cleanup_GtkTreeSelection$MH,"glib_slistautoptr_cleanup_GtkTreeSelection");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeSelection ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTreeSelection$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeSelection$MH() {
        return RuntimeHelper.requireNonNull(constants$2613.glib_queueautoptr_cleanup_GtkTreeSelection$MH,"glib_queueautoptr_cleanup_GtkTreeSelection");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeSelection ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTreeSelection$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeSortable_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeSortable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeSortable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeSortable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeSortable$MH() {
        return RuntimeHelper.requireNonNull(constants$2613.glib_autoptr_clear_GtkTreeSortable$MH,"glib_autoptr_clear_GtkTreeSortable");
    }
    public static void glib_autoptr_clear_GtkTreeSortable ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTreeSortable$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeSortable$MH() {
        return RuntimeHelper.requireNonNull(constants$2613.glib_autoptr_cleanup_GtkTreeSortable$MH,"glib_autoptr_cleanup_GtkTreeSortable");
    }
    public static void glib_autoptr_cleanup_GtkTreeSortable ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTreeSortable$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeSortable$MH() {
        return RuntimeHelper.requireNonNull(constants$2613.glib_listautoptr_cleanup_GtkTreeSortable$MH,"glib_listautoptr_cleanup_GtkTreeSortable");
    }
    public static void glib_listautoptr_cleanup_GtkTreeSortable ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTreeSortable$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeSortable$MH() {
        return RuntimeHelper.requireNonNull(constants$2613.glib_slistautoptr_cleanup_GtkTreeSortable$MH,"glib_slistautoptr_cleanup_GtkTreeSortable");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeSortable ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTreeSortable$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeSortable$MH() {
        return RuntimeHelper.requireNonNull(constants$2613.glib_queueautoptr_cleanup_GtkTreeSortable$MH,"glib_queueautoptr_cleanup_GtkTreeSortable");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeSortable ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTreeSortable$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeStore_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeStore_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeStore_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeStore_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeStore$MH() {
        return RuntimeHelper.requireNonNull(constants$2614.glib_autoptr_clear_GtkTreeStore$MH,"glib_autoptr_clear_GtkTreeStore");
    }
    public static void glib_autoptr_clear_GtkTreeStore ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTreeStore$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeStore$MH() {
        return RuntimeHelper.requireNonNull(constants$2614.glib_autoptr_cleanup_GtkTreeStore$MH,"glib_autoptr_cleanup_GtkTreeStore");
    }
    public static void glib_autoptr_cleanup_GtkTreeStore ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTreeStore$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeStore$MH() {
        return RuntimeHelper.requireNonNull(constants$2614.glib_listautoptr_cleanup_GtkTreeStore$MH,"glib_listautoptr_cleanup_GtkTreeStore");
    }
    public static void glib_listautoptr_cleanup_GtkTreeStore ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTreeStore$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeStore$MH() {
        return RuntimeHelper.requireNonNull(constants$2614.glib_slistautoptr_cleanup_GtkTreeStore$MH,"glib_slistautoptr_cleanup_GtkTreeStore");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeStore ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTreeStore$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeStore$MH() {
        return RuntimeHelper.requireNonNull(constants$2614.glib_queueautoptr_cleanup_GtkTreeStore$MH,"glib_queueautoptr_cleanup_GtkTreeStore");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeStore ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTreeStore$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeView_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeView_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeView_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeView_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeView$MH() {
        return RuntimeHelper.requireNonNull(constants$2614.glib_autoptr_clear_GtkTreeView$MH,"glib_autoptr_clear_GtkTreeView");
    }
    public static void glib_autoptr_clear_GtkTreeView ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTreeView$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeView$MH() {
        return RuntimeHelper.requireNonNull(constants$2615.glib_autoptr_cleanup_GtkTreeView$MH,"glib_autoptr_cleanup_GtkTreeView");
    }
    public static void glib_autoptr_cleanup_GtkTreeView ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTreeView$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeView$MH() {
        return RuntimeHelper.requireNonNull(constants$2615.glib_listautoptr_cleanup_GtkTreeView$MH,"glib_listautoptr_cleanup_GtkTreeView");
    }
    public static void glib_listautoptr_cleanup_GtkTreeView ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTreeView$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeView$MH() {
        return RuntimeHelper.requireNonNull(constants$2615.glib_slistautoptr_cleanup_GtkTreeView$MH,"glib_slistautoptr_cleanup_GtkTreeView");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeView ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTreeView$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeView$MH() {
        return RuntimeHelper.requireNonNull(constants$2615.glib_queueautoptr_cleanup_GtkTreeView$MH,"glib_queueautoptr_cleanup_GtkTreeView");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeView ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTreeView$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeViewColumn_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeViewColumn_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeViewColumn_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeViewColumn_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeViewColumn$MH() {
        return RuntimeHelper.requireNonNull(constants$2615.glib_autoptr_clear_GtkTreeViewColumn$MH,"glib_autoptr_clear_GtkTreeViewColumn");
    }
    public static void glib_autoptr_clear_GtkTreeViewColumn ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTreeViewColumn$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeViewColumn$MH() {
        return RuntimeHelper.requireNonNull(constants$2615.glib_autoptr_cleanup_GtkTreeViewColumn$MH,"glib_autoptr_cleanup_GtkTreeViewColumn");
    }
    public static void glib_autoptr_cleanup_GtkTreeViewColumn ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTreeViewColumn$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeViewColumn$MH() {
        return RuntimeHelper.requireNonNull(constants$2616.glib_listautoptr_cleanup_GtkTreeViewColumn$MH,"glib_listautoptr_cleanup_GtkTreeViewColumn");
    }
    public static void glib_listautoptr_cleanup_GtkTreeViewColumn ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTreeViewColumn$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeViewColumn$MH() {
        return RuntimeHelper.requireNonNull(constants$2616.glib_slistautoptr_cleanup_GtkTreeViewColumn$MH,"glib_slistautoptr_cleanup_GtkTreeViewColumn");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeViewColumn ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTreeViewColumn$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeViewColumn$MH() {
        return RuntimeHelper.requireNonNull(constants$2616.glib_queueautoptr_cleanup_GtkTreeViewColumn$MH,"glib_queueautoptr_cleanup_GtkTreeViewColumn");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeViewColumn ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTreeViewColumn$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkViewport_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkViewport_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkViewport_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkViewport_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkViewport$MH() {
        return RuntimeHelper.requireNonNull(constants$2616.glib_autoptr_clear_GtkViewport$MH,"glib_autoptr_clear_GtkViewport");
    }
    public static void glib_autoptr_clear_GtkViewport ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkViewport$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkViewport$MH() {
        return RuntimeHelper.requireNonNull(constants$2616.glib_autoptr_cleanup_GtkViewport$MH,"glib_autoptr_cleanup_GtkViewport");
    }
    public static void glib_autoptr_cleanup_GtkViewport ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkViewport$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkViewport$MH() {
        return RuntimeHelper.requireNonNull(constants$2616.glib_listautoptr_cleanup_GtkViewport$MH,"glib_listautoptr_cleanup_GtkViewport");
    }
    public static void glib_listautoptr_cleanup_GtkViewport ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkViewport$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkViewport$MH() {
        return RuntimeHelper.requireNonNull(constants$2617.glib_slistautoptr_cleanup_GtkViewport$MH,"glib_slistautoptr_cleanup_GtkViewport");
    }
    public static void glib_slistautoptr_cleanup_GtkViewport ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkViewport$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkViewport$MH() {
        return RuntimeHelper.requireNonNull(constants$2617.glib_queueautoptr_cleanup_GtkViewport$MH,"glib_queueautoptr_cleanup_GtkViewport");
    }
    public static void glib_queueautoptr_cleanup_GtkViewport ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkViewport$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkVolumeButton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkVolumeButton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkVolumeButton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkVolumeButton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkVolumeButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2617.glib_autoptr_clear_GtkVolumeButton$MH,"glib_autoptr_clear_GtkVolumeButton");
    }
    public static void glib_autoptr_clear_GtkVolumeButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkVolumeButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkVolumeButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2617.glib_autoptr_cleanup_GtkVolumeButton$MH,"glib_autoptr_cleanup_GtkVolumeButton");
    }
    public static void glib_autoptr_cleanup_GtkVolumeButton ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkVolumeButton$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkVolumeButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2617.glib_listautoptr_cleanup_GtkVolumeButton$MH,"glib_listautoptr_cleanup_GtkVolumeButton");
    }
    public static void glib_listautoptr_cleanup_GtkVolumeButton ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkVolumeButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkVolumeButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2617.glib_slistautoptr_cleanup_GtkVolumeButton$MH,"glib_slistautoptr_cleanup_GtkVolumeButton");
    }
    public static void glib_slistautoptr_cleanup_GtkVolumeButton ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkVolumeButton$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkVolumeButton$MH() {
        return RuntimeHelper.requireNonNull(constants$2618.glib_queueautoptr_cleanup_GtkVolumeButton$MH,"glib_queueautoptr_cleanup_GtkVolumeButton");
    }
    public static void glib_queueautoptr_cleanup_GtkVolumeButton ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkVolumeButton$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkPaperSize_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPaperSize_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPaperSize_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPaperSize_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkPaperSize$MH() {
        return RuntimeHelper.requireNonNull(constants$2618.glib_autoptr_clear_GtkPaperSize$MH,"glib_autoptr_clear_GtkPaperSize");
    }
    public static void glib_autoptr_clear_GtkPaperSize ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkPaperSize$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkPaperSize$MH() {
        return RuntimeHelper.requireNonNull(constants$2618.glib_autoptr_cleanup_GtkPaperSize$MH,"glib_autoptr_cleanup_GtkPaperSize");
    }
    public static void glib_autoptr_cleanup_GtkPaperSize ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkPaperSize$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkPaperSize$MH() {
        return RuntimeHelper.requireNonNull(constants$2618.glib_listautoptr_cleanup_GtkPaperSize$MH,"glib_listautoptr_cleanup_GtkPaperSize");
    }
    public static void glib_listautoptr_cleanup_GtkPaperSize ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkPaperSize$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkPaperSize$MH() {
        return RuntimeHelper.requireNonNull(constants$2618.glib_slistautoptr_cleanup_GtkPaperSize$MH,"glib_slistautoptr_cleanup_GtkPaperSize");
    }
    public static void glib_slistautoptr_cleanup_GtkPaperSize ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkPaperSize$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkPaperSize$MH() {
        return RuntimeHelper.requireNonNull(constants$2618.glib_queueautoptr_cleanup_GtkPaperSize$MH,"glib_queueautoptr_cleanup_GtkPaperSize");
    }
    public static void glib_queueautoptr_cleanup_GtkPaperSize ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkPaperSize$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkRecentInfo_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentInfo_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentInfo_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkRecentInfo_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkRecentInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$2619.glib_autoptr_clear_GtkRecentInfo$MH,"glib_autoptr_clear_GtkRecentInfo");
    }
    public static void glib_autoptr_clear_GtkRecentInfo ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkRecentInfo$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkRecentInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$2619.glib_autoptr_cleanup_GtkRecentInfo$MH,"glib_autoptr_cleanup_GtkRecentInfo");
    }
    public static void glib_autoptr_cleanup_GtkRecentInfo ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkRecentInfo$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkRecentInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$2619.glib_listautoptr_cleanup_GtkRecentInfo$MH,"glib_listautoptr_cleanup_GtkRecentInfo");
    }
    public static void glib_listautoptr_cleanup_GtkRecentInfo ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkRecentInfo$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkRecentInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$2619.glib_slistautoptr_cleanup_GtkRecentInfo$MH,"glib_slistautoptr_cleanup_GtkRecentInfo");
    }
    public static void glib_slistautoptr_cleanup_GtkRecentInfo ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkRecentInfo$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkRecentInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$2619.glib_queueautoptr_cleanup_GtkRecentInfo$MH,"glib_queueautoptr_cleanup_GtkRecentInfo");
    }
    public static void glib_queueautoptr_cleanup_GtkRecentInfo ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkRecentInfo$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTextIter_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextIter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextIter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTextIter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTextIter$MH() {
        return RuntimeHelper.requireNonNull(constants$2619.glib_autoptr_clear_GtkTextIter$MH,"glib_autoptr_clear_GtkTextIter");
    }
    public static void glib_autoptr_clear_GtkTextIter ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTextIter$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTextIter$MH() {
        return RuntimeHelper.requireNonNull(constants$2620.glib_autoptr_cleanup_GtkTextIter$MH,"glib_autoptr_cleanup_GtkTextIter");
    }
    public static void glib_autoptr_cleanup_GtkTextIter ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTextIter$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTextIter$MH() {
        return RuntimeHelper.requireNonNull(constants$2620.glib_listautoptr_cleanup_GtkTextIter$MH,"glib_listautoptr_cleanup_GtkTextIter");
    }
    public static void glib_listautoptr_cleanup_GtkTextIter ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTextIter$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTextIter$MH() {
        return RuntimeHelper.requireNonNull(constants$2620.glib_slistautoptr_cleanup_GtkTextIter$MH,"glib_slistautoptr_cleanup_GtkTextIter");
    }
    public static void glib_slistautoptr_cleanup_GtkTextIter ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTextIter$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTextIter$MH() {
        return RuntimeHelper.requireNonNull(constants$2620.glib_queueautoptr_cleanup_GtkTextIter$MH,"glib_queueautoptr_cleanup_GtkTextIter");
    }
    public static void glib_queueautoptr_cleanup_GtkTextIter ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTextIter$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeIter_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeIter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeIter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeIter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeIter$MH() {
        return RuntimeHelper.requireNonNull(constants$2620.glib_autoptr_clear_GtkTreeIter$MH,"glib_autoptr_clear_GtkTreeIter");
    }
    public static void glib_autoptr_clear_GtkTreeIter ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTreeIter$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeIter$MH() {
        return RuntimeHelper.requireNonNull(constants$2620.glib_autoptr_cleanup_GtkTreeIter$MH,"glib_autoptr_cleanup_GtkTreeIter");
    }
    public static void glib_autoptr_cleanup_GtkTreeIter ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTreeIter$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeIter$MH() {
        return RuntimeHelper.requireNonNull(constants$2621.glib_listautoptr_cleanup_GtkTreeIter$MH,"glib_listautoptr_cleanup_GtkTreeIter");
    }
    public static void glib_listautoptr_cleanup_GtkTreeIter ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTreeIter$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeIter$MH() {
        return RuntimeHelper.requireNonNull(constants$2621.glib_slistautoptr_cleanup_GtkTreeIter$MH,"glib_slistautoptr_cleanup_GtkTreeIter");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeIter ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTreeIter$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeIter$MH() {
        return RuntimeHelper.requireNonNull(constants$2621.glib_queueautoptr_cleanup_GtkTreeIter$MH,"glib_queueautoptr_cleanup_GtkTreeIter");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeIter ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTreeIter$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreePath_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreePath_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreePath_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreePath_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreePath$MH() {
        return RuntimeHelper.requireNonNull(constants$2621.glib_autoptr_clear_GtkTreePath$MH,"glib_autoptr_clear_GtkTreePath");
    }
    public static void glib_autoptr_clear_GtkTreePath ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTreePath$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreePath$MH() {
        return RuntimeHelper.requireNonNull(constants$2621.glib_autoptr_cleanup_GtkTreePath$MH,"glib_autoptr_cleanup_GtkTreePath");
    }
    public static void glib_autoptr_cleanup_GtkTreePath ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTreePath$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreePath$MH() {
        return RuntimeHelper.requireNonNull(constants$2621.glib_listautoptr_cleanup_GtkTreePath$MH,"glib_listautoptr_cleanup_GtkTreePath");
    }
    public static void glib_listautoptr_cleanup_GtkTreePath ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTreePath$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreePath$MH() {
        return RuntimeHelper.requireNonNull(constants$2622.glib_slistautoptr_cleanup_GtkTreePath$MH,"glib_slistautoptr_cleanup_GtkTreePath");
    }
    public static void glib_slistautoptr_cleanup_GtkTreePath ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTreePath$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreePath$MH() {
        return RuntimeHelper.requireNonNull(constants$2622.glib_queueautoptr_cleanup_GtkTreePath$MH,"glib_queueautoptr_cleanup_GtkTreePath");
    }
    public static void glib_queueautoptr_cleanup_GtkTreePath ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTreePath$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkTreeRowReference_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeRowReference_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeRowReference_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkTreeRowReference_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkTreeRowReference$MH() {
        return RuntimeHelper.requireNonNull(constants$2622.glib_autoptr_clear_GtkTreeRowReference$MH,"glib_autoptr_clear_GtkTreeRowReference");
    }
    public static void glib_autoptr_clear_GtkTreeRowReference ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkTreeRowReference$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkTreeRowReference$MH() {
        return RuntimeHelper.requireNonNull(constants$2622.glib_autoptr_cleanup_GtkTreeRowReference$MH,"glib_autoptr_cleanup_GtkTreeRowReference");
    }
    public static void glib_autoptr_cleanup_GtkTreeRowReference ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkTreeRowReference$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkTreeRowReference$MH() {
        return RuntimeHelper.requireNonNull(constants$2622.glib_listautoptr_cleanup_GtkTreeRowReference$MH,"glib_listautoptr_cleanup_GtkTreeRowReference");
    }
    public static void glib_listautoptr_cleanup_GtkTreeRowReference ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkTreeRowReference$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkTreeRowReference$MH() {
        return RuntimeHelper.requireNonNull(constants$2622.glib_slistautoptr_cleanup_GtkTreeRowReference$MH,"glib_slistautoptr_cleanup_GtkTreeRowReference");
    }
    public static void glib_slistautoptr_cleanup_GtkTreeRowReference ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkTreeRowReference$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkTreeRowReference$MH() {
        return RuntimeHelper.requireNonNull(constants$2623.glib_queueautoptr_cleanup_GtkTreeRowReference$MH,"glib_queueautoptr_cleanup_GtkTreeRowReference");
    }
    public static void glib_queueautoptr_cleanup_GtkTreeRowReference ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkTreeRowReference$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_unix_dialog_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2623.gtk_page_setup_unix_dialog_get_type$MH,"gtk_page_setup_unix_dialog_get_type");
    }
    public static long gtk_page_setup_unix_dialog_get_type () {
        var mh$ = gtk_page_setup_unix_dialog_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_unix_dialog_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2623.gtk_page_setup_unix_dialog_new$MH,"gtk_page_setup_unix_dialog_new");
    }
    public static MemoryAddress gtk_page_setup_unix_dialog_new ( Addressable title,  Addressable parent) {
        var mh$ = gtk_page_setup_unix_dialog_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(title, parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_unix_dialog_set_page_setup$MH() {
        return RuntimeHelper.requireNonNull(constants$2623.gtk_page_setup_unix_dialog_set_page_setup$MH,"gtk_page_setup_unix_dialog_set_page_setup");
    }
    public static void gtk_page_setup_unix_dialog_set_page_setup ( Addressable dialog,  Addressable page_setup) {
        var mh$ = gtk_page_setup_unix_dialog_set_page_setup$MH();
        try {
            mh$.invokeExact(dialog, page_setup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_unix_dialog_get_page_setup$MH() {
        return RuntimeHelper.requireNonNull(constants$2623.gtk_page_setup_unix_dialog_get_page_setup$MH,"gtk_page_setup_unix_dialog_get_page_setup");
    }
    public static MemoryAddress gtk_page_setup_unix_dialog_get_page_setup ( Addressable dialog) {
        var mh$ = gtk_page_setup_unix_dialog_get_page_setup$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(dialog);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_unix_dialog_set_print_settings$MH() {
        return RuntimeHelper.requireNonNull(constants$2623.gtk_page_setup_unix_dialog_set_print_settings$MH,"gtk_page_setup_unix_dialog_set_print_settings");
    }
    public static void gtk_page_setup_unix_dialog_set_print_settings ( Addressable dialog,  Addressable print_settings) {
        var mh$ = gtk_page_setup_unix_dialog_set_print_settings$MH();
        try {
            mh$.invokeExact(dialog, print_settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_unix_dialog_get_print_settings$MH() {
        return RuntimeHelper.requireNonNull(constants$2624.gtk_page_setup_unix_dialog_get_print_settings$MH,"gtk_page_setup_unix_dialog_get_print_settings");
    }
    public static MemoryAddress gtk_page_setup_unix_dialog_get_print_settings ( Addressable dialog) {
        var mh$ = gtk_page_setup_unix_dialog_get_print_settings$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(dialog);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int GTK_PRINT_CAPABILITY_PAGE_SET() {
        return (int)1L;
    }
    public static int GTK_PRINT_CAPABILITY_COPIES() {
        return (int)2L;
    }
    public static int GTK_PRINT_CAPABILITY_COLLATE() {
        return (int)4L;
    }
    public static int GTK_PRINT_CAPABILITY_REVERSE() {
        return (int)8L;
    }
    public static int GTK_PRINT_CAPABILITY_SCALE() {
        return (int)16L;
    }
    public static int GTK_PRINT_CAPABILITY_GENERATE_PDF() {
        return (int)32L;
    }
    public static int GTK_PRINT_CAPABILITY_GENERATE_PS() {
        return (int)64L;
    }
    public static int GTK_PRINT_CAPABILITY_PREVIEW() {
        return (int)128L;
    }
    public static int GTK_PRINT_CAPABILITY_NUMBER_UP() {
        return (int)256L;
    }
    public static int GTK_PRINT_CAPABILITY_NUMBER_UP_LAYOUT() {
        return (int)512L;
    }
    public static MethodHandle gtk_print_capabilities_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2624.gtk_print_capabilities_get_type$MH,"gtk_print_capabilities_get_type");
    }
    public static long gtk_print_capabilities_get_type () {
        var mh$ = gtk_print_capabilities_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_printer_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2624.gtk_printer_get_type$MH,"gtk_printer_get_type");
    }
    public static long gtk_printer_get_type () {
        var mh$ = gtk_printer_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_printer_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2624.gtk_printer_new$MH,"gtk_printer_new");
    }
    public static MemoryAddress gtk_printer_new ( Addressable name,  Addressable backend,  int virtual_) {
        var mh$ = gtk_printer_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(name, backend, virtual_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_printer_get_backend$MH() {
        return RuntimeHelper.requireNonNull(constants$2624.gtk_printer_get_backend$MH,"gtk_printer_get_backend");
    }
    public static MemoryAddress gtk_printer_get_backend ( Addressable printer) {
        var mh$ = gtk_printer_get_backend$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(printer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_printer_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2624.gtk_printer_get_name$MH,"gtk_printer_get_name");
    }
    public static MemoryAddress gtk_printer_get_name ( Addressable printer) {
        var mh$ = gtk_printer_get_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(printer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_printer_get_state_message$MH() {
        return RuntimeHelper.requireNonNull(constants$2625.gtk_printer_get_state_message$MH,"gtk_printer_get_state_message");
    }
    public static MemoryAddress gtk_printer_get_state_message ( Addressable printer) {
        var mh$ = gtk_printer_get_state_message$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(printer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_printer_get_description$MH() {
        return RuntimeHelper.requireNonNull(constants$2625.gtk_printer_get_description$MH,"gtk_printer_get_description");
    }
    public static MemoryAddress gtk_printer_get_description ( Addressable printer) {
        var mh$ = gtk_printer_get_description$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(printer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_printer_get_location$MH() {
        return RuntimeHelper.requireNonNull(constants$2625.gtk_printer_get_location$MH,"gtk_printer_get_location");
    }
    public static MemoryAddress gtk_printer_get_location ( Addressable printer) {
        var mh$ = gtk_printer_get_location$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(printer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_printer_get_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2625.gtk_printer_get_icon_name$MH,"gtk_printer_get_icon_name");
    }
    public static MemoryAddress gtk_printer_get_icon_name ( Addressable printer) {
        var mh$ = gtk_printer_get_icon_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(printer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_printer_get_job_count$MH() {
        return RuntimeHelper.requireNonNull(constants$2625.gtk_printer_get_job_count$MH,"gtk_printer_get_job_count");
    }
    public static int gtk_printer_get_job_count ( Addressable printer) {
        var mh$ = gtk_printer_get_job_count$MH();
        try {
            return (int)mh$.invokeExact(printer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_printer_is_active$MH() {
        return RuntimeHelper.requireNonNull(constants$2625.gtk_printer_is_active$MH,"gtk_printer_is_active");
    }
    public static int gtk_printer_is_active ( Addressable printer) {
        var mh$ = gtk_printer_is_active$MH();
        try {
            return (int)mh$.invokeExact(printer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_printer_is_paused$MH() {
        return RuntimeHelper.requireNonNull(constants$2626.gtk_printer_is_paused$MH,"gtk_printer_is_paused");
    }
    public static int gtk_printer_is_paused ( Addressable printer) {
        var mh$ = gtk_printer_is_paused$MH();
        try {
            return (int)mh$.invokeExact(printer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_printer_is_accepting_jobs$MH() {
        return RuntimeHelper.requireNonNull(constants$2626.gtk_printer_is_accepting_jobs$MH,"gtk_printer_is_accepting_jobs");
    }
    public static int gtk_printer_is_accepting_jobs ( Addressable printer) {
        var mh$ = gtk_printer_is_accepting_jobs$MH();
        try {
            return (int)mh$.invokeExact(printer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_printer_is_virtual$MH() {
        return RuntimeHelper.requireNonNull(constants$2626.gtk_printer_is_virtual$MH,"gtk_printer_is_virtual");
    }
    public static int gtk_printer_is_virtual ( Addressable printer) {
        var mh$ = gtk_printer_is_virtual$MH();
        try {
            return (int)mh$.invokeExact(printer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_printer_is_default$MH() {
        return RuntimeHelper.requireNonNull(constants$2626.gtk_printer_is_default$MH,"gtk_printer_is_default");
    }
    public static int gtk_printer_is_default ( Addressable printer) {
        var mh$ = gtk_printer_is_default$MH();
        try {
            return (int)mh$.invokeExact(printer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_printer_accepts_pdf$MH() {
        return RuntimeHelper.requireNonNull(constants$2626.gtk_printer_accepts_pdf$MH,"gtk_printer_accepts_pdf");
    }
    public static int gtk_printer_accepts_pdf ( Addressable printer) {
        var mh$ = gtk_printer_accepts_pdf$MH();
        try {
            return (int)mh$.invokeExact(printer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_printer_accepts_ps$MH() {
        return RuntimeHelper.requireNonNull(constants$2626.gtk_printer_accepts_ps$MH,"gtk_printer_accepts_ps");
    }
    public static int gtk_printer_accepts_ps ( Addressable printer) {
        var mh$ = gtk_printer_accepts_ps$MH();
        try {
            return (int)mh$.invokeExact(printer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_printer_list_papers$MH() {
        return RuntimeHelper.requireNonNull(constants$2627.gtk_printer_list_papers$MH,"gtk_printer_list_papers");
    }
    public static MemoryAddress gtk_printer_list_papers ( Addressable printer) {
        var mh$ = gtk_printer_list_papers$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(printer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_printer_get_default_page_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2627.gtk_printer_get_default_page_size$MH,"gtk_printer_get_default_page_size");
    }
    public static MemoryAddress gtk_printer_get_default_page_size ( Addressable printer) {
        var mh$ = gtk_printer_get_default_page_size$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(printer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_printer_compare$MH() {
        return RuntimeHelper.requireNonNull(constants$2627.gtk_printer_compare$MH,"gtk_printer_compare");
    }
    public static int gtk_printer_compare ( Addressable a,  Addressable b) {
        var mh$ = gtk_printer_compare$MH();
        try {
            return (int)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_printer_has_details$MH() {
        return RuntimeHelper.requireNonNull(constants$2627.gtk_printer_has_details$MH,"gtk_printer_has_details");
    }
    public static int gtk_printer_has_details ( Addressable printer) {
        var mh$ = gtk_printer_has_details$MH();
        try {
            return (int)mh$.invokeExact(printer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_printer_request_details$MH() {
        return RuntimeHelper.requireNonNull(constants$2627.gtk_printer_request_details$MH,"gtk_printer_request_details");
    }
    public static void gtk_printer_request_details ( Addressable printer) {
        var mh$ = gtk_printer_request_details$MH();
        try {
            mh$.invokeExact(printer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_printer_get_capabilities$MH() {
        return RuntimeHelper.requireNonNull(constants$2627.gtk_printer_get_capabilities$MH,"gtk_printer_get_capabilities");
    }
    public static int gtk_printer_get_capabilities ( Addressable printer) {
        var mh$ = gtk_printer_get_capabilities$MH();
        try {
            return (int)mh$.invokeExact(printer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_printer_get_hard_margins$MH() {
        return RuntimeHelper.requireNonNull(constants$2628.gtk_printer_get_hard_margins$MH,"gtk_printer_get_hard_margins");
    }
    public static int gtk_printer_get_hard_margins ( Addressable printer,  Addressable top,  Addressable bottom,  Addressable left,  Addressable right) {
        var mh$ = gtk_printer_get_hard_margins$MH();
        try {
            return (int)mh$.invokeExact(printer, top, bottom, left, right);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_printer_get_hard_margins_for_paper_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2628.gtk_printer_get_hard_margins_for_paper_size$MH,"gtk_printer_get_hard_margins_for_paper_size");
    }
    public static int gtk_printer_get_hard_margins_for_paper_size ( Addressable printer,  Addressable paper_size,  Addressable top,  Addressable bottom,  Addressable left,  Addressable right) {
        var mh$ = gtk_printer_get_hard_margins_for_paper_size$MH();
        try {
            return (int)mh$.invokeExact(printer, paper_size, top, bottom, left, right);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_enumerate_printers$MH() {
        return RuntimeHelper.requireNonNull(constants$2628.gtk_enumerate_printers$MH,"gtk_enumerate_printers");
    }
    public static void gtk_enumerate_printers ( Addressable func,  Addressable data,  Addressable destroy,  int wait) {
        var mh$ = gtk_enumerate_printers$MH();
        try {
            mh$.invokeExact(func, data, destroy, wait);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_job_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2629.gtk_print_job_get_type$MH,"gtk_print_job_get_type");
    }
    public static long gtk_print_job_get_type () {
        var mh$ = gtk_print_job_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_job_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2629.gtk_print_job_new$MH,"gtk_print_job_new");
    }
    public static MemoryAddress gtk_print_job_new ( Addressable title,  Addressable printer,  Addressable settings,  Addressable page_setup) {
        var mh$ = gtk_print_job_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(title, printer, settings, page_setup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_job_get_settings$MH() {
        return RuntimeHelper.requireNonNull(constants$2629.gtk_print_job_get_settings$MH,"gtk_print_job_get_settings");
    }
    public static MemoryAddress gtk_print_job_get_settings ( Addressable job) {
        var mh$ = gtk_print_job_get_settings$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(job);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_job_get_printer$MH() {
        return RuntimeHelper.requireNonNull(constants$2629.gtk_print_job_get_printer$MH,"gtk_print_job_get_printer");
    }
    public static MemoryAddress gtk_print_job_get_printer ( Addressable job) {
        var mh$ = gtk_print_job_get_printer$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(job);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_job_get_title$MH() {
        return RuntimeHelper.requireNonNull(constants$2629.gtk_print_job_get_title$MH,"gtk_print_job_get_title");
    }
    public static MemoryAddress gtk_print_job_get_title ( Addressable job) {
        var mh$ = gtk_print_job_get_title$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(job);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_job_get_status$MH() {
        return RuntimeHelper.requireNonNull(constants$2630.gtk_print_job_get_status$MH,"gtk_print_job_get_status");
    }
    public static int gtk_print_job_get_status ( Addressable job) {
        var mh$ = gtk_print_job_get_status$MH();
        try {
            return (int)mh$.invokeExact(job);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_job_set_source_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2630.gtk_print_job_set_source_file$MH,"gtk_print_job_set_source_file");
    }
    public static int gtk_print_job_set_source_file ( Addressable job,  Addressable filename,  Addressable error) {
        var mh$ = gtk_print_job_set_source_file$MH();
        try {
            return (int)mh$.invokeExact(job, filename, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_job_set_source_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$2630.gtk_print_job_set_source_fd$MH,"gtk_print_job_set_source_fd");
    }
    public static int gtk_print_job_set_source_fd ( Addressable job,  int fd,  Addressable error) {
        var mh$ = gtk_print_job_set_source_fd$MH();
        try {
            return (int)mh$.invokeExact(job, fd, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_job_get_surface$MH() {
        return RuntimeHelper.requireNonNull(constants$2630.gtk_print_job_get_surface$MH,"gtk_print_job_get_surface");
    }
    public static MemoryAddress gtk_print_job_get_surface ( Addressable job,  Addressable error) {
        var mh$ = gtk_print_job_get_surface$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(job, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_job_set_track_print_status$MH() {
        return RuntimeHelper.requireNonNull(constants$2630.gtk_print_job_set_track_print_status$MH,"gtk_print_job_set_track_print_status");
    }
    public static void gtk_print_job_set_track_print_status ( Addressable job,  int track_status) {
        var mh$ = gtk_print_job_set_track_print_status$MH();
        try {
            mh$.invokeExact(job, track_status);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_job_get_track_print_status$MH() {
        return RuntimeHelper.requireNonNull(constants$2630.gtk_print_job_get_track_print_status$MH,"gtk_print_job_get_track_print_status");
    }
    public static int gtk_print_job_get_track_print_status ( Addressable job) {
        var mh$ = gtk_print_job_get_track_print_status$MH();
        try {
            return (int)mh$.invokeExact(job);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_job_send$MH() {
        return RuntimeHelper.requireNonNull(constants$2631.gtk_print_job_send$MH,"gtk_print_job_send");
    }
    public static void gtk_print_job_send ( Addressable job,  Addressable callback,  Addressable user_data,  Addressable dnotify) {
        var mh$ = gtk_print_job_send$MH();
        try {
            mh$.invokeExact(job, callback, user_data, dnotify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_job_get_pages$MH() {
        return RuntimeHelper.requireNonNull(constants$2631.gtk_print_job_get_pages$MH,"gtk_print_job_get_pages");
    }
    public static int gtk_print_job_get_pages ( Addressable job) {
        var mh$ = gtk_print_job_get_pages$MH();
        try {
            return (int)mh$.invokeExact(job);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_job_set_pages$MH() {
        return RuntimeHelper.requireNonNull(constants$2631.gtk_print_job_set_pages$MH,"gtk_print_job_set_pages");
    }
    public static void gtk_print_job_set_pages ( Addressable job,  int pages) {
        var mh$ = gtk_print_job_set_pages$MH();
        try {
            mh$.invokeExact(job, pages);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_job_get_page_ranges$MH() {
        return RuntimeHelper.requireNonNull(constants$2631.gtk_print_job_get_page_ranges$MH,"gtk_print_job_get_page_ranges");
    }
    public static MemoryAddress gtk_print_job_get_page_ranges ( Addressable job,  Addressable n_ranges) {
        var mh$ = gtk_print_job_get_page_ranges$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(job, n_ranges);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_job_set_page_ranges$MH() {
        return RuntimeHelper.requireNonNull(constants$2631.gtk_print_job_set_page_ranges$MH,"gtk_print_job_set_page_ranges");
    }
    public static void gtk_print_job_set_page_ranges ( Addressable job,  Addressable ranges,  int n_ranges) {
        var mh$ = gtk_print_job_set_page_ranges$MH();
        try {
            mh$.invokeExact(job, ranges, n_ranges);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_job_get_page_set$MH() {
        return RuntimeHelper.requireNonNull(constants$2631.gtk_print_job_get_page_set$MH,"gtk_print_job_get_page_set");
    }
    public static int gtk_print_job_get_page_set ( Addressable job) {
        var mh$ = gtk_print_job_get_page_set$MH();
        try {
            return (int)mh$.invokeExact(job);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_job_set_page_set$MH() {
        return RuntimeHelper.requireNonNull(constants$2632.gtk_print_job_set_page_set$MH,"gtk_print_job_set_page_set");
    }
    public static void gtk_print_job_set_page_set ( Addressable job,  int page_set) {
        var mh$ = gtk_print_job_set_page_set$MH();
        try {
            mh$.invokeExact(job, page_set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_job_get_num_copies$MH() {
        return RuntimeHelper.requireNonNull(constants$2632.gtk_print_job_get_num_copies$MH,"gtk_print_job_get_num_copies");
    }
    public static int gtk_print_job_get_num_copies ( Addressable job) {
        var mh$ = gtk_print_job_get_num_copies$MH();
        try {
            return (int)mh$.invokeExact(job);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_job_set_num_copies$MH() {
        return RuntimeHelper.requireNonNull(constants$2632.gtk_print_job_set_num_copies$MH,"gtk_print_job_set_num_copies");
    }
    public static void gtk_print_job_set_num_copies ( Addressable job,  int num_copies) {
        var mh$ = gtk_print_job_set_num_copies$MH();
        try {
            mh$.invokeExact(job, num_copies);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_job_get_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$2632.gtk_print_job_get_scale$MH,"gtk_print_job_get_scale");
    }
    public static double gtk_print_job_get_scale ( Addressable job) {
        var mh$ = gtk_print_job_get_scale$MH();
        try {
            return (double)mh$.invokeExact(job);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_job_set_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$2632.gtk_print_job_set_scale$MH,"gtk_print_job_set_scale");
    }
    public static void gtk_print_job_set_scale ( Addressable job,  double scale) {
        var mh$ = gtk_print_job_set_scale$MH();
        try {
            mh$.invokeExact(job, scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_job_get_n_up$MH() {
        return RuntimeHelper.requireNonNull(constants$2632.gtk_print_job_get_n_up$MH,"gtk_print_job_get_n_up");
    }
    public static int gtk_print_job_get_n_up ( Addressable job) {
        var mh$ = gtk_print_job_get_n_up$MH();
        try {
            return (int)mh$.invokeExact(job);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_job_set_n_up$MH() {
        return RuntimeHelper.requireNonNull(constants$2633.gtk_print_job_set_n_up$MH,"gtk_print_job_set_n_up");
    }
    public static void gtk_print_job_set_n_up ( Addressable job,  int n_up) {
        var mh$ = gtk_print_job_set_n_up$MH();
        try {
            mh$.invokeExact(job, n_up);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_job_get_n_up_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$2633.gtk_print_job_get_n_up_layout$MH,"gtk_print_job_get_n_up_layout");
    }
    public static int gtk_print_job_get_n_up_layout ( Addressable job) {
        var mh$ = gtk_print_job_get_n_up_layout$MH();
        try {
            return (int)mh$.invokeExact(job);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_job_set_n_up_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$2633.gtk_print_job_set_n_up_layout$MH,"gtk_print_job_set_n_up_layout");
    }
    public static void gtk_print_job_set_n_up_layout ( Addressable job,  int layout) {
        var mh$ = gtk_print_job_set_n_up_layout$MH();
        try {
            mh$.invokeExact(job, layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_job_get_rotate$MH() {
        return RuntimeHelper.requireNonNull(constants$2633.gtk_print_job_get_rotate$MH,"gtk_print_job_get_rotate");
    }
    public static int gtk_print_job_get_rotate ( Addressable job) {
        var mh$ = gtk_print_job_get_rotate$MH();
        try {
            return (int)mh$.invokeExact(job);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_job_set_rotate$MH() {
        return RuntimeHelper.requireNonNull(constants$2633.gtk_print_job_set_rotate$MH,"gtk_print_job_set_rotate");
    }
    public static void gtk_print_job_set_rotate ( Addressable job,  int rotate) {
        var mh$ = gtk_print_job_set_rotate$MH();
        try {
            mh$.invokeExact(job, rotate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_job_get_collate$MH() {
        return RuntimeHelper.requireNonNull(constants$2633.gtk_print_job_get_collate$MH,"gtk_print_job_get_collate");
    }
    public static int gtk_print_job_get_collate ( Addressable job) {
        var mh$ = gtk_print_job_get_collate$MH();
        try {
            return (int)mh$.invokeExact(job);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_job_set_collate$MH() {
        return RuntimeHelper.requireNonNull(constants$2634.gtk_print_job_set_collate$MH,"gtk_print_job_set_collate");
    }
    public static void gtk_print_job_set_collate ( Addressable job,  int collate) {
        var mh$ = gtk_print_job_set_collate$MH();
        try {
            mh$.invokeExact(job, collate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_job_get_reverse$MH() {
        return RuntimeHelper.requireNonNull(constants$2634.gtk_print_job_get_reverse$MH,"gtk_print_job_get_reverse");
    }
    public static int gtk_print_job_get_reverse ( Addressable job) {
        var mh$ = gtk_print_job_get_reverse$MH();
        try {
            return (int)mh$.invokeExact(job);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_job_set_reverse$MH() {
        return RuntimeHelper.requireNonNull(constants$2634.gtk_print_job_set_reverse$MH,"gtk_print_job_set_reverse");
    }
    public static void gtk_print_job_set_reverse ( Addressable job,  int reverse) {
        var mh$ = gtk_print_job_set_reverse$MH();
        try {
            mh$.invokeExact(job, reverse);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_unix_dialog_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2634.gtk_print_unix_dialog_get_type$MH,"gtk_print_unix_dialog_get_type");
    }
    public static long gtk_print_unix_dialog_get_type () {
        var mh$ = gtk_print_unix_dialog_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_unix_dialog_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2634.gtk_print_unix_dialog_new$MH,"gtk_print_unix_dialog_new");
    }
    public static MemoryAddress gtk_print_unix_dialog_new ( Addressable title,  Addressable parent) {
        var mh$ = gtk_print_unix_dialog_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(title, parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_unix_dialog_set_page_setup$MH() {
        return RuntimeHelper.requireNonNull(constants$2634.gtk_print_unix_dialog_set_page_setup$MH,"gtk_print_unix_dialog_set_page_setup");
    }
    public static void gtk_print_unix_dialog_set_page_setup ( Addressable dialog,  Addressable page_setup) {
        var mh$ = gtk_print_unix_dialog_set_page_setup$MH();
        try {
            mh$.invokeExact(dialog, page_setup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_unix_dialog_get_page_setup$MH() {
        return RuntimeHelper.requireNonNull(constants$2635.gtk_print_unix_dialog_get_page_setup$MH,"gtk_print_unix_dialog_get_page_setup");
    }
    public static MemoryAddress gtk_print_unix_dialog_get_page_setup ( Addressable dialog) {
        var mh$ = gtk_print_unix_dialog_get_page_setup$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(dialog);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_unix_dialog_set_current_page$MH() {
        return RuntimeHelper.requireNonNull(constants$2635.gtk_print_unix_dialog_set_current_page$MH,"gtk_print_unix_dialog_set_current_page");
    }
    public static void gtk_print_unix_dialog_set_current_page ( Addressable dialog,  int current_page) {
        var mh$ = gtk_print_unix_dialog_set_current_page$MH();
        try {
            mh$.invokeExact(dialog, current_page);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_unix_dialog_get_current_page$MH() {
        return RuntimeHelper.requireNonNull(constants$2635.gtk_print_unix_dialog_get_current_page$MH,"gtk_print_unix_dialog_get_current_page");
    }
    public static int gtk_print_unix_dialog_get_current_page ( Addressable dialog) {
        var mh$ = gtk_print_unix_dialog_get_current_page$MH();
        try {
            return (int)mh$.invokeExact(dialog);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_unix_dialog_set_settings$MH() {
        return RuntimeHelper.requireNonNull(constants$2635.gtk_print_unix_dialog_set_settings$MH,"gtk_print_unix_dialog_set_settings");
    }
    public static void gtk_print_unix_dialog_set_settings ( Addressable dialog,  Addressable settings) {
        var mh$ = gtk_print_unix_dialog_set_settings$MH();
        try {
            mh$.invokeExact(dialog, settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_unix_dialog_get_settings$MH() {
        return RuntimeHelper.requireNonNull(constants$2635.gtk_print_unix_dialog_get_settings$MH,"gtk_print_unix_dialog_get_settings");
    }
    public static MemoryAddress gtk_print_unix_dialog_get_settings ( Addressable dialog) {
        var mh$ = gtk_print_unix_dialog_get_settings$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(dialog);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_unix_dialog_get_selected_printer$MH() {
        return RuntimeHelper.requireNonNull(constants$2635.gtk_print_unix_dialog_get_selected_printer$MH,"gtk_print_unix_dialog_get_selected_printer");
    }
    public static MemoryAddress gtk_print_unix_dialog_get_selected_printer ( Addressable dialog) {
        var mh$ = gtk_print_unix_dialog_get_selected_printer$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(dialog);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_unix_dialog_add_custom_tab$MH() {
        return RuntimeHelper.requireNonNull(constants$2636.gtk_print_unix_dialog_add_custom_tab$MH,"gtk_print_unix_dialog_add_custom_tab");
    }
    public static void gtk_print_unix_dialog_add_custom_tab ( Addressable dialog,  Addressable child,  Addressable tab_label) {
        var mh$ = gtk_print_unix_dialog_add_custom_tab$MH();
        try {
            mh$.invokeExact(dialog, child, tab_label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_unix_dialog_set_manual_capabilities$MH() {
        return RuntimeHelper.requireNonNull(constants$2636.gtk_print_unix_dialog_set_manual_capabilities$MH,"gtk_print_unix_dialog_set_manual_capabilities");
    }
    public static void gtk_print_unix_dialog_set_manual_capabilities ( Addressable dialog,  int capabilities) {
        var mh$ = gtk_print_unix_dialog_set_manual_capabilities$MH();
        try {
            mh$.invokeExact(dialog, capabilities);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_unix_dialog_get_manual_capabilities$MH() {
        return RuntimeHelper.requireNonNull(constants$2636.gtk_print_unix_dialog_get_manual_capabilities$MH,"gtk_print_unix_dialog_get_manual_capabilities");
    }
    public static int gtk_print_unix_dialog_get_manual_capabilities ( Addressable dialog) {
        var mh$ = gtk_print_unix_dialog_get_manual_capabilities$MH();
        try {
            return (int)mh$.invokeExact(dialog);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_unix_dialog_set_support_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$2636.gtk_print_unix_dialog_set_support_selection$MH,"gtk_print_unix_dialog_set_support_selection");
    }
    public static void gtk_print_unix_dialog_set_support_selection ( Addressable dialog,  int support_selection) {
        var mh$ = gtk_print_unix_dialog_set_support_selection$MH();
        try {
            mh$.invokeExact(dialog, support_selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_unix_dialog_get_support_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$2636.gtk_print_unix_dialog_get_support_selection$MH,"gtk_print_unix_dialog_get_support_selection");
    }
    public static int gtk_print_unix_dialog_get_support_selection ( Addressable dialog) {
        var mh$ = gtk_print_unix_dialog_get_support_selection$MH();
        try {
            return (int)mh$.invokeExact(dialog);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_unix_dialog_set_has_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$2636.gtk_print_unix_dialog_set_has_selection$MH,"gtk_print_unix_dialog_set_has_selection");
    }
    public static void gtk_print_unix_dialog_set_has_selection ( Addressable dialog,  int has_selection) {
        var mh$ = gtk_print_unix_dialog_set_has_selection$MH();
        try {
            mh$.invokeExact(dialog, has_selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_unix_dialog_get_has_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$2637.gtk_print_unix_dialog_get_has_selection$MH,"gtk_print_unix_dialog_get_has_selection");
    }
    public static int gtk_print_unix_dialog_get_has_selection ( Addressable dialog) {
        var mh$ = gtk_print_unix_dialog_get_has_selection$MH();
        try {
            return (int)mh$.invokeExact(dialog);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_unix_dialog_set_embed_page_setup$MH() {
        return RuntimeHelper.requireNonNull(constants$2637.gtk_print_unix_dialog_set_embed_page_setup$MH,"gtk_print_unix_dialog_set_embed_page_setup");
    }
    public static void gtk_print_unix_dialog_set_embed_page_setup ( Addressable dialog,  int embed) {
        var mh$ = gtk_print_unix_dialog_set_embed_page_setup$MH();
        try {
            mh$.invokeExact(dialog, embed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_unix_dialog_get_embed_page_setup$MH() {
        return RuntimeHelper.requireNonNull(constants$2637.gtk_print_unix_dialog_get_embed_page_setup$MH,"gtk_print_unix_dialog_get_embed_page_setup");
    }
    public static int gtk_print_unix_dialog_get_embed_page_setup ( Addressable dialog) {
        var mh$ = gtk_print_unix_dialog_get_embed_page_setup$MH();
        try {
            return (int)mh$.invokeExact(dialog);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_unix_dialog_get_page_setup_set$MH() {
        return RuntimeHelper.requireNonNull(constants$2637.gtk_print_unix_dialog_get_page_setup_set$MH,"gtk_print_unix_dialog_get_page_setup_set");
    }
    public static int gtk_print_unix_dialog_get_page_setup_set ( Addressable dialog) {
        var mh$ = gtk_print_unix_dialog_get_page_setup_set$MH();
        try {
            return (int)mh$.invokeExact(dialog);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkPrintJob_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintJob_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintJob_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintJob_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkPrintJob$MH() {
        return RuntimeHelper.requireNonNull(constants$2637.glib_autoptr_clear_GtkPrintJob$MH,"glib_autoptr_clear_GtkPrintJob");
    }
    public static void glib_autoptr_clear_GtkPrintJob ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkPrintJob$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkPrintJob$MH() {
        return RuntimeHelper.requireNonNull(constants$2637.glib_autoptr_cleanup_GtkPrintJob$MH,"glib_autoptr_cleanup_GtkPrintJob");
    }
    public static void glib_autoptr_cleanup_GtkPrintJob ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkPrintJob$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkPrintJob$MH() {
        return RuntimeHelper.requireNonNull(constants$2638.glib_listautoptr_cleanup_GtkPrintJob$MH,"glib_listautoptr_cleanup_GtkPrintJob");
    }
    public static void glib_listautoptr_cleanup_GtkPrintJob ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkPrintJob$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkPrintJob$MH() {
        return RuntimeHelper.requireNonNull(constants$2638.glib_slistautoptr_cleanup_GtkPrintJob$MH,"glib_slistautoptr_cleanup_GtkPrintJob");
    }
    public static void glib_slistautoptr_cleanup_GtkPrintJob ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkPrintJob$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkPrintJob$MH() {
        return RuntimeHelper.requireNonNull(constants$2638.glib_queueautoptr_cleanup_GtkPrintJob$MH,"glib_queueautoptr_cleanup_GtkPrintJob");
    }
    public static void glib_queueautoptr_cleanup_GtkPrintJob ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkPrintJob$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkPrinter_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrinter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrinter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrinter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkPrinter$MH() {
        return RuntimeHelper.requireNonNull(constants$2638.glib_autoptr_clear_GtkPrinter$MH,"glib_autoptr_clear_GtkPrinter");
    }
    public static void glib_autoptr_clear_GtkPrinter ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkPrinter$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkPrinter$MH() {
        return RuntimeHelper.requireNonNull(constants$2638.glib_autoptr_cleanup_GtkPrinter$MH,"glib_autoptr_cleanup_GtkPrinter");
    }
    public static void glib_autoptr_cleanup_GtkPrinter ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkPrinter$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkPrinter$MH() {
        return RuntimeHelper.requireNonNull(constants$2638.glib_listautoptr_cleanup_GtkPrinter$MH,"glib_listautoptr_cleanup_GtkPrinter");
    }
    public static void glib_listautoptr_cleanup_GtkPrinter ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkPrinter$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkPrinter$MH() {
        return RuntimeHelper.requireNonNull(constants$2639.glib_slistautoptr_cleanup_GtkPrinter$MH,"glib_slistautoptr_cleanup_GtkPrinter");
    }
    public static void glib_slistautoptr_cleanup_GtkPrinter ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkPrinter$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkPrinter$MH() {
        return RuntimeHelper.requireNonNull(constants$2639.glib_queueautoptr_cleanup_GtkPrinter$MH,"glib_queueautoptr_cleanup_GtkPrinter");
    }
    public static void glib_queueautoptr_cleanup_GtkPrinter ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkPrinter$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GtkPrintUnixDialog_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintUnixDialog_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintUnixDialog_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GtkPrintUnixDialog_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GtkPrintUnixDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2639.glib_autoptr_clear_GtkPrintUnixDialog$MH,"glib_autoptr_clear_GtkPrintUnixDialog");
    }
    public static void glib_autoptr_clear_GtkPrintUnixDialog ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GtkPrintUnixDialog$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GtkPrintUnixDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2639.glib_autoptr_cleanup_GtkPrintUnixDialog$MH,"glib_autoptr_cleanup_GtkPrintUnixDialog");
    }
    public static void glib_autoptr_cleanup_GtkPrintUnixDialog ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GtkPrintUnixDialog$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GtkPrintUnixDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2639.glib_listautoptr_cleanup_GtkPrintUnixDialog$MH,"glib_listautoptr_cleanup_GtkPrintUnixDialog");
    }
    public static void glib_listautoptr_cleanup_GtkPrintUnixDialog ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GtkPrintUnixDialog$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GtkPrintUnixDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2639.glib_slistautoptr_cleanup_GtkPrintUnixDialog$MH,"glib_slistautoptr_cleanup_GtkPrintUnixDialog");
    }
    public static void glib_slistautoptr_cleanup_GtkPrintUnixDialog ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GtkPrintUnixDialog$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GtkPrintUnixDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2640.glib_queueautoptr_cleanup_GtkPrintUnixDialog$MH,"glib_queueautoptr_cleanup_GtkPrintUnixDialog");
    }
    public static void glib_queueautoptr_cleanup_GtkPrintUnixDialog ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GtkPrintUnixDialog$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_renderer_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2640.gsk_gl_renderer_get_type$MH,"gsk_gl_renderer_get_type");
    }
    public static long gsk_gl_renderer_get_type () {
        var mh$ = gsk_gl_renderer_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_gl_renderer_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2640.gsk_gl_renderer_new$MH,"gsk_gl_renderer_new");
    }
    public static MemoryAddress gsk_gl_renderer_new () {
        var mh$ = gsk_gl_renderer_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_ngl_renderer_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2640.gsk_ngl_renderer_get_type$MH,"gsk_ngl_renderer_get_type");
    }
    public static long gsk_ngl_renderer_get_type () {
        var mh$ = gsk_ngl_renderer_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gsk_ngl_renderer_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2640.gsk_ngl_renderer_new$MH,"gsk_ngl_renderer_new");
    }
    public static MemoryAddress gsk_ngl_renderer_new () {
        var mh$ = gsk_ngl_renderer_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int HB_OT_NAME_ID_COPYRIGHT() {
        return (int)0L;
    }
    public static int HB_OT_NAME_ID_FONT_FAMILY() {
        return (int)1L;
    }
    public static int HB_OT_NAME_ID_FONT_SUBFAMILY() {
        return (int)2L;
    }
    public static int HB_OT_NAME_ID_UNIQUE_ID() {
        return (int)3L;
    }
    public static int HB_OT_NAME_ID_FULL_NAME() {
        return (int)4L;
    }
    public static int HB_OT_NAME_ID_VERSION_STRING() {
        return (int)5L;
    }
    public static int HB_OT_NAME_ID_POSTSCRIPT_NAME() {
        return (int)6L;
    }
    public static int HB_OT_NAME_ID_TRADEMARK() {
        return (int)7L;
    }
    public static int HB_OT_NAME_ID_MANUFACTURER() {
        return (int)8L;
    }
    public static int HB_OT_NAME_ID_DESIGNER() {
        return (int)9L;
    }
    public static int HB_OT_NAME_ID_DESCRIPTION() {
        return (int)10L;
    }
    public static int HB_OT_NAME_ID_VENDOR_URL() {
        return (int)11L;
    }
    public static int HB_OT_NAME_ID_DESIGNER_URL() {
        return (int)12L;
    }
    public static int HB_OT_NAME_ID_LICENSE() {
        return (int)13L;
    }
    public static int HB_OT_NAME_ID_LICENSE_URL() {
        return (int)14L;
    }
    public static int HB_OT_NAME_ID_TYPOGRAPHIC_FAMILY() {
        return (int)16L;
    }
    public static int HB_OT_NAME_ID_TYPOGRAPHIC_SUBFAMILY() {
        return (int)17L;
    }
    public static int HB_OT_NAME_ID_MAC_FULL_NAME() {
        return (int)18L;
    }
    public static int HB_OT_NAME_ID_SAMPLE_TEXT() {
        return (int)19L;
    }
    public static int HB_OT_NAME_ID_CID_FINDFONT_NAME() {
        return (int)20L;
    }
    public static int HB_OT_NAME_ID_WWS_FAMILY() {
        return (int)21L;
    }
    public static int HB_OT_NAME_ID_WWS_SUBFAMILY() {
        return (int)22L;
    }
    public static int HB_OT_NAME_ID_LIGHT_BACKGROUND() {
        return (int)23L;
    }
    public static int HB_OT_NAME_ID_DARK_BACKGROUND() {
        return (int)24L;
    }
    public static int HB_OT_NAME_ID_VARIATIONS_PS_PREFIX() {
        return (int)25L;
    }
    public static int HB_OT_NAME_ID_INVALID() {
        return (int)65535L;
    }
    public static MethodHandle hb_ot_name_list_names$MH() {
        return RuntimeHelper.requireNonNull(constants$2640.hb_ot_name_list_names$MH,"hb_ot_name_list_names");
    }
    public static MemoryAddress hb_ot_name_list_names ( Addressable face,  Addressable num_entries) {
        var mh$ = hb_ot_name_list_names$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(face, num_entries);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_ot_name_get_utf8$MH() {
        return RuntimeHelper.requireNonNull(constants$2641.hb_ot_name_get_utf8$MH,"hb_ot_name_get_utf8");
    }
    public static int hb_ot_name_get_utf8 ( Addressable face,  int name_id,  Addressable language,  Addressable text_size,  Addressable text) {
        var mh$ = hb_ot_name_get_utf8$MH();
        try {
            return (int)mh$.invokeExact(face, name_id, language, text_size, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_ot_name_get_utf16$MH() {
        return RuntimeHelper.requireNonNull(constants$2641.hb_ot_name_get_utf16$MH,"hb_ot_name_get_utf16");
    }
    public static int hb_ot_name_get_utf16 ( Addressable face,  int name_id,  Addressable language,  Addressable text_size,  Addressable text) {
        var mh$ = hb_ot_name_get_utf16$MH();
        try {
            return (int)mh$.invokeExact(face, name_id, language, text_size, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_ot_name_get_utf32$MH() {
        return RuntimeHelper.requireNonNull(constants$2641.hb_ot_name_get_utf32$MH,"hb_ot_name_get_utf32");
    }
    public static int hb_ot_name_get_utf32 ( Addressable face,  int name_id,  Addressable language,  Addressable text_size,  Addressable text) {
        var mh$ = hb_ot_name_get_utf32$MH();
        try {
            return (int)mh$.invokeExact(face, name_id, language, text_size, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_ot_color_has_palettes$MH() {
        return RuntimeHelper.requireNonNull(constants$2641.hb_ot_color_has_palettes$MH,"hb_ot_color_has_palettes");
    }
    public static int hb_ot_color_has_palettes ( Addressable face) {
        var mh$ = hb_ot_color_has_palettes$MH();
        try {
            return (int)mh$.invokeExact(face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_ot_color_palette_get_count$MH() {
        return RuntimeHelper.requireNonNull(constants$2641.hb_ot_color_palette_get_count$MH,"hb_ot_color_palette_get_count");
    }
    public static int hb_ot_color_palette_get_count ( Addressable face) {
        var mh$ = hb_ot_color_palette_get_count$MH();
        try {
            return (int)mh$.invokeExact(face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_ot_color_palette_get_name_id$MH() {
        return RuntimeHelper.requireNonNull(constants$2641.hb_ot_color_palette_get_name_id$MH,"hb_ot_color_palette_get_name_id");
    }
    public static int hb_ot_color_palette_get_name_id ( Addressable face,  int palette_index) {
        var mh$ = hb_ot_color_palette_get_name_id$MH();
        try {
            return (int)mh$.invokeExact(face, palette_index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_ot_color_palette_color_get_name_id$MH() {
        return RuntimeHelper.requireNonNull(constants$2642.hb_ot_color_palette_color_get_name_id$MH,"hb_ot_color_palette_color_get_name_id");
    }
    public static int hb_ot_color_palette_color_get_name_id ( Addressable face,  int color_index) {
        var mh$ = hb_ot_color_palette_color_get_name_id$MH();
        try {
            return (int)mh$.invokeExact(face, color_index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int HB_OT_COLOR_PALETTE_FLAG_DEFAULT() {
        return (int)0L;
    }
    public static int HB_OT_COLOR_PALETTE_FLAG_USABLE_WITH_LIGHT_BACKGROUND() {
        return (int)1L;
    }
    public static int HB_OT_COLOR_PALETTE_FLAG_USABLE_WITH_DARK_BACKGROUND() {
        return (int)2L;
    }
    public static MethodHandle hb_ot_color_palette_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$2642.hb_ot_color_palette_get_flags$MH,"hb_ot_color_palette_get_flags");
    }
    public static int hb_ot_color_palette_get_flags ( Addressable face,  int palette_index) {
        var mh$ = hb_ot_color_palette_get_flags$MH();
        try {
            return (int)mh$.invokeExact(face, palette_index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_ot_color_palette_get_colors$MH() {
        return RuntimeHelper.requireNonNull(constants$2642.hb_ot_color_palette_get_colors$MH,"hb_ot_color_palette_get_colors");
    }
    public static int hb_ot_color_palette_get_colors ( Addressable face,  int palette_index,  int start_offset,  Addressable color_count,  Addressable colors) {
        var mh$ = hb_ot_color_palette_get_colors$MH();
        try {
            return (int)mh$.invokeExact(face, palette_index, start_offset, color_count, colors);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_ot_color_has_layers$MH() {
        return RuntimeHelper.requireNonNull(constants$2642.hb_ot_color_has_layers$MH,"hb_ot_color_has_layers");
    }
    public static int hb_ot_color_has_layers ( Addressable face) {
        var mh$ = hb_ot_color_has_layers$MH();
        try {
            return (int)mh$.invokeExact(face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_ot_color_glyph_get_layers$MH() {
        return RuntimeHelper.requireNonNull(constants$2642.hb_ot_color_glyph_get_layers$MH,"hb_ot_color_glyph_get_layers");
    }
    public static int hb_ot_color_glyph_get_layers ( Addressable face,  int glyph,  int start_offset,  Addressable layer_count,  Addressable layers) {
        var mh$ = hb_ot_color_glyph_get_layers$MH();
        try {
            return (int)mh$.invokeExact(face, glyph, start_offset, layer_count, layers);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_ot_color_has_svg$MH() {
        return RuntimeHelper.requireNonNull(constants$2642.hb_ot_color_has_svg$MH,"hb_ot_color_has_svg");
    }
    public static int hb_ot_color_has_svg ( Addressable face) {
        var mh$ = hb_ot_color_has_svg$MH();
        try {
            return (int)mh$.invokeExact(face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_ot_color_glyph_reference_svg$MH() {
        return RuntimeHelper.requireNonNull(constants$2643.hb_ot_color_glyph_reference_svg$MH,"hb_ot_color_glyph_reference_svg");
    }
    public static MemoryAddress hb_ot_color_glyph_reference_svg ( Addressable face,  int glyph) {
        var mh$ = hb_ot_color_glyph_reference_svg$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(face, glyph);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_ot_color_has_png$MH() {
        return RuntimeHelper.requireNonNull(constants$2643.hb_ot_color_has_png$MH,"hb_ot_color_has_png");
    }
    public static int hb_ot_color_has_png ( Addressable face) {
        var mh$ = hb_ot_color_has_png$MH();
        try {
            return (int)mh$.invokeExact(face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_ot_color_glyph_reference_png$MH() {
        return RuntimeHelper.requireNonNull(constants$2643.hb_ot_color_glyph_reference_png$MH,"hb_ot_color_glyph_reference_png");
    }
    public static MemoryAddress hb_ot_color_glyph_reference_png ( Addressable font,  int glyph) {
        var mh$ = hb_ot_color_glyph_reference_png$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(font, glyph);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_ot_layout_table_choose_script$MH() {
        return RuntimeHelper.requireNonNull(constants$2643.hb_ot_layout_table_choose_script$MH,"hb_ot_layout_table_choose_script");
    }
    public static int hb_ot_layout_table_choose_script ( Addressable face,  int table_tag,  Addressable script_tags,  Addressable script_index,  Addressable chosen_script) {
        var mh$ = hb_ot_layout_table_choose_script$MH();
        try {
            return (int)mh$.invokeExact(face, table_tag, script_tags, script_index, chosen_script);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_ot_layout_script_find_language$MH() {
        return RuntimeHelper.requireNonNull(constants$2643.hb_ot_layout_script_find_language$MH,"hb_ot_layout_script_find_language");
    }
    public static int hb_ot_layout_script_find_language ( Addressable face,  int table_tag,  int script_index,  int language_tag,  Addressable language_index) {
        var mh$ = hb_ot_layout_script_find_language$MH();
        try {
            return (int)mh$.invokeExact(face, table_tag, script_index, language_tag, language_index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_ot_tags_from_script$MH() {
        return RuntimeHelper.requireNonNull(constants$2643.hb_ot_tags_from_script$MH,"hb_ot_tags_from_script");
    }
    public static void hb_ot_tags_from_script ( int script,  Addressable script_tag_1,  Addressable script_tag_2) {
        var mh$ = hb_ot_tags_from_script$MH();
        try {
            mh$.invokeExact(script, script_tag_1, script_tag_2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_ot_tag_from_language$MH() {
        return RuntimeHelper.requireNonNull(constants$2644.hb_ot_tag_from_language$MH,"hb_ot_tag_from_language");
    }
    public static int hb_ot_tag_from_language ( Addressable language) {
        var mh$ = hb_ot_tag_from_language$MH();
        try {
            return (int)mh$.invokeExact(language);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hb_ot_var_get_axes$MH() {
        return RuntimeHelper.requireNonNull(constants$2644.hb_ot_var_get_axes$MH,"hb_ot_var_get_axes");
    }
    public static int hb_ot_var_get_axes ( Addressable face,  int start_offset,  Addressable axes_count,  Addressable axes_array) {
        var mh$ = hb_ot_var_get_axes$MH();
        try {
            return (int)mh$.invokeExact(face, start_offset, axes_count, axes_array);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


