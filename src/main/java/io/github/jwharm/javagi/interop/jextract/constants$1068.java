// Generated by jextract

package io.github.jwharm.javagi.interop.jextract;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$1068 {

    static final FunctionDescriptor stat$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle stat$MH = RuntimeHelper.downcallHandle(
        "stat",
        constants$1068.stat$FUNC
    );
    static final FunctionDescriptor fstat$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle fstat$MH = RuntimeHelper.downcallHandle(
        "fstat",
        constants$1068.fstat$FUNC
    );
    static final FunctionDescriptor fstatat$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle fstatat$MH = RuntimeHelper.downcallHandle(
        "fstatat",
        constants$1068.fstatat$FUNC
    );
    static final FunctionDescriptor lstat$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle lstat$MH = RuntimeHelper.downcallHandle(
        "lstat",
        constants$1068.lstat$FUNC
    );
    static final FunctionDescriptor chmod$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle chmod$MH = RuntimeHelper.downcallHandle(
        "chmod",
        constants$1068.chmod$FUNC
    );
    static final FunctionDescriptor lchmod$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle lchmod$MH = RuntimeHelper.downcallHandle(
        "lchmod",
        constants$1068.lchmod$FUNC
    );
}


