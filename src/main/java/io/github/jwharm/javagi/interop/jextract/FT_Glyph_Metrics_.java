// Generated by jextract

package io.github.jwharm.javagi.interop.jextract;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class FT_Glyph_Metrics_ {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG_LONG$LAYOUT.withName("width"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("height"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("horiBearingX"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("horiBearingY"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("horiAdvance"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("vertBearingX"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("vertBearingY"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("vertAdvance")
    ).withName("FT_Glyph_Metrics_");
    public static MemoryLayout $LAYOUT() {
        return FT_Glyph_Metrics_.$struct$LAYOUT;
    }
    static final VarHandle width$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("width"));
    public static VarHandle width$VH() {
        return FT_Glyph_Metrics_.width$VH;
    }
    public static long width$get(MemorySegment seg) {
        return (long)FT_Glyph_Metrics_.width$VH.get(seg);
    }
    public static void width$set( MemorySegment seg, long x) {
        FT_Glyph_Metrics_.width$VH.set(seg, x);
    }
    public static long width$get(MemorySegment seg, long index) {
        return (long)FT_Glyph_Metrics_.width$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void width$set(MemorySegment seg, long index, long x) {
        FT_Glyph_Metrics_.width$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle height$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("height"));
    public static VarHandle height$VH() {
        return FT_Glyph_Metrics_.height$VH;
    }
    public static long height$get(MemorySegment seg) {
        return (long)FT_Glyph_Metrics_.height$VH.get(seg);
    }
    public static void height$set( MemorySegment seg, long x) {
        FT_Glyph_Metrics_.height$VH.set(seg, x);
    }
    public static long height$get(MemorySegment seg, long index) {
        return (long)FT_Glyph_Metrics_.height$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void height$set(MemorySegment seg, long index, long x) {
        FT_Glyph_Metrics_.height$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle horiBearingX$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("horiBearingX"));
    public static VarHandle horiBearingX$VH() {
        return FT_Glyph_Metrics_.horiBearingX$VH;
    }
    public static long horiBearingX$get(MemorySegment seg) {
        return (long)FT_Glyph_Metrics_.horiBearingX$VH.get(seg);
    }
    public static void horiBearingX$set( MemorySegment seg, long x) {
        FT_Glyph_Metrics_.horiBearingX$VH.set(seg, x);
    }
    public static long horiBearingX$get(MemorySegment seg, long index) {
        return (long)FT_Glyph_Metrics_.horiBearingX$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void horiBearingX$set(MemorySegment seg, long index, long x) {
        FT_Glyph_Metrics_.horiBearingX$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle horiBearingY$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("horiBearingY"));
    public static VarHandle horiBearingY$VH() {
        return FT_Glyph_Metrics_.horiBearingY$VH;
    }
    public static long horiBearingY$get(MemorySegment seg) {
        return (long)FT_Glyph_Metrics_.horiBearingY$VH.get(seg);
    }
    public static void horiBearingY$set( MemorySegment seg, long x) {
        FT_Glyph_Metrics_.horiBearingY$VH.set(seg, x);
    }
    public static long horiBearingY$get(MemorySegment seg, long index) {
        return (long)FT_Glyph_Metrics_.horiBearingY$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void horiBearingY$set(MemorySegment seg, long index, long x) {
        FT_Glyph_Metrics_.horiBearingY$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle horiAdvance$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("horiAdvance"));
    public static VarHandle horiAdvance$VH() {
        return FT_Glyph_Metrics_.horiAdvance$VH;
    }
    public static long horiAdvance$get(MemorySegment seg) {
        return (long)FT_Glyph_Metrics_.horiAdvance$VH.get(seg);
    }
    public static void horiAdvance$set( MemorySegment seg, long x) {
        FT_Glyph_Metrics_.horiAdvance$VH.set(seg, x);
    }
    public static long horiAdvance$get(MemorySegment seg, long index) {
        return (long)FT_Glyph_Metrics_.horiAdvance$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void horiAdvance$set(MemorySegment seg, long index, long x) {
        FT_Glyph_Metrics_.horiAdvance$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle vertBearingX$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("vertBearingX"));
    public static VarHandle vertBearingX$VH() {
        return FT_Glyph_Metrics_.vertBearingX$VH;
    }
    public static long vertBearingX$get(MemorySegment seg) {
        return (long)FT_Glyph_Metrics_.vertBearingX$VH.get(seg);
    }
    public static void vertBearingX$set( MemorySegment seg, long x) {
        FT_Glyph_Metrics_.vertBearingX$VH.set(seg, x);
    }
    public static long vertBearingX$get(MemorySegment seg, long index) {
        return (long)FT_Glyph_Metrics_.vertBearingX$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void vertBearingX$set(MemorySegment seg, long index, long x) {
        FT_Glyph_Metrics_.vertBearingX$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle vertBearingY$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("vertBearingY"));
    public static VarHandle vertBearingY$VH() {
        return FT_Glyph_Metrics_.vertBearingY$VH;
    }
    public static long vertBearingY$get(MemorySegment seg) {
        return (long)FT_Glyph_Metrics_.vertBearingY$VH.get(seg);
    }
    public static void vertBearingY$set( MemorySegment seg, long x) {
        FT_Glyph_Metrics_.vertBearingY$VH.set(seg, x);
    }
    public static long vertBearingY$get(MemorySegment seg, long index) {
        return (long)FT_Glyph_Metrics_.vertBearingY$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void vertBearingY$set(MemorySegment seg, long index, long x) {
        FT_Glyph_Metrics_.vertBearingY$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle vertAdvance$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("vertAdvance"));
    public static VarHandle vertAdvance$VH() {
        return FT_Glyph_Metrics_.vertAdvance$VH;
    }
    public static long vertAdvance$get(MemorySegment seg) {
        return (long)FT_Glyph_Metrics_.vertAdvance$VH.get(seg);
    }
    public static void vertAdvance$set( MemorySegment seg, long x) {
        FT_Glyph_Metrics_.vertAdvance$VH.set(seg, x);
    }
    public static long vertAdvance$get(MemorySegment seg, long index) {
        return (long)FT_Glyph_Metrics_.vertAdvance$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void vertAdvance$set(MemorySegment seg, long index, long x) {
        FT_Glyph_Metrics_.vertAdvance$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


