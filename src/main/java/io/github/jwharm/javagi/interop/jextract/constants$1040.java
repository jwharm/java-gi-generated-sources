// Generated by jextract

package io.github.jwharm.javagi.interop.jextract;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$1040 {

    static final FunctionDescriptor if_nametoindex$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle if_nametoindex$MH = RuntimeHelper.downcallHandle(
        "if_nametoindex",
        constants$1040.if_nametoindex$FUNC
    );
    static final FunctionDescriptor if_indextoname$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle if_indextoname$MH = RuntimeHelper.downcallHandle(
        "if_indextoname",
        constants$1040.if_indextoname$FUNC
    );
    static final FunctionDescriptor if_nameindex$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle if_nameindex$MH = RuntimeHelper.downcallHandle(
        "if_nameindex",
        constants$1040.if_nameindex$FUNC
    );
    static final FunctionDescriptor if_freenameindex$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle if_freenameindex$MH = RuntimeHelper.downcallHandle(
        "if_freenameindex",
        constants$1040.if_freenameindex$FUNC
    );
    static final FunctionDescriptor inet_addr$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle inet_addr$MH = RuntimeHelper.downcallHandle(
        "inet_addr",
        constants$1040.inet_addr$FUNC
    );
    static final FunctionDescriptor inet_lnaof$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_INT$LAYOUT.withName("s_addr")
        ).withName("in_addr")
    );
    static final MethodHandle inet_lnaof$MH = RuntimeHelper.downcallHandle(
        "inet_lnaof",
        constants$1040.inet_lnaof$FUNC
    );
}


