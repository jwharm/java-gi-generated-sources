// Generated by jextract

package io.github.jwharm.javagi.interop.jextract;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
 class gtk_h_7 extends gtk_h_6 {

    public static MethodHandle g_type_query$MH() {
        return RuntimeHelper.requireNonNull(constants$423.g_type_query$MH,"g_type_query");
    }
    public static void g_type_query ( long type,  Addressable query) {
        var mh$ = g_type_query$MH();
        try {
            mh$.invokeExact(type, query);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_get_instance_count$MH() {
        return RuntimeHelper.requireNonNull(constants$423.g_type_get_instance_count$MH,"g_type_get_instance_count");
    }
    public static int g_type_get_instance_count ( long type) {
        var mh$ = g_type_get_instance_count$MH();
        try {
            return (int)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int G_TYPE_FLAG_CLASSED() {
        return (int)1L;
    }
    public static int G_TYPE_FLAG_INSTANTIATABLE() {
        return (int)2L;
    }
    public static int G_TYPE_FLAG_DERIVABLE() {
        return (int)4L;
    }
    public static int G_TYPE_FLAG_DEEP_DERIVABLE() {
        return (int)8L;
    }
    public static int G_TYPE_FLAG_ABSTRACT() {
        return (int)16L;
    }
    public static int G_TYPE_FLAG_VALUE_ABSTRACT() {
        return (int)32L;
    }
    public static int G_TYPE_FLAG_FINAL() {
        return (int)64L;
    }
    public static MethodHandle g_type_register_static$MH() {
        return RuntimeHelper.requireNonNull(constants$426.g_type_register_static$MH,"g_type_register_static");
    }
    public static long g_type_register_static ( long parent_type,  Addressable type_name,  Addressable info,  int flags) {
        var mh$ = g_type_register_static$MH();
        try {
            return (long)mh$.invokeExact(parent_type, type_name, info, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_register_static_simple$MH() {
        return RuntimeHelper.requireNonNull(constants$427.g_type_register_static_simple$MH,"g_type_register_static_simple");
    }
    public static long g_type_register_static_simple ( long parent_type,  Addressable type_name,  int class_size,  Addressable class_init,  int instance_size,  Addressable instance_init,  int flags) {
        var mh$ = g_type_register_static_simple$MH();
        try {
            return (long)mh$.invokeExact(parent_type, type_name, class_size, class_init, instance_size, instance_init, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_register_dynamic$MH() {
        return RuntimeHelper.requireNonNull(constants$427.g_type_register_dynamic$MH,"g_type_register_dynamic");
    }
    public static long g_type_register_dynamic ( long parent_type,  Addressable type_name,  Addressable plugin,  int flags) {
        var mh$ = g_type_register_dynamic$MH();
        try {
            return (long)mh$.invokeExact(parent_type, type_name, plugin, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_register_fundamental$MH() {
        return RuntimeHelper.requireNonNull(constants$427.g_type_register_fundamental$MH,"g_type_register_fundamental");
    }
    public static long g_type_register_fundamental ( long type_id,  Addressable type_name,  Addressable info,  Addressable finfo,  int flags) {
        var mh$ = g_type_register_fundamental$MH();
        try {
            return (long)mh$.invokeExact(type_id, type_name, info, finfo, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_add_interface_static$MH() {
        return RuntimeHelper.requireNonNull(constants$427.g_type_add_interface_static$MH,"g_type_add_interface_static");
    }
    public static void g_type_add_interface_static ( long instance_type,  long interface_type,  Addressable info) {
        var mh$ = g_type_add_interface_static$MH();
        try {
            mh$.invokeExact(instance_type, interface_type, info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_add_interface_dynamic$MH() {
        return RuntimeHelper.requireNonNull(constants$427.g_type_add_interface_dynamic$MH,"g_type_add_interface_dynamic");
    }
    public static void g_type_add_interface_dynamic ( long instance_type,  long interface_type,  Addressable plugin) {
        var mh$ = g_type_add_interface_dynamic$MH();
        try {
            mh$.invokeExact(instance_type, interface_type, plugin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_interface_add_prerequisite$MH() {
        return RuntimeHelper.requireNonNull(constants$427.g_type_interface_add_prerequisite$MH,"g_type_interface_add_prerequisite");
    }
    public static void g_type_interface_add_prerequisite ( long interface_type,  long prerequisite_type) {
        var mh$ = g_type_interface_add_prerequisite$MH();
        try {
            mh$.invokeExact(interface_type, prerequisite_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_interface_prerequisites$MH() {
        return RuntimeHelper.requireNonNull(constants$428.g_type_interface_prerequisites$MH,"g_type_interface_prerequisites");
    }
    public static MemoryAddress g_type_interface_prerequisites ( long interface_type,  Addressable n_prerequisites) {
        var mh$ = g_type_interface_prerequisites$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(interface_type, n_prerequisites);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_interface_instantiatable_prerequisite$MH() {
        return RuntimeHelper.requireNonNull(constants$428.g_type_interface_instantiatable_prerequisite$MH,"g_type_interface_instantiatable_prerequisite");
    }
    public static long g_type_interface_instantiatable_prerequisite ( long interface_type) {
        var mh$ = g_type_interface_instantiatable_prerequisite$MH();
        try {
            return (long)mh$.invokeExact(interface_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_add_private$MH() {
        return RuntimeHelper.requireNonNull(constants$428.g_type_class_add_private$MH,"g_type_class_add_private");
    }
    public static void g_type_class_add_private ( Addressable g_class,  long private_size) {
        var mh$ = g_type_class_add_private$MH();
        try {
            mh$.invokeExact(g_class, private_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_add_instance_private$MH() {
        return RuntimeHelper.requireNonNull(constants$428.g_type_add_instance_private$MH,"g_type_add_instance_private");
    }
    public static int g_type_add_instance_private ( long class_type,  long private_size) {
        var mh$ = g_type_add_instance_private$MH();
        try {
            return (int)mh$.invokeExact(class_type, private_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_instance_get_private$MH() {
        return RuntimeHelper.requireNonNull(constants$428.g_type_instance_get_private$MH,"g_type_instance_get_private");
    }
    public static MemoryAddress g_type_instance_get_private ( Addressable instance,  long private_type) {
        var mh$ = g_type_instance_get_private$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(instance, private_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_adjust_private_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$428.g_type_class_adjust_private_offset$MH,"g_type_class_adjust_private_offset");
    }
    public static void g_type_class_adjust_private_offset ( Addressable g_class,  Addressable private_size_or_offset) {
        var mh$ = g_type_class_adjust_private_offset$MH();
        try {
            mh$.invokeExact(g_class, private_size_or_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_add_class_private$MH() {
        return RuntimeHelper.requireNonNull(constants$429.g_type_add_class_private$MH,"g_type_add_class_private");
    }
    public static void g_type_add_class_private ( long class_type,  long private_size) {
        var mh$ = g_type_add_class_private$MH();
        try {
            mh$.invokeExact(class_type, private_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_get_private$MH() {
        return RuntimeHelper.requireNonNull(constants$429.g_type_class_get_private$MH,"g_type_class_get_private");
    }
    public static MemoryAddress g_type_class_get_private ( Addressable klass,  long private_type) {
        var mh$ = g_type_class_get_private$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(klass, private_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_get_instance_private_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$429.g_type_class_get_instance_private_offset$MH,"g_type_class_get_instance_private_offset");
    }
    public static int g_type_class_get_instance_private_offset ( Addressable g_class) {
        var mh$ = g_type_class_get_instance_private_offset$MH();
        try {
            return (int)mh$.invokeExact(g_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_ensure$MH() {
        return RuntimeHelper.requireNonNull(constants$429.g_type_ensure$MH,"g_type_ensure");
    }
    public static void g_type_ensure ( long type) {
        var mh$ = g_type_ensure$MH();
        try {
            mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_get_type_registration_serial$MH() {
        return RuntimeHelper.requireNonNull(constants$429.g_type_get_type_registration_serial$MH,"g_type_get_type_registration_serial");
    }
    public static int g_type_get_type_registration_serial () {
        var mh$ = g_type_get_type_registration_serial$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_get_plugin$MH() {
        return RuntimeHelper.requireNonNull(constants$429.g_type_get_plugin$MH,"g_type_get_plugin");
    }
    public static MemoryAddress g_type_get_plugin ( long type) {
        var mh$ = g_type_get_plugin$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_interface_get_plugin$MH() {
        return RuntimeHelper.requireNonNull(constants$430.g_type_interface_get_plugin$MH,"g_type_interface_get_plugin");
    }
    public static MemoryAddress g_type_interface_get_plugin ( long instance_type,  long interface_type) {
        var mh$ = g_type_interface_get_plugin$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(instance_type, interface_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_fundamental_next$MH() {
        return RuntimeHelper.requireNonNull(constants$430.g_type_fundamental_next$MH,"g_type_fundamental_next");
    }
    public static long g_type_fundamental_next () {
        var mh$ = g_type_fundamental_next$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_fundamental$MH() {
        return RuntimeHelper.requireNonNull(constants$430.g_type_fundamental$MH,"g_type_fundamental");
    }
    public static long g_type_fundamental ( long type_id) {
        var mh$ = g_type_fundamental$MH();
        try {
            return (long)mh$.invokeExact(type_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_create_instance$MH() {
        return RuntimeHelper.requireNonNull(constants$430.g_type_create_instance$MH,"g_type_create_instance");
    }
    public static MemoryAddress g_type_create_instance ( long type) {
        var mh$ = g_type_create_instance$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_free_instance$MH() {
        return RuntimeHelper.requireNonNull(constants$430.g_type_free_instance$MH,"g_type_free_instance");
    }
    public static void g_type_free_instance ( Addressable instance) {
        var mh$ = g_type_free_instance$MH();
        try {
            mh$.invokeExact(instance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_add_class_cache_func$MH() {
        return RuntimeHelper.requireNonNull(constants$430.g_type_add_class_cache_func$MH,"g_type_add_class_cache_func");
    }
    public static void g_type_add_class_cache_func ( Addressable cache_data,  Addressable cache_func) {
        var mh$ = g_type_add_class_cache_func$MH();
        try {
            mh$.invokeExact(cache_data, cache_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_remove_class_cache_func$MH() {
        return RuntimeHelper.requireNonNull(constants$431.g_type_remove_class_cache_func$MH,"g_type_remove_class_cache_func");
    }
    public static void g_type_remove_class_cache_func ( Addressable cache_data,  Addressable cache_func) {
        var mh$ = g_type_remove_class_cache_func$MH();
        try {
            mh$.invokeExact(cache_data, cache_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_unref_uncached$MH() {
        return RuntimeHelper.requireNonNull(constants$431.g_type_class_unref_uncached$MH,"g_type_class_unref_uncached");
    }
    public static void g_type_class_unref_uncached ( Addressable g_class) {
        var mh$ = g_type_class_unref_uncached$MH();
        try {
            mh$.invokeExact(g_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_add_interface_check$MH() {
        return RuntimeHelper.requireNonNull(constants$431.g_type_add_interface_check$MH,"g_type_add_interface_check");
    }
    public static void g_type_add_interface_check ( Addressable check_data,  Addressable check_func) {
        var mh$ = g_type_add_interface_check$MH();
        try {
            mh$.invokeExact(check_data, check_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_remove_interface_check$MH() {
        return RuntimeHelper.requireNonNull(constants$431.g_type_remove_interface_check$MH,"g_type_remove_interface_check");
    }
    public static void g_type_remove_interface_check ( Addressable check_data,  Addressable check_func) {
        var mh$ = g_type_remove_interface_check$MH();
        try {
            mh$.invokeExact(check_data, check_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_value_table_peek$MH() {
        return RuntimeHelper.requireNonNull(constants$431.g_type_value_table_peek$MH,"g_type_value_table_peek");
    }
    public static MemoryAddress g_type_value_table_peek ( long type) {
        var mh$ = g_type_value_table_peek$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_instance$MH() {
        return RuntimeHelper.requireNonNull(constants$431.g_type_check_instance$MH,"g_type_check_instance");
    }
    public static int g_type_check_instance ( Addressable instance) {
        var mh$ = g_type_check_instance$MH();
        try {
            return (int)mh$.invokeExact(instance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_instance_cast$MH() {
        return RuntimeHelper.requireNonNull(constants$432.g_type_check_instance_cast$MH,"g_type_check_instance_cast");
    }
    public static MemoryAddress g_type_check_instance_cast ( Addressable instance,  long iface_type) {
        var mh$ = g_type_check_instance_cast$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(instance, iface_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_instance_is_a$MH() {
        return RuntimeHelper.requireNonNull(constants$432.g_type_check_instance_is_a$MH,"g_type_check_instance_is_a");
    }
    public static int g_type_check_instance_is_a ( Addressable instance,  long iface_type) {
        var mh$ = g_type_check_instance_is_a$MH();
        try {
            return (int)mh$.invokeExact(instance, iface_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_instance_is_fundamentally_a$MH() {
        return RuntimeHelper.requireNonNull(constants$432.g_type_check_instance_is_fundamentally_a$MH,"g_type_check_instance_is_fundamentally_a");
    }
    public static int g_type_check_instance_is_fundamentally_a ( Addressable instance,  long fundamental_type) {
        var mh$ = g_type_check_instance_is_fundamentally_a$MH();
        try {
            return (int)mh$.invokeExact(instance, fundamental_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_class_cast$MH() {
        return RuntimeHelper.requireNonNull(constants$432.g_type_check_class_cast$MH,"g_type_check_class_cast");
    }
    public static MemoryAddress g_type_check_class_cast ( Addressable g_class,  long is_a_type) {
        var mh$ = g_type_check_class_cast$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(g_class, is_a_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_class_is_a$MH() {
        return RuntimeHelper.requireNonNull(constants$432.g_type_check_class_is_a$MH,"g_type_check_class_is_a");
    }
    public static int g_type_check_class_is_a ( Addressable g_class,  long is_a_type) {
        var mh$ = g_type_check_class_is_a$MH();
        try {
            return (int)mh$.invokeExact(g_class, is_a_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_is_value_type$MH() {
        return RuntimeHelper.requireNonNull(constants$432.g_type_check_is_value_type$MH,"g_type_check_is_value_type");
    }
    public static int g_type_check_is_value_type ( long type) {
        var mh$ = g_type_check_is_value_type$MH();
        try {
            return (int)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_value$MH() {
        return RuntimeHelper.requireNonNull(constants$433.g_type_check_value$MH,"g_type_check_value");
    }
    public static int g_type_check_value ( Addressable value) {
        var mh$ = g_type_check_value$MH();
        try {
            return (int)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_value_holds$MH() {
        return RuntimeHelper.requireNonNull(constants$433.g_type_check_value_holds$MH,"g_type_check_value_holds");
    }
    public static int g_type_check_value_holds ( Addressable value,  long type) {
        var mh$ = g_type_check_value_holds$MH();
        try {
            return (int)mh$.invokeExact(value, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_test_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$433.g_type_test_flags$MH,"g_type_test_flags");
    }
    public static int g_type_test_flags ( long type,  int flags) {
        var mh$ = g_type_test_flags$MH();
        try {
            return (int)mh$.invokeExact(type, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_name_from_instance$MH() {
        return RuntimeHelper.requireNonNull(constants$433.g_type_name_from_instance$MH,"g_type_name_from_instance");
    }
    public static MemoryAddress g_type_name_from_instance ( Addressable instance) {
        var mh$ = g_type_name_from_instance$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(instance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_name_from_class$MH() {
        return RuntimeHelper.requireNonNull(constants$433.g_type_name_from_class$MH,"g_type_name_from_class");
    }
    public static MemoryAddress g_type_name_from_class ( Addressable g_class) {
        var mh$ = g_type_name_from_class$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(g_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_init$MH() {
        return RuntimeHelper.requireNonNull(constants$434.g_value_init$MH,"g_value_init");
    }
    public static MemoryAddress g_value_init ( Addressable value,  long g_type) {
        var mh$ = g_value_init$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value, g_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$434.g_value_copy$MH,"g_value_copy");
    }
    public static void g_value_copy ( Addressable src_value,  Addressable dest_value) {
        var mh$ = g_value_copy$MH();
        try {
            mh$.invokeExact(src_value, dest_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_reset$MH() {
        return RuntimeHelper.requireNonNull(constants$434.g_value_reset$MH,"g_value_reset");
    }
    public static MemoryAddress g_value_reset ( Addressable value) {
        var mh$ = g_value_reset$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_unset$MH() {
        return RuntimeHelper.requireNonNull(constants$434.g_value_unset$MH,"g_value_unset");
    }
    public static void g_value_unset ( Addressable value) {
        var mh$ = g_value_unset$MH();
        try {
            mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_instance$MH() {
        return RuntimeHelper.requireNonNull(constants$434.g_value_set_instance$MH,"g_value_set_instance");
    }
    public static void g_value_set_instance ( Addressable value,  Addressable instance) {
        var mh$ = g_value_set_instance$MH();
        try {
            mh$.invokeExact(value, instance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_init_from_instance$MH() {
        return RuntimeHelper.requireNonNull(constants$435.g_value_init_from_instance$MH,"g_value_init_from_instance");
    }
    public static void g_value_init_from_instance ( Addressable value,  Addressable instance) {
        var mh$ = g_value_init_from_instance$MH();
        try {
            mh$.invokeExact(value, instance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_fits_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$435.g_value_fits_pointer$MH,"g_value_fits_pointer");
    }
    public static int g_value_fits_pointer ( Addressable value) {
        var mh$ = g_value_fits_pointer$MH();
        try {
            return (int)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_peek_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$435.g_value_peek_pointer$MH,"g_value_peek_pointer");
    }
    public static MemoryAddress g_value_peek_pointer ( Addressable value) {
        var mh$ = g_value_peek_pointer$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_type_compatible$MH() {
        return RuntimeHelper.requireNonNull(constants$435.g_value_type_compatible$MH,"g_value_type_compatible");
    }
    public static int g_value_type_compatible ( long src_type,  long dest_type) {
        var mh$ = g_value_type_compatible$MH();
        try {
            return (int)mh$.invokeExact(src_type, dest_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_type_transformable$MH() {
        return RuntimeHelper.requireNonNull(constants$435.g_value_type_transformable$MH,"g_value_type_transformable");
    }
    public static int g_value_type_transformable ( long src_type,  long dest_type) {
        var mh$ = g_value_type_transformable$MH();
        try {
            return (int)mh$.invokeExact(src_type, dest_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_transform$MH() {
        return RuntimeHelper.requireNonNull(constants$435.g_value_transform$MH,"g_value_transform");
    }
    public static int g_value_transform ( Addressable src_value,  Addressable dest_value) {
        var mh$ = g_value_transform$MH();
        try {
            return (int)mh$.invokeExact(src_value, dest_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_register_transform_func$MH() {
        return RuntimeHelper.requireNonNull(constants$436.g_value_register_transform_func$MH,"g_value_register_transform_func");
    }
    public static void g_value_register_transform_func ( long src_type,  long dest_type,  Addressable transform_func) {
        var mh$ = g_value_register_transform_func$MH();
        try {
            mh$.invokeExact(src_type, dest_type, transform_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int G_PARAM_READABLE() {
        return (int)1L;
    }
    public static int G_PARAM_WRITABLE() {
        return (int)2L;
    }
    public static int G_PARAM_READWRITE() {
        return (int)3L;
    }
    public static int G_PARAM_CONSTRUCT() {
        return (int)4L;
    }
    public static int G_PARAM_CONSTRUCT_ONLY() {
        return (int)8L;
    }
    public static int G_PARAM_LAX_VALIDATION() {
        return (int)16L;
    }
    public static int G_PARAM_STATIC_NAME() {
        return (int)32L;
    }
    public static int G_PARAM_PRIVATE() {
        return (int)32L;
    }
    public static int G_PARAM_STATIC_NICK() {
        return (int)64L;
    }
    public static int G_PARAM_STATIC_BLURB() {
        return (int)128L;
    }
    public static int G_PARAM_EXPLICIT_NOTIFY() {
        return (int)1073741824L;
    }
    public static int G_PARAM_DEPRECATED() {
        return (int)-2147483648L;
    }
    public static MethodHandle g_param_spec_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$436.g_param_spec_ref$MH,"g_param_spec_ref");
    }
    public static MemoryAddress g_param_spec_ref ( Addressable pspec) {
        var mh$ = g_param_spec_ref$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$436.g_param_spec_unref$MH,"g_param_spec_unref");
    }
    public static void g_param_spec_unref ( Addressable pspec) {
        var mh$ = g_param_spec_unref$MH();
        try {
            mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_sink$MH() {
        return RuntimeHelper.requireNonNull(constants$436.g_param_spec_sink$MH,"g_param_spec_sink");
    }
    public static void g_param_spec_sink ( Addressable pspec) {
        var mh$ = g_param_spec_sink$MH();
        try {
            mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_ref_sink$MH() {
        return RuntimeHelper.requireNonNull(constants$436.g_param_spec_ref_sink$MH,"g_param_spec_ref_sink");
    }
    public static MemoryAddress g_param_spec_ref_sink ( Addressable pspec) {
        var mh$ = g_param_spec_ref_sink$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_get_qdata$MH() {
        return RuntimeHelper.requireNonNull(constants$436.g_param_spec_get_qdata$MH,"g_param_spec_get_qdata");
    }
    public static MemoryAddress g_param_spec_get_qdata ( Addressable pspec,  int quark) {
        var mh$ = g_param_spec_get_qdata$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pspec, quark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_set_qdata$MH() {
        return RuntimeHelper.requireNonNull(constants$437.g_param_spec_set_qdata$MH,"g_param_spec_set_qdata");
    }
    public static void g_param_spec_set_qdata ( Addressable pspec,  int quark,  Addressable data) {
        var mh$ = g_param_spec_set_qdata$MH();
        try {
            mh$.invokeExact(pspec, quark, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_set_qdata_full$MH() {
        return RuntimeHelper.requireNonNull(constants$437.g_param_spec_set_qdata_full$MH,"g_param_spec_set_qdata_full");
    }
    public static void g_param_spec_set_qdata_full ( Addressable pspec,  int quark,  Addressable data,  Addressable destroy) {
        var mh$ = g_param_spec_set_qdata_full$MH();
        try {
            mh$.invokeExact(pspec, quark, data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_steal_qdata$MH() {
        return RuntimeHelper.requireNonNull(constants$437.g_param_spec_steal_qdata$MH,"g_param_spec_steal_qdata");
    }
    public static MemoryAddress g_param_spec_steal_qdata ( Addressable pspec,  int quark) {
        var mh$ = g_param_spec_steal_qdata$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pspec, quark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_get_redirect_target$MH() {
        return RuntimeHelper.requireNonNull(constants$437.g_param_spec_get_redirect_target$MH,"g_param_spec_get_redirect_target");
    }
    public static MemoryAddress g_param_spec_get_redirect_target ( Addressable pspec) {
        var mh$ = g_param_spec_get_redirect_target$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_value_set_default$MH() {
        return RuntimeHelper.requireNonNull(constants$437.g_param_value_set_default$MH,"g_param_value_set_default");
    }
    public static void g_param_value_set_default ( Addressable pspec,  Addressable value) {
        var mh$ = g_param_value_set_default$MH();
        try {
            mh$.invokeExact(pspec, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_value_defaults$MH() {
        return RuntimeHelper.requireNonNull(constants$437.g_param_value_defaults$MH,"g_param_value_defaults");
    }
    public static int g_param_value_defaults ( Addressable pspec,  Addressable value) {
        var mh$ = g_param_value_defaults$MH();
        try {
            return (int)mh$.invokeExact(pspec, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_value_validate$MH() {
        return RuntimeHelper.requireNonNull(constants$438.g_param_value_validate$MH,"g_param_value_validate");
    }
    public static int g_param_value_validate ( Addressable pspec,  Addressable value) {
        var mh$ = g_param_value_validate$MH();
        try {
            return (int)mh$.invokeExact(pspec, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_value_convert$MH() {
        return RuntimeHelper.requireNonNull(constants$438.g_param_value_convert$MH,"g_param_value_convert");
    }
    public static int g_param_value_convert ( Addressable pspec,  Addressable src_value,  Addressable dest_value,  int strict_validation) {
        var mh$ = g_param_value_convert$MH();
        try {
            return (int)mh$.invokeExact(pspec, src_value, dest_value, strict_validation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_values_cmp$MH() {
        return RuntimeHelper.requireNonNull(constants$438.g_param_values_cmp$MH,"g_param_values_cmp");
    }
    public static int g_param_values_cmp ( Addressable pspec,  Addressable value1,  Addressable value2) {
        var mh$ = g_param_values_cmp$MH();
        try {
            return (int)mh$.invokeExact(pspec, value1, value2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$438.g_param_spec_get_name$MH,"g_param_spec_get_name");
    }
    public static MemoryAddress g_param_spec_get_name ( Addressable pspec) {
        var mh$ = g_param_spec_get_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_get_nick$MH() {
        return RuntimeHelper.requireNonNull(constants$438.g_param_spec_get_nick$MH,"g_param_spec_get_nick");
    }
    public static MemoryAddress g_param_spec_get_nick ( Addressable pspec) {
        var mh$ = g_param_spec_get_nick$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_get_blurb$MH() {
        return RuntimeHelper.requireNonNull(constants$438.g_param_spec_get_blurb$MH,"g_param_spec_get_blurb");
    }
    public static MemoryAddress g_param_spec_get_blurb ( Addressable pspec) {
        var mh$ = g_param_spec_get_blurb$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_param$MH() {
        return RuntimeHelper.requireNonNull(constants$439.g_value_set_param$MH,"g_value_set_param");
    }
    public static void g_value_set_param ( Addressable value,  Addressable param) {
        var mh$ = g_value_set_param$MH();
        try {
            mh$.invokeExact(value, param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_param$MH() {
        return RuntimeHelper.requireNonNull(constants$439.g_value_get_param$MH,"g_value_get_param");
    }
    public static MemoryAddress g_value_get_param ( Addressable value) {
        var mh$ = g_value_get_param$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_dup_param$MH() {
        return RuntimeHelper.requireNonNull(constants$439.g_value_dup_param$MH,"g_value_dup_param");
    }
    public static MemoryAddress g_value_dup_param ( Addressable value) {
        var mh$ = g_value_dup_param$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_take_param$MH() {
        return RuntimeHelper.requireNonNull(constants$439.g_value_take_param$MH,"g_value_take_param");
    }
    public static void g_value_take_param ( Addressable value,  Addressable param) {
        var mh$ = g_value_take_param$MH();
        try {
            mh$.invokeExact(value, param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_param_take_ownership$MH() {
        return RuntimeHelper.requireNonNull(constants$439.g_value_set_param_take_ownership$MH,"g_value_set_param_take_ownership");
    }
    public static void g_value_set_param_take_ownership ( Addressable value,  Addressable param) {
        var mh$ = g_value_set_param_take_ownership$MH();
        try {
            mh$.invokeExact(value, param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_get_default_value$MH() {
        return RuntimeHelper.requireNonNull(constants$439.g_param_spec_get_default_value$MH,"g_param_spec_get_default_value");
    }
    public static MemoryAddress g_param_spec_get_default_value ( Addressable pspec) {
        var mh$ = g_param_spec_get_default_value$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_get_name_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$440.g_param_spec_get_name_quark$MH,"g_param_spec_get_name_quark");
    }
    public static int g_param_spec_get_name_quark ( Addressable pspec) {
        var mh$ = g_param_spec_get_name_quark$MH();
        try {
            return (int)mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_type_register_static$MH() {
        return RuntimeHelper.requireNonNull(constants$440.g_param_type_register_static$MH,"g_param_type_register_static");
    }
    public static long g_param_type_register_static ( Addressable name,  Addressable pspec_info) {
        var mh$ = g_param_type_register_static$MH();
        try {
            return (long)mh$.invokeExact(name, pspec_info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_is_valid_name$MH() {
        return RuntimeHelper.requireNonNull(constants$440.g_param_spec_is_valid_name$MH,"g_param_spec_is_valid_name");
    }
    public static int g_param_spec_is_valid_name ( Addressable name) {
        var mh$ = g_param_spec_is_valid_name$MH();
        try {
            return (int)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _g_param_type_register_static_constant$MH() {
        return RuntimeHelper.requireNonNull(constants$440._g_param_type_register_static_constant$MH,"_g_param_type_register_static_constant");
    }
    public static long _g_param_type_register_static_constant ( Addressable name,  Addressable pspec_info,  long opt_type) {
        var mh$ = _g_param_type_register_static_constant$MH();
        try {
            return (long)mh$.invokeExact(name, pspec_info, opt_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_internal$MH() {
        return RuntimeHelper.requireNonNull(constants$440.g_param_spec_internal$MH,"g_param_spec_internal");
    }
    public static MemoryAddress g_param_spec_internal ( long param_type,  Addressable name,  Addressable nick,  Addressable blurb,  int flags) {
        var mh$ = g_param_spec_internal$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(param_type, name, nick, blurb, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_pool_new$MH() {
        return RuntimeHelper.requireNonNull(constants$440.g_param_spec_pool_new$MH,"g_param_spec_pool_new");
    }
    public static MemoryAddress g_param_spec_pool_new ( int type_prefixing) {
        var mh$ = g_param_spec_pool_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(type_prefixing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_pool_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$441.g_param_spec_pool_insert$MH,"g_param_spec_pool_insert");
    }
    public static void g_param_spec_pool_insert ( Addressable pool,  Addressable pspec,  long owner_type) {
        var mh$ = g_param_spec_pool_insert$MH();
        try {
            mh$.invokeExact(pool, pspec, owner_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_pool_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$441.g_param_spec_pool_remove$MH,"g_param_spec_pool_remove");
    }
    public static void g_param_spec_pool_remove ( Addressable pool,  Addressable pspec) {
        var mh$ = g_param_spec_pool_remove$MH();
        try {
            mh$.invokeExact(pool, pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_pool_lookup$MH() {
        return RuntimeHelper.requireNonNull(constants$441.g_param_spec_pool_lookup$MH,"g_param_spec_pool_lookup");
    }
    public static MemoryAddress g_param_spec_pool_lookup ( Addressable pool,  Addressable param_name,  long owner_type,  int walk_ancestors) {
        var mh$ = g_param_spec_pool_lookup$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pool, param_name, owner_type, walk_ancestors);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_pool_list_owned$MH() {
        return RuntimeHelper.requireNonNull(constants$441.g_param_spec_pool_list_owned$MH,"g_param_spec_pool_list_owned");
    }
    public static MemoryAddress g_param_spec_pool_list_owned ( Addressable pool,  long owner_type) {
        var mh$ = g_param_spec_pool_list_owned$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pool, owner_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_pool_list$MH() {
        return RuntimeHelper.requireNonNull(constants$441.g_param_spec_pool_list$MH,"g_param_spec_pool_list");
    }
    public static MemoryAddress g_param_spec_pool_list ( Addressable pool,  long owner_type,  Addressable n_pspecs_p) {
        var mh$ = g_param_spec_pool_list$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pool, owner_type, n_pspecs_p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_new$MH() {
        return RuntimeHelper.requireNonNull(constants$443.g_cclosure_new$MH,"g_cclosure_new");
    }
    public static MemoryAddress g_cclosure_new ( Addressable callback_func,  Addressable user_data,  Addressable destroy_data) {
        var mh$ = g_cclosure_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(callback_func, user_data, destroy_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_new_swap$MH() {
        return RuntimeHelper.requireNonNull(constants$443.g_cclosure_new_swap$MH,"g_cclosure_new_swap");
    }
    public static MemoryAddress g_cclosure_new_swap ( Addressable callback_func,  Addressable user_data,  Addressable destroy_data) {
        var mh$ = g_cclosure_new_swap$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(callback_func, user_data, destroy_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_type_cclosure_new$MH() {
        return RuntimeHelper.requireNonNull(constants$443.g_signal_type_cclosure_new$MH,"g_signal_type_cclosure_new");
    }
    public static MemoryAddress g_signal_type_cclosure_new ( long itype,  int struct_offset) {
        var mh$ = g_signal_type_cclosure_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(itype, struct_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$443.g_closure_ref$MH,"g_closure_ref");
    }
    public static MemoryAddress g_closure_ref ( Addressable closure) {
        var mh$ = g_closure_ref$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_sink$MH() {
        return RuntimeHelper.requireNonNull(constants$443.g_closure_sink$MH,"g_closure_sink");
    }
    public static void g_closure_sink ( Addressable closure) {
        var mh$ = g_closure_sink$MH();
        try {
            mh$.invokeExact(closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$444.g_closure_unref$MH,"g_closure_unref");
    }
    public static void g_closure_unref ( Addressable closure) {
        var mh$ = g_closure_unref$MH();
        try {
            mh$.invokeExact(closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_new_simple$MH() {
        return RuntimeHelper.requireNonNull(constants$444.g_closure_new_simple$MH,"g_closure_new_simple");
    }
    public static MemoryAddress g_closure_new_simple ( int sizeof_closure,  Addressable data) {
        var mh$ = g_closure_new_simple$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(sizeof_closure, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_add_finalize_notifier$MH() {
        return RuntimeHelper.requireNonNull(constants$444.g_closure_add_finalize_notifier$MH,"g_closure_add_finalize_notifier");
    }
    public static void g_closure_add_finalize_notifier ( Addressable closure,  Addressable notify_data,  Addressable notify_func) {
        var mh$ = g_closure_add_finalize_notifier$MH();
        try {
            mh$.invokeExact(closure, notify_data, notify_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_remove_finalize_notifier$MH() {
        return RuntimeHelper.requireNonNull(constants$444.g_closure_remove_finalize_notifier$MH,"g_closure_remove_finalize_notifier");
    }
    public static void g_closure_remove_finalize_notifier ( Addressable closure,  Addressable notify_data,  Addressable notify_func) {
        var mh$ = g_closure_remove_finalize_notifier$MH();
        try {
            mh$.invokeExact(closure, notify_data, notify_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_add_invalidate_notifier$MH() {
        return RuntimeHelper.requireNonNull(constants$444.g_closure_add_invalidate_notifier$MH,"g_closure_add_invalidate_notifier");
    }
    public static void g_closure_add_invalidate_notifier ( Addressable closure,  Addressable notify_data,  Addressable notify_func) {
        var mh$ = g_closure_add_invalidate_notifier$MH();
        try {
            mh$.invokeExact(closure, notify_data, notify_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_remove_invalidate_notifier$MH() {
        return RuntimeHelper.requireNonNull(constants$444.g_closure_remove_invalidate_notifier$MH,"g_closure_remove_invalidate_notifier");
    }
    public static void g_closure_remove_invalidate_notifier ( Addressable closure,  Addressable notify_data,  Addressable notify_func) {
        var mh$ = g_closure_remove_invalidate_notifier$MH();
        try {
            mh$.invokeExact(closure, notify_data, notify_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_add_marshal_guards$MH() {
        return RuntimeHelper.requireNonNull(constants$445.g_closure_add_marshal_guards$MH,"g_closure_add_marshal_guards");
    }
    public static void g_closure_add_marshal_guards ( Addressable closure,  Addressable pre_marshal_data,  Addressable pre_marshal_notify,  Addressable post_marshal_data,  Addressable post_marshal_notify) {
        var mh$ = g_closure_add_marshal_guards$MH();
        try {
            mh$.invokeExact(closure, pre_marshal_data, pre_marshal_notify, post_marshal_data, post_marshal_notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_set_marshal$MH() {
        return RuntimeHelper.requireNonNull(constants$445.g_closure_set_marshal$MH,"g_closure_set_marshal");
    }
    public static void g_closure_set_marshal ( Addressable closure,  Addressable marshal) {
        var mh$ = g_closure_set_marshal$MH();
        try {
            mh$.invokeExact(closure, marshal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_set_meta_marshal$MH() {
        return RuntimeHelper.requireNonNull(constants$445.g_closure_set_meta_marshal$MH,"g_closure_set_meta_marshal");
    }
    public static void g_closure_set_meta_marshal ( Addressable closure,  Addressable marshal_data,  Addressable meta_marshal) {
        var mh$ = g_closure_set_meta_marshal$MH();
        try {
            mh$.invokeExact(closure, marshal_data, meta_marshal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_invalidate$MH() {
        return RuntimeHelper.requireNonNull(constants$445.g_closure_invalidate$MH,"g_closure_invalidate");
    }
    public static void g_closure_invalidate ( Addressable closure) {
        var mh$ = g_closure_invalidate$MH();
        try {
            mh$.invokeExact(closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_invoke$MH() {
        return RuntimeHelper.requireNonNull(constants$445.g_closure_invoke$MH,"g_closure_invoke");
    }
    public static void g_closure_invoke ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint) {
        var mh$ = g_closure_invoke$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_generic$MH() {
        return RuntimeHelper.requireNonNull(constants$445.g_cclosure_marshal_generic$MH,"g_cclosure_marshal_generic");
    }
    public static void g_cclosure_marshal_generic ( Addressable closure,  Addressable return_gvalue,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = g_cclosure_marshal_generic$MH();
        try {
            mh$.invokeExact(closure, return_gvalue, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_generic_va$MH() {
        return RuntimeHelper.requireNonNull(constants$446.g_cclosure_marshal_generic_va$MH,"g_cclosure_marshal_generic_va");
    }
    public static void g_cclosure_marshal_generic_va ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args_list,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = g_cclosure_marshal_generic_va$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args_list, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__VOID$MH() {
        return RuntimeHelper.requireNonNull(constants$446.g_cclosure_marshal_VOID__VOID$MH,"g_cclosure_marshal_VOID__VOID");
    }
    public static void g_cclosure_marshal_VOID__VOID ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__VOID$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__VOIDv$MH() {
        return RuntimeHelper.requireNonNull(constants$446.g_cclosure_marshal_VOID__VOIDv$MH,"g_cclosure_marshal_VOID__VOIDv");
    }
    public static void g_cclosure_marshal_VOID__VOIDv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = g_cclosure_marshal_VOID__VOIDv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__BOOLEAN$MH() {
        return RuntimeHelper.requireNonNull(constants$446.g_cclosure_marshal_VOID__BOOLEAN$MH,"g_cclosure_marshal_VOID__BOOLEAN");
    }
    public static void g_cclosure_marshal_VOID__BOOLEAN ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__BOOLEAN$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__BOOLEANv$MH() {
        return RuntimeHelper.requireNonNull(constants$446.g_cclosure_marshal_VOID__BOOLEANv$MH,"g_cclosure_marshal_VOID__BOOLEANv");
    }
    public static void g_cclosure_marshal_VOID__BOOLEANv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = g_cclosure_marshal_VOID__BOOLEANv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__CHAR$MH() {
        return RuntimeHelper.requireNonNull(constants$446.g_cclosure_marshal_VOID__CHAR$MH,"g_cclosure_marshal_VOID__CHAR");
    }
    public static void g_cclosure_marshal_VOID__CHAR ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__CHAR$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__CHARv$MH() {
        return RuntimeHelper.requireNonNull(constants$447.g_cclosure_marshal_VOID__CHARv$MH,"g_cclosure_marshal_VOID__CHARv");
    }
    public static void g_cclosure_marshal_VOID__CHARv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = g_cclosure_marshal_VOID__CHARv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__UCHAR$MH() {
        return RuntimeHelper.requireNonNull(constants$447.g_cclosure_marshal_VOID__UCHAR$MH,"g_cclosure_marshal_VOID__UCHAR");
    }
    public static void g_cclosure_marshal_VOID__UCHAR ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__UCHAR$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__UCHARv$MH() {
        return RuntimeHelper.requireNonNull(constants$447.g_cclosure_marshal_VOID__UCHARv$MH,"g_cclosure_marshal_VOID__UCHARv");
    }
    public static void g_cclosure_marshal_VOID__UCHARv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = g_cclosure_marshal_VOID__UCHARv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__INT$MH() {
        return RuntimeHelper.requireNonNull(constants$447.g_cclosure_marshal_VOID__INT$MH,"g_cclosure_marshal_VOID__INT");
    }
    public static void g_cclosure_marshal_VOID__INT ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__INT$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__INTv$MH() {
        return RuntimeHelper.requireNonNull(constants$447.g_cclosure_marshal_VOID__INTv$MH,"g_cclosure_marshal_VOID__INTv");
    }
    public static void g_cclosure_marshal_VOID__INTv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = g_cclosure_marshal_VOID__INTv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__UINT$MH() {
        return RuntimeHelper.requireNonNull(constants$447.g_cclosure_marshal_VOID__UINT$MH,"g_cclosure_marshal_VOID__UINT");
    }
    public static void g_cclosure_marshal_VOID__UINT ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__UINT$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__UINTv$MH() {
        return RuntimeHelper.requireNonNull(constants$448.g_cclosure_marshal_VOID__UINTv$MH,"g_cclosure_marshal_VOID__UINTv");
    }
    public static void g_cclosure_marshal_VOID__UINTv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = g_cclosure_marshal_VOID__UINTv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__LONG$MH() {
        return RuntimeHelper.requireNonNull(constants$448.g_cclosure_marshal_VOID__LONG$MH,"g_cclosure_marshal_VOID__LONG");
    }
    public static void g_cclosure_marshal_VOID__LONG ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__LONG$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__LONGv$MH() {
        return RuntimeHelper.requireNonNull(constants$448.g_cclosure_marshal_VOID__LONGv$MH,"g_cclosure_marshal_VOID__LONGv");
    }
    public static void g_cclosure_marshal_VOID__LONGv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = g_cclosure_marshal_VOID__LONGv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__ULONG$MH() {
        return RuntimeHelper.requireNonNull(constants$448.g_cclosure_marshal_VOID__ULONG$MH,"g_cclosure_marshal_VOID__ULONG");
    }
    public static void g_cclosure_marshal_VOID__ULONG ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__ULONG$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__ULONGv$MH() {
        return RuntimeHelper.requireNonNull(constants$448.g_cclosure_marshal_VOID__ULONGv$MH,"g_cclosure_marshal_VOID__ULONGv");
    }
    public static void g_cclosure_marshal_VOID__ULONGv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = g_cclosure_marshal_VOID__ULONGv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__ENUM$MH() {
        return RuntimeHelper.requireNonNull(constants$448.g_cclosure_marshal_VOID__ENUM$MH,"g_cclosure_marshal_VOID__ENUM");
    }
    public static void g_cclosure_marshal_VOID__ENUM ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__ENUM$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__ENUMv$MH() {
        return RuntimeHelper.requireNonNull(constants$449.g_cclosure_marshal_VOID__ENUMv$MH,"g_cclosure_marshal_VOID__ENUMv");
    }
    public static void g_cclosure_marshal_VOID__ENUMv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = g_cclosure_marshal_VOID__ENUMv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__FLAGS$MH() {
        return RuntimeHelper.requireNonNull(constants$449.g_cclosure_marshal_VOID__FLAGS$MH,"g_cclosure_marshal_VOID__FLAGS");
    }
    public static void g_cclosure_marshal_VOID__FLAGS ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__FLAGS$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__FLAGSv$MH() {
        return RuntimeHelper.requireNonNull(constants$449.g_cclosure_marshal_VOID__FLAGSv$MH,"g_cclosure_marshal_VOID__FLAGSv");
    }
    public static void g_cclosure_marshal_VOID__FLAGSv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = g_cclosure_marshal_VOID__FLAGSv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__FLOAT$MH() {
        return RuntimeHelper.requireNonNull(constants$449.g_cclosure_marshal_VOID__FLOAT$MH,"g_cclosure_marshal_VOID__FLOAT");
    }
    public static void g_cclosure_marshal_VOID__FLOAT ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__FLOAT$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__FLOATv$MH() {
        return RuntimeHelper.requireNonNull(constants$449.g_cclosure_marshal_VOID__FLOATv$MH,"g_cclosure_marshal_VOID__FLOATv");
    }
    public static void g_cclosure_marshal_VOID__FLOATv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = g_cclosure_marshal_VOID__FLOATv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__DOUBLE$MH() {
        return RuntimeHelper.requireNonNull(constants$449.g_cclosure_marshal_VOID__DOUBLE$MH,"g_cclosure_marshal_VOID__DOUBLE");
    }
    public static void g_cclosure_marshal_VOID__DOUBLE ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__DOUBLE$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__DOUBLEv$MH() {
        return RuntimeHelper.requireNonNull(constants$450.g_cclosure_marshal_VOID__DOUBLEv$MH,"g_cclosure_marshal_VOID__DOUBLEv");
    }
    public static void g_cclosure_marshal_VOID__DOUBLEv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = g_cclosure_marshal_VOID__DOUBLEv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__STRING$MH() {
        return RuntimeHelper.requireNonNull(constants$450.g_cclosure_marshal_VOID__STRING$MH,"g_cclosure_marshal_VOID__STRING");
    }
    public static void g_cclosure_marshal_VOID__STRING ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__STRING$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__STRINGv$MH() {
        return RuntimeHelper.requireNonNull(constants$450.g_cclosure_marshal_VOID__STRINGv$MH,"g_cclosure_marshal_VOID__STRINGv");
    }
    public static void g_cclosure_marshal_VOID__STRINGv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = g_cclosure_marshal_VOID__STRINGv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__PARAM$MH() {
        return RuntimeHelper.requireNonNull(constants$450.g_cclosure_marshal_VOID__PARAM$MH,"g_cclosure_marshal_VOID__PARAM");
    }
    public static void g_cclosure_marshal_VOID__PARAM ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__PARAM$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__PARAMv$MH() {
        return RuntimeHelper.requireNonNull(constants$450.g_cclosure_marshal_VOID__PARAMv$MH,"g_cclosure_marshal_VOID__PARAMv");
    }
    public static void g_cclosure_marshal_VOID__PARAMv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = g_cclosure_marshal_VOID__PARAMv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__BOXED$MH() {
        return RuntimeHelper.requireNonNull(constants$450.g_cclosure_marshal_VOID__BOXED$MH,"g_cclosure_marshal_VOID__BOXED");
    }
    public static void g_cclosure_marshal_VOID__BOXED ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__BOXED$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__BOXEDv$MH() {
        return RuntimeHelper.requireNonNull(constants$451.g_cclosure_marshal_VOID__BOXEDv$MH,"g_cclosure_marshal_VOID__BOXEDv");
    }
    public static void g_cclosure_marshal_VOID__BOXEDv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = g_cclosure_marshal_VOID__BOXEDv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__POINTER$MH() {
        return RuntimeHelper.requireNonNull(constants$451.g_cclosure_marshal_VOID__POINTER$MH,"g_cclosure_marshal_VOID__POINTER");
    }
    public static void g_cclosure_marshal_VOID__POINTER ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__POINTER$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__POINTERv$MH() {
        return RuntimeHelper.requireNonNull(constants$451.g_cclosure_marshal_VOID__POINTERv$MH,"g_cclosure_marshal_VOID__POINTERv");
    }
    public static void g_cclosure_marshal_VOID__POINTERv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = g_cclosure_marshal_VOID__POINTERv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__OBJECT$MH() {
        return RuntimeHelper.requireNonNull(constants$451.g_cclosure_marshal_VOID__OBJECT$MH,"g_cclosure_marshal_VOID__OBJECT");
    }
    public static void g_cclosure_marshal_VOID__OBJECT ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__OBJECT$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__OBJECTv$MH() {
        return RuntimeHelper.requireNonNull(constants$451.g_cclosure_marshal_VOID__OBJECTv$MH,"g_cclosure_marshal_VOID__OBJECTv");
    }
    public static void g_cclosure_marshal_VOID__OBJECTv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = g_cclosure_marshal_VOID__OBJECTv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__VARIANT$MH() {
        return RuntimeHelper.requireNonNull(constants$451.g_cclosure_marshal_VOID__VARIANT$MH,"g_cclosure_marshal_VOID__VARIANT");
    }
    public static void g_cclosure_marshal_VOID__VARIANT ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__VARIANT$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__VARIANTv$MH() {
        return RuntimeHelper.requireNonNull(constants$452.g_cclosure_marshal_VOID__VARIANTv$MH,"g_cclosure_marshal_VOID__VARIANTv");
    }
    public static void g_cclosure_marshal_VOID__VARIANTv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = g_cclosure_marshal_VOID__VARIANTv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__UINT_POINTER$MH() {
        return RuntimeHelper.requireNonNull(constants$452.g_cclosure_marshal_VOID__UINT_POINTER$MH,"g_cclosure_marshal_VOID__UINT_POINTER");
    }
    public static void g_cclosure_marshal_VOID__UINT_POINTER ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = g_cclosure_marshal_VOID__UINT_POINTER$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__UINT_POINTERv$MH() {
        return RuntimeHelper.requireNonNull(constants$452.g_cclosure_marshal_VOID__UINT_POINTERv$MH,"g_cclosure_marshal_VOID__UINT_POINTERv");
    }
    public static void g_cclosure_marshal_VOID__UINT_POINTERv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = g_cclosure_marshal_VOID__UINT_POINTERv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_BOOLEAN__FLAGS$MH() {
        return RuntimeHelper.requireNonNull(constants$452.g_cclosure_marshal_BOOLEAN__FLAGS$MH,"g_cclosure_marshal_BOOLEAN__FLAGS");
    }
    public static void g_cclosure_marshal_BOOLEAN__FLAGS ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = g_cclosure_marshal_BOOLEAN__FLAGS$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_BOOLEAN__FLAGSv$MH() {
        return RuntimeHelper.requireNonNull(constants$452.g_cclosure_marshal_BOOLEAN__FLAGSv$MH,"g_cclosure_marshal_BOOLEAN__FLAGSv");
    }
    public static void g_cclosure_marshal_BOOLEAN__FLAGSv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = g_cclosure_marshal_BOOLEAN__FLAGSv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_STRING__OBJECT_POINTER$MH() {
        return RuntimeHelper.requireNonNull(constants$452.g_cclosure_marshal_STRING__OBJECT_POINTER$MH,"g_cclosure_marshal_STRING__OBJECT_POINTER");
    }
    public static void g_cclosure_marshal_STRING__OBJECT_POINTER ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = g_cclosure_marshal_STRING__OBJECT_POINTER$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_STRING__OBJECT_POINTERv$MH() {
        return RuntimeHelper.requireNonNull(constants$453.g_cclosure_marshal_STRING__OBJECT_POINTERv$MH,"g_cclosure_marshal_STRING__OBJECT_POINTERv");
    }
    public static void g_cclosure_marshal_STRING__OBJECT_POINTERv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = g_cclosure_marshal_STRING__OBJECT_POINTERv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_BOOLEAN__BOXED_BOXED$MH() {
        return RuntimeHelper.requireNonNull(constants$453.g_cclosure_marshal_BOOLEAN__BOXED_BOXED$MH,"g_cclosure_marshal_BOOLEAN__BOXED_BOXED");
    }
    public static void g_cclosure_marshal_BOOLEAN__BOXED_BOXED ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = g_cclosure_marshal_BOOLEAN__BOXED_BOXED$MH();
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_BOOLEAN__BOXED_BOXEDv$MH() {
        return RuntimeHelper.requireNonNull(constants$453.g_cclosure_marshal_BOOLEAN__BOXED_BOXEDv$MH,"g_cclosure_marshal_BOOLEAN__BOXED_BOXEDv");
    }
    public static void g_cclosure_marshal_BOOLEAN__BOXED_BOXEDv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = g_cclosure_marshal_BOOLEAN__BOXED_BOXEDv$MH();
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int G_SIGNAL_RUN_FIRST() {
        return (int)1L;
    }
    public static int G_SIGNAL_RUN_LAST() {
        return (int)2L;
    }
    public static int G_SIGNAL_RUN_CLEANUP() {
        return (int)4L;
    }
    public static int G_SIGNAL_NO_RECURSE() {
        return (int)8L;
    }
    public static int G_SIGNAL_DETAILED() {
        return (int)16L;
    }
    public static int G_SIGNAL_ACTION() {
        return (int)32L;
    }
    public static int G_SIGNAL_NO_HOOKS() {
        return (int)64L;
    }
    public static int G_SIGNAL_MUST_COLLECT() {
        return (int)128L;
    }
    public static int G_SIGNAL_DEPRECATED() {
        return (int)256L;
    }
    public static int G_SIGNAL_ACCUMULATOR_FIRST_RUN() {
        return (int)131072L;
    }
    public static int G_CONNECT_AFTER() {
        return (int)1L;
    }
    public static int G_CONNECT_SWAPPED() {
        return (int)2L;
    }
    public static int G_SIGNAL_MATCH_ID() {
        return (int)1L;
    }
    public static int G_SIGNAL_MATCH_DETAIL() {
        return (int)2L;
    }
    public static int G_SIGNAL_MATCH_CLOSURE() {
        return (int)4L;
    }
    public static int G_SIGNAL_MATCH_FUNC() {
        return (int)8L;
    }
    public static int G_SIGNAL_MATCH_DATA() {
        return (int)16L;
    }
    public static int G_SIGNAL_MATCH_UNBLOCKED() {
        return (int)32L;
    }
    public static MethodHandle g_signal_newv$MH() {
        return RuntimeHelper.requireNonNull(constants$454.g_signal_newv$MH,"g_signal_newv");
    }
    public static int g_signal_newv ( Addressable signal_name,  long itype,  int signal_flags,  Addressable class_closure,  Addressable accumulator,  Addressable accu_data,  Addressable c_marshaller,  long return_type,  int n_params,  Addressable param_types) {
        var mh$ = g_signal_newv$MH();
        try {
            return (int)mh$.invokeExact(signal_name, itype, signal_flags, class_closure, accumulator, accu_data, c_marshaller, return_type, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_new_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$455.g_signal_new_valist$MH,"g_signal_new_valist");
    }
    public static int g_signal_new_valist ( Addressable signal_name,  long itype,  int signal_flags,  Addressable class_closure,  Addressable accumulator,  Addressable accu_data,  Addressable c_marshaller,  long return_type,  int n_params,  Addressable args) {
        var mh$ = g_signal_new_valist$MH();
        try {
            return (int)mh$.invokeExact(signal_name, itype, signal_flags, class_closure, accumulator, accu_data, c_marshaller, return_type, n_params, args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_new$MH() {
        return RuntimeHelper.requireNonNull(constants$455.g_signal_new$MH,"g_signal_new");
    }
    public static int g_signal_new ( Addressable signal_name,  long itype,  int signal_flags,  int class_offset,  Addressable accumulator,  Addressable accu_data,  Addressable c_marshaller,  long return_type,  int n_params, Object... x9) {
        var mh$ = g_signal_new$MH();
        try {
            return (int)mh$.invokeExact(signal_name, itype, signal_flags, class_offset, accumulator, accu_data, c_marshaller, return_type, n_params, x9);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_new_class_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$455.g_signal_new_class_handler$MH,"g_signal_new_class_handler");
    }
    public static int g_signal_new_class_handler ( Addressable signal_name,  long itype,  int signal_flags,  Addressable class_handler,  Addressable accumulator,  Addressable accu_data,  Addressable c_marshaller,  long return_type,  int n_params, Object... x9) {
        var mh$ = g_signal_new_class_handler$MH();
        try {
            return (int)mh$.invokeExact(signal_name, itype, signal_flags, class_handler, accumulator, accu_data, c_marshaller, return_type, n_params, x9);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_set_va_marshaller$MH() {
        return RuntimeHelper.requireNonNull(constants$455.g_signal_set_va_marshaller$MH,"g_signal_set_va_marshaller");
    }
    public static void g_signal_set_va_marshaller ( int signal_id,  long instance_type,  Addressable va_marshaller) {
        var mh$ = g_signal_set_va_marshaller$MH();
        try {
            mh$.invokeExact(signal_id, instance_type, va_marshaller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_emitv$MH() {
        return RuntimeHelper.requireNonNull(constants$455.g_signal_emitv$MH,"g_signal_emitv");
    }
    public static void g_signal_emitv ( Addressable instance_and_params,  int signal_id,  int detail,  Addressable return_value) {
        var mh$ = g_signal_emitv$MH();
        try {
            mh$.invokeExact(instance_and_params, signal_id, detail, return_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_emit_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$455.g_signal_emit_valist$MH,"g_signal_emit_valist");
    }
    public static void g_signal_emit_valist ( Addressable instance,  int signal_id,  int detail,  Addressable var_args) {
        var mh$ = g_signal_emit_valist$MH();
        try {
            mh$.invokeExact(instance, signal_id, detail, var_args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_emit$MH() {
        return RuntimeHelper.requireNonNull(constants$456.g_signal_emit$MH,"g_signal_emit");
    }
    public static void g_signal_emit ( Addressable instance,  int signal_id,  int detail, Object... x3) {
        var mh$ = g_signal_emit$MH();
        try {
            mh$.invokeExact(instance, signal_id, detail, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_emit_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$456.g_signal_emit_by_name$MH,"g_signal_emit_by_name");
    }
    public static void g_signal_emit_by_name ( Addressable instance,  Addressable detailed_signal, Object... x2) {
        var mh$ = g_signal_emit_by_name$MH();
        try {
            mh$.invokeExact(instance, detailed_signal, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_lookup$MH() {
        return RuntimeHelper.requireNonNull(constants$456.g_signal_lookup$MH,"g_signal_lookup");
    }
    public static int g_signal_lookup ( Addressable name,  long itype) {
        var mh$ = g_signal_lookup$MH();
        try {
            return (int)mh$.invokeExact(name, itype);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_name$MH() {
        return RuntimeHelper.requireNonNull(constants$456.g_signal_name$MH,"g_signal_name");
    }
    public static MemoryAddress g_signal_name ( int signal_id) {
        var mh$ = g_signal_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(signal_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_query$MH() {
        return RuntimeHelper.requireNonNull(constants$456.g_signal_query$MH,"g_signal_query");
    }
    public static void g_signal_query ( int signal_id,  Addressable query) {
        var mh$ = g_signal_query$MH();
        try {
            mh$.invokeExact(signal_id, query);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_list_ids$MH() {
        return RuntimeHelper.requireNonNull(constants$456.g_signal_list_ids$MH,"g_signal_list_ids");
    }
    public static MemoryAddress g_signal_list_ids ( long itype,  Addressable n_ids) {
        var mh$ = g_signal_list_ids$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(itype, n_ids);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_is_valid_name$MH() {
        return RuntimeHelper.requireNonNull(constants$457.g_signal_is_valid_name$MH,"g_signal_is_valid_name");
    }
    public static int g_signal_is_valid_name ( Addressable name) {
        var mh$ = g_signal_is_valid_name$MH();
        try {
            return (int)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_parse_name$MH() {
        return RuntimeHelper.requireNonNull(constants$457.g_signal_parse_name$MH,"g_signal_parse_name");
    }
    public static int g_signal_parse_name ( Addressable detailed_signal,  long itype,  Addressable signal_id_p,  Addressable detail_p,  int force_detail_quark) {
        var mh$ = g_signal_parse_name$MH();
        try {
            return (int)mh$.invokeExact(detailed_signal, itype, signal_id_p, detail_p, force_detail_quark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_get_invocation_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$457.g_signal_get_invocation_hint$MH,"g_signal_get_invocation_hint");
    }
    public static MemoryAddress g_signal_get_invocation_hint ( Addressable instance) {
        var mh$ = g_signal_get_invocation_hint$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(instance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_stop_emission$MH() {
        return RuntimeHelper.requireNonNull(constants$457.g_signal_stop_emission$MH,"g_signal_stop_emission");
    }
    public static void g_signal_stop_emission ( Addressable instance,  int signal_id,  int detail) {
        var mh$ = g_signal_stop_emission$MH();
        try {
            mh$.invokeExact(instance, signal_id, detail);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_stop_emission_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$457.g_signal_stop_emission_by_name$MH,"g_signal_stop_emission_by_name");
    }
    public static void g_signal_stop_emission_by_name ( Addressable instance,  Addressable detailed_signal) {
        var mh$ = g_signal_stop_emission_by_name$MH();
        try {
            mh$.invokeExact(instance, detailed_signal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_add_emission_hook$MH() {
        return RuntimeHelper.requireNonNull(constants$457.g_signal_add_emission_hook$MH,"g_signal_add_emission_hook");
    }
    public static long g_signal_add_emission_hook ( int signal_id,  int detail,  Addressable hook_func,  Addressable hook_data,  Addressable data_destroy) {
        var mh$ = g_signal_add_emission_hook$MH();
        try {
            return (long)mh$.invokeExact(signal_id, detail, hook_func, hook_data, data_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_remove_emission_hook$MH() {
        return RuntimeHelper.requireNonNull(constants$458.g_signal_remove_emission_hook$MH,"g_signal_remove_emission_hook");
    }
    public static void g_signal_remove_emission_hook ( int signal_id,  long hook_id) {
        var mh$ = g_signal_remove_emission_hook$MH();
        try {
            mh$.invokeExact(signal_id, hook_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_has_handler_pending$MH() {
        return RuntimeHelper.requireNonNull(constants$458.g_signal_has_handler_pending$MH,"g_signal_has_handler_pending");
    }
    public static int g_signal_has_handler_pending ( Addressable instance,  int signal_id,  int detail,  int may_be_blocked) {
        var mh$ = g_signal_has_handler_pending$MH();
        try {
            return (int)mh$.invokeExact(instance, signal_id, detail, may_be_blocked);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_connect_closure_by_id$MH() {
        return RuntimeHelper.requireNonNull(constants$458.g_signal_connect_closure_by_id$MH,"g_signal_connect_closure_by_id");
    }
    public static long g_signal_connect_closure_by_id ( Addressable instance,  int signal_id,  int detail,  Addressable closure,  int after) {
        var mh$ = g_signal_connect_closure_by_id$MH();
        try {
            return (long)mh$.invokeExact(instance, signal_id, detail, closure, after);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_connect_closure$MH() {
        return RuntimeHelper.requireNonNull(constants$458.g_signal_connect_closure$MH,"g_signal_connect_closure");
    }
    public static long g_signal_connect_closure ( Addressable instance,  Addressable detailed_signal,  Addressable closure,  int after) {
        var mh$ = g_signal_connect_closure$MH();
        try {
            return (long)mh$.invokeExact(instance, detailed_signal, closure, after);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_connect_data$MH() {
        return RuntimeHelper.requireNonNull(constants$458.g_signal_connect_data$MH,"g_signal_connect_data");
    }
    public static long g_signal_connect_data ( Addressable instance,  Addressable detailed_signal,  Addressable c_handler,  Addressable data,  Addressable destroy_data,  int connect_flags) {
        var mh$ = g_signal_connect_data$MH();
        try {
            return (long)mh$.invokeExact(instance, detailed_signal, c_handler, data, destroy_data, connect_flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handler_block$MH() {
        return RuntimeHelper.requireNonNull(constants$458.g_signal_handler_block$MH,"g_signal_handler_block");
    }
    public static void g_signal_handler_block ( Addressable instance,  long handler_id) {
        var mh$ = g_signal_handler_block$MH();
        try {
            mh$.invokeExact(instance, handler_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handler_unblock$MH() {
        return RuntimeHelper.requireNonNull(constants$459.g_signal_handler_unblock$MH,"g_signal_handler_unblock");
    }
    public static void g_signal_handler_unblock ( Addressable instance,  long handler_id) {
        var mh$ = g_signal_handler_unblock$MH();
        try {
            mh$.invokeExact(instance, handler_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handler_disconnect$MH() {
        return RuntimeHelper.requireNonNull(constants$459.g_signal_handler_disconnect$MH,"g_signal_handler_disconnect");
    }
    public static void g_signal_handler_disconnect ( Addressable instance,  long handler_id) {
        var mh$ = g_signal_handler_disconnect$MH();
        try {
            mh$.invokeExact(instance, handler_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handler_is_connected$MH() {
        return RuntimeHelper.requireNonNull(constants$459.g_signal_handler_is_connected$MH,"g_signal_handler_is_connected");
    }
    public static int g_signal_handler_is_connected ( Addressable instance,  long handler_id) {
        var mh$ = g_signal_handler_is_connected$MH();
        try {
            return (int)mh$.invokeExact(instance, handler_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handler_find$MH() {
        return RuntimeHelper.requireNonNull(constants$459.g_signal_handler_find$MH,"g_signal_handler_find");
    }
    public static long g_signal_handler_find ( Addressable instance,  int mask,  int signal_id,  int detail,  Addressable closure,  Addressable func,  Addressable data) {
        var mh$ = g_signal_handler_find$MH();
        try {
            return (long)mh$.invokeExact(instance, mask, signal_id, detail, closure, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handlers_block_matched$MH() {
        return RuntimeHelper.requireNonNull(constants$459.g_signal_handlers_block_matched$MH,"g_signal_handlers_block_matched");
    }
    public static int g_signal_handlers_block_matched ( Addressable instance,  int mask,  int signal_id,  int detail,  Addressable closure,  Addressable func,  Addressable data) {
        var mh$ = g_signal_handlers_block_matched$MH();
        try {
            return (int)mh$.invokeExact(instance, mask, signal_id, detail, closure, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handlers_unblock_matched$MH() {
        return RuntimeHelper.requireNonNull(constants$459.g_signal_handlers_unblock_matched$MH,"g_signal_handlers_unblock_matched");
    }
    public static int g_signal_handlers_unblock_matched ( Addressable instance,  int mask,  int signal_id,  int detail,  Addressable closure,  Addressable func,  Addressable data) {
        var mh$ = g_signal_handlers_unblock_matched$MH();
        try {
            return (int)mh$.invokeExact(instance, mask, signal_id, detail, closure, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handlers_disconnect_matched$MH() {
        return RuntimeHelper.requireNonNull(constants$460.g_signal_handlers_disconnect_matched$MH,"g_signal_handlers_disconnect_matched");
    }
    public static int g_signal_handlers_disconnect_matched ( Addressable instance,  int mask,  int signal_id,  int detail,  Addressable closure,  Addressable func,  Addressable data) {
        var mh$ = g_signal_handlers_disconnect_matched$MH();
        try {
            return (int)mh$.invokeExact(instance, mask, signal_id, detail, closure, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_clear_signal_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$460.g_clear_signal_handler$MH,"g_clear_signal_handler");
    }
    public static void g_clear_signal_handler ( Addressable handler_id_ptr,  Addressable instance) {
        var mh$ = g_clear_signal_handler$MH();
        try {
            mh$.invokeExact(handler_id_ptr, instance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_override_class_closure$MH() {
        return RuntimeHelper.requireNonNull(constants$460.g_signal_override_class_closure$MH,"g_signal_override_class_closure");
    }
    public static void g_signal_override_class_closure ( int signal_id,  long instance_type,  Addressable class_closure) {
        var mh$ = g_signal_override_class_closure$MH();
        try {
            mh$.invokeExact(signal_id, instance_type, class_closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_override_class_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$460.g_signal_override_class_handler$MH,"g_signal_override_class_handler");
    }
    public static void g_signal_override_class_handler ( Addressable signal_name,  long instance_type,  Addressable class_handler) {
        var mh$ = g_signal_override_class_handler$MH();
        try {
            mh$.invokeExact(signal_name, instance_type, class_handler);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_chain_from_overridden$MH() {
        return RuntimeHelper.requireNonNull(constants$460.g_signal_chain_from_overridden$MH,"g_signal_chain_from_overridden");
    }
    public static void g_signal_chain_from_overridden ( Addressable instance_and_params,  Addressable return_value) {
        var mh$ = g_signal_chain_from_overridden$MH();
        try {
            mh$.invokeExact(instance_and_params, return_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_chain_from_overridden_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$460.g_signal_chain_from_overridden_handler$MH,"g_signal_chain_from_overridden_handler");
    }
    public static void g_signal_chain_from_overridden_handler ( Addressable instance, Object... x1) {
        var mh$ = g_signal_chain_from_overridden_handler$MH();
        try {
            mh$.invokeExact(instance, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_accumulator_true_handled$MH() {
        return RuntimeHelper.requireNonNull(constants$461.g_signal_accumulator_true_handled$MH,"g_signal_accumulator_true_handled");
    }
    public static int g_signal_accumulator_true_handled ( Addressable ihint,  Addressable return_accu,  Addressable handler_return,  Addressable dummy) {
        var mh$ = g_signal_accumulator_true_handled$MH();
        try {
            return (int)mh$.invokeExact(ihint, return_accu, handler_return, dummy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_accumulator_first_wins$MH() {
        return RuntimeHelper.requireNonNull(constants$461.g_signal_accumulator_first_wins$MH,"g_signal_accumulator_first_wins");
    }
    public static int g_signal_accumulator_first_wins ( Addressable ihint,  Addressable return_accu,  Addressable handler_return,  Addressable dummy) {
        var mh$ = g_signal_accumulator_first_wins$MH();
        try {
            return (int)mh$.invokeExact(ihint, return_accu, handler_return, dummy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handlers_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$461.g_signal_handlers_destroy$MH,"g_signal_handlers_destroy");
    }
    public static void g_signal_handlers_destroy ( Addressable instance) {
        var mh$ = g_signal_handlers_destroy$MH();
        try {
            mh$.invokeExact(instance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _g_signals_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$461._g_signals_destroy$MH,"_g_signals_destroy");
    }
    public static void _g_signals_destroy ( long itype) {
        var mh$ = _g_signals_destroy$MH();
        try {
            mh$.invokeExact(itype);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$461.g_date_get_type$MH,"g_date_get_type");
    }
    public static long g_date_get_type () {
        var mh$ = g_date_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_strv_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$461.g_strv_get_type$MH,"g_strv_get_type");
    }
    public static long g_strv_get_type () {
        var mh$ = g_strv_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_gstring_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$462.g_gstring_get_type$MH,"g_gstring_get_type");
    }
    public static long g_gstring_get_type () {
        var mh$ = g_gstring_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$462.g_hash_table_get_type$MH,"g_hash_table_get_type");
    }
    public static long g_hash_table_get_type () {
        var mh$ = g_hash_table_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_array_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$462.g_array_get_type$MH,"g_array_get_type");
    }
    public static long g_array_get_type () {
        var mh$ = g_array_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_byte_array_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$462.g_byte_array_get_type$MH,"g_byte_array_get_type");
    }
    public static long g_byte_array_get_type () {
        var mh$ = g_byte_array_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_ptr_array_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$462.g_ptr_array_get_type$MH,"g_ptr_array_get_type");
    }
    public static long g_ptr_array_get_type () {
        var mh$ = g_ptr_array_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_bytes_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$462.g_bytes_get_type$MH,"g_bytes_get_type");
    }
    public static long g_bytes_get_type () {
        var mh$ = g_bytes_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_get_gtype$MH() {
        return RuntimeHelper.requireNonNull(constants$463.g_variant_type_get_gtype$MH,"g_variant_type_get_gtype");
    }
    public static long g_variant_type_get_gtype () {
        var mh$ = g_variant_type_get_gtype$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_regex_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$463.g_regex_get_type$MH,"g_regex_get_type");
    }
    public static long g_regex_get_type () {
        var mh$ = g_regex_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_match_info_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$463.g_match_info_get_type$MH,"g_match_info_get_type");
    }
    public static long g_match_info_get_type () {
        var mh$ = g_match_info_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_error_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$463.g_error_get_type$MH,"g_error_get_type");
    }
    public static long g_error_get_type () {
        var mh$ = g_error_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$463.g_date_time_get_type$MH,"g_date_time_get_type");
    }
    public static long g_date_time_get_type () {
        var mh$ = g_date_time_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_time_zone_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$463.g_time_zone_get_type$MH,"g_time_zone_get_type");
    }
    public static long g_time_zone_get_type () {
        var mh$ = g_time_zone_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$464.g_io_channel_get_type$MH,"g_io_channel_get_type");
    }
    public static long g_io_channel_get_type () {
        var mh$ = g_io_channel_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_condition_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$464.g_io_condition_get_type$MH,"g_io_condition_get_type");
    }
    public static long g_io_condition_get_type () {
        var mh$ = g_io_condition_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_builder_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$464.g_variant_builder_get_type$MH,"g_variant_builder_get_type");
    }
    public static long g_variant_builder_get_type () {
        var mh$ = g_variant_builder_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_dict_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$464.g_variant_dict_get_type$MH,"g_variant_dict_get_type");
    }
    public static long g_variant_dict_get_type () {
        var mh$ = g_variant_dict_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$464.g_key_file_get_type$MH,"g_key_file_get_type");
    }
    public static long g_key_file_get_type () {
        var mh$ = g_key_file_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_loop_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$464.g_main_loop_get_type$MH,"g_main_loop_get_type");
    }
    public static long g_main_loop_get_type () {
        var mh$ = g_main_loop_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$465.g_main_context_get_type$MH,"g_main_context_get_type");
    }
    public static long g_main_context_get_type () {
        var mh$ = g_main_context_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$465.g_source_get_type$MH,"g_source_get_type");
    }
    public static long g_source_get_type () {
        var mh$ = g_source_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_pollfd_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$465.g_pollfd_get_type$MH,"g_pollfd_get_type");
    }
    public static long g_pollfd_get_type () {
        var mh$ = g_pollfd_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_thread_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$465.g_thread_get_type$MH,"g_thread_get_type");
    }
    public static long g_thread_get_type () {
        var mh$ = g_thread_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_checksum_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$465.g_checksum_get_type$MH,"g_checksum_get_type");
    }
    public static long g_checksum_get_type () {
        var mh$ = g_checksum_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_markup_parse_context_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$465.g_markup_parse_context_get_type$MH,"g_markup_parse_context_get_type");
    }
    public static long g_markup_parse_context_get_type () {
        var mh$ = g_markup_parse_context_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mapped_file_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$466.g_mapped_file_get_type$MH,"g_mapped_file_get_type");
    }
    public static long g_mapped_file_get_type () {
        var mh$ = g_mapped_file_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_option_group_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$466.g_option_group_get_type$MH,"g_option_group_get_type");
    }
    public static long g_option_group_get_type () {
        var mh$ = g_option_group_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_uri_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$466.g_uri_get_type$MH,"g_uri_get_type");
    }
    public static long g_uri_get_type () {
        var mh$ = g_uri_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tree_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$466.g_tree_get_type$MH,"g_tree_get_type");
    }
    public static long g_tree_get_type () {
        var mh$ = g_tree_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_pattern_spec_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$466.g_pattern_spec_get_type$MH,"g_pattern_spec_get_type");
    }
    public static long g_pattern_spec_get_type () {
        var mh$ = g_pattern_spec_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_gtype$MH() {
        return RuntimeHelper.requireNonNull(constants$466.g_variant_get_gtype$MH,"g_variant_get_gtype");
    }
    public static long g_variant_get_gtype () {
        var mh$ = g_variant_get_gtype$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_boxed_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$467.g_boxed_copy$MH,"g_boxed_copy");
    }
    public static MemoryAddress g_boxed_copy ( long boxed_type,  Addressable src_boxed) {
        var mh$ = g_boxed_copy$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(boxed_type, src_boxed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_boxed_free$MH() {
        return RuntimeHelper.requireNonNull(constants$467.g_boxed_free$MH,"g_boxed_free");
    }
    public static void g_boxed_free ( long boxed_type,  Addressable boxed) {
        var mh$ = g_boxed_free$MH();
        try {
            mh$.invokeExact(boxed_type, boxed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_boxed$MH() {
        return RuntimeHelper.requireNonNull(constants$468.g_value_set_boxed$MH,"g_value_set_boxed");
    }
    public static void g_value_set_boxed ( Addressable value,  Addressable v_boxed) {
        var mh$ = g_value_set_boxed$MH();
        try {
            mh$.invokeExact(value, v_boxed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_static_boxed$MH() {
        return RuntimeHelper.requireNonNull(constants$468.g_value_set_static_boxed$MH,"g_value_set_static_boxed");
    }
    public static void g_value_set_static_boxed ( Addressable value,  Addressable v_boxed) {
        var mh$ = g_value_set_static_boxed$MH();
        try {
            mh$.invokeExact(value, v_boxed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_take_boxed$MH() {
        return RuntimeHelper.requireNonNull(constants$468.g_value_take_boxed$MH,"g_value_take_boxed");
    }
    public static void g_value_take_boxed ( Addressable value,  Addressable v_boxed) {
        var mh$ = g_value_take_boxed$MH();
        try {
            mh$.invokeExact(value, v_boxed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_boxed_take_ownership$MH() {
        return RuntimeHelper.requireNonNull(constants$468.g_value_set_boxed_take_ownership$MH,"g_value_set_boxed_take_ownership");
    }
    public static void g_value_set_boxed_take_ownership ( Addressable value,  Addressable v_boxed) {
        var mh$ = g_value_set_boxed_take_ownership$MH();
        try {
            mh$.invokeExact(value, v_boxed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_boxed$MH() {
        return RuntimeHelper.requireNonNull(constants$468.g_value_get_boxed$MH,"g_value_get_boxed");
    }
    public static MemoryAddress g_value_get_boxed ( Addressable value) {
        var mh$ = g_value_get_boxed$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_dup_boxed$MH() {
        return RuntimeHelper.requireNonNull(constants$468.g_value_dup_boxed$MH,"g_value_dup_boxed");
    }
    public static MemoryAddress g_value_dup_boxed ( Addressable value) {
        var mh$ = g_value_dup_boxed$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_boxed_type_register_static$MH() {
        return RuntimeHelper.requireNonNull(constants$469.g_boxed_type_register_static$MH,"g_boxed_type_register_static");
    }
    public static long g_boxed_type_register_static ( Addressable name,  Addressable boxed_copy,  Addressable boxed_free) {
        var mh$ = g_boxed_type_register_static$MH();
        try {
            return (long)mh$.invokeExact(name, boxed_copy, boxed_free);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$469.g_closure_get_type$MH,"g_closure_get_type");
    }
    public static long g_closure_get_type () {
        var mh$ = g_closure_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$469.g_value_get_type$MH,"g_value_get_type");
    }
    public static long g_value_get_type () {
        var mh$ = g_value_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_initially_unowned_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$470.g_initially_unowned_get_type$MH,"g_initially_unowned_get_type");
    }
    public static long g_initially_unowned_get_type () {
        var mh$ = g_initially_unowned_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_class_install_property$MH() {
        return RuntimeHelper.requireNonNull(constants$471.g_object_class_install_property$MH,"g_object_class_install_property");
    }
    public static void g_object_class_install_property ( Addressable oclass,  int property_id,  Addressable pspec) {
        var mh$ = g_object_class_install_property$MH();
        try {
            mh$.invokeExact(oclass, property_id, pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_class_find_property$MH() {
        return RuntimeHelper.requireNonNull(constants$471.g_object_class_find_property$MH,"g_object_class_find_property");
    }
    public static MemoryAddress g_object_class_find_property ( Addressable oclass,  Addressable property_name) {
        var mh$ = g_object_class_find_property$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(oclass, property_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_class_list_properties$MH() {
        return RuntimeHelper.requireNonNull(constants$471.g_object_class_list_properties$MH,"g_object_class_list_properties");
    }
    public static MemoryAddress g_object_class_list_properties ( Addressable oclass,  Addressable n_properties) {
        var mh$ = g_object_class_list_properties$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(oclass, n_properties);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_class_override_property$MH() {
        return RuntimeHelper.requireNonNull(constants$471.g_object_class_override_property$MH,"g_object_class_override_property");
    }
    public static void g_object_class_override_property ( Addressable oclass,  int property_id,  Addressable name) {
        var mh$ = g_object_class_override_property$MH();
        try {
            mh$.invokeExact(oclass, property_id, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_class_install_properties$MH() {
        return RuntimeHelper.requireNonNull(constants$471.g_object_class_install_properties$MH,"g_object_class_install_properties");
    }
    public static void g_object_class_install_properties ( Addressable oclass,  int n_pspecs,  Addressable pspecs) {
        var mh$ = g_object_class_install_properties$MH();
        try {
            mh$.invokeExact(oclass, n_pspecs, pspecs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_interface_install_property$MH() {
        return RuntimeHelper.requireNonNull(constants$471.g_object_interface_install_property$MH,"g_object_interface_install_property");
    }
    public static void g_object_interface_install_property ( Addressable g_iface,  Addressable pspec) {
        var mh$ = g_object_interface_install_property$MH();
        try {
            mh$.invokeExact(g_iface, pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_interface_find_property$MH() {
        return RuntimeHelper.requireNonNull(constants$472.g_object_interface_find_property$MH,"g_object_interface_find_property");
    }
    public static MemoryAddress g_object_interface_find_property ( Addressable g_iface,  Addressable property_name) {
        var mh$ = g_object_interface_find_property$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(g_iface, property_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_interface_list_properties$MH() {
        return RuntimeHelper.requireNonNull(constants$472.g_object_interface_list_properties$MH,"g_object_interface_list_properties");
    }
    public static MemoryAddress g_object_interface_list_properties ( Addressable g_iface,  Addressable n_properties_p) {
        var mh$ = g_object_interface_list_properties$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(g_iface, n_properties_p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$472.g_object_get_type$MH,"g_object_get_type");
    }
    public static long g_object_get_type () {
        var mh$ = g_object_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_new$MH() {
        return RuntimeHelper.requireNonNull(constants$472.g_object_new$MH,"g_object_new");
    }
    public static MemoryAddress g_object_new ( long object_type,  Addressable first_property_name, Object... x2) {
        var mh$ = g_object_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(object_type, first_property_name, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_new_with_properties$MH() {
        return RuntimeHelper.requireNonNull(constants$472.g_object_new_with_properties$MH,"g_object_new_with_properties");
    }
    public static MemoryAddress g_object_new_with_properties ( long object_type,  int n_properties,  Addressable names,  Addressable values) {
        var mh$ = g_object_new_with_properties$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(object_type, n_properties, names, values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_newv$MH() {
        return RuntimeHelper.requireNonNull(constants$472.g_object_newv$MH,"g_object_newv");
    }
    public static MemoryAddress g_object_newv ( long object_type,  int n_parameters,  Addressable parameters) {
        var mh$ = g_object_newv$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(object_type, n_parameters, parameters);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_new_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$473.g_object_new_valist$MH,"g_object_new_valist");
    }
    public static MemoryAddress g_object_new_valist ( long object_type,  Addressable first_property_name,  Addressable var_args) {
        var mh$ = g_object_new_valist$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(object_type, first_property_name, var_args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_set$MH() {
        return RuntimeHelper.requireNonNull(constants$473.g_object_set$MH,"g_object_set");
    }
    public static void g_object_set ( Addressable object,  Addressable first_property_name, Object... x2) {
        var mh$ = g_object_set$MH();
        try {
            mh$.invokeExact(object, first_property_name, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_get$MH() {
        return RuntimeHelper.requireNonNull(constants$473.g_object_get$MH,"g_object_get");
    }
    public static void g_object_get ( Addressable object,  Addressable first_property_name, Object... x2) {
        var mh$ = g_object_get$MH();
        try {
            mh$.invokeExact(object, first_property_name, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_connect$MH() {
        return RuntimeHelper.requireNonNull(constants$473.g_object_connect$MH,"g_object_connect");
    }
    public static MemoryAddress g_object_connect ( Addressable object,  Addressable signal_spec, Object... x2) {
        var mh$ = g_object_connect$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(object, signal_spec, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_disconnect$MH() {
        return RuntimeHelper.requireNonNull(constants$473.g_object_disconnect$MH,"g_object_disconnect");
    }
    public static void g_object_disconnect ( Addressable object,  Addressable signal_spec, Object... x2) {
        var mh$ = g_object_disconnect$MH();
        try {
            mh$.invokeExact(object, signal_spec, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_setv$MH() {
        return RuntimeHelper.requireNonNull(constants$473.g_object_setv$MH,"g_object_setv");
    }
    public static void g_object_setv ( Addressable object,  int n_properties,  Addressable names,  Addressable values) {
        var mh$ = g_object_setv$MH();
        try {
            mh$.invokeExact(object, n_properties, names, values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_set_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$474.g_object_set_valist$MH,"g_object_set_valist");
    }
    public static void g_object_set_valist ( Addressable object,  Addressable first_property_name,  Addressable var_args) {
        var mh$ = g_object_set_valist$MH();
        try {
            mh$.invokeExact(object, first_property_name, var_args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_getv$MH() {
        return RuntimeHelper.requireNonNull(constants$474.g_object_getv$MH,"g_object_getv");
    }
    public static void g_object_getv ( Addressable object,  int n_properties,  Addressable names,  Addressable values) {
        var mh$ = g_object_getv$MH();
        try {
            mh$.invokeExact(object, n_properties, names, values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_get_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$474.g_object_get_valist$MH,"g_object_get_valist");
    }
    public static void g_object_get_valist ( Addressable object,  Addressable first_property_name,  Addressable var_args) {
        var mh$ = g_object_get_valist$MH();
        try {
            mh$.invokeExact(object, first_property_name, var_args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_set_property$MH() {
        return RuntimeHelper.requireNonNull(constants$474.g_object_set_property$MH,"g_object_set_property");
    }
    public static void g_object_set_property ( Addressable object,  Addressable property_name,  Addressable value) {
        var mh$ = g_object_set_property$MH();
        try {
            mh$.invokeExact(object, property_name, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_get_property$MH() {
        return RuntimeHelper.requireNonNull(constants$474.g_object_get_property$MH,"g_object_get_property");
    }
    public static void g_object_get_property ( Addressable object,  Addressable property_name,  Addressable value) {
        var mh$ = g_object_get_property$MH();
        try {
            mh$.invokeExact(object, property_name, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_freeze_notify$MH() {
        return RuntimeHelper.requireNonNull(constants$474.g_object_freeze_notify$MH,"g_object_freeze_notify");
    }
    public static void g_object_freeze_notify ( Addressable object) {
        var mh$ = g_object_freeze_notify$MH();
        try {
            mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_notify$MH() {
        return RuntimeHelper.requireNonNull(constants$475.g_object_notify$MH,"g_object_notify");
    }
    public static void g_object_notify ( Addressable object,  Addressable property_name) {
        var mh$ = g_object_notify$MH();
        try {
            mh$.invokeExact(object, property_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_notify_by_pspec$MH() {
        return RuntimeHelper.requireNonNull(constants$475.g_object_notify_by_pspec$MH,"g_object_notify_by_pspec");
    }
    public static void g_object_notify_by_pspec ( Addressable object,  Addressable pspec) {
        var mh$ = g_object_notify_by_pspec$MH();
        try {
            mh$.invokeExact(object, pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_thaw_notify$MH() {
        return RuntimeHelper.requireNonNull(constants$475.g_object_thaw_notify$MH,"g_object_thaw_notify");
    }
    public static void g_object_thaw_notify ( Addressable object) {
        var mh$ = g_object_thaw_notify$MH();
        try {
            mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_is_floating$MH() {
        return RuntimeHelper.requireNonNull(constants$475.g_object_is_floating$MH,"g_object_is_floating");
    }
    public static int g_object_is_floating ( Addressable object) {
        var mh$ = g_object_is_floating$MH();
        try {
            return (int)mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_ref_sink$MH() {
        return RuntimeHelper.requireNonNull(constants$475.g_object_ref_sink$MH,"g_object_ref_sink");
    }
    public static MemoryAddress g_object_ref_sink ( Addressable object) {
        var mh$ = g_object_ref_sink$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_take_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$475.g_object_take_ref$MH,"g_object_take_ref");
    }
    public static MemoryAddress g_object_take_ref ( Addressable object) {
        var mh$ = g_object_take_ref$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$476.g_object_ref$MH,"g_object_ref");
    }
    public static MemoryAddress g_object_ref ( Addressable object) {
        var mh$ = g_object_ref$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$476.g_object_unref$MH,"g_object_unref");
    }
    public static void g_object_unref ( Addressable object) {
        var mh$ = g_object_unref$MH();
        try {
            mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_weak_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$476.g_object_weak_ref$MH,"g_object_weak_ref");
    }
    public static void g_object_weak_ref ( Addressable object,  Addressable notify,  Addressable data) {
        var mh$ = g_object_weak_ref$MH();
        try {
            mh$.invokeExact(object, notify, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_weak_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$476.g_object_weak_unref$MH,"g_object_weak_unref");
    }
    public static void g_object_weak_unref ( Addressable object,  Addressable notify,  Addressable data) {
        var mh$ = g_object_weak_unref$MH();
        try {
            mh$.invokeExact(object, notify, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_add_weak_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$476.g_object_add_weak_pointer$MH,"g_object_add_weak_pointer");
    }
    public static void g_object_add_weak_pointer ( Addressable object,  Addressable weak_pointer_location) {
        var mh$ = g_object_add_weak_pointer$MH();
        try {
            mh$.invokeExact(object, weak_pointer_location);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_remove_weak_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$476.g_object_remove_weak_pointer$MH,"g_object_remove_weak_pointer");
    }
    public static void g_object_remove_weak_pointer ( Addressable object,  Addressable weak_pointer_location) {
        var mh$ = g_object_remove_weak_pointer$MH();
        try {
            mh$.invokeExact(object, weak_pointer_location);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_add_toggle_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$477.g_object_add_toggle_ref$MH,"g_object_add_toggle_ref");
    }
    public static void g_object_add_toggle_ref ( Addressable object,  Addressable notify,  Addressable data) {
        var mh$ = g_object_add_toggle_ref$MH();
        try {
            mh$.invokeExact(object, notify, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_remove_toggle_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$477.g_object_remove_toggle_ref$MH,"g_object_remove_toggle_ref");
    }
    public static void g_object_remove_toggle_ref ( Addressable object,  Addressable notify,  Addressable data) {
        var mh$ = g_object_remove_toggle_ref$MH();
        try {
            mh$.invokeExact(object, notify, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_get_qdata$MH() {
        return RuntimeHelper.requireNonNull(constants$477.g_object_get_qdata$MH,"g_object_get_qdata");
    }
    public static MemoryAddress g_object_get_qdata ( Addressable object,  int quark) {
        var mh$ = g_object_get_qdata$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(object, quark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_set_qdata$MH() {
        return RuntimeHelper.requireNonNull(constants$477.g_object_set_qdata$MH,"g_object_set_qdata");
    }
    public static void g_object_set_qdata ( Addressable object,  int quark,  Addressable data) {
        var mh$ = g_object_set_qdata$MH();
        try {
            mh$.invokeExact(object, quark, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_set_qdata_full$MH() {
        return RuntimeHelper.requireNonNull(constants$478.g_object_set_qdata_full$MH,"g_object_set_qdata_full");
    }
    public static void g_object_set_qdata_full ( Addressable object,  int quark,  Addressable data,  Addressable destroy) {
        var mh$ = g_object_set_qdata_full$MH();
        try {
            mh$.invokeExact(object, quark, data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_steal_qdata$MH() {
        return RuntimeHelper.requireNonNull(constants$478.g_object_steal_qdata$MH,"g_object_steal_qdata");
    }
    public static MemoryAddress g_object_steal_qdata ( Addressable object,  int quark) {
        var mh$ = g_object_steal_qdata$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(object, quark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_dup_qdata$MH() {
        return RuntimeHelper.requireNonNull(constants$478.g_object_dup_qdata$MH,"g_object_dup_qdata");
    }
    public static MemoryAddress g_object_dup_qdata ( Addressable object,  int quark,  Addressable dup_func,  Addressable user_data) {
        var mh$ = g_object_dup_qdata$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(object, quark, dup_func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_replace_qdata$MH() {
        return RuntimeHelper.requireNonNull(constants$478.g_object_replace_qdata$MH,"g_object_replace_qdata");
    }
    public static int g_object_replace_qdata ( Addressable object,  int quark,  Addressable oldval,  Addressable newval,  Addressable destroy,  Addressable old_destroy) {
        var mh$ = g_object_replace_qdata$MH();
        try {
            return (int)mh$.invokeExact(object, quark, oldval, newval, destroy, old_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_get_data$MH() {
        return RuntimeHelper.requireNonNull(constants$478.g_object_get_data$MH,"g_object_get_data");
    }
    public static MemoryAddress g_object_get_data ( Addressable object,  Addressable key) {
        var mh$ = g_object_get_data$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(object, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_set_data$MH() {
        return RuntimeHelper.requireNonNull(constants$478.g_object_set_data$MH,"g_object_set_data");
    }
    public static void g_object_set_data ( Addressable object,  Addressable key,  Addressable data) {
        var mh$ = g_object_set_data$MH();
        try {
            mh$.invokeExact(object, key, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_set_data_full$MH() {
        return RuntimeHelper.requireNonNull(constants$479.g_object_set_data_full$MH,"g_object_set_data_full");
    }
    public static void g_object_set_data_full ( Addressable object,  Addressable key,  Addressable data,  Addressable destroy) {
        var mh$ = g_object_set_data_full$MH();
        try {
            mh$.invokeExact(object, key, data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_steal_data$MH() {
        return RuntimeHelper.requireNonNull(constants$479.g_object_steal_data$MH,"g_object_steal_data");
    }
    public static MemoryAddress g_object_steal_data ( Addressable object,  Addressable key) {
        var mh$ = g_object_steal_data$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(object, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_dup_data$MH() {
        return RuntimeHelper.requireNonNull(constants$479.g_object_dup_data$MH,"g_object_dup_data");
    }
    public static MemoryAddress g_object_dup_data ( Addressable object,  Addressable key,  Addressable dup_func,  Addressable user_data) {
        var mh$ = g_object_dup_data$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(object, key, dup_func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_replace_data$MH() {
        return RuntimeHelper.requireNonNull(constants$479.g_object_replace_data$MH,"g_object_replace_data");
    }
    public static int g_object_replace_data ( Addressable object,  Addressable key,  Addressable oldval,  Addressable newval,  Addressable destroy,  Addressable old_destroy) {
        var mh$ = g_object_replace_data$MH();
        try {
            return (int)mh$.invokeExact(object, key, oldval, newval, destroy, old_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_watch_closure$MH() {
        return RuntimeHelper.requireNonNull(constants$479.g_object_watch_closure$MH,"g_object_watch_closure");
    }
    public static void g_object_watch_closure ( Addressable object,  Addressable closure) {
        var mh$ = g_object_watch_closure$MH();
        try {
            mh$.invokeExact(object, closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_new_object$MH() {
        return RuntimeHelper.requireNonNull(constants$479.g_cclosure_new_object$MH,"g_cclosure_new_object");
    }
    public static MemoryAddress g_cclosure_new_object ( Addressable callback_func,  Addressable object) {
        var mh$ = g_cclosure_new_object$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(callback_func, object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_new_object_swap$MH() {
        return RuntimeHelper.requireNonNull(constants$480.g_cclosure_new_object_swap$MH,"g_cclosure_new_object_swap");
    }
    public static MemoryAddress g_cclosure_new_object_swap ( Addressable callback_func,  Addressable object) {
        var mh$ = g_cclosure_new_object_swap$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(callback_func, object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_new_object$MH() {
        return RuntimeHelper.requireNonNull(constants$480.g_closure_new_object$MH,"g_closure_new_object");
    }
    public static MemoryAddress g_closure_new_object ( int sizeof_closure,  Addressable object) {
        var mh$ = g_closure_new_object$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(sizeof_closure, object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_object$MH() {
        return RuntimeHelper.requireNonNull(constants$480.g_value_set_object$MH,"g_value_set_object");
    }
    public static void g_value_set_object ( Addressable value,  Addressable v_object) {
        var mh$ = g_value_set_object$MH();
        try {
            mh$.invokeExact(value, v_object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_object$MH() {
        return RuntimeHelper.requireNonNull(constants$480.g_value_get_object$MH,"g_value_get_object");
    }
    public static MemoryAddress g_value_get_object ( Addressable value) {
        var mh$ = g_value_get_object$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_dup_object$MH() {
        return RuntimeHelper.requireNonNull(constants$480.g_value_dup_object$MH,"g_value_dup_object");
    }
    public static MemoryAddress g_value_dup_object ( Addressable value) {
        var mh$ = g_value_dup_object$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_connect_object$MH() {
        return RuntimeHelper.requireNonNull(constants$480.g_signal_connect_object$MH,"g_signal_connect_object");
    }
    public static long g_signal_connect_object ( Addressable instance,  Addressable detailed_signal,  Addressable c_handler,  Addressable gobject,  int connect_flags) {
        var mh$ = g_signal_connect_object$MH();
        try {
            return (long)mh$.invokeExact(instance, detailed_signal, c_handler, gobject, connect_flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_force_floating$MH() {
        return RuntimeHelper.requireNonNull(constants$481.g_object_force_floating$MH,"g_object_force_floating");
    }
    public static void g_object_force_floating ( Addressable object) {
        var mh$ = g_object_force_floating$MH();
        try {
            mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_run_dispose$MH() {
        return RuntimeHelper.requireNonNull(constants$481.g_object_run_dispose$MH,"g_object_run_dispose");
    }
    public static void g_object_run_dispose ( Addressable object) {
        var mh$ = g_object_run_dispose$MH();
        try {
            mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_take_object$MH() {
        return RuntimeHelper.requireNonNull(constants$481.g_value_take_object$MH,"g_value_take_object");
    }
    public static void g_value_take_object ( Addressable value,  Addressable v_object) {
        var mh$ = g_value_take_object$MH();
        try {
            mh$.invokeExact(value, v_object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_object_take_ownership$MH() {
        return RuntimeHelper.requireNonNull(constants$481.g_value_set_object_take_ownership$MH,"g_value_set_object_take_ownership");
    }
    public static void g_value_set_object_take_ownership ( Addressable value,  Addressable v_object) {
        var mh$ = g_value_set_object_take_ownership$MH();
        try {
            mh$.invokeExact(value, v_object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_compat_control$MH() {
        return RuntimeHelper.requireNonNull(constants$481.g_object_compat_control$MH,"g_object_compat_control");
    }
    public static long g_object_compat_control ( long what,  Addressable data) {
        var mh$ = g_object_compat_control$MH();
        try {
            return (long)mh$.invokeExact(what, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_clear_object$MH() {
        return RuntimeHelper.requireNonNull(constants$481.g_clear_object$MH,"g_clear_object");
    }
    public static void g_clear_object ( Addressable object_ptr) {
        var mh$ = g_clear_object$MH();
        try {
            mh$.invokeExact(object_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_set_object$MH() {
        return RuntimeHelper.requireNonNull(constants$482.g_set_object$MH,"g_set_object");
    }
    public static int g_set_object ( Addressable object_ptr,  Addressable new_object) {
        var mh$ = g_set_object$MH();
        try {
            return (int)mh$.invokeExact(object_ptr, new_object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_assert_finalize_object$MH() {
        return RuntimeHelper.requireNonNull(constants$482.g_assert_finalize_object$MH,"g_assert_finalize_object");
    }
    public static void g_assert_finalize_object ( Addressable object) {
        var mh$ = g_assert_finalize_object$MH();
        try {
            mh$.invokeExact(object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_clear_weak_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$482.g_clear_weak_pointer$MH,"g_clear_weak_pointer");
    }
    public static void g_clear_weak_pointer ( Addressable weak_pointer_location) {
        var mh$ = g_clear_weak_pointer$MH();
        try {
            mh$.invokeExact(weak_pointer_location);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_set_weak_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$482.g_set_weak_pointer$MH,"g_set_weak_pointer");
    }
    public static int g_set_weak_pointer ( Addressable weak_pointer_location,  Addressable new_object) {
        var mh$ = g_set_weak_pointer$MH();
        try {
            return (int)mh$.invokeExact(weak_pointer_location, new_object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_weak_ref_init$MH() {
        return RuntimeHelper.requireNonNull(constants$482.g_weak_ref_init$MH,"g_weak_ref_init");
    }
    public static void g_weak_ref_init ( Addressable weak_ref,  Addressable object) {
        var mh$ = g_weak_ref_init$MH();
        try {
            mh$.invokeExact(weak_ref, object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_weak_ref_clear$MH() {
        return RuntimeHelper.requireNonNull(constants$482.g_weak_ref_clear$MH,"g_weak_ref_clear");
    }
    public static void g_weak_ref_clear ( Addressable weak_ref) {
        var mh$ = g_weak_ref_clear$MH();
        try {
            mh$.invokeExact(weak_ref);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_weak_ref_get$MH() {
        return RuntimeHelper.requireNonNull(constants$483.g_weak_ref_get$MH,"g_weak_ref_get");
    }
    public static MemoryAddress g_weak_ref_get ( Addressable weak_ref) {
        var mh$ = g_weak_ref_get$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(weak_ref);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_weak_ref_set$MH() {
        return RuntimeHelper.requireNonNull(constants$483.g_weak_ref_set$MH,"g_weak_ref_set");
    }
    public static void g_weak_ref_set ( Addressable weak_ref,  Addressable object) {
        var mh$ = g_weak_ref_set$MH();
        try {
            mh$.invokeExact(weak_ref, object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int G_BINDING_DEFAULT() {
        return (int)0L;
    }
    public static int G_BINDING_BIDIRECTIONAL() {
        return (int)1L;
    }
    public static int G_BINDING_SYNC_CREATE() {
        return (int)2L;
    }
    public static int G_BINDING_INVERT_BOOLEAN() {
        return (int)4L;
    }
    public static MethodHandle g_binding_flags_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$483.g_binding_flags_get_type$MH,"g_binding_flags_get_type");
    }
    public static long g_binding_flags_get_type () {
        var mh$ = g_binding_flags_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$483.g_binding_get_type$MH,"g_binding_get_type");
    }
    public static long g_binding_get_type () {
        var mh$ = g_binding_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$484.g_binding_get_flags$MH,"g_binding_get_flags");
    }
    public static int g_binding_get_flags ( Addressable binding) {
        var mh$ = g_binding_get_flags$MH();
        try {
            return (int)mh$.invokeExact(binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_get_source$MH() {
        return RuntimeHelper.requireNonNull(constants$484.g_binding_get_source$MH,"g_binding_get_source");
    }
    public static MemoryAddress g_binding_get_source ( Addressable binding) {
        var mh$ = g_binding_get_source$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_dup_source$MH() {
        return RuntimeHelper.requireNonNull(constants$484.g_binding_dup_source$MH,"g_binding_dup_source");
    }
    public static MemoryAddress g_binding_dup_source ( Addressable binding) {
        var mh$ = g_binding_dup_source$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_get_target$MH() {
        return RuntimeHelper.requireNonNull(constants$484.g_binding_get_target$MH,"g_binding_get_target");
    }
    public static MemoryAddress g_binding_get_target ( Addressable binding) {
        var mh$ = g_binding_get_target$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_dup_target$MH() {
        return RuntimeHelper.requireNonNull(constants$484.g_binding_dup_target$MH,"g_binding_dup_target");
    }
    public static MemoryAddress g_binding_dup_target ( Addressable binding) {
        var mh$ = g_binding_dup_target$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_get_source_property$MH() {
        return RuntimeHelper.requireNonNull(constants$484.g_binding_get_source_property$MH,"g_binding_get_source_property");
    }
    public static MemoryAddress g_binding_get_source_property ( Addressable binding) {
        var mh$ = g_binding_get_source_property$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_get_target_property$MH() {
        return RuntimeHelper.requireNonNull(constants$485.g_binding_get_target_property$MH,"g_binding_get_target_property");
    }
    public static MemoryAddress g_binding_get_target_property ( Addressable binding) {
        var mh$ = g_binding_get_target_property$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_unbind$MH() {
        return RuntimeHelper.requireNonNull(constants$485.g_binding_unbind$MH,"g_binding_unbind");
    }
    public static void g_binding_unbind ( Addressable binding) {
        var mh$ = g_binding_unbind$MH();
        try {
            mh$.invokeExact(binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_bind_property$MH() {
        return RuntimeHelper.requireNonNull(constants$485.g_object_bind_property$MH,"g_object_bind_property");
    }
    public static MemoryAddress g_object_bind_property ( Addressable source,  Addressable source_property,  Addressable target,  Addressable target_property,  int flags) {
        var mh$ = g_object_bind_property$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(source, source_property, target, target_property, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_bind_property_full$MH() {
        return RuntimeHelper.requireNonNull(constants$485.g_object_bind_property_full$MH,"g_object_bind_property_full");
    }
    public static MemoryAddress g_object_bind_property_full ( Addressable source,  Addressable source_property,  Addressable target,  Addressable target_property,  int flags,  Addressable transform_to,  Addressable transform_from,  Addressable user_data,  Addressable notify) {
        var mh$ = g_object_bind_property_full$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(source, source_property, target, target_property, flags, transform_to, transform_from, user_data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_object_bind_property_with_closures$MH() {
        return RuntimeHelper.requireNonNull(constants$485.g_object_bind_property_with_closures$MH,"g_object_bind_property_with_closures");
    }
    public static MemoryAddress g_object_bind_property_with_closures ( Addressable source,  Addressable source_property,  Addressable target,  Addressable target_property,  int flags,  Addressable transform_to,  Addressable transform_from) {
        var mh$ = g_object_bind_property_with_closures$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(source, source_property, target, target_property, flags, transform_to, transform_from);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_group_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$485.g_binding_group_get_type$MH,"g_binding_group_get_type");
    }
    public static long g_binding_group_get_type () {
        var mh$ = g_binding_group_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_group_new$MH() {
        return RuntimeHelper.requireNonNull(constants$486.g_binding_group_new$MH,"g_binding_group_new");
    }
    public static MemoryAddress g_binding_group_new () {
        var mh$ = g_binding_group_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_group_dup_source$MH() {
        return RuntimeHelper.requireNonNull(constants$486.g_binding_group_dup_source$MH,"g_binding_group_dup_source");
    }
    public static MemoryAddress g_binding_group_dup_source ( Addressable self) {
        var mh$ = g_binding_group_dup_source$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_group_set_source$MH() {
        return RuntimeHelper.requireNonNull(constants$486.g_binding_group_set_source$MH,"g_binding_group_set_source");
    }
    public static void g_binding_group_set_source ( Addressable self,  Addressable source) {
        var mh$ = g_binding_group_set_source$MH();
        try {
            mh$.invokeExact(self, source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_group_bind$MH() {
        return RuntimeHelper.requireNonNull(constants$486.g_binding_group_bind$MH,"g_binding_group_bind");
    }
    public static void g_binding_group_bind ( Addressable self,  Addressable source_property,  Addressable target,  Addressable target_property,  int flags) {
        var mh$ = g_binding_group_bind$MH();
        try {
            mh$.invokeExact(self, source_property, target, target_property, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_group_bind_full$MH() {
        return RuntimeHelper.requireNonNull(constants$486.g_binding_group_bind_full$MH,"g_binding_group_bind_full");
    }
    public static void g_binding_group_bind_full ( Addressable self,  Addressable source_property,  Addressable target,  Addressable target_property,  int flags,  Addressable transform_to,  Addressable transform_from,  Addressable user_data,  Addressable user_data_destroy) {
        var mh$ = g_binding_group_bind_full$MH();
        try {
            mh$.invokeExact(self, source_property, target, target_property, flags, transform_to, transform_from, user_data, user_data_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_binding_group_bind_with_closures$MH() {
        return RuntimeHelper.requireNonNull(constants$486.g_binding_group_bind_with_closures$MH,"g_binding_group_bind_with_closures");
    }
    public static void g_binding_group_bind_with_closures ( Addressable self,  Addressable source_property,  Addressable target,  Addressable target_property,  int flags,  Addressable transform_to,  Addressable transform_from) {
        var mh$ = g_binding_group_bind_with_closures$MH();
        try {
            mh$.invokeExact(self, source_property, target, target_property, flags, transform_to, transform_from);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_enum_get_value$MH() {
        return RuntimeHelper.requireNonNull(constants$487.g_enum_get_value$MH,"g_enum_get_value");
    }
    public static MemoryAddress g_enum_get_value ( Addressable enum_class,  int value) {
        var mh$ = g_enum_get_value$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(enum_class, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_enum_get_value_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$487.g_enum_get_value_by_name$MH,"g_enum_get_value_by_name");
    }
    public static MemoryAddress g_enum_get_value_by_name ( Addressable enum_class,  Addressable name) {
        var mh$ = g_enum_get_value_by_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(enum_class, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_enum_get_value_by_nick$MH() {
        return RuntimeHelper.requireNonNull(constants$487.g_enum_get_value_by_nick$MH,"g_enum_get_value_by_nick");
    }
    public static MemoryAddress g_enum_get_value_by_nick ( Addressable enum_class,  Addressable nick) {
        var mh$ = g_enum_get_value_by_nick$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(enum_class, nick);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_flags_get_first_value$MH() {
        return RuntimeHelper.requireNonNull(constants$487.g_flags_get_first_value$MH,"g_flags_get_first_value");
    }
    public static MemoryAddress g_flags_get_first_value ( Addressable flags_class,  int value) {
        var mh$ = g_flags_get_first_value$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(flags_class, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_flags_get_value_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$487.g_flags_get_value_by_name$MH,"g_flags_get_value_by_name");
    }
    public static MemoryAddress g_flags_get_value_by_name ( Addressable flags_class,  Addressable name) {
        var mh$ = g_flags_get_value_by_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(flags_class, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_flags_get_value_by_nick$MH() {
        return RuntimeHelper.requireNonNull(constants$487.g_flags_get_value_by_nick$MH,"g_flags_get_value_by_nick");
    }
    public static MemoryAddress g_flags_get_value_by_nick ( Addressable flags_class,  Addressable nick) {
        var mh$ = g_flags_get_value_by_nick$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(flags_class, nick);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_enum_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$488.g_enum_to_string$MH,"g_enum_to_string");
    }
    public static MemoryAddress g_enum_to_string ( long g_enum_type,  int value) {
        var mh$ = g_enum_to_string$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(g_enum_type, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_flags_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$488.g_flags_to_string$MH,"g_flags_to_string");
    }
    public static MemoryAddress g_flags_to_string ( long flags_type,  int value) {
        var mh$ = g_flags_to_string$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(flags_type, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_enum$MH() {
        return RuntimeHelper.requireNonNull(constants$488.g_value_set_enum$MH,"g_value_set_enum");
    }
    public static void g_value_set_enum ( Addressable value,  int v_enum) {
        var mh$ = g_value_set_enum$MH();
        try {
            mh$.invokeExact(value, v_enum);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_enum$MH() {
        return RuntimeHelper.requireNonNull(constants$488.g_value_get_enum$MH,"g_value_get_enum");
    }
    public static int g_value_get_enum ( Addressable value) {
        var mh$ = g_value_get_enum$MH();
        try {
            return (int)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$488.g_value_set_flags$MH,"g_value_set_flags");
    }
    public static void g_value_set_flags ( Addressable value,  int v_flags) {
        var mh$ = g_value_set_flags$MH();
        try {
            mh$.invokeExact(value, v_flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$488.g_value_get_flags$MH,"g_value_get_flags");
    }
    public static int g_value_get_flags ( Addressable value) {
        var mh$ = g_value_get_flags$MH();
        try {
            return (int)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_enum_register_static$MH() {
        return RuntimeHelper.requireNonNull(constants$489.g_enum_register_static$MH,"g_enum_register_static");
    }
    public static long g_enum_register_static ( Addressable name,  Addressable const_static_values) {
        var mh$ = g_enum_register_static$MH();
        try {
            return (long)mh$.invokeExact(name, const_static_values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_flags_register_static$MH() {
        return RuntimeHelper.requireNonNull(constants$489.g_flags_register_static$MH,"g_flags_register_static");
    }
    public static long g_flags_register_static ( Addressable name,  Addressable const_static_values) {
        var mh$ = g_flags_register_static$MH();
        try {
            return (long)mh$.invokeExact(name, const_static_values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_enum_complete_type_info$MH() {
        return RuntimeHelper.requireNonNull(constants$489.g_enum_complete_type_info$MH,"g_enum_complete_type_info");
    }
    public static void g_enum_complete_type_info ( long g_enum_type,  Addressable info,  Addressable const_values) {
        var mh$ = g_enum_complete_type_info$MH();
        try {
            mh$.invokeExact(g_enum_type, info, const_values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_flags_complete_type_info$MH() {
        return RuntimeHelper.requireNonNull(constants$489.g_flags_complete_type_info$MH,"g_flags_complete_type_info");
    }
    public static void g_flags_complete_type_info ( long g_flags_type,  Addressable info,  Addressable const_values) {
        var mh$ = g_flags_complete_type_info$MH();
        try {
            mh$.invokeExact(g_flags_type, info, const_values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unicode_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$489.g_unicode_type_get_type$MH,"g_unicode_type_get_type");
    }
    public static long g_unicode_type_get_type () {
        var mh$ = g_unicode_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unicode_break_type_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$489.g_unicode_break_type_get_type$MH,"g_unicode_break_type_get_type");
    }
    public static long g_unicode_break_type_get_type () {
        var mh$ = g_unicode_break_type_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unicode_script_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$490.g_unicode_script_get_type$MH,"g_unicode_script_get_type");
    }
    public static long g_unicode_script_get_type () {
        var mh$ = g_unicode_script_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_normalize_mode_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$490.g_normalize_mode_get_type$MH,"g_normalize_mode_get_type");
    }
    public static long g_normalize_mode_get_type () {
        var mh$ = g_normalize_mode_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_char$MH() {
        return RuntimeHelper.requireNonNull(constants$490.g_param_spec_char$MH,"g_param_spec_char");
    }
    public static MemoryAddress g_param_spec_char ( Addressable name,  Addressable nick,  Addressable blurb,  byte minimum,  byte maximum,  byte default_value,  int flags) {
        var mh$ = g_param_spec_char$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(name, nick, blurb, minimum, maximum, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_uchar$MH() {
        return RuntimeHelper.requireNonNull(constants$490.g_param_spec_uchar$MH,"g_param_spec_uchar");
    }
    public static MemoryAddress g_param_spec_uchar ( Addressable name,  Addressable nick,  Addressable blurb,  byte minimum,  byte maximum,  byte default_value,  int flags) {
        var mh$ = g_param_spec_uchar$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(name, nick, blurb, minimum, maximum, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_boolean$MH() {
        return RuntimeHelper.requireNonNull(constants$490.g_param_spec_boolean$MH,"g_param_spec_boolean");
    }
    public static MemoryAddress g_param_spec_boolean ( Addressable name,  Addressable nick,  Addressable blurb,  int default_value,  int flags) {
        var mh$ = g_param_spec_boolean$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(name, nick, blurb, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_int$MH() {
        return RuntimeHelper.requireNonNull(constants$490.g_param_spec_int$MH,"g_param_spec_int");
    }
    public static MemoryAddress g_param_spec_int ( Addressable name,  Addressable nick,  Addressable blurb,  int minimum,  int maximum,  int default_value,  int flags) {
        var mh$ = g_param_spec_int$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(name, nick, blurb, minimum, maximum, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_uint$MH() {
        return RuntimeHelper.requireNonNull(constants$491.g_param_spec_uint$MH,"g_param_spec_uint");
    }
    public static MemoryAddress g_param_spec_uint ( Addressable name,  Addressable nick,  Addressable blurb,  int minimum,  int maximum,  int default_value,  int flags) {
        var mh$ = g_param_spec_uint$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(name, nick, blurb, minimum, maximum, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_long$MH() {
        return RuntimeHelper.requireNonNull(constants$491.g_param_spec_long$MH,"g_param_spec_long");
    }
    public static MemoryAddress g_param_spec_long ( Addressable name,  Addressable nick,  Addressable blurb,  long minimum,  long maximum,  long default_value,  int flags) {
        var mh$ = g_param_spec_long$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(name, nick, blurb, minimum, maximum, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_ulong$MH() {
        return RuntimeHelper.requireNonNull(constants$491.g_param_spec_ulong$MH,"g_param_spec_ulong");
    }
    public static MemoryAddress g_param_spec_ulong ( Addressable name,  Addressable nick,  Addressable blurb,  long minimum,  long maximum,  long default_value,  int flags) {
        var mh$ = g_param_spec_ulong$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(name, nick, blurb, minimum, maximum, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_int64$MH() {
        return RuntimeHelper.requireNonNull(constants$491.g_param_spec_int64$MH,"g_param_spec_int64");
    }
    public static MemoryAddress g_param_spec_int64 ( Addressable name,  Addressable nick,  Addressable blurb,  long minimum,  long maximum,  long default_value,  int flags) {
        var mh$ = g_param_spec_int64$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(name, nick, blurb, minimum, maximum, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_uint64$MH() {
        return RuntimeHelper.requireNonNull(constants$491.g_param_spec_uint64$MH,"g_param_spec_uint64");
    }
    public static MemoryAddress g_param_spec_uint64 ( Addressable name,  Addressable nick,  Addressable blurb,  long minimum,  long maximum,  long default_value,  int flags) {
        var mh$ = g_param_spec_uint64$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(name, nick, blurb, minimum, maximum, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_unichar$MH() {
        return RuntimeHelper.requireNonNull(constants$491.g_param_spec_unichar$MH,"g_param_spec_unichar");
    }
    public static MemoryAddress g_param_spec_unichar ( Addressable name,  Addressable nick,  Addressable blurb,  int default_value,  int flags) {
        var mh$ = g_param_spec_unichar$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(name, nick, blurb, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_enum$MH() {
        return RuntimeHelper.requireNonNull(constants$492.g_param_spec_enum$MH,"g_param_spec_enum");
    }
    public static MemoryAddress g_param_spec_enum ( Addressable name,  Addressable nick,  Addressable blurb,  long enum_type,  int default_value,  int flags) {
        var mh$ = g_param_spec_enum$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(name, nick, blurb, enum_type, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$492.g_param_spec_flags$MH,"g_param_spec_flags");
    }
    public static MemoryAddress g_param_spec_flags ( Addressable name,  Addressable nick,  Addressable blurb,  long flags_type,  int default_value,  int flags) {
        var mh$ = g_param_spec_flags$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(name, nick, blurb, flags_type, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_float$MH() {
        return RuntimeHelper.requireNonNull(constants$492.g_param_spec_float$MH,"g_param_spec_float");
    }
    public static MemoryAddress g_param_spec_float ( Addressable name,  Addressable nick,  Addressable blurb,  float minimum,  float maximum,  float default_value,  int flags) {
        var mh$ = g_param_spec_float$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(name, nick, blurb, minimum, maximum, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_double$MH() {
        return RuntimeHelper.requireNonNull(constants$492.g_param_spec_double$MH,"g_param_spec_double");
    }
    public static MemoryAddress g_param_spec_double ( Addressable name,  Addressable nick,  Addressable blurb,  double minimum,  double maximum,  double default_value,  int flags) {
        var mh$ = g_param_spec_double$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(name, nick, blurb, minimum, maximum, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_string$MH() {
        return RuntimeHelper.requireNonNull(constants$492.g_param_spec_string$MH,"g_param_spec_string");
    }
    public static MemoryAddress g_param_spec_string ( Addressable name,  Addressable nick,  Addressable blurb,  Addressable default_value,  int flags) {
        var mh$ = g_param_spec_string$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(name, nick, blurb, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_param$MH() {
        return RuntimeHelper.requireNonNull(constants$492.g_param_spec_param$MH,"g_param_spec_param");
    }
    public static MemoryAddress g_param_spec_param ( Addressable name,  Addressable nick,  Addressable blurb,  long param_type,  int flags) {
        var mh$ = g_param_spec_param$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(name, nick, blurb, param_type, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_boxed$MH() {
        return RuntimeHelper.requireNonNull(constants$493.g_param_spec_boxed$MH,"g_param_spec_boxed");
    }
    public static MemoryAddress g_param_spec_boxed ( Addressable name,  Addressable nick,  Addressable blurb,  long boxed_type,  int flags) {
        var mh$ = g_param_spec_boxed$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(name, nick, blurb, boxed_type, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$493.g_param_spec_pointer$MH,"g_param_spec_pointer");
    }
    public static MemoryAddress g_param_spec_pointer ( Addressable name,  Addressable nick,  Addressable blurb,  int flags) {
        var mh$ = g_param_spec_pointer$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(name, nick, blurb, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_value_array$MH() {
        return RuntimeHelper.requireNonNull(constants$493.g_param_spec_value_array$MH,"g_param_spec_value_array");
    }
    public static MemoryAddress g_param_spec_value_array ( Addressable name,  Addressable nick,  Addressable blurb,  Addressable element_spec,  int flags) {
        var mh$ = g_param_spec_value_array$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(name, nick, blurb, element_spec, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_object$MH() {
        return RuntimeHelper.requireNonNull(constants$493.g_param_spec_object$MH,"g_param_spec_object");
    }
    public static MemoryAddress g_param_spec_object ( Addressable name,  Addressable nick,  Addressable blurb,  long object_type,  int flags) {
        var mh$ = g_param_spec_object$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(name, nick, blurb, object_type, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_override$MH() {
        return RuntimeHelper.requireNonNull(constants$493.g_param_spec_override$MH,"g_param_spec_override");
    }
    public static MemoryAddress g_param_spec_override ( Addressable name,  Addressable overridden) {
        var mh$ = g_param_spec_override$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(name, overridden);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_gtype$MH() {
        return RuntimeHelper.requireNonNull(constants$493.g_param_spec_gtype$MH,"g_param_spec_gtype");
    }
    public static MemoryAddress g_param_spec_gtype ( Addressable name,  Addressable nick,  Addressable blurb,  long is_a_type,  int flags) {
        var mh$ = g_param_spec_gtype$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(name, nick, blurb, is_a_type, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_variant$MH() {
        return RuntimeHelper.requireNonNull(constants$494.g_param_spec_variant$MH,"g_param_spec_variant");
    }
    public static MemoryAddress g_param_spec_variant ( Addressable name,  Addressable nick,  Addressable blurb,  Addressable type,  Addressable default_value,  int flags) {
        var mh$ = g_param_spec_variant$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(name, nick, blurb, type, default_value, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout g_param_spec_types$LAYOUT() {
        return constants$494.g_param_spec_types$LAYOUT;
    }
    public static VarHandle g_param_spec_types$VH() {
        return constants$494.g_param_spec_types$VH;
    }
    public static MemorySegment g_param_spec_types$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$494.g_param_spec_types$SEGMENT,"g_param_spec_types");
    }
    public static MemoryAddress g_param_spec_types$get() {
        return (java.lang.foreign.MemoryAddress) constants$494.g_param_spec_types$VH.get(RuntimeHelper.requireNonNull(constants$494.g_param_spec_types$SEGMENT, "g_param_spec_types"));
    }
    public static void g_param_spec_types$set( MemoryAddress x) {
        constants$494.g_param_spec_types$VH.set(RuntimeHelper.requireNonNull(constants$494.g_param_spec_types$SEGMENT, "g_param_spec_types"), x);
    }
    public static MethodHandle g_signal_group_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$494.g_signal_group_get_type$MH,"g_signal_group_get_type");
    }
    public static long g_signal_group_get_type () {
        var mh$ = g_signal_group_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_group_new$MH() {
        return RuntimeHelper.requireNonNull(constants$494.g_signal_group_new$MH,"g_signal_group_new");
    }
    public static MemoryAddress g_signal_group_new ( long target_type) {
        var mh$ = g_signal_group_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(target_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_group_set_target$MH() {
        return RuntimeHelper.requireNonNull(constants$494.g_signal_group_set_target$MH,"g_signal_group_set_target");
    }
    public static void g_signal_group_set_target ( Addressable self,  Addressable target) {
        var mh$ = g_signal_group_set_target$MH();
        try {
            mh$.invokeExact(self, target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_group_dup_target$MH() {
        return RuntimeHelper.requireNonNull(constants$494.g_signal_group_dup_target$MH,"g_signal_group_dup_target");
    }
    public static MemoryAddress g_signal_group_dup_target ( Addressable self) {
        var mh$ = g_signal_group_dup_target$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_group_block$MH() {
        return RuntimeHelper.requireNonNull(constants$495.g_signal_group_block$MH,"g_signal_group_block");
    }
    public static void g_signal_group_block ( Addressable self) {
        var mh$ = g_signal_group_block$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_group_unblock$MH() {
        return RuntimeHelper.requireNonNull(constants$495.g_signal_group_unblock$MH,"g_signal_group_unblock");
    }
    public static void g_signal_group_unblock ( Addressable self) {
        var mh$ = g_signal_group_unblock$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_group_connect_object$MH() {
        return RuntimeHelper.requireNonNull(constants$495.g_signal_group_connect_object$MH,"g_signal_group_connect_object");
    }
    public static void g_signal_group_connect_object ( Addressable self,  Addressable detailed_signal,  Addressable c_handler,  Addressable object,  int flags) {
        var mh$ = g_signal_group_connect_object$MH();
        try {
            mh$.invokeExact(self, detailed_signal, c_handler, object, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_group_connect_data$MH() {
        return RuntimeHelper.requireNonNull(constants$495.g_signal_group_connect_data$MH,"g_signal_group_connect_data");
    }
    public static void g_signal_group_connect_data ( Addressable self,  Addressable detailed_signal,  Addressable c_handler,  Addressable data,  Addressable notify,  int flags) {
        var mh$ = g_signal_group_connect_data$MH();
        try {
            mh$.invokeExact(self, detailed_signal, c_handler, data, notify, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_group_connect$MH() {
        return RuntimeHelper.requireNonNull(constants$495.g_signal_group_connect$MH,"g_signal_group_connect");
    }
    public static void g_signal_group_connect ( Addressable self,  Addressable detailed_signal,  Addressable c_handler,  Addressable data) {
        var mh$ = g_signal_group_connect$MH();
        try {
            mh$.invokeExact(self, detailed_signal, c_handler, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_group_connect_after$MH() {
        return RuntimeHelper.requireNonNull(constants$495.g_signal_group_connect_after$MH,"g_signal_group_connect_after");
    }
    public static void g_signal_group_connect_after ( Addressable self,  Addressable detailed_signal,  Addressable c_handler,  Addressable data) {
        var mh$ = g_signal_group_connect_after$MH();
        try {
            mh$.invokeExact(self, detailed_signal, c_handler, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_group_connect_swapped$MH() {
        return RuntimeHelper.requireNonNull(constants$496.g_signal_group_connect_swapped$MH,"g_signal_group_connect_swapped");
    }
    public static void g_signal_group_connect_swapped ( Addressable self,  Addressable detailed_signal,  Addressable c_handler,  Addressable data) {
        var mh$ = g_signal_group_connect_swapped$MH();
        try {
            mh$.invokeExact(self, detailed_signal, c_handler, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_set_closure$MH() {
        return RuntimeHelper.requireNonNull(constants$496.g_source_set_closure$MH,"g_source_set_closure");
    }
    public static void g_source_set_closure ( Addressable source,  Addressable closure) {
        var mh$ = g_source_set_closure$MH();
        try {
            mh$.invokeExact(source, closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_set_dummy_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$496.g_source_set_dummy_callback$MH,"g_source_set_dummy_callback");
    }
    public static void g_source_set_dummy_callback ( Addressable source) {
        var mh$ = g_source_set_dummy_callback$MH();
        try {
            mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTypeModule_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTypeModule_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTypeModule_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTypeModule_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTypeModule$MH() {
        return RuntimeHelper.requireNonNull(constants$496.glib_autoptr_clear_GTypeModule$MH,"glib_autoptr_clear_GTypeModule");
    }
    public static void glib_autoptr_clear_GTypeModule ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GTypeModule$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTypeModule$MH() {
        return RuntimeHelper.requireNonNull(constants$496.glib_autoptr_cleanup_GTypeModule$MH,"glib_autoptr_cleanup_GTypeModule");
    }
    public static void glib_autoptr_cleanup_GTypeModule ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GTypeModule$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTypeModule$MH() {
        return RuntimeHelper.requireNonNull(constants$496.glib_listautoptr_cleanup_GTypeModule$MH,"glib_listautoptr_cleanup_GTypeModule");
    }
    public static void glib_listautoptr_cleanup_GTypeModule ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GTypeModule$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTypeModule$MH() {
        return RuntimeHelper.requireNonNull(constants$497.glib_slistautoptr_cleanup_GTypeModule$MH,"glib_slistautoptr_cleanup_GTypeModule");
    }
    public static void glib_slistautoptr_cleanup_GTypeModule ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GTypeModule$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTypeModule$MH() {
        return RuntimeHelper.requireNonNull(constants$497.glib_queueautoptr_cleanup_GTypeModule$MH,"glib_queueautoptr_cleanup_GTypeModule");
    }
    public static void glib_queueautoptr_cleanup_GTypeModule ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GTypeModule$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_module_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$497.g_type_module_get_type$MH,"g_type_module_get_type");
    }
    public static long g_type_module_get_type () {
        var mh$ = g_type_module_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_module_use$MH() {
        return RuntimeHelper.requireNonNull(constants$497.g_type_module_use$MH,"g_type_module_use");
    }
    public static int g_type_module_use ( Addressable module) {
        var mh$ = g_type_module_use$MH();
        try {
            return (int)mh$.invokeExact(module);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_module_unuse$MH() {
        return RuntimeHelper.requireNonNull(constants$497.g_type_module_unuse$MH,"g_type_module_unuse");
    }
    public static void g_type_module_unuse ( Addressable module) {
        var mh$ = g_type_module_unuse$MH();
        try {
            mh$.invokeExact(module);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_module_set_name$MH() {
        return RuntimeHelper.requireNonNull(constants$497.g_type_module_set_name$MH,"g_type_module_set_name");
    }
    public static void g_type_module_set_name ( Addressable module,  Addressable name) {
        var mh$ = g_type_module_set_name$MH();
        try {
            mh$.invokeExact(module, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_module_register_type$MH() {
        return RuntimeHelper.requireNonNull(constants$498.g_type_module_register_type$MH,"g_type_module_register_type");
    }
    public static long g_type_module_register_type ( Addressable module,  long parent_type,  Addressable type_name,  Addressable type_info,  int flags) {
        var mh$ = g_type_module_register_type$MH();
        try {
            return (long)mh$.invokeExact(module, parent_type, type_name, type_info, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_module_add_interface$MH() {
        return RuntimeHelper.requireNonNull(constants$498.g_type_module_add_interface$MH,"g_type_module_add_interface");
    }
    public static void g_type_module_add_interface ( Addressable module,  long instance_type,  long interface_type,  Addressable interface_info) {
        var mh$ = g_type_module_add_interface$MH();
        try {
            mh$.invokeExact(module, instance_type, interface_type, interface_info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_module_register_enum$MH() {
        return RuntimeHelper.requireNonNull(constants$498.g_type_module_register_enum$MH,"g_type_module_register_enum");
    }
    public static long g_type_module_register_enum ( Addressable module,  Addressable name,  Addressable const_static_values) {
        var mh$ = g_type_module_register_enum$MH();
        try {
            return (long)mh$.invokeExact(module, name, const_static_values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_module_register_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$498.g_type_module_register_flags$MH,"g_type_module_register_flags");
    }
    public static long g_type_module_register_flags ( Addressable module,  Addressable name,  Addressable const_static_values) {
        var mh$ = g_type_module_register_flags$MH();
        try {
            return (long)mh$.invokeExact(module, name, const_static_values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_plugin_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$500.g_type_plugin_get_type$MH,"g_type_plugin_get_type");
    }
    public static long g_type_plugin_get_type () {
        var mh$ = g_type_plugin_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_plugin_use$MH() {
        return RuntimeHelper.requireNonNull(constants$500.g_type_plugin_use$MH,"g_type_plugin_use");
    }
    public static void g_type_plugin_use ( Addressable plugin) {
        var mh$ = g_type_plugin_use$MH();
        try {
            mh$.invokeExact(plugin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_plugin_unuse$MH() {
        return RuntimeHelper.requireNonNull(constants$500.g_type_plugin_unuse$MH,"g_type_plugin_unuse");
    }
    public static void g_type_plugin_unuse ( Addressable plugin) {
        var mh$ = g_type_plugin_unuse$MH();
        try {
            mh$.invokeExact(plugin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_plugin_complete_type_info$MH() {
        return RuntimeHelper.requireNonNull(constants$500.g_type_plugin_complete_type_info$MH,"g_type_plugin_complete_type_info");
    }
    public static void g_type_plugin_complete_type_info ( Addressable plugin,  long g_type,  Addressable info,  Addressable value_table) {
        var mh$ = g_type_plugin_complete_type_info$MH();
        try {
            mh$.invokeExact(plugin, g_type, info, value_table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_plugin_complete_interface_info$MH() {
        return RuntimeHelper.requireNonNull(constants$500.g_type_plugin_complete_interface_info$MH,"g_type_plugin_complete_interface_info");
    }
    public static void g_type_plugin_complete_interface_info ( Addressable plugin,  long instance_type,  long interface_type,  Addressable info) {
        var mh$ = g_type_plugin_complete_interface_info$MH();
        try {
            mh$.invokeExact(plugin, instance_type, interface_type, info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_array_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$500.g_value_array_get_type$MH,"g_value_array_get_type");
    }
    public static long g_value_array_get_type () {
        var mh$ = g_value_array_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_array_get_nth$MH() {
        return RuntimeHelper.requireNonNull(constants$501.g_value_array_get_nth$MH,"g_value_array_get_nth");
    }
    public static MemoryAddress g_value_array_get_nth ( Addressable value_array,  int index_) {
        var mh$ = g_value_array_get_nth$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value_array, index_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_array_new$MH() {
        return RuntimeHelper.requireNonNull(constants$501.g_value_array_new$MH,"g_value_array_new");
    }
    public static MemoryAddress g_value_array_new ( int n_prealloced) {
        var mh$ = g_value_array_new$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(n_prealloced);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_array_free$MH() {
        return RuntimeHelper.requireNonNull(constants$501.g_value_array_free$MH,"g_value_array_free");
    }
    public static void g_value_array_free ( Addressable value_array) {
        var mh$ = g_value_array_free$MH();
        try {
            mh$.invokeExact(value_array);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_array_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$501.g_value_array_copy$MH,"g_value_array_copy");
    }
    public static MemoryAddress g_value_array_copy ( Addressable value_array) {
        var mh$ = g_value_array_copy$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value_array);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_array_prepend$MH() {
        return RuntimeHelper.requireNonNull(constants$501.g_value_array_prepend$MH,"g_value_array_prepend");
    }
    public static MemoryAddress g_value_array_prepend ( Addressable value_array,  Addressable value) {
        var mh$ = g_value_array_prepend$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value_array, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_array_append$MH() {
        return RuntimeHelper.requireNonNull(constants$501.g_value_array_append$MH,"g_value_array_append");
    }
    public static MemoryAddress g_value_array_append ( Addressable value_array,  Addressable value) {
        var mh$ = g_value_array_append$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value_array, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_array_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$502.g_value_array_insert$MH,"g_value_array_insert");
    }
    public static MemoryAddress g_value_array_insert ( Addressable value_array,  int index_,  Addressable value) {
        var mh$ = g_value_array_insert$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value_array, index_, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_array_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$502.g_value_array_remove$MH,"g_value_array_remove");
    }
    public static MemoryAddress g_value_array_remove ( Addressable value_array,  int index_) {
        var mh$ = g_value_array_remove$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value_array, index_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_array_sort$MH() {
        return RuntimeHelper.requireNonNull(constants$502.g_value_array_sort$MH,"g_value_array_sort");
    }
    public static MemoryAddress g_value_array_sort ( Addressable value_array,  Addressable compare_func) {
        var mh$ = g_value_array_sort$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value_array, compare_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_array_sort_with_data$MH() {
        return RuntimeHelper.requireNonNull(constants$502.g_value_array_sort_with_data$MH,"g_value_array_sort_with_data");
    }
    public static MemoryAddress g_value_array_sort_with_data ( Addressable value_array,  Addressable compare_func,  Addressable user_data) {
        var mh$ = g_value_array_sort_with_data$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value_array, compare_func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_char$MH() {
        return RuntimeHelper.requireNonNull(constants$502.g_value_set_char$MH,"g_value_set_char");
    }
    public static void g_value_set_char ( Addressable value,  byte v_char) {
        var mh$ = g_value_set_char$MH();
        try {
            mh$.invokeExact(value, v_char);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_char$MH() {
        return RuntimeHelper.requireNonNull(constants$502.g_value_get_char$MH,"g_value_get_char");
    }
    public static byte g_value_get_char ( Addressable value) {
        var mh$ = g_value_get_char$MH();
        try {
            return (byte)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_schar$MH() {
        return RuntimeHelper.requireNonNull(constants$503.g_value_set_schar$MH,"g_value_set_schar");
    }
    public static void g_value_set_schar ( Addressable value,  byte v_char) {
        var mh$ = g_value_set_schar$MH();
        try {
            mh$.invokeExact(value, v_char);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_schar$MH() {
        return RuntimeHelper.requireNonNull(constants$503.g_value_get_schar$MH,"g_value_get_schar");
    }
    public static byte g_value_get_schar ( Addressable value) {
        var mh$ = g_value_get_schar$MH();
        try {
            return (byte)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_uchar$MH() {
        return RuntimeHelper.requireNonNull(constants$503.g_value_set_uchar$MH,"g_value_set_uchar");
    }
    public static void g_value_set_uchar ( Addressable value,  byte v_uchar) {
        var mh$ = g_value_set_uchar$MH();
        try {
            mh$.invokeExact(value, v_uchar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_uchar$MH() {
        return RuntimeHelper.requireNonNull(constants$503.g_value_get_uchar$MH,"g_value_get_uchar");
    }
    public static byte g_value_get_uchar ( Addressable value) {
        var mh$ = g_value_get_uchar$MH();
        try {
            return (byte)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_boolean$MH() {
        return RuntimeHelper.requireNonNull(constants$503.g_value_set_boolean$MH,"g_value_set_boolean");
    }
    public static void g_value_set_boolean ( Addressable value,  int v_boolean) {
        var mh$ = g_value_set_boolean$MH();
        try {
            mh$.invokeExact(value, v_boolean);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_boolean$MH() {
        return RuntimeHelper.requireNonNull(constants$503.g_value_get_boolean$MH,"g_value_get_boolean");
    }
    public static int g_value_get_boolean ( Addressable value) {
        var mh$ = g_value_get_boolean$MH();
        try {
            return (int)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_int$MH() {
        return RuntimeHelper.requireNonNull(constants$504.g_value_set_int$MH,"g_value_set_int");
    }
    public static void g_value_set_int ( Addressable value,  int v_int) {
        var mh$ = g_value_set_int$MH();
        try {
            mh$.invokeExact(value, v_int);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_int$MH() {
        return RuntimeHelper.requireNonNull(constants$504.g_value_get_int$MH,"g_value_get_int");
    }
    public static int g_value_get_int ( Addressable value) {
        var mh$ = g_value_get_int$MH();
        try {
            return (int)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_uint$MH() {
        return RuntimeHelper.requireNonNull(constants$504.g_value_set_uint$MH,"g_value_set_uint");
    }
    public static void g_value_set_uint ( Addressable value,  int v_uint) {
        var mh$ = g_value_set_uint$MH();
        try {
            mh$.invokeExact(value, v_uint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_uint$MH() {
        return RuntimeHelper.requireNonNull(constants$504.g_value_get_uint$MH,"g_value_get_uint");
    }
    public static int g_value_get_uint ( Addressable value) {
        var mh$ = g_value_get_uint$MH();
        try {
            return (int)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_long$MH() {
        return RuntimeHelper.requireNonNull(constants$504.g_value_set_long$MH,"g_value_set_long");
    }
    public static void g_value_set_long ( Addressable value,  long v_long) {
        var mh$ = g_value_set_long$MH();
        try {
            mh$.invokeExact(value, v_long);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_long$MH() {
        return RuntimeHelper.requireNonNull(constants$504.g_value_get_long$MH,"g_value_get_long");
    }
    public static long g_value_get_long ( Addressable value) {
        var mh$ = g_value_get_long$MH();
        try {
            return (long)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_ulong$MH() {
        return RuntimeHelper.requireNonNull(constants$505.g_value_set_ulong$MH,"g_value_set_ulong");
    }
    public static void g_value_set_ulong ( Addressable value,  long v_ulong) {
        var mh$ = g_value_set_ulong$MH();
        try {
            mh$.invokeExact(value, v_ulong);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_ulong$MH() {
        return RuntimeHelper.requireNonNull(constants$505.g_value_get_ulong$MH,"g_value_get_ulong");
    }
    public static long g_value_get_ulong ( Addressable value) {
        var mh$ = g_value_get_ulong$MH();
        try {
            return (long)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_int64$MH() {
        return RuntimeHelper.requireNonNull(constants$505.g_value_set_int64$MH,"g_value_set_int64");
    }
    public static void g_value_set_int64 ( Addressable value,  long v_int64) {
        var mh$ = g_value_set_int64$MH();
        try {
            mh$.invokeExact(value, v_int64);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_int64$MH() {
        return RuntimeHelper.requireNonNull(constants$505.g_value_get_int64$MH,"g_value_get_int64");
    }
    public static long g_value_get_int64 ( Addressable value) {
        var mh$ = g_value_get_int64$MH();
        try {
            return (long)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_uint64$MH() {
        return RuntimeHelper.requireNonNull(constants$505.g_value_set_uint64$MH,"g_value_set_uint64");
    }
    public static void g_value_set_uint64 ( Addressable value,  long v_uint64) {
        var mh$ = g_value_set_uint64$MH();
        try {
            mh$.invokeExact(value, v_uint64);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_uint64$MH() {
        return RuntimeHelper.requireNonNull(constants$505.g_value_get_uint64$MH,"g_value_get_uint64");
    }
    public static long g_value_get_uint64 ( Addressable value) {
        var mh$ = g_value_get_uint64$MH();
        try {
            return (long)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_float$MH() {
        return RuntimeHelper.requireNonNull(constants$506.g_value_set_float$MH,"g_value_set_float");
    }
    public static void g_value_set_float ( Addressable value,  float v_float) {
        var mh$ = g_value_set_float$MH();
        try {
            mh$.invokeExact(value, v_float);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_float$MH() {
        return RuntimeHelper.requireNonNull(constants$506.g_value_get_float$MH,"g_value_get_float");
    }
    public static float g_value_get_float ( Addressable value) {
        var mh$ = g_value_get_float$MH();
        try {
            return (float)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_double$MH() {
        return RuntimeHelper.requireNonNull(constants$506.g_value_set_double$MH,"g_value_set_double");
    }
    public static void g_value_set_double ( Addressable value,  double v_double) {
        var mh$ = g_value_set_double$MH();
        try {
            mh$.invokeExact(value, v_double);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_double$MH() {
        return RuntimeHelper.requireNonNull(constants$506.g_value_get_double$MH,"g_value_get_double");
    }
    public static double g_value_get_double ( Addressable value) {
        var mh$ = g_value_get_double$MH();
        try {
            return (double)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_string$MH() {
        return RuntimeHelper.requireNonNull(constants$506.g_value_set_string$MH,"g_value_set_string");
    }
    public static void g_value_set_string ( Addressable value,  Addressable v_string) {
        var mh$ = g_value_set_string$MH();
        try {
            mh$.invokeExact(value, v_string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_static_string$MH() {
        return RuntimeHelper.requireNonNull(constants$506.g_value_set_static_string$MH,"g_value_set_static_string");
    }
    public static void g_value_set_static_string ( Addressable value,  Addressable v_string) {
        var mh$ = g_value_set_static_string$MH();
        try {
            mh$.invokeExact(value, v_string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_interned_string$MH() {
        return RuntimeHelper.requireNonNull(constants$507.g_value_set_interned_string$MH,"g_value_set_interned_string");
    }
    public static void g_value_set_interned_string ( Addressable value,  Addressable v_string) {
        var mh$ = g_value_set_interned_string$MH();
        try {
            mh$.invokeExact(value, v_string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_string$MH() {
        return RuntimeHelper.requireNonNull(constants$507.g_value_get_string$MH,"g_value_get_string");
    }
    public static MemoryAddress g_value_get_string ( Addressable value) {
        var mh$ = g_value_get_string$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_dup_string$MH() {
        return RuntimeHelper.requireNonNull(constants$507.g_value_dup_string$MH,"g_value_dup_string");
    }
    public static MemoryAddress g_value_dup_string ( Addressable value) {
        var mh$ = g_value_dup_string$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$507.g_value_set_pointer$MH,"g_value_set_pointer");
    }
    public static void g_value_set_pointer ( Addressable value,  Addressable v_pointer) {
        var mh$ = g_value_set_pointer$MH();
        try {
            mh$.invokeExact(value, v_pointer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$507.g_value_get_pointer$MH,"g_value_get_pointer");
    }
    public static MemoryAddress g_value_get_pointer ( Addressable value) {
        var mh$ = g_value_get_pointer$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_gtype_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$507.g_gtype_get_type$MH,"g_gtype_get_type");
    }
    public static long g_gtype_get_type () {
        var mh$ = g_gtype_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_gtype$MH() {
        return RuntimeHelper.requireNonNull(constants$508.g_value_set_gtype$MH,"g_value_set_gtype");
    }
    public static void g_value_set_gtype ( Addressable value,  long v_gtype) {
        var mh$ = g_value_set_gtype$MH();
        try {
            mh$.invokeExact(value, v_gtype);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_gtype$MH() {
        return RuntimeHelper.requireNonNull(constants$508.g_value_get_gtype$MH,"g_value_get_gtype");
    }
    public static long g_value_get_gtype ( Addressable value) {
        var mh$ = g_value_get_gtype$MH();
        try {
            return (long)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_variant$MH() {
        return RuntimeHelper.requireNonNull(constants$508.g_value_set_variant$MH,"g_value_set_variant");
    }
    public static void g_value_set_variant ( Addressable value,  Addressable variant) {
        var mh$ = g_value_set_variant$MH();
        try {
            mh$.invokeExact(value, variant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_take_variant$MH() {
        return RuntimeHelper.requireNonNull(constants$508.g_value_take_variant$MH,"g_value_take_variant");
    }
    public static void g_value_take_variant ( Addressable value,  Addressable variant) {
        var mh$ = g_value_take_variant$MH();
        try {
            mh$.invokeExact(value, variant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_variant$MH() {
        return RuntimeHelper.requireNonNull(constants$508.g_value_get_variant$MH,"g_value_get_variant");
    }
    public static MemoryAddress g_value_get_variant ( Addressable value) {
        var mh$ = g_value_get_variant$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_dup_variant$MH() {
        return RuntimeHelper.requireNonNull(constants$508.g_value_dup_variant$MH,"g_value_dup_variant");
    }
    public static MemoryAddress g_value_dup_variant ( Addressable value) {
        var mh$ = g_value_dup_variant$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_pointer_type_register_static$MH() {
        return RuntimeHelper.requireNonNull(constants$509.g_pointer_type_register_static$MH,"g_pointer_type_register_static");
    }
    public static long g_pointer_type_register_static ( Addressable name) {
        var mh$ = g_pointer_type_register_static$MH();
        try {
            return (long)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_strdup_value_contents$MH() {
        return RuntimeHelper.requireNonNull(constants$509.g_strdup_value_contents$MH,"g_strdup_value_contents");
    }
    public static MemoryAddress g_strdup_value_contents ( Addressable value) {
        var mh$ = g_strdup_value_contents$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_take_string$MH() {
        return RuntimeHelper.requireNonNull(constants$509.g_value_take_string$MH,"g_value_take_string");
    }
    public static void g_value_take_string ( Addressable value,  Addressable v_string) {
        var mh$ = g_value_take_string$MH();
        try {
            mh$.invokeExact(value, v_string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_string_take_ownership$MH() {
        return RuntimeHelper.requireNonNull(constants$509.g_value_set_string_take_ownership$MH,"g_value_set_string_take_ownership");
    }
    public static void g_value_set_string_take_ownership ( Addressable value,  Addressable v_string) {
        var mh$ = g_value_set_string_take_ownership$MH();
        try {
            mh$.invokeExact(value, v_string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress gchararray = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GClosure_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GClosure_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GClosure_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GClosure_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GClosure$MH() {
        return RuntimeHelper.requireNonNull(constants$509.glib_autoptr_clear_GClosure$MH,"glib_autoptr_clear_GClosure");
    }
    public static void glib_autoptr_clear_GClosure ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GClosure$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GClosure$MH() {
        return RuntimeHelper.requireNonNull(constants$509.glib_autoptr_cleanup_GClosure$MH,"glib_autoptr_cleanup_GClosure");
    }
    public static void glib_autoptr_cleanup_GClosure ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GClosure$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GClosure$MH() {
        return RuntimeHelper.requireNonNull(constants$510.glib_listautoptr_cleanup_GClosure$MH,"glib_listautoptr_cleanup_GClosure");
    }
    public static void glib_listautoptr_cleanup_GClosure ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GClosure$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GClosure$MH() {
        return RuntimeHelper.requireNonNull(constants$510.glib_slistautoptr_cleanup_GClosure$MH,"glib_slistautoptr_cleanup_GClosure");
    }
    public static void glib_slistautoptr_cleanup_GClosure ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GClosure$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GClosure$MH() {
        return RuntimeHelper.requireNonNull(constants$510.glib_queueautoptr_cleanup_GClosure$MH,"glib_queueautoptr_cleanup_GClosure");
    }
    public static void glib_queueautoptr_cleanup_GClosure ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GClosure$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GEnumClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GEnumClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GEnumClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GEnumClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GEnumClass$MH() {
        return RuntimeHelper.requireNonNull(constants$510.glib_autoptr_clear_GEnumClass$MH,"glib_autoptr_clear_GEnumClass");
    }
    public static void glib_autoptr_clear_GEnumClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GEnumClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GEnumClass$MH() {
        return RuntimeHelper.requireNonNull(constants$510.glib_autoptr_cleanup_GEnumClass$MH,"glib_autoptr_cleanup_GEnumClass");
    }
    public static void glib_autoptr_cleanup_GEnumClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GEnumClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GEnumClass$MH() {
        return RuntimeHelper.requireNonNull(constants$510.glib_listautoptr_cleanup_GEnumClass$MH,"glib_listautoptr_cleanup_GEnumClass");
    }
    public static void glib_listautoptr_cleanup_GEnumClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GEnumClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GEnumClass$MH() {
        return RuntimeHelper.requireNonNull(constants$511.glib_slistautoptr_cleanup_GEnumClass$MH,"glib_slistautoptr_cleanup_GEnumClass");
    }
    public static void glib_slistautoptr_cleanup_GEnumClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GEnumClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GEnumClass$MH() {
        return RuntimeHelper.requireNonNull(constants$511.glib_queueautoptr_cleanup_GEnumClass$MH,"glib_queueautoptr_cleanup_GEnumClass");
    }
    public static void glib_queueautoptr_cleanup_GEnumClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GEnumClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFlagsClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFlagsClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFlagsClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFlagsClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFlagsClass$MH() {
        return RuntimeHelper.requireNonNull(constants$511.glib_autoptr_clear_GFlagsClass$MH,"glib_autoptr_clear_GFlagsClass");
    }
    public static void glib_autoptr_clear_GFlagsClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GFlagsClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFlagsClass$MH() {
        return RuntimeHelper.requireNonNull(constants$511.glib_autoptr_cleanup_GFlagsClass$MH,"glib_autoptr_cleanup_GFlagsClass");
    }
    public static void glib_autoptr_cleanup_GFlagsClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GFlagsClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFlagsClass$MH() {
        return RuntimeHelper.requireNonNull(constants$511.glib_listautoptr_cleanup_GFlagsClass$MH,"glib_listautoptr_cleanup_GFlagsClass");
    }
    public static void glib_listautoptr_cleanup_GFlagsClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GFlagsClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFlagsClass$MH() {
        return RuntimeHelper.requireNonNull(constants$511.glib_slistautoptr_cleanup_GFlagsClass$MH,"glib_slistautoptr_cleanup_GFlagsClass");
    }
    public static void glib_slistautoptr_cleanup_GFlagsClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GFlagsClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFlagsClass$MH() {
        return RuntimeHelper.requireNonNull(constants$512.glib_queueautoptr_cleanup_GFlagsClass$MH,"glib_queueautoptr_cleanup_GFlagsClass");
    }
    public static void glib_queueautoptr_cleanup_GFlagsClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GFlagsClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GObject_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GObject_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GObject_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GObject_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GObject$MH() {
        return RuntimeHelper.requireNonNull(constants$512.glib_autoptr_clear_GObject$MH,"glib_autoptr_clear_GObject");
    }
    public static void glib_autoptr_clear_GObject ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GObject$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GObject$MH() {
        return RuntimeHelper.requireNonNull(constants$512.glib_autoptr_cleanup_GObject$MH,"glib_autoptr_cleanup_GObject");
    }
    public static void glib_autoptr_cleanup_GObject ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GObject$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GObject$MH() {
        return RuntimeHelper.requireNonNull(constants$512.glib_listautoptr_cleanup_GObject$MH,"glib_listautoptr_cleanup_GObject");
    }
    public static void glib_listautoptr_cleanup_GObject ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GObject$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GObject$MH() {
        return RuntimeHelper.requireNonNull(constants$512.glib_slistautoptr_cleanup_GObject$MH,"glib_slistautoptr_cleanup_GObject");
    }
    public static void glib_slistautoptr_cleanup_GObject ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GObject$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GObject$MH() {
        return RuntimeHelper.requireNonNull(constants$512.glib_queueautoptr_cleanup_GObject$MH,"glib_queueautoptr_cleanup_GObject");
    }
    public static void glib_queueautoptr_cleanup_GObject ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GObject$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GInitiallyUnowned_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInitiallyUnowned_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInitiallyUnowned_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInitiallyUnowned_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GInitiallyUnowned$MH() {
        return RuntimeHelper.requireNonNull(constants$513.glib_autoptr_clear_GInitiallyUnowned$MH,"glib_autoptr_clear_GInitiallyUnowned");
    }
    public static void glib_autoptr_clear_GInitiallyUnowned ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GInitiallyUnowned$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GInitiallyUnowned$MH() {
        return RuntimeHelper.requireNonNull(constants$513.glib_autoptr_cleanup_GInitiallyUnowned$MH,"glib_autoptr_cleanup_GInitiallyUnowned");
    }
    public static void glib_autoptr_cleanup_GInitiallyUnowned ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GInitiallyUnowned$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GInitiallyUnowned$MH() {
        return RuntimeHelper.requireNonNull(constants$513.glib_listautoptr_cleanup_GInitiallyUnowned$MH,"glib_listautoptr_cleanup_GInitiallyUnowned");
    }
    public static void glib_listautoptr_cleanup_GInitiallyUnowned ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GInitiallyUnowned$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GInitiallyUnowned$MH() {
        return RuntimeHelper.requireNonNull(constants$513.glib_slistautoptr_cleanup_GInitiallyUnowned$MH,"glib_slistautoptr_cleanup_GInitiallyUnowned");
    }
    public static void glib_slistautoptr_cleanup_GInitiallyUnowned ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GInitiallyUnowned$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GInitiallyUnowned$MH() {
        return RuntimeHelper.requireNonNull(constants$513.glib_queueautoptr_cleanup_GInitiallyUnowned$MH,"glib_queueautoptr_cleanup_GInitiallyUnowned");
    }
    public static void glib_queueautoptr_cleanup_GInitiallyUnowned ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GInitiallyUnowned$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GParamSpec_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GParamSpec_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GParamSpec_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GParamSpec_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GParamSpec$MH() {
        return RuntimeHelper.requireNonNull(constants$513.glib_autoptr_clear_GParamSpec$MH,"glib_autoptr_clear_GParamSpec");
    }
    public static void glib_autoptr_clear_GParamSpec ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GParamSpec$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GParamSpec$MH() {
        return RuntimeHelper.requireNonNull(constants$514.glib_autoptr_cleanup_GParamSpec$MH,"glib_autoptr_cleanup_GParamSpec");
    }
    public static void glib_autoptr_cleanup_GParamSpec ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GParamSpec$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GParamSpec$MH() {
        return RuntimeHelper.requireNonNull(constants$514.glib_listautoptr_cleanup_GParamSpec$MH,"glib_listautoptr_cleanup_GParamSpec");
    }
    public static void glib_listautoptr_cleanup_GParamSpec ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GParamSpec$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GParamSpec$MH() {
        return RuntimeHelper.requireNonNull(constants$514.glib_slistautoptr_cleanup_GParamSpec$MH,"glib_slistautoptr_cleanup_GParamSpec");
    }
    public static void glib_slistautoptr_cleanup_GParamSpec ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GParamSpec$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GParamSpec$MH() {
        return RuntimeHelper.requireNonNull(constants$514.glib_queueautoptr_cleanup_GParamSpec$MH,"glib_queueautoptr_cleanup_GParamSpec");
    }
    public static void glib_queueautoptr_cleanup_GParamSpec ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GParamSpec$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTypeClass_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTypeClass_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTypeClass_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTypeClass_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTypeClass$MH() {
        return RuntimeHelper.requireNonNull(constants$514.glib_autoptr_clear_GTypeClass$MH,"glib_autoptr_clear_GTypeClass");
    }
    public static void glib_autoptr_clear_GTypeClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_clear_GTypeClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTypeClass$MH() {
        return RuntimeHelper.requireNonNull(constants$514.glib_autoptr_cleanup_GTypeClass$MH,"glib_autoptr_cleanup_GTypeClass");
    }
    public static void glib_autoptr_cleanup_GTypeClass ( Addressable _ptr) {
        var mh$ = glib_autoptr_cleanup_GTypeClass$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTypeClass$MH() {
        return RuntimeHelper.requireNonNull(constants$515.glib_listautoptr_cleanup_GTypeClass$MH,"glib_listautoptr_cleanup_GTypeClass");
    }
    public static void glib_listautoptr_cleanup_GTypeClass ( Addressable _l) {
        var mh$ = glib_listautoptr_cleanup_GTypeClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTypeClass$MH() {
        return RuntimeHelper.requireNonNull(constants$515.glib_slistautoptr_cleanup_GTypeClass$MH,"glib_slistautoptr_cleanup_GTypeClass");
    }
    public static void glib_slistautoptr_cleanup_GTypeClass ( Addressable _l) {
        var mh$ = glib_slistautoptr_cleanup_GTypeClass$MH();
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTypeClass$MH() {
        return RuntimeHelper.requireNonNull(constants$515.glib_queueautoptr_cleanup_GTypeClass$MH,"glib_queueautoptr_cleanup_GTypeClass");
    }
    public static void glib_queueautoptr_cleanup_GTypeClass ( Addressable _q) {
        var mh$ = glib_queueautoptr_cleanup_GTypeClass$MH();
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_auto_cleanup_GValue$MH() {
        return RuntimeHelper.requireNonNull(constants$515.glib_auto_cleanup_GValue$MH,"glib_auto_cleanup_GValue");
    }
    public static void glib_auto_cleanup_GValue ( Addressable _ptr) {
        var mh$ = glib_auto_cleanup_GValue$MH();
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int G_APP_INFO_CREATE_NONE() {
        return (int)0L;
    }
    public static int G_APP_INFO_CREATE_NEEDS_TERMINAL() {
        return (int)1L;
    }
    public static int G_APP_INFO_CREATE_SUPPORTS_URIS() {
        return (int)2L;
    }
    public static int G_APP_INFO_CREATE_SUPPORTS_STARTUP_NOTIFICATION() {
        return (int)4L;
    }
    public static int G_CONVERTER_NO_FLAGS() {
        return (int)0L;
    }
    public static int G_CONVERTER_INPUT_AT_END() {
        return (int)1L;
    }
    public static int G_CONVERTER_FLUSH() {
        return (int)2L;
    }
    public static int G_CONVERTER_ERROR() {
        return (int)0L;
    }
    public static int G_CONVERTER_CONVERTED() {
        return (int)1L;
    }
    public static int G_CONVERTER_FINISHED() {
        return (int)2L;
    }
    public static int G_CONVERTER_FLUSHED() {
        return (int)3L;
    }
    public static int G_DATA_STREAM_BYTE_ORDER_BIG_ENDIAN() {
        return (int)0L;
    }
    public static int G_DATA_STREAM_BYTE_ORDER_LITTLE_ENDIAN() {
        return (int)1L;
    }
    public static int G_DATA_STREAM_BYTE_ORDER_HOST_ENDIAN() {
        return (int)2L;
    }
    public static int G_DATA_STREAM_NEWLINE_TYPE_LF() {
        return (int)0L;
    }
    public static int G_DATA_STREAM_NEWLINE_TYPE_CR() {
        return (int)1L;
    }
    public static int G_DATA_STREAM_NEWLINE_TYPE_CR_LF() {
        return (int)2L;
    }
    public static int G_DATA_STREAM_NEWLINE_TYPE_ANY() {
        return (int)3L;
    }
    public static int G_FILE_ATTRIBUTE_TYPE_INVALID() {
        return (int)0L;
    }
    public static int G_FILE_ATTRIBUTE_TYPE_STRING() {
        return (int)1L;
    }
    public static int G_FILE_ATTRIBUTE_TYPE_BYTE_STRING() {
        return (int)2L;
    }
    public static int G_FILE_ATTRIBUTE_TYPE_BOOLEAN() {
        return (int)3L;
    }
    public static int G_FILE_ATTRIBUTE_TYPE_UINT32() {
        return (int)4L;
    }
    public static int G_FILE_ATTRIBUTE_TYPE_INT32() {
        return (int)5L;
    }
    public static int G_FILE_ATTRIBUTE_TYPE_UINT64() {
        return (int)6L;
    }
    public static int G_FILE_ATTRIBUTE_TYPE_INT64() {
        return (int)7L;
    }
    public static int G_FILE_ATTRIBUTE_TYPE_OBJECT() {
        return (int)8L;
    }
    public static int G_FILE_ATTRIBUTE_TYPE_STRINGV() {
        return (int)9L;
    }
    public static int G_FILE_ATTRIBUTE_INFO_NONE() {
        return (int)0L;
    }
    public static int G_FILE_ATTRIBUTE_INFO_COPY_WITH_FILE() {
        return (int)1L;
    }
    public static int G_FILE_ATTRIBUTE_INFO_COPY_WHEN_MOVED() {
        return (int)2L;
    }
    public static int G_FILE_ATTRIBUTE_STATUS_UNSET() {
        return (int)0L;
    }
    public static int G_FILE_ATTRIBUTE_STATUS_SET() {
        return (int)1L;
    }
    public static int G_FILE_ATTRIBUTE_STATUS_ERROR_SETTING() {
        return (int)2L;
    }
    public static int G_FILE_QUERY_INFO_NONE() {
        return (int)0L;
    }
    public static int G_FILE_QUERY_INFO_NOFOLLOW_SYMLINKS() {
        return (int)1L;
    }
    public static int G_FILE_CREATE_NONE() {
        return (int)0L;
    }
    public static int G_FILE_CREATE_PRIVATE() {
        return (int)1L;
    }
    public static int G_FILE_CREATE_REPLACE_DESTINATION() {
        return (int)2L;
    }
    public static int G_FILE_MEASURE_NONE() {
        return (int)0L;
    }
    public static int G_FILE_MEASURE_REPORT_ANY_ERROR() {
        return (int)2L;
    }
    public static int G_FILE_MEASURE_APPARENT_SIZE() {
        return (int)4L;
    }
    public static int G_FILE_MEASURE_NO_XDEV() {
        return (int)8L;
    }
    public static int G_MOUNT_MOUNT_NONE() {
        return (int)0L;
    }
    public static int G_MOUNT_UNMOUNT_NONE() {
        return (int)0L;
    }
    public static int G_MOUNT_UNMOUNT_FORCE() {
        return (int)1L;
    }
    public static int G_DRIVE_START_NONE() {
        return (int)0L;
    }
    public static int G_DRIVE_START_STOP_TYPE_UNKNOWN() {
        return (int)0L;
    }
    public static int G_DRIVE_START_STOP_TYPE_SHUTDOWN() {
        return (int)1L;
    }
    public static int G_DRIVE_START_STOP_TYPE_NETWORK() {
        return (int)2L;
    }
    public static int G_DRIVE_START_STOP_TYPE_MULTIDISK() {
        return (int)3L;
    }
    public static int G_DRIVE_START_STOP_TYPE_PASSWORD() {
        return (int)4L;
    }
    public static int G_FILE_COPY_NONE() {
        return (int)0L;
    }
    public static int G_FILE_COPY_OVERWRITE() {
        return (int)1L;
    }
    public static int G_FILE_COPY_BACKUP() {
        return (int)2L;
    }
    public static int G_FILE_COPY_NOFOLLOW_SYMLINKS() {
        return (int)4L;
    }
    public static int G_FILE_COPY_ALL_METADATA() {
        return (int)8L;
    }
    public static int G_FILE_COPY_NO_FALLBACK_FOR_MOVE() {
        return (int)16L;
    }
    public static int G_FILE_COPY_TARGET_DEFAULT_PERMS() {
        return (int)32L;
    }
    public static int G_FILE_MONITOR_NONE() {
        return (int)0L;
    }
    public static int G_FILE_MONITOR_WATCH_MOUNTS() {
        return (int)1L;
    }
    public static int G_FILE_MONITOR_SEND_MOVED() {
        return (int)2L;
    }
    public static int G_FILE_MONITOR_WATCH_HARD_LINKS() {
        return (int)4L;
    }
    public static int G_FILE_MONITOR_WATCH_MOVES() {
        return (int)8L;
    }
    public static int G_FILE_TYPE_UNKNOWN() {
        return (int)0L;
    }
    public static int G_FILE_TYPE_REGULAR() {
        return (int)1L;
    }
    public static int G_FILE_TYPE_DIRECTORY() {
        return (int)2L;
    }
    public static int G_FILE_TYPE_SYMBOLIC_LINK() {
        return (int)3L;
    }
    public static int G_FILE_TYPE_SPECIAL() {
        return (int)4L;
    }
    public static int G_FILE_TYPE_SHORTCUT() {
        return (int)5L;
    }
    public static int G_FILE_TYPE_MOUNTABLE() {
        return (int)6L;
    }
    public static int G_FILESYSTEM_PREVIEW_TYPE_IF_ALWAYS() {
        return (int)0L;
    }
    public static int G_FILESYSTEM_PREVIEW_TYPE_IF_LOCAL() {
        return (int)1L;
    }
    public static int G_FILESYSTEM_PREVIEW_TYPE_NEVER() {
        return (int)2L;
    }
    public static int G_FILE_MONITOR_EVENT_CHANGED() {
        return (int)0L;
    }
    public static int G_FILE_MONITOR_EVENT_CHANGES_DONE_HINT() {
        return (int)1L;
    }
    public static int G_FILE_MONITOR_EVENT_DELETED() {
        return (int)2L;
    }
    public static int G_FILE_MONITOR_EVENT_CREATED() {
        return (int)3L;
    }
    public static int G_FILE_MONITOR_EVENT_ATTRIBUTE_CHANGED() {
        return (int)4L;
    }
    public static int G_FILE_MONITOR_EVENT_PRE_UNMOUNT() {
        return (int)5L;
    }
    public static int G_FILE_MONITOR_EVENT_UNMOUNTED() {
        return (int)6L;
    }
    public static int G_FILE_MONITOR_EVENT_MOVED() {
        return (int)7L;
    }
    public static int G_FILE_MONITOR_EVENT_RENAMED() {
        return (int)8L;
    }
    public static int G_FILE_MONITOR_EVENT_MOVED_IN() {
        return (int)9L;
    }
    public static int G_FILE_MONITOR_EVENT_MOVED_OUT() {
        return (int)10L;
    }
    public static int G_IO_ERROR_FAILED() {
        return (int)0L;
    }
    public static int G_IO_ERROR_NOT_FOUND() {
        return (int)1L;
    }
    public static int G_IO_ERROR_EXISTS() {
        return (int)2L;
    }
    public static int G_IO_ERROR_IS_DIRECTORY() {
        return (int)3L;
    }
    public static int G_IO_ERROR_NOT_DIRECTORY() {
        return (int)4L;
    }
    public static int G_IO_ERROR_NOT_EMPTY() {
        return (int)5L;
    }
    public static int G_IO_ERROR_NOT_REGULAR_FILE() {
        return (int)6L;
    }
    public static int G_IO_ERROR_NOT_SYMBOLIC_LINK() {
        return (int)7L;
    }
    public static int G_IO_ERROR_NOT_MOUNTABLE_FILE() {
        return (int)8L;
    }
    public static int G_IO_ERROR_FILENAME_TOO_LONG() {
        return (int)9L;
    }
    public static int G_IO_ERROR_INVALID_FILENAME() {
        return (int)10L;
    }
    public static int G_IO_ERROR_TOO_MANY_LINKS() {
        return (int)11L;
    }
    public static int G_IO_ERROR_NO_SPACE() {
        return (int)12L;
    }
    public static int G_IO_ERROR_INVALID_ARGUMENT() {
        return (int)13L;
    }
    public static int G_IO_ERROR_PERMISSION_DENIED() {
        return (int)14L;
    }
    public static int G_IO_ERROR_NOT_SUPPORTED() {
        return (int)15L;
    }
    public static int G_IO_ERROR_NOT_MOUNTED() {
        return (int)16L;
    }
    public static int G_IO_ERROR_ALREADY_MOUNTED() {
        return (int)17L;
    }
    public static int G_IO_ERROR_CLOSED() {
        return (int)18L;
    }
    public static int G_IO_ERROR_CANCELLED() {
        return (int)19L;
    }
    public static int G_IO_ERROR_PENDING() {
        return (int)20L;
    }
    public static int G_IO_ERROR_READ_ONLY() {
        return (int)21L;
    }
    public static int G_IO_ERROR_CANT_CREATE_BACKUP() {
        return (int)22L;
    }
    public static int G_IO_ERROR_WRONG_ETAG() {
        return (int)23L;
    }
    public static int G_IO_ERROR_TIMED_OUT() {
        return (int)24L;
    }
    public static int G_IO_ERROR_WOULD_RECURSE() {
        return (int)25L;
    }
    public static int G_IO_ERROR_BUSY() {
        return (int)26L;
    }
    public static int G_IO_ERROR_WOULD_BLOCK() {
        return (int)27L;
    }
    public static int G_IO_ERROR_HOST_NOT_FOUND() {
        return (int)28L;
    }
    public static int G_IO_ERROR_WOULD_MERGE() {
        return (int)29L;
    }
    public static int G_IO_ERROR_FAILED_HANDLED() {
        return (int)30L;
    }
    public static int G_IO_ERROR_TOO_MANY_OPEN_FILES() {
        return (int)31L;
    }
    public static int G_IO_ERROR_NOT_INITIALIZED() {
        return (int)32L;
    }
    public static int G_IO_ERROR_ADDRESS_IN_USE() {
        return (int)33L;
    }
    public static int G_IO_ERROR_PARTIAL_INPUT() {
        return (int)34L;
    }
    public static int G_IO_ERROR_INVALID_DATA() {
        return (int)35L;
    }
    public static int G_IO_ERROR_DBUS_ERROR() {
        return (int)36L;
    }
    public static int G_IO_ERROR_HOST_UNREACHABLE() {
        return (int)37L;
    }
    public static int G_IO_ERROR_NETWORK_UNREACHABLE() {
        return (int)38L;
    }
    public static int G_IO_ERROR_CONNECTION_REFUSED() {
        return (int)39L;
    }
    public static int G_IO_ERROR_PROXY_FAILED() {
        return (int)40L;
    }
    public static int G_IO_ERROR_PROXY_AUTH_FAILED() {
        return (int)41L;
    }
    public static int G_IO_ERROR_PROXY_NEED_AUTH() {
        return (int)42L;
    }
    public static int G_IO_ERROR_PROXY_NOT_ALLOWED() {
        return (int)43L;
    }
    public static int G_IO_ERROR_BROKEN_PIPE() {
        return (int)44L;
    }
    public static int G_IO_ERROR_CONNECTION_CLOSED() {
        return (int)44L;
    }
    public static int G_IO_ERROR_NOT_CONNECTED() {
        return (int)45L;
    }
    public static int G_IO_ERROR_MESSAGE_TOO_LARGE() {
        return (int)46L;
    }
    public static int G_ASK_PASSWORD_NEED_PASSWORD() {
        return (int)1L;
    }
    public static int G_ASK_PASSWORD_NEED_USERNAME() {
        return (int)2L;
    }
    public static int G_ASK_PASSWORD_NEED_DOMAIN() {
        return (int)4L;
    }
    public static int G_ASK_PASSWORD_SAVING_SUPPORTED() {
        return (int)8L;
    }
    public static int G_ASK_PASSWORD_ANONYMOUS_SUPPORTED() {
        return (int)16L;
    }
    public static int G_ASK_PASSWORD_TCRYPT() {
        return (int)32L;
    }
    public static int G_PASSWORD_SAVE_NEVER() {
        return (int)0L;
    }
    public static int G_PASSWORD_SAVE_FOR_SESSION() {
        return (int)1L;
    }
    public static int G_PASSWORD_SAVE_PERMANENTLY() {
        return (int)2L;
    }
    public static int G_MOUNT_OPERATION_HANDLED() {
        return (int)0L;
    }
    public static int G_MOUNT_OPERATION_ABORTED() {
        return (int)1L;
    }
    public static int G_MOUNT_OPERATION_UNHANDLED() {
        return (int)2L;
    }
    public static int G_OUTPUT_STREAM_SPLICE_NONE() {
        return (int)0L;
    }
    public static int G_OUTPUT_STREAM_SPLICE_CLOSE_SOURCE() {
        return (int)1L;
    }
    public static int G_OUTPUT_STREAM_SPLICE_CLOSE_TARGET() {
        return (int)2L;
    }
    public static int G_IO_STREAM_SPLICE_NONE() {
        return (int)0L;
    }
    public static int G_IO_STREAM_SPLICE_CLOSE_STREAM1() {
        return (int)1L;
    }
    public static int G_IO_STREAM_SPLICE_CLOSE_STREAM2() {
        return (int)2L;
    }
    public static int G_IO_STREAM_SPLICE_WAIT_FOR_BOTH() {
        return (int)4L;
    }
    public static int G_EMBLEM_ORIGIN_UNKNOWN() {
        return (int)0L;
    }
    public static int G_EMBLEM_ORIGIN_DEVICE() {
        return (int)1L;
    }
    public static int G_EMBLEM_ORIGIN_LIVEMETADATA() {
        return (int)2L;
    }
    public static int G_EMBLEM_ORIGIN_TAG() {
        return (int)3L;
    }
    public static int G_RESOLVER_ERROR_NOT_FOUND() {
        return (int)0L;
    }
    public static int G_RESOLVER_ERROR_TEMPORARY_FAILURE() {
        return (int)1L;
    }
    public static int G_RESOLVER_ERROR_INTERNAL() {
        return (int)2L;
    }
    public static int G_RESOLVER_RECORD_SRV() {
        return (int)1L;
    }
    public static int G_RESOLVER_RECORD_MX() {
        return (int)2L;
    }
    public static int G_RESOLVER_RECORD_TXT() {
        return (int)3L;
    }
    public static int G_RESOLVER_RECORD_SOA() {
        return (int)4L;
    }
    public static int G_RESOLVER_RECORD_NS() {
        return (int)5L;
    }
    public static int G_RESOURCE_ERROR_NOT_FOUND() {
        return (int)0L;
    }
    public static int G_RESOURCE_ERROR_INTERNAL() {
        return (int)1L;
    }
    public static int G_RESOURCE_FLAGS_NONE() {
        return (int)0L;
    }
    public static int G_RESOURCE_FLAGS_COMPRESSED() {
        return (int)1L;
    }
    public static int G_RESOURCE_LOOKUP_FLAGS_NONE() {
        return (int)0L;
    }
    public static int G_SOCKET_FAMILY_INVALID() {
        return (int)0L;
    }
    public static int G_SOCKET_FAMILY_UNIX() {
        return (int)1L;
    }
    public static int G_SOCKET_FAMILY_IPV4() {
        return (int)2L;
    }
    public static int G_SOCKET_FAMILY_IPV6() {
        return (int)10L;
    }
    public static int G_SOCKET_TYPE_INVALID() {
        return (int)0L;
    }
    public static int G_SOCKET_TYPE_STREAM() {
        return (int)1L;
    }
    public static int G_SOCKET_TYPE_DATAGRAM() {
        return (int)2L;
    }
    public static int G_SOCKET_TYPE_SEQPACKET() {
        return (int)3L;
    }
    public static int G_SOCKET_MSG_NONE() {
        return (int)0L;
    }
    public static int G_SOCKET_MSG_OOB() {
        return (int)1L;
    }
    public static int G_SOCKET_MSG_PEEK() {
        return (int)2L;
    }
    public static int G_SOCKET_MSG_DONTROUTE() {
        return (int)4L;
    }
    public static int G_SOCKET_PROTOCOL_UNKNOWN() {
        return (int)-1L;
    }
    public static int G_SOCKET_PROTOCOL_DEFAULT() {
        return (int)0L;
    }
    public static int G_SOCKET_PROTOCOL_TCP() {
        return (int)6L;
    }
    public static int G_SOCKET_PROTOCOL_UDP() {
        return (int)17L;
    }
    public static int G_SOCKET_PROTOCOL_SCTP() {
        return (int)132L;
    }
    public static int G_ZLIB_COMPRESSOR_FORMAT_ZLIB() {
        return (int)0L;
    }
    public static int G_ZLIB_COMPRESSOR_FORMAT_GZIP() {
        return (int)1L;
    }
    public static int G_ZLIB_COMPRESSOR_FORMAT_RAW() {
        return (int)2L;
    }
    public static int G_UNIX_SOCKET_ADDRESS_INVALID() {
        return (int)0L;
    }
    public static int G_UNIX_SOCKET_ADDRESS_ANONYMOUS() {
        return (int)1L;
    }
    public static int G_UNIX_SOCKET_ADDRESS_PATH() {
        return (int)2L;
    }
    public static int G_UNIX_SOCKET_ADDRESS_ABSTRACT() {
        return (int)3L;
    }
    public static int G_UNIX_SOCKET_ADDRESS_ABSTRACT_PADDED() {
        return (int)4L;
    }
    public static int G_BUS_TYPE_STARTER() {
        return (int)-1L;
    }
    public static int G_BUS_TYPE_NONE() {
        return (int)0L;
    }
    public static int G_BUS_TYPE_SYSTEM() {
        return (int)1L;
    }
    public static int G_BUS_TYPE_SESSION() {
        return (int)2L;
    }
    public static int G_BUS_NAME_OWNER_FLAGS_NONE() {
        return (int)0L;
    }
    public static int G_BUS_NAME_OWNER_FLAGS_ALLOW_REPLACEMENT() {
        return (int)1L;
    }
    public static int G_BUS_NAME_OWNER_FLAGS_REPLACE() {
        return (int)2L;
    }
    public static int G_BUS_NAME_OWNER_FLAGS_DO_NOT_QUEUE() {
        return (int)4L;
    }
    public static int G_BUS_NAME_WATCHER_FLAGS_NONE() {
        return (int)0L;
    }
    public static int G_BUS_NAME_WATCHER_FLAGS_AUTO_START() {
        return (int)1L;
    }
    public static int G_DBUS_PROXY_FLAGS_NONE() {
        return (int)0L;
    }
    public static int G_DBUS_PROXY_FLAGS_DO_NOT_LOAD_PROPERTIES() {
        return (int)1L;
    }
    public static int G_DBUS_PROXY_FLAGS_DO_NOT_CONNECT_SIGNALS() {
        return (int)2L;
    }
    public static int G_DBUS_PROXY_FLAGS_DO_NOT_AUTO_START() {
        return (int)4L;
    }
    public static int G_DBUS_PROXY_FLAGS_GET_INVALIDATED_PROPERTIES() {
        return (int)8L;
    }
    public static int G_DBUS_PROXY_FLAGS_DO_NOT_AUTO_START_AT_CONSTRUCTION() {
        return (int)16L;
    }
    public static int G_DBUS_PROXY_FLAGS_NO_MATCH_RULE() {
        return (int)32L;
    }
    public static int G_DBUS_ERROR_FAILED() {
        return (int)0L;
    }
    public static int G_DBUS_ERROR_NO_MEMORY() {
        return (int)1L;
    }
    public static int G_DBUS_ERROR_SERVICE_UNKNOWN() {
        return (int)2L;
    }
    public static int G_DBUS_ERROR_NAME_HAS_NO_OWNER() {
        return (int)3L;
    }
    public static int G_DBUS_ERROR_NO_REPLY() {
        return (int)4L;
    }
    public static int G_DBUS_ERROR_IO_ERROR() {
        return (int)5L;
    }
    public static int G_DBUS_ERROR_BAD_ADDRESS() {
        return (int)6L;
    }
    public static int G_DBUS_ERROR_NOT_SUPPORTED() {
        return (int)7L;
    }
    public static int G_DBUS_ERROR_LIMITS_EXCEEDED() {
        return (int)8L;
    }
    public static int G_DBUS_ERROR_ACCESS_DENIED() {
        return (int)9L;
    }
    public static int G_DBUS_ERROR_AUTH_FAILED() {
        return (int)10L;
    }
    public static int G_DBUS_ERROR_NO_SERVER() {
        return (int)11L;
    }
    public static int G_DBUS_ERROR_TIMEOUT() {
        return (int)12L;
    }
    public static int G_DBUS_ERROR_NO_NETWORK() {
        return (int)13L;
    }
    public static int G_DBUS_ERROR_ADDRESS_IN_USE() {
        return (int)14L;
    }
    public static int G_DBUS_ERROR_DISCONNECTED() {
        return (int)15L;
    }
    public static int G_DBUS_ERROR_INVALID_ARGS() {
        return (int)16L;
    }
    public static int G_DBUS_ERROR_FILE_NOT_FOUND() {
        return (int)17L;
    }
    public static int G_DBUS_ERROR_FILE_EXISTS() {
        return (int)18L;
    }
    public static int G_DBUS_ERROR_UNKNOWN_METHOD() {
        return (int)19L;
    }
    public static int G_DBUS_ERROR_TIMED_OUT() {
        return (int)20L;
    }
    public static int G_DBUS_ERROR_MATCH_RULE_NOT_FOUND() {
        return (int)21L;
    }
    public static int G_DBUS_ERROR_MATCH_RULE_INVALID() {
        return (int)22L;
    }
    public static int G_DBUS_ERROR_SPAWN_EXEC_FAILED() {
        return (int)23L;
    }
    public static int G_DBUS_ERROR_SPAWN_FORK_FAILED() {
        return (int)24L;
    }
    public static int G_DBUS_ERROR_SPAWN_CHILD_EXITED() {
        return (int)25L;
    }
    public static int G_DBUS_ERROR_SPAWN_CHILD_SIGNALED() {
        return (int)26L;
    }
    public static int G_DBUS_ERROR_SPAWN_FAILED() {
        return (int)27L;
    }
    public static int G_DBUS_ERROR_SPAWN_SETUP_FAILED() {
        return (int)28L;
    }
    public static int G_DBUS_ERROR_SPAWN_CONFIG_INVALID() {
        return (int)29L;
    }
    public static int G_DBUS_ERROR_SPAWN_SERVICE_INVALID() {
        return (int)30L;
    }
    public static int G_DBUS_ERROR_SPAWN_SERVICE_NOT_FOUND() {
        return (int)31L;
    }
    public static int G_DBUS_ERROR_SPAWN_PERMISSIONS_INVALID() {
        return (int)32L;
    }
    public static int G_DBUS_ERROR_SPAWN_FILE_INVALID() {
        return (int)33L;
    }
    public static int G_DBUS_ERROR_SPAWN_NO_MEMORY() {
        return (int)34L;
    }
    public static int G_DBUS_ERROR_UNIX_PROCESS_ID_UNKNOWN() {
        return (int)35L;
    }
    public static int G_DBUS_ERROR_INVALID_SIGNATURE() {
        return (int)36L;
    }
    public static int G_DBUS_ERROR_INVALID_FILE_CONTENT() {
        return (int)37L;
    }
    public static int G_DBUS_ERROR_SELINUX_SECURITY_CONTEXT_UNKNOWN() {
        return (int)38L;
    }
    public static int G_DBUS_ERROR_ADT_AUDIT_DATA_UNKNOWN() {
        return (int)39L;
    }
    public static int G_DBUS_ERROR_OBJECT_PATH_IN_USE() {
        return (int)40L;
    }
    public static int G_DBUS_ERROR_UNKNOWN_OBJECT() {
        return (int)41L;
    }
    public static int G_DBUS_ERROR_UNKNOWN_INTERFACE() {
        return (int)42L;
    }
    public static int G_DBUS_ERROR_UNKNOWN_PROPERTY() {
        return (int)43L;
    }
    public static int G_DBUS_ERROR_PROPERTY_READ_ONLY() {
        return (int)44L;
    }
    public static int G_DBUS_CONNECTION_FLAGS_NONE() {
        return (int)0L;
    }
    public static int G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_CLIENT() {
        return (int)1L;
    }
    public static int G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_SERVER() {
        return (int)2L;
    }
    public static int G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS() {
        return (int)4L;
    }
    public static int G_DBUS_CONNECTION_FLAGS_MESSAGE_BUS_CONNECTION() {
        return (int)8L;
    }
    public static int G_DBUS_CONNECTION_FLAGS_DELAY_MESSAGE_PROCESSING() {
        return (int)16L;
    }
    public static int G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_REQUIRE_SAME_USER() {
        return (int)32L;
    }
    public static int G_DBUS_CAPABILITY_FLAGS_NONE() {
        return (int)0L;
    }
    public static int G_DBUS_CAPABILITY_FLAGS_UNIX_FD_PASSING() {
        return (int)1L;
    }
    public static int G_DBUS_CALL_FLAGS_NONE() {
        return (int)0L;
    }
    public static int G_DBUS_CALL_FLAGS_NO_AUTO_START() {
        return (int)1L;
    }
    public static int G_DBUS_CALL_FLAGS_ALLOW_INTERACTIVE_AUTHORIZATION() {
        return (int)2L;
    }
    public static int G_DBUS_MESSAGE_TYPE_INVALID() {
        return (int)0L;
    }
    public static int G_DBUS_MESSAGE_TYPE_METHOD_CALL() {
        return (int)1L;
    }
    public static int G_DBUS_MESSAGE_TYPE_METHOD_RETURN() {
        return (int)2L;
    }
    public static int G_DBUS_MESSAGE_TYPE_ERROR() {
        return (int)3L;
    }
    public static int G_DBUS_MESSAGE_TYPE_SIGNAL() {
        return (int)4L;
    }
    public static int G_DBUS_MESSAGE_FLAGS_NONE() {
        return (int)0L;
    }
    public static int G_DBUS_MESSAGE_FLAGS_NO_REPLY_EXPECTED() {
        return (int)1L;
    }
    public static int G_DBUS_MESSAGE_FLAGS_NO_AUTO_START() {
        return (int)2L;
    }
    public static int G_DBUS_MESSAGE_FLAGS_ALLOW_INTERACTIVE_AUTHORIZATION() {
        return (int)4L;
    }
    public static int G_DBUS_MESSAGE_HEADER_FIELD_INVALID() {
        return (int)0L;
    }
    public static int G_DBUS_MESSAGE_HEADER_FIELD_PATH() {
        return (int)1L;
    }
    public static int G_DBUS_MESSAGE_HEADER_FIELD_INTERFACE() {
        return (int)2L;
    }
    public static int G_DBUS_MESSAGE_HEADER_FIELD_MEMBER() {
        return (int)3L;
    }
    public static int G_DBUS_MESSAGE_HEADER_FIELD_ERROR_NAME() {
        return (int)4L;
    }
    public static int G_DBUS_MESSAGE_HEADER_FIELD_REPLY_SERIAL() {
        return (int)5L;
    }
    public static int G_DBUS_MESSAGE_HEADER_FIELD_DESTINATION() {
        return (int)6L;
    }
    public static int G_DBUS_MESSAGE_HEADER_FIELD_SENDER() {
        return (int)7L;
    }
    public static int G_DBUS_MESSAGE_HEADER_FIELD_SIGNATURE() {
        return (int)8L;
    }
    public static int G_DBUS_MESSAGE_HEADER_FIELD_NUM_UNIX_FDS() {
        return (int)9L;
    }
    public static int G_DBUS_PROPERTY_INFO_FLAGS_NONE() {
        return (int)0L;
    }
    public static int G_DBUS_PROPERTY_INFO_FLAGS_READABLE() {
        return (int)1L;
    }
    public static int G_DBUS_PROPERTY_INFO_FLAGS_WRITABLE() {
        return (int)2L;
    }
    public static int G_DBUS_SUBTREE_FLAGS_NONE() {
        return (int)0L;
    }
    public static int G_DBUS_SUBTREE_FLAGS_DISPATCH_TO_UNENUMERATED_NODES() {
        return (int)1L;
    }
    public static int G_DBUS_SERVER_FLAGS_NONE() {
        return (int)0L;
    }
    public static int G_DBUS_SERVER_FLAGS_RUN_IN_THREAD() {
        return (int)1L;
    }
    public static int G_DBUS_SERVER_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS() {
        return (int)2L;
    }
    public static int G_DBUS_SERVER_FLAGS_AUTHENTICATION_REQUIRE_SAME_USER() {
        return (int)4L;
    }
    public static int G_DBUS_SIGNAL_FLAGS_NONE() {
        return (int)0L;
    }
    public static int G_DBUS_SIGNAL_FLAGS_NO_MATCH_RULE() {
        return (int)1L;
    }
    public static int G_DBUS_SIGNAL_FLAGS_MATCH_ARG0_NAMESPACE() {
        return (int)2L;
    }
    public static int G_DBUS_SIGNAL_FLAGS_MATCH_ARG0_PATH() {
        return (int)4L;
    }
    public static int G_DBUS_SEND_MESSAGE_FLAGS_NONE() {
        return (int)0L;
    }
    public static int G_DBUS_SEND_MESSAGE_FLAGS_PRESERVE_SERIAL() {
        return (int)1L;
    }
    public static int G_CREDENTIALS_TYPE_INVALID() {
        return (int)0L;
    }
    public static int G_CREDENTIALS_TYPE_LINUX_UCRED() {
        return (int)1L;
    }
    public static int G_CREDENTIALS_TYPE_FREEBSD_CMSGCRED() {
        return (int)2L;
    }
    public static int G_CREDENTIALS_TYPE_OPENBSD_SOCKPEERCRED() {
        return (int)3L;
    }
    public static int G_CREDENTIALS_TYPE_SOLARIS_UCRED() {
        return (int)4L;
    }
    public static int G_CREDENTIALS_TYPE_NETBSD_UNPCBID() {
        return (int)5L;
    }
    public static int G_CREDENTIALS_TYPE_APPLE_XUCRED() {
        return (int)6L;
    }
    public static int G_CREDENTIALS_TYPE_WIN32_PID() {
        return (int)7L;
    }
    public static int G_DBUS_MESSAGE_BYTE_ORDER_BIG_ENDIAN() {
        return (int)66L;
    }
    public static int G_DBUS_MESSAGE_BYTE_ORDER_LITTLE_ENDIAN() {
        return (int)108L;
    }
    public static int G_APPLICATION_FLAGS_NONE() {
        return (int)0L;
    }
    public static int G_APPLICATION_IS_SERVICE() {
        return (int)1L;
    }
    public static int G_APPLICATION_IS_LAUNCHER() {
        return (int)2L;
    }
    public static int G_APPLICATION_HANDLES_OPEN() {
        return (int)4L;
    }
    public static int G_APPLICATION_HANDLES_COMMAND_LINE() {
        return (int)8L;
    }
    public static int G_APPLICATION_SEND_ENVIRONMENT() {
        return (int)16L;
    }
    public static int G_APPLICATION_NON_UNIQUE() {
        return (int)32L;
    }
    public static int G_APPLICATION_CAN_OVERRIDE_APP_ID() {
        return (int)64L;
    }
    public static int G_APPLICATION_ALLOW_REPLACEMENT() {
        return (int)128L;
    }
    public static int G_APPLICATION_REPLACE() {
        return (int)256L;
    }
    public static int G_TLS_ERROR_UNAVAILABLE() {
        return (int)0L;
    }
    public static int G_TLS_ERROR_MISC() {
        return (int)1L;
    }
    public static int G_TLS_ERROR_BAD_CERTIFICATE() {
        return (int)2L;
    }
    public static int G_TLS_ERROR_NOT_TLS() {
        return (int)3L;
    }
    public static int G_TLS_ERROR_HANDSHAKE() {
        return (int)4L;
    }
    public static int G_TLS_ERROR_CERTIFICATE_REQUIRED() {
        return (int)5L;
    }
    public static int G_TLS_ERROR_EOF() {
        return (int)6L;
    }
    public static int G_TLS_ERROR_INAPPROPRIATE_FALLBACK() {
        return (int)7L;
    }
    public static int G_TLS_ERROR_BAD_CERTIFICATE_PASSWORD() {
        return (int)8L;
    }
    public static int G_TLS_CERTIFICATE_UNKNOWN_CA() {
        return (int)1L;
    }
    public static int G_TLS_CERTIFICATE_BAD_IDENTITY() {
        return (int)2L;
    }
    public static int G_TLS_CERTIFICATE_NOT_ACTIVATED() {
        return (int)4L;
    }
    public static int G_TLS_CERTIFICATE_EXPIRED() {
        return (int)8L;
    }
    public static int G_TLS_CERTIFICATE_REVOKED() {
        return (int)16L;
    }
    public static int G_TLS_CERTIFICATE_INSECURE() {
        return (int)32L;
    }
    public static int G_TLS_CERTIFICATE_GENERIC_ERROR() {
        return (int)64L;
    }
    public static int G_TLS_CERTIFICATE_VALIDATE_ALL() {
        return (int)127L;
    }
    public static int G_TLS_AUTHENTICATION_NONE() {
        return (int)0L;
    }
    public static int G_TLS_AUTHENTICATION_REQUESTED() {
        return (int)1L;
    }
    public static int G_TLS_AUTHENTICATION_REQUIRED() {
        return (int)2L;
    }
    public static int G_TLS_CHANNEL_BINDING_TLS_UNIQUE() {
        return (int)0L;
    }
    public static int G_TLS_CHANNEL_BINDING_TLS_SERVER_END_POINT() {
        return (int)1L;
    }
    public static int G_TLS_CHANNEL_BINDING_ERROR_NOT_IMPLEMENTED() {
        return (int)0L;
    }
    public static int G_TLS_CHANNEL_BINDING_ERROR_INVALID_STATE() {
        return (int)1L;
    }
    public static int G_TLS_CHANNEL_BINDING_ERROR_NOT_AVAILABLE() {
        return (int)2L;
    }
    public static int G_TLS_CHANNEL_BINDING_ERROR_NOT_SUPPORTED() {
        return (int)3L;
    }
    public static int G_TLS_CHANNEL_BINDING_ERROR_GENERAL_ERROR() {
        return (int)4L;
    }
    public static int G_TLS_REHANDSHAKE_NEVER() {
        return (int)0L;
    }
    public static int G_TLS_REHANDSHAKE_SAFELY() {
        return (int)1L;
    }
    public static int G_TLS_REHANDSHAKE_UNSAFELY() {
        return (int)2L;
    }
    public static int G_TLS_PASSWORD_NONE() {
        return (int)0L;
    }
    public static int G_TLS_PASSWORD_RETRY() {
        return (int)2L;
    }
    public static int G_TLS_PASSWORD_MANY_TRIES() {
        return (int)4L;
    }
    public static int G_TLS_PASSWORD_FINAL_TRY() {
        return (int)8L;
    }
    public static int G_TLS_PASSWORD_PKCS11_USER() {
        return (int)16L;
    }
    public static int G_TLS_PASSWORD_PKCS11_SECURITY_OFFICER() {
        return (int)32L;
    }
    public static int G_TLS_PASSWORD_PKCS11_CONTEXT_SPECIFIC() {
        return (int)64L;
    }
    public static int G_TLS_INTERACTION_UNHANDLED() {
        return (int)0L;
    }
    public static int G_TLS_INTERACTION_HANDLED() {
        return (int)1L;
    }
    public static int G_TLS_INTERACTION_FAILED() {
        return (int)2L;
    }
    public static int G_DBUS_INTERFACE_SKELETON_FLAGS_NONE() {
        return (int)0L;
    }
    public static int G_DBUS_INTERFACE_SKELETON_FLAGS_HANDLE_METHOD_INVOCATIONS_IN_THREAD() {
        return (int)1L;
    }
    public static int G_DBUS_OBJECT_MANAGER_CLIENT_FLAGS_NONE() {
        return (int)0L;
    }
    public static int G_DBUS_OBJECT_MANAGER_CLIENT_FLAGS_DO_NOT_AUTO_START() {
        return (int)1L;
    }
    public static int G_TLS_DATABASE_VERIFY_NONE() {
        return (int)0L;
    }
    public static int G_TLS_DATABASE_LOOKUP_NONE() {
        return (int)0L;
    }
    public static int G_TLS_DATABASE_LOOKUP_KEYPAIR() {
        return (int)1L;
    }
    public static int G_TLS_CERTIFICATE_REQUEST_NONE() {
        return (int)0L;
    }
    public static int G_TLS_PROTOCOL_VERSION_UNKNOWN() {
        return (int)0L;
    }
    public static int G_TLS_PROTOCOL_VERSION_SSL_3_0() {
        return (int)1L;
    }
    public static int G_TLS_PROTOCOL_VERSION_TLS_1_0() {
        return (int)2L;
    }
    public static int G_TLS_PROTOCOL_VERSION_TLS_1_1() {
        return (int)3L;
    }
    public static int G_TLS_PROTOCOL_VERSION_TLS_1_2() {
        return (int)4L;
    }
    public static int G_TLS_PROTOCOL_VERSION_TLS_1_3() {
        return (int)5L;
    }
    public static int G_TLS_PROTOCOL_VERSION_DTLS_1_0() {
        return (int)201L;
    }
    public static int G_TLS_PROTOCOL_VERSION_DTLS_1_2() {
        return (int)202L;
    }
    public static int G_IO_MODULE_SCOPE_NONE() {
        return (int)0L;
    }
    public static int G_IO_MODULE_SCOPE_BLOCK_DUPLICATES() {
        return (int)1L;
    }
    public static int G_SOCKET_CLIENT_RESOLVING() {
        return (int)0L;
    }
    public static int G_SOCKET_CLIENT_RESOLVED() {
        return (int)1L;
    }
    public static int G_SOCKET_CLIENT_CONNECTING() {
        return (int)2L;
    }
    public static int G_SOCKET_CLIENT_CONNECTED() {
        return (int)3L;
    }
    public static int G_SOCKET_CLIENT_PROXY_NEGOTIATING() {
        return (int)4L;
    }
    public static int G_SOCKET_CLIENT_PROXY_NEGOTIATED() {
        return (int)5L;
    }
    public static int G_SOCKET_CLIENT_TLS_HANDSHAKING() {
        return (int)6L;
    }
    public static int G_SOCKET_CLIENT_TLS_HANDSHAKED() {
        return (int)7L;
    }
    public static int G_SOCKET_CLIENT_COMPLETE() {
        return (int)8L;
    }
    public static int G_SOCKET_LISTENER_BINDING() {
        return (int)0L;
    }
    public static int G_SOCKET_LISTENER_BOUND() {
        return (int)1L;
    }
    public static int G_SOCKET_LISTENER_LISTENING() {
        return (int)2L;
    }
    public static int G_SOCKET_LISTENER_LISTENED() {
        return (int)3L;
    }
    public static int G_TEST_DBUS_NONE() {
        return (int)0L;
    }
    public static int G_SUBPROCESS_FLAGS_NONE() {
        return (int)0L;
    }
    public static int G_SUBPROCESS_FLAGS_STDIN_PIPE() {
        return (int)1L;
    }
    public static int G_SUBPROCESS_FLAGS_STDIN_INHERIT() {
        return (int)2L;
    }
    public static int G_SUBPROCESS_FLAGS_STDOUT_PIPE() {
        return (int)4L;
    }
    public static int G_SUBPROCESS_FLAGS_STDOUT_SILENCE() {
        return (int)8L;
    }
    public static int G_SUBPROCESS_FLAGS_STDERR_PIPE() {
        return (int)16L;
    }
    public static int G_SUBPROCESS_FLAGS_STDERR_SILENCE() {
        return (int)32L;
    }
    public static int G_SUBPROCESS_FLAGS_STDERR_MERGE() {
        return (int)64L;
    }
    public static int G_SUBPROCESS_FLAGS_INHERIT_FDS() {
        return (int)128L;
    }
    public static int G_SUBPROCESS_FLAGS_SEARCH_PATH_FROM_ENVP() {
        return (int)256L;
    }
    public static int G_NOTIFICATION_PRIORITY_NORMAL() {
        return (int)0L;
    }
    public static int G_NOTIFICATION_PRIORITY_LOW() {
        return (int)1L;
    }
    public static int G_NOTIFICATION_PRIORITY_HIGH() {
        return (int)2L;
    }
    public static int G_NOTIFICATION_PRIORITY_URGENT() {
        return (int)3L;
    }
    public static int G_NETWORK_CONNECTIVITY_LOCAL() {
        return (int)1L;
    }
    public static int G_NETWORK_CONNECTIVITY_LIMITED() {
        return (int)2L;
    }
    public static int G_NETWORK_CONNECTIVITY_PORTAL() {
        return (int)3L;
    }
    public static int G_NETWORK_CONNECTIVITY_FULL() {
        return (int)4L;
    }
    public static int G_POLLABLE_RETURN_FAILED() {
        return (int)0L;
    }
    public static int G_POLLABLE_RETURN_OK() {
        return (int)1L;
    }
    public static int G_POLLABLE_RETURN_WOULD_BLOCK() {
        return (int)-27L;
    }
    public static int G_MEMORY_MONITOR_WARNING_LEVEL_LOW() {
        return (int)50L;
    }
    public static int G_MEMORY_MONITOR_WARNING_LEVEL_MEDIUM() {
        return (int)100L;
    }
    public static int G_MEMORY_MONITOR_WARNING_LEVEL_CRITICAL() {
        return (int)255L;
    }
    public static MethodHandle g_action_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$519.g_action_get_type$MH,"g_action_get_type");
    }
    public static long g_action_get_type () {
        var mh$ = g_action_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$519.g_action_get_name$MH,"g_action_get_name");
    }
    public static MemoryAddress g_action_get_name ( Addressable action) {
        var mh$ = g_action_get_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_get_parameter_type$MH() {
        return RuntimeHelper.requireNonNull(constants$519.g_action_get_parameter_type$MH,"g_action_get_parameter_type");
    }
    public static MemoryAddress g_action_get_parameter_type ( Addressable action) {
        var mh$ = g_action_get_parameter_type$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_get_state_type$MH() {
        return RuntimeHelper.requireNonNull(constants$519.g_action_get_state_type$MH,"g_action_get_state_type");
    }
    public static MemoryAddress g_action_get_state_type ( Addressable action) {
        var mh$ = g_action_get_state_type$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_get_state_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$520.g_action_get_state_hint$MH,"g_action_get_state_hint");
    }
    public static MemoryAddress g_action_get_state_hint ( Addressable action) {
        var mh$ = g_action_get_state_hint$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_get_enabled$MH() {
        return RuntimeHelper.requireNonNull(constants$520.g_action_get_enabled$MH,"g_action_get_enabled");
    }
    public static int g_action_get_enabled ( Addressable action) {
        var mh$ = g_action_get_enabled$MH();
        try {
            return (int)mh$.invokeExact(action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_get_state$MH() {
        return RuntimeHelper.requireNonNull(constants$520.g_action_get_state$MH,"g_action_get_state");
    }
    public static MemoryAddress g_action_get_state ( Addressable action) {
        var mh$ = g_action_get_state$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_change_state$MH() {
        return RuntimeHelper.requireNonNull(constants$520.g_action_change_state$MH,"g_action_change_state");
    }
    public static void g_action_change_state ( Addressable action,  Addressable value) {
        var mh$ = g_action_change_state$MH();
        try {
            mh$.invokeExact(action, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_activate$MH() {
        return RuntimeHelper.requireNonNull(constants$520.g_action_activate$MH,"g_action_activate");
    }
    public static void g_action_activate ( Addressable action,  Addressable parameter) {
        var mh$ = g_action_activate$MH();
        try {
            mh$.invokeExact(action, parameter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_name_is_valid$MH() {
        return RuntimeHelper.requireNonNull(constants$520.g_action_name_is_valid$MH,"g_action_name_is_valid");
    }
    public static int g_action_name_is_valid ( Addressable action_name) {
        var mh$ = g_action_name_is_valid$MH();
        try {
            return (int)mh$.invokeExact(action_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_parse_detailed_name$MH() {
        return RuntimeHelper.requireNonNull(constants$521.g_action_parse_detailed_name$MH,"g_action_parse_detailed_name");
    }
    public static int g_action_parse_detailed_name ( Addressable detailed_name,  Addressable action_name,  Addressable target_value,  Addressable error) {
        var mh$ = g_action_parse_detailed_name$MH();
        try {
            return (int)mh$.invokeExact(detailed_name, action_name, target_value, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_print_detailed_name$MH() {
        return RuntimeHelper.requireNonNull(constants$521.g_action_print_detailed_name$MH,"g_action_print_detailed_name");
    }
    public static MemoryAddress g_action_print_detailed_name ( Addressable action_name,  Addressable target_value) {
        var mh$ = g_action_print_detailed_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(action_name, target_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_group_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$521.g_action_group_get_type$MH,"g_action_group_get_type");
    }
    public static long g_action_group_get_type () {
        var mh$ = g_action_group_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_group_has_action$MH() {
        return RuntimeHelper.requireNonNull(constants$521.g_action_group_has_action$MH,"g_action_group_has_action");
    }
    public static int g_action_group_has_action ( Addressable action_group,  Addressable action_name) {
        var mh$ = g_action_group_has_action$MH();
        try {
            return (int)mh$.invokeExact(action_group, action_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_action_group_list_actions$MH() {
        return RuntimeHelper.requireNonNull(constants$521.g_action_group_list_actions$MH,"g_action_group_list_actions");
    }
    public static MemoryAddress g_action_group_list_actions ( Addressable action_group) {
        var mh$ = g_action_group_list_actions$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(action_group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


