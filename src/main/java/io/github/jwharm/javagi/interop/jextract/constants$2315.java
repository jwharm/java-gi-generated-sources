// Generated by jextract

package io.github.jwharm.javagi.interop.jextract;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$2315 {

    static final FunctionDescriptor gtk_revealer_get_transition_type$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gtk_revealer_get_transition_type$MH = RuntimeHelper.downcallHandle(
        "gtk_revealer_get_transition_type",
        constants$2315.gtk_revealer_get_transition_type$FUNC
    );
    static final FunctionDescriptor gtk_revealer_set_child$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gtk_revealer_set_child$MH = RuntimeHelper.downcallHandle(
        "gtk_revealer_set_child",
        constants$2315.gtk_revealer_set_child$FUNC
    );
    static final FunctionDescriptor gtk_revealer_get_child$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gtk_revealer_get_child$MH = RuntimeHelper.downcallHandle(
        "gtk_revealer_get_child",
        constants$2315.gtk_revealer_get_child$FUNC
    );
    static final FunctionDescriptor gtk_root_get_type$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT);
    static final MethodHandle gtk_root_get_type$MH = RuntimeHelper.downcallHandle(
        "gtk_root_get_type",
        constants$2315.gtk_root_get_type$FUNC
    );
    static final FunctionDescriptor glib_autoptr_clear_GtkRoot$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glib_autoptr_clear_GtkRoot$MH = RuntimeHelper.downcallHandle(
        "glib_autoptr_clear_GtkRoot",
        constants$2315.glib_autoptr_clear_GtkRoot$FUNC
    );
    static final FunctionDescriptor glib_autoptr_cleanup_GtkRoot$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glib_autoptr_cleanup_GtkRoot$MH = RuntimeHelper.downcallHandle(
        "glib_autoptr_cleanup_GtkRoot",
        constants$2315.glib_autoptr_cleanup_GtkRoot$FUNC
    );
}


