// Generated by jextract

package io.github.jwharm.javagi.interop.jextract;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$1000 {

    static final FunctionDescriptor shutdown$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle shutdown$MH = RuntimeHelper.downcallHandle(
        "shutdown",
        constants$1000.shutdown$FUNC
    );
    static final FunctionDescriptor sockatmark$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle sockatmark$MH = RuntimeHelper.downcallHandle(
        "sockatmark",
        constants$1000.sockatmark$FUNC
    );
    static final FunctionDescriptor isfdtype$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle isfdtype$MH = RuntimeHelper.downcallHandle(
        "isfdtype",
        constants$1000.isfdtype$FUNC
    );
    static final  GroupLayout in6addr_any$LAYOUT = MemoryLayout.structLayout(
        MemoryLayout.unionLayout(
            MemoryLayout.sequenceLayout(16, Constants$root.C_CHAR$LAYOUT).withName("__u6_addr8"),
            MemoryLayout.sequenceLayout(8, Constants$root.C_SHORT$LAYOUT).withName("__u6_addr16"),
            MemoryLayout.sequenceLayout(4, Constants$root.C_INT$LAYOUT).withName("__u6_addr32")
        ).withName("__in6_u")
    ).withName("in6_addr");
    static final MemorySegment in6addr_any$SEGMENT = RuntimeHelper.lookupGlobalVariable("in6addr_any", constants$1000.in6addr_any$LAYOUT);
    static final  GroupLayout in6addr_loopback$LAYOUT = MemoryLayout.structLayout(
        MemoryLayout.unionLayout(
            MemoryLayout.sequenceLayout(16, Constants$root.C_CHAR$LAYOUT).withName("__u6_addr8"),
            MemoryLayout.sequenceLayout(8, Constants$root.C_SHORT$LAYOUT).withName("__u6_addr16"),
            MemoryLayout.sequenceLayout(4, Constants$root.C_INT$LAYOUT).withName("__u6_addr32")
        ).withName("__in6_u")
    ).withName("in6_addr");
    static final MemorySegment in6addr_loopback$SEGMENT = RuntimeHelper.lookupGlobalVariable("in6addr_loopback", constants$1000.in6addr_loopback$LAYOUT);
    static final FunctionDescriptor ntohl$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle ntohl$MH = RuntimeHelper.downcallHandle(
        "ntohl",
        constants$1000.ntohl$FUNC
    );
}


